put:
  summary: "Update Health Check"
  description: >
    Update existing HCS.
  operationId: "HealthCheckServiceUpdate"
  tags:
    - "Health Check Service"
  parameters:
    - in: "query"
      name: "accountId"
      example: act-123abc
      description: >
        ID of the account associated with your token
      required: false

    - in: "path"
      name: "HEALTHCHECK_ID"
      example: hcs-123
      description: >
        The HCS you want to update
      required: true

  requestBody:
    required: false
    content:
      application/json:
        schema:
          allOf:
            - $ref: "../schemas/healthCheckUpdateRequestSchema.yaml"
  responses:
    200:
      $ref: "../../../../commons/responses/responseWrapper.yaml"
    400:
      description: "Bad Request"

get:
  summary: "Get Health Check"
  description: >
    List the information of a particular HCS
  operationId: "HealthCheckServiceListHcs"
  tags:
    - "Health Check Service"
  parameters:
    - in: "query"
      name: "accountId"
      example: act-123abc
      description: >
        ID of the account associated with your token
      required: false

    - in: "path"
      name: "HEALTHCHECK_ID"
      example: hcs-123
      description: >
        The HCS you want to update
      required: true

  responses:
    200:
      $ref: "../responses/healthCheckResponse.yaml"
    400:
      description: "Bad Request"
delete:
  summary: "Delete Health Check"
  description: >
    Delete existing HCS
  operationId: "HealthCheckServiceDelete"
  tags:
    - "Health Check Service"
  parameters:
    - $ref: "../../../../commons/parameters/accountId.yaml"
    - in: "path"
      name: "HEALTHCHECK_ID"
      example: hcs-123
      description: >
        The HCS you want to update
      required: true

  responses:
    200:
      $ref: "../../../../commons/responses/responseWrapper.yaml"
    400:
      description: "Bad Request"
