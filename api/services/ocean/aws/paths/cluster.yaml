delete:
  summary: "Ocean AWS - Delete"
  description: >
    Delete a specified Ocean cluster.
  operationId: "delete"
  tags:
  - "Ocean AWS"
  parameters:
    #ocean id, account id
    - $ref: "../../../../commons/parameters/accountId.yaml"
    - $ref: "../../commons/parameters/groupId.yaml"
  requestBody:
    required: false
    content:
      application/json:
        schema:
          allOf:
          - $ref: "../schemas/elastigroup-delete.yaml"
  responses:
    200:
      #todo
      $ref: "../../../../commons/responses/spotinstResponseWrapper.yaml"
#    400:
#      description: "Bad Request"

get:
  summary: "Ocean AWS - Describe"
  description: >
    Get the configurations for a specified Ocean cluster.
  operationId: "get"
  tags:
  - "Ocean AWS"
  parameters:
    #ocean id, account id
    - $ref: "../../../../commons/parameters/accountId.yaml"
    - $ref: "../../commons/parameters/groupId.yaml"
  responses:
    200: #todo
      $ref: "../responses/elastigroup.yaml"
#    400:
#      description: "Bad Request"

get:
  summary: "Ocean AWS - Describe"
  description: >
    Get the configurations for a specified Ocean cluster.
  operationId: "get"
  tags:
  - "Ocean AWS"
  parameters:
    #ocean id, account id
    - $ref: "../../../../commons/parameters/accountId.yaml"
    - $ref: "../../commons/parameters/groupId.yaml"
  responses:
    200: #todo
      $ref: "../responses/elastigroup.yaml"
#    400:
#      description: "Bad Request"

put:
  summary: "Ocean AWS - Update"
  description: >
    All Ocean parameters are updatable, except for region and ID. This API supports partial updates, so specific fields can be updated separately.
  operationId: "update"
  tags:
  - "Ocean AWS"
  parameters:
    # account id, ocean id
    - $ref: "../../../../commons/parameters/accountId.yaml"
    - in: query
      name: autoApplyTags
      example: "true"
      deafult: "false"
      description: >
        Optionally update instance tags on the fly without rolling the cluster.
      schema:
        type: "string"
  requestBody:
    required: true
    content:
      application/json:
        schema:
          allOf:
          - $ref: "../schemas/cluster.yaml"
          - type: "object"
            properties:
              group:
                type: object
  responses:
    200:
      #todo
      $ref: "../responses/elastigroup.yaml"
#    400:
#      description: "Bad Request"
