type: object
title: Ocean Compute
description: >
  Compute specifications for the Ocean cluster.
required:
  - subnetIds
  - launchSpecification
properties:
  subnetIds:
    type: array
    description: >
      A comma-separated list of subnet identifiers for the Ocean cluster. Subnet identifiers should be configured with auto-assign public IP.
    items:
      type: string
    example: ["subnet-4c1d1538", "subnet-2791bb61"]
  instanceTypes:
    type: object
    description: The type of instances that may or may not be a part of the Ocean cluster.
    properties:
      whitelist:
        type: array
        description: >
          Instance types allowed in the Ocean cluster.
          Cannot be configured if a deny list is configured.
        items:
          type: string
        example: ["c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge"]
      blacklist:
        type: array
        description: >
          Instance types to avoid launching in the Ocean cluster.
          Cannot be configured if a permit list is configured.
        items:
          type: string
        example: ["r5.large", "r5.xlarge"]
      filters:
        $ref: "./oceanInstanceTypesFilters.yaml"
  launchSpecification:
    type: object
    description: |
      The default specification for nodes in the cluster. Used as a template for custom Virtual Node Groups to inherit values which are not explicitly defined in them, and as a default VNG when no other VNGs exist or match the workload requirements.
    required:
      - imageId
      - securityGroupIds
    properties:
      useAsTemplateOnly:
        type: boolean
        description: |
          The configuration specified on the Ocean object will function only as a template for virtual node groups.
        default: false
      imageId:
        type: string
        description: identifier of the image used to launch the instances.
      userData:
        type: string
        format: byte
        description: The base 64 encoded MIME user data to make available to the instances.
      securityGroupIds:
        type: array
        description: One or more security group identifiers.
        items:
          type: string
          example:
            - "sg-c3d914b0"
      iamInstanceProfile:
        type: object
        description: The instance profile iamRole.
        properties:
          arn:
            type: string
            description: The iamRole ARN.
            example: "orform"
      blockDeviceMappings:
        $ref: "../schemas/ocean-blockDeviceMappings.yaml"
      keyPair:
        type: string
        description: The key pair to attach the instances.
        example: "spotinst-labs-oregon"
      tags:
        type: array
        description: |
          List of kay-value pairs of tags.
        items:
          type: object
          properties:
            tagKey:
              type: string
              description: |
                Set the tag key.
              example: "Creator"
            tagValue:
              type: string
              description: |
                Set the tag value.
              example: "John Doe"
      loadBalancers:
        type: array
        description: |
          Configure load balancer settings for the Ocean cluster.
        items:
          $ref: "./ocean-lb.yaml"
        example:
          $ref: "./ocean-lb-example.yaml"
      associatePublicIpAddress:
        type: boolean
        description: Configure public IP address allocation.
        default: false
        example: false
      associateIpv6Address:
        type: boolean
        description: | 
          Configure IPv6 address allocation. \
          Not required if the subnet is configured to “auto assign ipv6 addresses”.
        default: false
        example: false
      primaryIpv6:
        type: boolean
        example: false
        description: >
          Enables assignment of a primary IPv6 address to the cluster.
          This feature is only available when `associateIpv6Addresses` is explicitly set to `true`.
          Additionally, the cluster must have been initially created as an EKS cluster in IPv6 mode.
      monitoring:
        type: boolean
        description: >
          Enable detailed monitoring for cluster. Flag will enable CloudWatch detailed monitoring (one minute increments). There are additional hourly costs for this service based on the region used.
        example: true
      ebsOptimized:
        type: boolean
        description: >
          Enable EBS optimization for the cluster. A flag will enable optimized capacity for high bandwidth connectivity to the EB service for non EBS optimized instance types. For instances that are EBS optimized, this flag will be ignored.
        example: true
      rootVolumeSize:
        type: integer
        description: Set root volume size in GiB.
        example: 73
      reservedENIs:
        type: integer
        description: >
          Specifies the count of ENIs to reserve per instance type for scaling purposes.
        default: 0
        example: 1
      instanceMetadataOptions:
        $ref: "./oceanInstanceMetadataOptions.yaml"
      resourceTagSpecification:
        type: object
        description: Optional field. Specify which resources should be tagged with Virtual Node Group tags or Ocean tags.
          If tags are set on the VNG, the resources will be tagged with the VNG tags; otherwise, they will be tagged with the Ocean tags.
        properties:
          volumes:
            type: object
            description: Optional field. Tag specification for Volume resources.
            properties:
              shouldTag:
                type: boolean
                description: Optional field. Specify if Volume resources will be tagged with Virtual Node Group tags or Ocean tags.
                default: false
                example: false
      healthCheckUnhealthyDurationBeforeReplacement:
        type: integer
        description: |
          The amount of time, in seconds, an existing instance should remain active after becoming unhealthy.
          After the set time out the instance will be replaced. 
          The minimum value allowed is 60, and it must be a multiple of 60.
        minimum: 60
        default: 120
        example: 60
      startupTaints:
        type: array
        description: |
          Temporary taints applied to a node during its initialization phase. 
          For a startup taint to work, it must also be set as a regular taint
          in the userData for the cluster.
        items:
          type: object
          properties:
            key:
              type: string
              description: |
                Set startup taint key.
            value:
              type: string
              description: |
                Set startup taint value.
            effect:
              type: string
              description: |
                Set startup taint effect.
        example:
          - key: node.cilium.io/agent-not-ready
            value: true
            effect: NoSchedule
      instanceStorePolicy:
        $ref: "./instanceStorePolicy.yaml"
      gpu:
        $ref: "./oceanGpuConfiguration.yaml"

