get:
  summary: "Ocean ECS - Get A Launch Specification"
  description: >
    Get a specific custom launch configuration for an Ocean cluster in the specified account.
  operationId: "oceanEcsGetSingleLaunchSpec"
  tags:
    - "Ocean ECS"
  parameters:
    - $ref: "../../../../commons/parameters/accountId.yaml"
    - $ref: "../../commons/parameters/oceanLaunchSpecId.yaml"
  responses:
    200:
      $ref: "../responses/launchSpec.yaml"
    400:
      description: "Bad Request"

delete:
  summary: "Ocean ECS - Delete Launch Specification"
  description: >
    Delete a specified launch specification in an Ocean cluster.
  operationId: "oceanEcsDeleteLaunchSpec"
  tags:
    - "Ocean ECS"
  parameters:
    - $ref: "../../../../commons/parameters/accountId.yaml"
    - $ref: "../../commons/parameters/oceanLaunchSpecId.yaml"
    - in: query
      name: 'deleteContainerInstances'
      type: boolean
      description: >
        When set to "true", all instances belonging to the deleted launch specification will be drained, detached, and terminated.
      default: false
      example: true
  responses:
    200:
      $ref: "../responses/launchSpec.yaml"
    400:
      description: "Bad Request"

put:
  summary: "Ocean ECS - Update A Launch Specification"
  description: >
    Get a specific custom launch configuration for an Ocean cluster in the specified account.
  operationId: "oceanEcsUpdateLaunchSpec"
  tags:
    - "Ocean ECS"
  parameters:
    - $ref: "../../../../commons/parameters/accountId.yaml"
    - $ref: "../../commons/parameters/oceanLaunchSpecId.yaml"
    - $ref: "../../../../commons/parameters/autoApplyTags.yaml"
  requestBody:
    content:
      application/json:
        schema:
          allOf:
            - $ref: "../schemas/launchSpec.yaml"
  responses:
    200:
      $ref: "../responses/launchSpec.yaml"
    400:
      description: "Bad Request"