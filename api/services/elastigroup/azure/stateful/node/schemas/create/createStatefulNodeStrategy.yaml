type: object
title: Stateful Node Strategy
description: |
  The strategy to launch the underlying VM and Spotâ€™s behavior for the Stateful Node.
required:
  - fallbackToOd
properties:
  preferredLifecycle:
    type: string
    enum: [ od, spot ]
    description: |
      The preferred life cycle to launch the VM.
    example: "od"
    default: "spot"
  signals:
    type: array
    description: |
      Signals that VMs are expected to send to the platform.
    items:
      type: object
      required:
        - type
        - timeout
      properties:
        type:
          type: string
          description: |
            The defined type of signal.
          enum: [ vmReady, vmReadyToShutdown ]
          example: "vmReady"
        timeout:
          type: integer
          description: |
            The timeout in seconds to hold the vm until a signal is sent.
            * If no signal is sent the vm will be replaced (vmReady) or we will terminate the VM (vmReadyToShutdown) after the timeout.
          default: 1800
          minimum: 1
          example: 180
  fallbackToOd:
    type: Boolean
    description: |
      In case of no spots available, Stateful Node will launch an On-demand instance instead.
    example: true
  drainingTimeout:
    type: integer
    description: |
      Time (in seconds) to allow the VM be drained from incoming TCP connections and detached from LB before terminating it.
    default: 120
    minimum: 1
    example: 30
  revertToSpot:
    description: |
      Hold settings for strategy correction - replacing On-Demand for Spot VMs
    type: object
    required:
      - performAt
    properties:
      performAt:
        type: string
        enum: [timeWindow, never, always]
        description: |
          Defines the time in which to perform revert to spot.
          default: always
        example: "timeWindow"
  optimizationWindows:
    type: array
    description: |
      Defines the windows of which to revert to spot.
      * <a style=color:red>Requires the following format: "ddd:hh:mm-ddd:hh:mm (day:hour(0-23):minute(0-59))".</a>
      * <a style=color:red>Must be not empty if revertToSpot.performAt = timeWindow.</a>
    example:
      - "Mon:03:00-Wed:02:30"