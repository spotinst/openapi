type: object
title: "Strategy Object"
description: >
  The strategy for creating the group.
  At least one of `wrapping`, `cloning`, or `new` is required.
properties:
  wrapping:
    type: object
    description: >
      Required unless either of `strategy.cloning` or `strategy.new` is specified.
      In wrap mode, MRScaler will manage an existing cluster and will scale up/down cluster task groups only.
      MRScaler will manage only instance groups that were created by Spot.
    properties:
      sourceClusterId:
        type: string
        example: "c-1234"
  new:
    type: object
    description: >
      Required unless `strategy.wrapping` or `strategy.cloning` is specified.
      In new mode, MRScaler will create a new cluster with the parameters specified in the request.
    properties:
      releaseLabel:
        type: string
        example: "emr-5.17.0"
      numberOfRetries:
        type: integer
        example: 5
  cloning:
    type: object
    description: >
      Required unless either of `strategy.wrapping` or `strategy.new` is specified.
      In clone mode, MRScaler will create a new cluster that will be copied from the origin cluster.
      MRScaler will manage the entire cluster (the origin cluster will not be affected)
    properties:
      originClusterId:
        type: string
        description: The ID of the cluster to clone
        example: "j-38EE27G2QY02I"
      includeSteps:
        type: boolean
        description: Include cloning of steps from the original cluster
        example: false
      numberOfRetries:
        type: integer
        description: number of times to retry if provisioning timeout is exceeded
        example: 5
  provisioningTimeout:
    type: object
    description: >
      EMR clusters occasionally get stuck in provisioning status due to unhealthy clusters, slowness or other issues.
      In such cases, a timeout can be used to automatically terminate the cluster after the defined period of time.
    properties:
      timeout:
        type: integer
        description: >
          Time (minutes) after which the cluster is automatically terminated if it's still in provisioning status.
        example: 15
      timeoutAction:
        type: string
        enum: ["terminate", "terminateAndRetry"]
        description: >
          Desired action if the timeout is exceeded. Currently `terminate` and `terminateAndRetry` are supported.
        example: "terminate"