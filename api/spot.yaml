openapi: "3.0.0"
info:
  version: "1.0"
  description: |
    Welcome to the Spot by NetApp OpenAPI Specification.
    Here you will find REST definitions for all Spot products and platform administration tasks.

    The API is hosted at `https://api.spotinst.io` and requires Bearer Token
    Authentication.

    For more information on how to use the Spot platform, including user guides,
    developer guides, concepts, and tutorials, see the external [Spot Documentation](https://docs.spot.io/).
  title: Spot by NetApp API
  x-logo:
    url: https://docs.spot.io/_media/images/spot.png
    altText: SpotByNetAppLogo
    href: https://docs.spot.io/api
  contact:
    email: support@spot.io
externalDocs:
  url: https://docs.spot.io/
servers:
  - url: https://api.spotinst.io
security:
  - auth: [ ]

components:
  securitySchemes:
    auth:
      $ref: commons/security.yaml#/components/securitySchemes/BearerAuth

tags:
  - name: Elastigroup AWS
    description: Elastigroup for Amazon Web Services (AWS)
    externalDocs:
      description: Elastigroup Concepts and Tutorials
      url: https://docs.spot.io/elastigroup/

  - name: Elastigroup Azure Spot VMs
    description: Elastigroup for Microsoft Azure
    externalDocs:
      description: Elastigroup Concepts and Tutorials
      url: https://docs.spot.io/elastigroup/

  - name: Elastigroup GCP
    description: Elastigroup for Google Cloud
    externalDocs:
      description: Elastigroup Concepts and Tutorials
      url: https://docs.spot.io/elastigroup/

  - name: Elastigroup Azure Stateful
    description: Elastigroup for Microsoft Azure Stateful Node
    externalDocs:
      description: Elastigroup Concepts and Tutorials
      url: https://docs.spot.io/elastigroup/

  - name: Ocean AWS
    description: Ocean - Serverless containers for Amazon Web Services (AWS)
    externalDocs:
      description: Ocean Concepts and Tutorials
      url: https://docs.spot.io/ocean/

  - name: Ocean ECS
    description: Ocean - Serverless containers for Amazon Elastic Container Service (ECS)
    externalDocs:
      description: Ocean Concepts and Tutorials
      url: https://docs.spot.io/ocean/

  - name: Ocean GKE
    description: Ocean - Serverless containers for Google Kubernetes Engine
    externalDocs:
      description: Ocean Concepts and Tutorials
      url: https://docs.spot.io/ocean/

  - name: Ocean AKS (Deprecated)
    description: Ocean - Serverless containers for Azure Kubernetes Service
    externalDocs:
      description: Ocean Concepts and Tutorials
      url: https://docs.spot.io/ocean/

#  Deprecated - not deleted for future use
#  - name: Ocean On-Premise
#    description: Ocean On-Premise API - Understand cost drivers within your on-premise clusters and compare the costs to the Ocean Cloud.
#    externalDocs:
#      description: Ocean Concepts and Tutorials
#      url: https://docs.spot.io/ocean/

  - name: Ocean AKS
    description: Ocean - Serverless containers for Azure Kubernetes Service
    externalDocs:
      description: Ocean Concepts and Tutorials
      url: https://docs.spot.io/ocean/

  - name: Ocean Insights
    description: |
      Insights allows Spot users on AWS to connect a Kubernetes cluster and within minutes get the cluster analyzed with insights
      about the current state of infrastructure in the cluster, and the potential effect of migrating the specific cluster into Ocean.
      Through its powerful features, Ocean presents significant opportunities for infrastructure optimization and automation, which are on display in the Insights console.
      Connected to Kubernetes clusters and running a continuous analysis, Ocean Insights delivers a holistic picture of your cluster and workloads behavior, from expected cloud costs and resource utilization.
      Through a simple UI, users will see a breakdown of potential savings when they first connect to Ocean Insights.
    externalDocs:
      description: Ocean Insights
      url: https://docs.spot.io/ocean-insights/
  - name: Ocean CD
    description: |
      Ocean CD is a fully managed continuous delivery ('CD') solution for Kubernetes applications. Designed for end-to-end automation and verification of frequent application-deployment processes at scale.
      Ocean CD architecture and API enable a simple and secured installation that seamlessly fits into any Kubernetes environment. Users get key features like granular visibility, SaaS logic that manage the rollout process, verifications of the applied workloads and automatic rollbacks.
      To enable Ocean CD, install the controller with one simple command in the Kubernetes cluster and create the following entities using the API:
      * Strategy
      * Rollout Spec

    externalDocs:
      description: Ocean CD
      url: https://docs.spot.io/ocean-cd/

  - name: Ocean Spark
    description: |
      Ocean for Apache Spark is a managed cloud-native Spark platform that can be deployed in your cloud account.

      Running on top of Ocean, Spot’s serverless infrastructure engine for containers, Ocean Spark makes it easy for your data teams to be successful with Apache Spark on Kubernetes, without dealing with the complexity of managing servers.

    externalDocs:
      description: Ocean Spark
      url: https://docs.spot.io/ocean-spark/

  - name: EMR Scaler
    description: AWS EMR Scaler
    externalDocs:
      description: AWS EMR Scaler Concepts and Tutorials
      url: https://docs.spot.io/elastigroup/tools-integrations/elastic-mapreduce/

  - name: Stateful Node AWS
    description: |
      Stateful Node is a Spot solution for launching and managing a single compute instance.
      On the AWS cloud, for a standard single instance workload, an On-Demand EC2 instance is launched.
      The instance is expected to be highly available, easily manageable, and integrate well with additional services and monitoring tools.
      For more information please review the concepts section.
    externalDocs:
      description: Stateful Node for AWS Concepts and Tutorials
      url: https://docs.spot.io/managed-instance/

  - name: Create an API Token
    description: |
      * Please log in to the [Spot Console](https://console.spotinst.com) to create an API token. Navigate to `Settings` and select `API`.
      * The [Spot Console](https://console.spotinst.com) provides both permanent and temporary tokens. Select your preferred token type and click `Generate Token`.
      * Give your token a name and click `Generate`.
      > NOTE: Remember to keep your tokens secret. Treat them just like passwords! They act on your behalf when interacting with the API. Do not share your personal access tokens with anyone outside your organization. Do not hard-code them into your programs. Instead, opt to use them as environment variables. Please contact our support if you think your token has been compromised.
    externalDocs:
      url: https://docs.spot.io/administration/api/create-api-token

  - name: Whitelist IPs
    description: |
      * Spot permit list IPs are required for integrations to work as expected. The IP needs to be permit-listed on the primary nodes of Rancher, HCS, Kubernetes, Chef, Nomad, and Docker Swarm. Make sure your permit list IPs are always up-to-date with the latest list.
      *  34.226.61.134/32
    externalDocs:
      url: https://docs.spot.io/administration/api/whitelist-ips

  - name: Spot Policy
    description: |
      Spots Latest Policy for AWS.
      * You can find and modify your Spot Policy in the AWS IAM Console.
      * For additional information and guide please see Updating the Spot Policy
      * You can restrict your Spot Policy using custom AWS IAM Condition Statements using this Guide.
      *  Make sure your policy is always up-to-date with the latest JSON
    externalDocs:
      url: https://docs.spot.io/administration/api/spot-policy-in-aws

  - name: Audit Service
    externalDocs:
      url: https://docs.spot.io/api/#tag/Audit-Service

  - name: Health Check Service
    externalDocs:
      url: https://docs.spot.io/elastigroup/tools-integrations/custom-health-check-service

  - name: Notifications Service
    description: |
      A Spot Notifications service enables you a fast, flexible, fully managed push notification service that lets you know about major events that happened in your Spot account.ֿ Spot Notifications makes it simple and cost-effective to get push notifications to your email address, HTTP, HTTPS or AWS SNS (Simple Notifications Service).

  - name: Insights Service

x-tagGroups:
  - name: Administration
    tags:
      - Organizations
      - Accounts
  - name: Ocean
    tags:
      - Ocean AWS
      - Ocean ECS
      - Ocean GKE
      - Ocean AKS
#      - Ocean On-Premise
      - Ocean Insights
      - Ocean CD
      - Ocean Spark
      - Ocean AKS (Deprecated)
  - name: Elastigroup
    tags:
      - Elastigroup AWS
      - Elastigroup AWS EMR Scaler
      - Elastigroup GCP
      - Elastigroup Azure Spot VMs
      - Elastigroup Azure Stateful
  - name: Stateful Node
    tags:
      - Stateful Node AWS
  - name: Services
    tags:
      - Audit Service
      - Health Check Service
      - Notifications Service
      - Insights Service

paths:
  /aws/ec2/group:
    $ref: services/elastigroup/aws/paths/groups.yaml
  /aws/ec2/group/{groupId}:
    $ref: services/elastigroup/aws/paths/group.yaml
  /aws/ec2/group/{groupId}/statefulInstance:
    $ref: services/elastigroup/aws/paths/listStatefulInstances.yaml
  /aws/ec2/group/{groupId}/statefulInstance/{statefulInstanceId}/pause:
    $ref: services/elastigroup/aws/paths/pauseStatefulInstances.yaml
  /aws/ec2/group/{groupId}/statefulInstance/{statefulInstanceId}/resume:
    $ref: services/elastigroup/aws/paths/resumeStatefulInstances.yaml
  /aws/ec2/group/{groupId}/statefulInstance/{statefulInstanceId}/recycle:
    $ref: services/elastigroup/aws/paths/recycleStatefulAPI.yaml
  /aws/ec2/group/{groupId}/statefulInstance/{statefulInstanceId}/deallocate:
    $ref: services/elastigroup/aws/paths/deallocateStatefulAPI.yaml
  /aws/ec2/group/{groupId}/statefulInstance/{statefulInstanceId}/volume/{volumeId}:
    $ref: services/elastigroup/aws/paths/deleteVolumeStatefulInstance.yaml
  /aws/ec2/statefulMigrationGroup:
    $ref: services/elastigroup/aws/paths/statefulMigrationGroups.yaml
  /aws/ec2/statefulMigrationGroup/{statefulMigrationGroupId}:
    $ref: services/elastigroup/aws/paths/statefulMigrationGroup.yaml
  /aws/ec2/statefulMigrationGroup/{statefulMigrationGroupId}/userAction:
    $ref: services/elastigroup/aws/paths/terminateStatefulInstanceDuringImportProcess.yaml
  /aws/ec2/instance/{instanceId}/lock:
    $ref: services/elastigroup/aws/paths/instance-lock.yaml
  /aws/ec2/instance/{instanceId}/unlock:
    $ref: services/elastigroup/aws/paths/instance-unlock.yaml
  /aws/emr/mrScaler:
    $ref: services/elastigroup/aws/emr/paths/mr-scalers.yaml
  /aws/emr/mrScalerOperator:
    $ref: services/elastigroup/aws/emr/paths/mr-scalers-operator.yaml
  /aws/emr/mrScaler/{mrScalerId}:
    $ref: services/elastigroup/aws/emr/paths/mr-scaler.yaml
  /aws/emr/mrScaler/{mrScalerId}/instance:
    $ref: services/elastigroup/aws/emr/paths/mr-scaler-instance.yaml
  /aws/emr/mrScaler/{mrScalerId}/scale/up:
    $ref: services/elastigroup/aws/emr/paths/mr-scaler-scale-up.yaml
  /aws/emr/mrScaler/{mrScalerId}/scale/down:
    $ref: services/elastigroup/aws/emr/paths/mr-scaler-scale-down.yaml
  /aws/emr/mrScaler/{mrScalerId}/cluster:
    $ref: services/elastigroup/aws/emr/paths/mr-scaler-cluster.yaml
  /aws/emr/mrScaler/{mrScalerId}/costs:
    $ref: services/elastigroup/aws/emr/paths/mr-scaler-costs.yaml
  /aws/ec2/group/{groupId}/status:
    $ref: services/elastigroup/aws/paths/status.yaml
  /aws/ec2/group/{groupId}/events:
    $ref: services/elastigroup/aws/paths/events.yaml
  /aws/ec2/group/{groupId}/logs:
    $ref: services/elastigroup/aws/paths/logs.yaml
  /aws/ec2/group/{groupId}/capacity:
    $ref: services/elastigroup/aws/paths/capacity.yaml
  /aws/ec2/group/{groupId}/scale/up:
    $ref: services/elastigroup/aws/paths/scale-up.yaml
  /aws/ec2/group/{groupId}/scale/down:
    $ref: services/elastigroup/aws/paths/scale-down.yaml
  /aws/ec2/group/{groupId}/scale/suspendPolicy:
    $ref: services/elastigroup/aws/paths/suspend-policy.yaml
  /aws/ec2/group/{groupId}/suspension:
    $ref: services/elastigroup/aws/paths/suspension.yaml
  /aws/ec2/group/{groupId}/scale/suspensions:
    $ref: services/elastigroup/aws/paths/suspensions.yaml
  /aws/ec2/group/{groupId}/scale/resumePolicy:
    $ref: services/elastigroup/aws/paths/resume-policy.yaml
  /aws/potentialSavings:
    $ref: services/elastigroup/aws/paths/potential-savings.yaml
  /aws/instancePotentialSavings:
    $ref: services/elastigroup/aws/paths/instances-potential-savings.yaml
  /aws/costs:
    $ref: services/elastigroup/aws/paths/costs.yaml
  /aws/ec2/group/{groupId}/costs:
    $ref: services/elastigroup/aws/paths/elastigroup-costs.yaml
  /aws/ec2/group/{groupId}/costs/detailed:
    $ref: services/elastigroup/aws/paths/elastigroup-costs-detailed.yaml
  /aws/ec2/instance/{instanceId}:
    $ref: services/elastigroup/aws/paths/instance-status.yaml
  /aws/ec2/group/instance/import:
    $ref: services/elastigroup/aws/paths/import.yaml
  /aws/ec2/group/{groupId}/amiBackup:
    $ref: services/elastigroup/aws/paths/elastigroup-ami-backup.yaml
  /aws/ec2/group/{groupId}/instanceHealthiness:
    $ref: services/elastigroup/aws/paths/instanceHealthiness.yaml
  /aws/ec2/group/{groupId}/detachInstances:
    $ref: services/elastigroup/aws/paths/detach-instances.yaml
  /aws/ec2/group/autoScalingGroup/import:
    $ref: services/elastigroup/aws/paths/import-asg.yaml
  /aws/ec2/spotType:
    $ref: services/elastigroup/aws/paths/get-instance-by-region.yaml
  /aws/ec2/instanceTypeRecommendation:
    $ref: services/elastigroup/aws/paths/suggested-instance-type.yaml
  /aws/ec2/instance/interruption:
    $ref: services/elastigroup/aws/paths/instance-interruption.yaml
  /aws/ec2/instance/signal:
    $ref: services/elastigroup/aws/paths/instance-signal.yaml
  /aws/ec2/instance/{instanceId}/standby/enter:
    $ref: services/elastigroup/aws/paths/instance-standby.yaml
  /aws/ec2/instance/{instanceId}/standby/exit:
    $ref: services/elastigroup/aws/paths/instance-exit-standby.yaml
  /aws/ec2/group/{groupId}/roll:
    $ref: services/elastigroup/aws/paths/elastigroup-deployments.yaml
  /aws/ec2/group/{groupId}/roll/{rollId}:
    $ref: services/elastigroup/aws/paths/elastigroup-stop-deployment.yaml
  /aws/ec2/group/{groupId}/roll/{rollId}/status:
    $ref: services/elastigroup/aws/paths/elastigroup-deployment-status.yaml
  /aws/ec2/group/{groupId}/roll/{rollId}/action:
    $ref: services/elastigroup/aws/paths/elastigroup-deployment-action.yaml
  /azure/costs:
    $ref: services/elastigroup/azure/scaleSetVms/paths/costs.yaml
  /azure/compute/group/{groupId}:
    $ref: services/elastigroup/azure/spotVms/paths/groupVm.yaml
  /azure/compute/group/{groupId}/capacity:
    $ref: services/elastigroup/azure/spotVms/paths/groupCapacity.yaml
  /azure/compute/group:
    $ref: services/elastigroup/azure/spotVms/paths/groupsVm.yaml
  /azure/compute/group/{groupId}/status:
    $ref: services/elastigroup/azure/spotVms/paths/group-statusVm.yaml
  /azure/compute/group/{groupId}/vmHealthiness:
    $ref: services/elastigroup/azure/spotVms/paths/vm-healthiness.yaml
  /azure/compute/group/{groupId}/suspend:
    $ref: services/elastigroup/azure/spotVms/paths/group-statusVm-suspend-update.yaml
  /azure/compute/group/{groupId}/resume:
    $ref: services/elastigroup/azure/spotVms/paths/group-statusVm-resume-update.yaml
  /azure/compute/group/{groupId}/detachVms:
    $ref: services/elastigroup/azure/spotVms/paths/groupVmDetach.yaml
  /azure/compute/group/{groupId}/scale/down:
    $ref: services/elastigroup/azure/spotVms/paths/groupVmScaleDown.yaml
  /azure/compute/group/{groupId}/scale/up:
    $ref: services/elastigroup/azure/spotVms/paths/groupVmScaleUp.yaml
  /azure/compute/group/{groupId}/deployment:
    $ref: services/elastigroup/azure/spotVms/paths/groupVmDeployments.yaml
  /azure/compute/group/{groupId}/deployment/{deploymentId}:
    $ref: services/elastigroup/azure/spotVms/paths/groupVmDeployment.yaml
  /azure/compute/group/{groupId}/deployment/{deploymentId}/details:
    $ref: services/elastigroup/azure/spotVms/paths/groupVmDeploymentDetails.yaml
  /azure/compute/group/import/resourceGroup/{resourceGroupName}/scaleSet/{scaleSetName}:
    $ref: services/elastigroup/azure/spotVms/paths/importFromScaleset.yaml
  /azure/compute/group/import/resourceGroup/{resourceGroupName}/virtualMachine/{virtualMachineName}:
    $ref: services/elastigroup/azure/spotVms/paths/importFromVirtualMachine.yaml
  /azure/compute/group/import/resourceGroup/{resourceGroupName}/loadBalancer/{loadBalancerName}/backendPool/{backendPoolName}:
    $ref: services/elastigroup/azure/spotVms/paths/importFromLoadBalancer.yaml
  /azure/compute/group/import/resourceGroup/{resourceGroupName}/applicationGateway/{applicationGatewayName}/backendPool/{backendPoolName}:
    $ref: services/elastigroup/azure/spotVms/paths/importFromApplicationGateway.yaml
  /azure/compute/vm/signal:
    $ref: services/elastigroup/azure/spotVms/paths/vmSignal.yaml
  /azure/compute/group/{groupId}/vm/{vmName}/protection:
    $ref: services/elastigroup/azure/spotVms/paths/vmProtection.yaml
  /azure/compute/group/{groupId}/logs:
    $ref: services/elastigroup/azure/spotVms/paths/vmLogs.yaml
  /azure/compute/statefulNode:
    $ref: services/elastigroup/azure/stateful/node/paths/createGetAll.yaml
  /azure/compute/statefulNode/{nodeId}:
    $ref: services/elastigroup/azure/stateful/node/paths/deleteUpdateGet.yaml
  /azure/compute/statefulNode/{nodeId}/resources:
    $ref: services/elastigroup/azure/stateful/node/paths/getResources.yaml
  /azure/compute/statefulNode/{nodeId}/status:
    $ref: services/elastigroup/azure/stateful/node/paths/getStatus.yaml
  /azure/compute/statefulNode/status:
    $ref: services/elastigroup/azure/stateful/node/paths/getAllStatus.yaml
  /azure/compute/statefulNode/{nodeId}/state:
    $ref: services/elastigroup/azure/stateful/node/paths/changeState.yaml
  /azure/compute/statefulNode/resourceGroup/{resourceGroupName}/virtualMachine/{virtualMachineName}/importConfiguration:
    $ref: services/elastigroup/azure/stateful/node/paths/getImportConfiguration.yaml
  /azure/compute/statefulNode/import:
    $ref: services/elastigroup/azure/stateful/node/paths/importVm.yaml
  /azure/compute/statefulNode/import/{importId}/status:
    $ref: services/elastigroup/azure/stateful/node/paths/getImportStatus.yaml
  /azure/compute/statefulNode/{nodeId}/osDisk/swap:
    $ref: services/elastigroup/azure/stateful/node/paths/swapOsDisk.yaml
  /azure/compute/statefulNode/{nodeId}/dataDisk/attach:
    $ref: services/elastigroup/azure/stateful/node/paths/attachDataDisk.yaml
  /azure/compute/statefulNode/{nodeId}/dataDisk/detach:
    $ref: services/elastigroup/azure/stateful/node/paths/detachDataDisk.yaml
  /azure/compute/statefulNode/{nodeId}/log:
    $ref: services/elastigroup/azure/stateful/node/paths/getLogs.yaml
  /azure/compute/statefulNode/cost:
    $ref: services/elastigroup/azure/stateful/node/paths/getAggregatedCosts.yaml
  /azure/compute/statefulNode/cost/daily:
    $ref: services/elastigroup/azure/stateful/node/paths/getDailyAggregatedCosts.yaml
  /azure/compute/statefulNode/sizeUsage/daily:
    $ref: services/elastigroup/azure/stateful/node/paths/getDailyVmSizeUsage.yaml
  /gcp/gce/group:
    $ref: services/elastigroup/gcp/paths/groups.yaml
  /gcp/gce/group/{groupId}:
    $ref: services/elastigroup/gcp/paths/group.yaml
  /gcp/gce/group/{groupId}/status:
    $ref: services/elastigroup/gcp/paths/group-status.yaml
  /gcp/gce/group/{groupId}/events:
    $ref: services/elastigroup/gcp/paths/group-event.yaml
  /gcp/gce/group/{groupId}/log:
    $ref: services/elastigroup/gcp/paths/group-elastilog.yaml
  /gcp/gce/group/{groupId}/scale/up:
    $ref: services/elastigroup/gcp/paths/group-scale-up.yaml
  /gcp/gce/group/{groupId}/scale/down:
    $ref: services/elastigroup/gcp/paths/group-scale-down.yaml
  /gcp/gce/costs:
    $ref: services/elastigroup/gcp/paths/costs.yaml
  /gcp/gce/group/{groupId}/costs:
    $ref: services/elastigroup/gcp/paths/group-costs.yaml
  /gcp/gce/group/{groupId}/roll:
    $ref: services/elastigroup/gcp/paths/group-rolls.yaml
  /gcp/gce/group/{groupId}/roll/{rollId}:
    $ref: services/elastigroup/gcp/paths/group-roll.yaml
  /gcp/gce/group/{groupId}/deatchInstances:
    $ref: services/elastigroup/gcp/paths/group-detach-instances.yaml
  /gcp/gce/instance/{instanceId}:
    $ref: services/elastigroup/gcp/paths/instance-status.yaml
  /gcp/gce/instance/{instanceId}/lock:
    $ref: services/elastigroup/gcp/paths/instance-lock.yaml
  /gcp/gce/instance/{instanceId}/unlock:
    $ref: services/elastigroup/gcp/paths/instance-unlock.yaml
  /ocean/aws/ecs/cluster:
    $ref: services/ocean/ecs/paths/clusters.yaml
  /ocean/aws/ecs/cluster/{oceanClusterId}:
    $ref: services/ocean/ecs/paths/cluster.yaml
  /ocean/aws/ecs/cluster/{EcsClusterName}/import:
    $ref: services/ocean/ecs/paths/cluster-import.yaml
  /ocean/aws/ecs/cluster/{oceanClusterId}/log:
    $ref: services/ocean/ecs/paths/clusterFetchElastilog.yaml
  /ocean/aws/ecs/cluster/{oceanClusterId}/rightSizing/suggestion:
    $ref: services/ocean/ecs/paths/right-sizing-recommend.yaml
  /ocean/aws/ecs/cluster/{oceanClusterId}/instanceTypeFiltersSimulation:
    $ref: services/ocean/ecs/paths/instanceTypeFiltersSimulation.yaml
  /ocean/aws/ecs/cluster/{oceanClusterId}/allowedInstanceTypes:
    $ref: services/ocean/ecs/paths/allowedInstanceTypes.yaml
  /ocean/aws/ecs/cluster/import:
    $ref: services/ocean/ecs/paths/upgrade-from-eg.yaml
  /ocean/aws/ecs/cluster/{oceanClusterId}/roll:
    $ref: services/ocean/ecs/paths/cluster-rolls.yaml
  /ocean/aws/ecs/cluster/{oceanClusterId}/roll/{ROLL_ID}:
    $ref: services/ocean/ecs/paths/cluster-roll.yaml
  /ocean/aws/ecs/cluster/{oceanClusterId}/containerInstances:
    $ref: services/ocean/ecs/paths/cluster-container-instances.yaml
  /ocean/aws/ecs/cluster/{oceanClusterId}/detachInstances:
    $ref: services/ocean/ecs/paths/detachInstances.yaml
  /ocean/aws/ecs/launchSpec:
    $ref: services/ocean/ecs/paths/cluster-launchSpecs.yaml
  /ocean/aws/ecs/launchSpec/{oceanLaunchSpecId}:
    $ref: services/ocean/ecs/paths/cluster-launchSpec.yaml
  /ocean/aws/ecs/cluster/{oceanClusterId}/fargateMigration:
    $ref: services/ocean/ecs/paths/fargate-import-to-exist.yaml
  /ocean/aws/ecs/cluster/{oceanClusterId}/fargateMigration/serviceDiscovery:
    $ref: services/ocean/ecs/paths/fargate-service-discovery.yaml
  /ocean/aws/ecs/cluster/{oceanClusterId}/fargateMigration/status:
    $ref: services/ocean/ecs/paths/fargate-migration-status.yaml
  /ocean/aws/ecs/cluster/fargate/import:
    $ref: services/ocean/ecs/paths/fargate-import-to-new.yaml
  /ocean/aws/ecs/cluster/{oceanClusterId}/aggregatedCosts:
    $ref: services/ocean/ecs/paths/cluster-aggregated-costs.yaml
  /aws/ec2/group/{groupId}/clusterRoll:
    $ref: services/elastigroup/aws/paths/ecsGroupClusterRoll.yaml
  /aws/ec2/group/{groupId}/clusterRoll/{rollId}:
    $ref: services/elastigroup/aws/paths/ecsGroupClusterRollId.yaml
  /aws/ec2/group/{groupId}/beanstalk/maintenance/start:
    $ref: services/elastigroup/aws/paths/ecsBeanstalk.yaml
  /aws/ec2/group/{groupId}/beanstalk/maintenance/finish:
    $ref: services/elastigroup/aws/paths/ecsBeanstalkFinish.yaml
  /aws/ec2/group/{groupId}/beanstalk/maintenance/status:
    $ref: services/elastigroup/aws/paths/ecsBeanstalkStatus.yaml
  /aws/ec2/group/beanstalk/import:
    $ref: services/elastigroup/aws/paths/ecsBeanstalkImport.yaml
  /aws/ec2/group/{groupId}/beanstalk/reimport:
    $ref: services/elastigroup/aws/paths/ecsBeanstalkReImport.yaml
  /aws/ec2/group/{groupId}/codeDeploy/blueGreenDeployment:
    $ref: services/elastigroup/aws/paths/blueGreenDeployment.yaml
  /aws/ec2/group/{groupId}/itf/migration:
    $ref: services/elastigroup/aws/paths/itf/listItfListenerRuleMigrations.yaml
  /aws/ec2/group/{groupId}/itf/migration/{migrationId}:
    $ref: services/elastigroup/aws/paths/itf/updateItfListenerRuleMigration.yaml
  /ocean/aws/k8s/cluster:
    $ref: services/ocean/aws/paths/clusters.yaml
  /ocean/aws/k8s/cluster/{oceanClusterId}:
    $ref: services/ocean/aws/paths/cluster.yaml
  /ocean/k8s/cluster/{oceanClusterId}/controllerHeartbeat:
    $ref: services/ocean/aws/paths/controllerHeartbeat.yaml
  /ocean/aws/k8s/cluster/{clusterIdentifier}/log:
    $ref: services/ocean/aws/paths/clusterFetchElastilog.yaml
  /ocean/aws/k8s/cluster/autoScalingGroup/import:
    $ref: services/ocean/aws/paths/importASG.yaml
  /ocean/aws/k8s/cluster/{oceanClusterId}/rightSizing/suggestion:
    $ref: services/ocean/aws/paths/rightSizing.yaml
  /ocean/aws/k8s/cluster/{oceanClusterId}/instanceTypeFiltersSimulation:
    $ref: services/ocean/aws/paths/instanceTypeFiltersSimulation.yaml
  /ocean/aws/k8s/cluster/{oceanClusterId}/allowedInstanceTypes:
    $ref: services/ocean/aws/paths/allowedInstanceTypes.yaml
  /ocean/aws/k8s/cluster/{oceanClusterId}/loadBalancer/attach:
    $ref: services/ocean/aws/paths/cluster-attachLb.yaml
  /ocean/aws/k8s/cluster/{oceanClusterId}/loadBalancer/detach:
    $ref: services/ocean/aws/paths/cluster-detachLb.yaml
  /mcs/ecs/cluster/{clusterName}/costs:
    $ref: services/ocean/ecs/paths/cluster-costs.yaml
  /ocean/aws/k8s/cluster/import:
    $ref: services/ocean/aws/paths/upgradeElastigroupToOcean.yaml
  /ocean/aws/k8s/cluster/{oceanClusterId}/roll:
    $ref: services/ocean/aws/paths/clusters-roll.yaml
  /ocean/aws/k8s/cluster/{oceanClusterId}/roll/{ROLL_ID}:
    $ref: services/ocean/aws/paths/cluster-roll.yaml
  /ocean/aws/k8s/cluster/{oceanClusterId}/nodes:
    $ref: services/ocean/aws/paths/cluster-nodes.yaml
  /ocean/aws/k8s/cluster/{oceanClusterId}/detachInstances:
    $ref: services/ocean/aws/paths/detachInstances.yaml
  /ocean/aws/k8s/cluster/{oceanClusterId}/aggregatedCosts:
    $ref:  services/ocean/aws/paths/cluster-aggregated-costs.yaml
  /ocean/aws/k8s/cluster/{oceanClusterId}/aggregatedCosts/summary:
    $ref: services/ocean/aws/paths/cluster-aggregated-costs-summary.yaml
  /ocean/aws/eks/cluster/{oceanClusterId}/amiAutoUpdate:
    $ref: services/ocean/aws/paths/amiAutoUpdate.yaml
  /ocean/aws/k8s/launchSpec:
    $ref: services/ocean/aws/paths/clusters-launchSpec.yaml
  /ocean/aws/k8s/launchSpec/{oceanLaunchSpecId}:
    $ref: services/ocean/aws/paths/cluster-launchSpec.yaml
  /ocean/aws/k8s/launchSpec/{oceanLaunchSpecId}/instanceTypeFiltersSimulation:
      $ref: services/ocean/aws/paths/instanceTypeFiltersSimulationForVng.yaml
  /ocean/aws/k8s/launchSpec/{oceanLaunchSpecId}/allowedInstanceTypesByFilters:
    $ref: services/ocean/aws/paths/allowedInstanceTypesByFilters.yaml
  /ocean/aws/k8s/launchSpec/autoScalingGroup/import:
    $ref: services/ocean/aws/paths/importASG-launchSpec.yaml
  /ocean/aws/k8s/launchSpec/eksNodeGroup/import:
    $ref: services/ocean/aws/paths/importEksNodeGroup-launchSpec.yaml
#  /ocean/onPrem/k8s/cluster:
#    $ref: services/ocean/onpremise/paths/clusters.yaml
#  /ocean/onPrem/k8s/cluster/{oceanClusterId}:
#    $ref: services/ocean/onpremise/paths/cluster.yaml
  /aws/ec2/managedInstance:
    $ref: services/managedInstance/aws/paths/managed.yaml
  /aws/ec2/managedInstance/{MI_ID}:
    $ref: services/managedInstance/aws/paths/managedID.yaml
  /aws/ec2/managedInstance/{MI_ID}/pause:
    $ref: services/managedInstance/aws/paths/managedIDPause.yaml
  /aws/ec2/managedInstance/{MI_ID}/resume:
    $ref: services/managedInstance/aws/paths/managedIDResume.yaml
  /aws/ec2/managedInstance/{MI_ID}/recycle:
    $ref: services/managedInstance/aws/paths/managedIDRecycle.yaml
  /aws/ec2/managedInstance/{MI_ID}/costs:
    $ref: services/managedInstance/aws/paths/managedIDCosts.yaml
  /aws/ec2/managedInstance/{MI_ID}/status:
    $ref: services/managedInstance/aws/paths/managedIDStatus.yaml
  /aws/ec2/managedInstance/{MI_ID}/volume/{volumeId}:
    $ref: services/managedInstance/aws/paths/managedIDDeleteVolume.yaml
  /aws/ec2/managedInstance/migration:
    $ref: services/managedInstance/aws/paths/migration-mi.yaml
  /aws/ec2/managedInstance/migration/bulk:
    $ref: services/managedInstance/aws/paths/bulkMigrationMi.yaml
  /aws/ec2/managedInstance/migration/{MIGRATION_ID}:
    $ref: services/managedInstance/aws/paths/migrationStatus-mi.yaml
  /aws/ec2/managedInstance/migration/search:
    $ref: services/managedInstance/aws/paths/bulkMigrationStatusMi.yaml
  /aws/ec2/managedInstance/state:
    $ref: services/managedInstance/aws/paths/state/updateManagedInstanceStates.yaml
  /audit/events:
    $ref: services/administration/general/paths/auditListAll.yaml
  /healthCheck:
    $ref: services/administration/general/paths/healthCheck.yaml
  /healthCheck/{HEALTHCHECK_ID}:
    $ref: services/administration/general/paths/healthCheckID.yaml
  /events/notification/accountPolicy:
    $ref: services/administration/general/paths/accountPolicy.yaml
  /events/subscription:
    $ref: services/administration/general/paths/subscription.yaml
  /events/subscription/{subscriptionId}:
    $ref: services/administration/general/paths/subscriptionID.yaml
  /insights/dataIntegration:
    $ref: services/dataIntegration/paths/dataIntegrations.yaml
  /insights/dataIntegration/{dataIntegrationId}:
    $ref: services/dataIntegration/paths/dataIntegration.yaml
  /setup/account/{accountId}:
    $ref: services/administration/general/paths/updateAccount.yaml
  /setup/user:
    $ref: services/administration/general/paths/getAccountUsers.yaml
  /setup/organization/user:
    $ref: services/administration/general/paths/user/organizationUsers.yaml
  /setup/organization/policy:
    $ref: services/administration/general/paths/policy/organizationPolicies.yaml
  /setup/user/{userId}:
    $ref: services/administration/general/paths/user/userDetails.yaml
  /setup/user/{userId}/userGroupMapping:
    $ref: services/administration/general/paths/user/userGroupMapping.yaml
  /setup/user/{userId}/policyMapping:
    $ref: services/administration/general/paths/user/policyMapping.yaml
  /setup/accountUserMapping:
    $ref: services/administration/general/paths/getUser.yaml
  /setup/organization/{organizationId}:
    $ref: services/administration/general/paths/deleteOrganization.yaml
  /setup/account/{accountId}/user:
    $ref: services/administration/general/paths/updateUserPermissions.yaml
  /setup/user/programmatic:
    $ref: services/administration/general/paths/createProgrammaticUser.yaml
  /setup/organization:
    $ref: services/administration/general/paths/createOrganization.yaml
  /setup/access/policyAction:
    $ref: services/administration/general/paths/getPolicyAction.yaml
  /setup/account:
    $ref: services/administration/general/paths/createAccount.yaml
  /setup/access/policy:
    $ref: services/administration/general/paths/createAccessPolicy.yaml
  /setup/access/policy/{policyId}:
    $ref: services/administration/general/paths/updateAccessPolicy.yaml
  /setup/access/userGroup:
    $ref: services/administration/general/paths/userGroup/userGroups.yaml
  /setup/access/userGroup/{userGroupId}:
    $ref: services/administration/general/paths/userGroup/userGroup.yaml
  /setup/access/userGroup/{userGroupId}/userMapping:
    $ref: services/administration/general/paths/userGroup/userMapping.yaml
  /setup/access/userGroup/{userGroupId}/policyMapping:
    $ref: services/administration/general/paths/userGroup/policyMapping.yaml
  /setup/user/permission:
    $ref: services/administration/general/paths/getAllUsersPermissions.yaml
  /setup/credentials/aws:
    $ref: services/administration/general/paths/setCloudCredentialsForAWS.yaml
  /setup/credentials/aws/externalId:
    $ref: services/administration/general/paths/createAWSAccountExternalId.yaml
  /gcp/setup/credentials:
    $ref: services/administration/general/paths/setCloudCredentialsForGCP.yaml
  /gcp/setup/credentials/validation:
    $ref: services/administration/general/paths/validateCloudCredentialsForGCP.yaml
  /azure/setup/credentials:
    $ref: services/administration/general/paths/setCloudCredentialsForAzure.yaml
  /azure/setup/credentials/validation:
    $ref: services/administration/general/paths/validateCloudCredentialsForAzure.yaml
  /ocean/gcp/k8s/cluster:
    $ref: services/ocean/gke/paths/clusters.yaml
  /ocean/gcp/k8s/cluster/{oceanClusterId}:
    $ref: services/ocean/gke/paths/cluster.yaml
  /ocean/gcp/k8s/cluster/{oceanClusterId}/reImport:
    $ref: services/ocean/gke/paths/reImport.yaml
  /ocean/gcp/k8s/cluster/{oceanClusterId}/log:
    $ref: services/ocean/gke/paths/clusterFetchElastilog.yaml
  /ocean/gcp/k8s/cluster/{oceanClusterId}/rightSizing/suggestion:
    $ref: services/ocean/gke/paths/rightSizing.yaml
  /ocean/gcp/k8s/cluster/{oceanClusterId}/aggregatedCosts:
    $ref: services/ocean/gke/paths/cluster-aggregated-costs.yaml
  /ocean/gcp/k8s/cluster/{oceanClusterId}/aggregatedCosts/summary:
    $ref: services/ocean/gke/paths/cluster-aggregated-costs-summary.yaml
  #    $ref: services/ocean/gke/paths/rightSizingLegacy.yaml - deprecated
  /ocean/gcp/k8s/launchSpec:
    $ref: services/ocean/gke/paths/clusters-launchSpec.yaml
  /ocean/gcp/k8s/launchSpec/import:
    $ref: services/ocean/gke/paths/clusters-launchSpec-import.yaml
  /ocean/gcp/k8s/launchSpec/{oceanLaunchSpecId}:
    $ref: services/ocean/gke/paths/cluster-launchSpec.yaml
  /ocean/gcp/k8s/cluster/{oceanClusterId}/roll:
    $ref: services/ocean/gke/paths/clusters-roll.yaml
  /ocean/gcp/k8s/cluster/{oceanClusterId}/roll/{ROLL_ID}:
    $ref: services/ocean/gke/paths/cluster-roll.yaml
  /ocean/gcp/k8s/cluster/{oceanClusterId}/nodes:
    $ref: services/ocean/gke/paths/cluster-nodes.yaml
  /ocean/gcp/k8s/cluster/import:
    $ref: services/ocean/gke/paths/upgradeElastigroupToOcean.yaml
  /ocean/gcp/k8s/cluster/gke/import:
    $ref: services/ocean/gke/paths/clusters-import.yaml
  /ocean/gcp/k8s/launchSpec/{oceanLaunchSpecId}/launchNodes:
    $ref: services/ocean/gke/paths/cluster-launchSpec-launchNodes.yaml
  /ocean/azure/k8s/cluster:
    $ref: services/ocean/aks/paths/clusters.yaml
  /ocean/azure/k8s/cluster/{oceanClusterId}:
    $ref: services/ocean/aks/paths/cluster.yaml
  /ocean/azure/k8s/cluster/{oceanClusterId}/roll:
    $ref: services/ocean/aks/paths/cluster-rolls.yaml
  /ocean/azure/k8s/cluster/{oceanClusterId}/roll/{clusterRollId}:
    $ref: services/ocean/aks/paths/cluster-roll.yaml
  /ocean/azure/k8s/cluster/{oceanClusterId}/nodes:
    $ref: services/ocean/aks/paths/cluster-nodes.yaml
  /ocean/azure/k8s/cluster/aks/import/{acdIdentifier}:
    $ref: services/ocean/aks/paths/importCluster.yaml
  /ocean/azure/k8s/cluster/{oceanClusterId}/aks/reimport/{acdIdentifier}:
    $ref: services/ocean/aks/paths/reImportCluster.yaml
  /ocean/azure/k8s/cluster/{oceanClusterId}/detachVms:
    $ref: services/ocean/aks/paths/oceanDetachVms.yaml
  /ocean/azure/k8s/virtualNodeGroup:
    $ref: services/ocean/aks/paths/virtualNodeGroups.yaml
  /ocean/azure/k8s/virtualNodeGroup/{virtualNodeGroupId}:
    $ref: services/ocean/aks/paths/virtualNodeGroup.yaml
  /ocean/azure/k8s/virtualNodeGroup/{virtualNodeGroupId}/launchVms:
    $ref: services/ocean/aks/paths/virtualNodeGroupLaunch.yaml
  /ocean/azure/k8s/cluster/{oceanClusterId}/rightSizing/suggestion:
    $ref: services/ocean/aks/paths/rightSizing.yaml
  /ocean/azure/k8s/cluster/{oceanClusterId}/log:
    $ref: services/ocean/aks/paths/clusterFetchElastilog.yaml
  /ocean/azure/np/cluster:
      $ref: services/ocean/aksV2/paths/clusters.yaml
  /ocean/azure/np/cluster/{oceanClusterId}:
      $ref: services/ocean/aksV2/paths/cluster.yaml
  /ocean/azure/np/cluster/aks/import:
      $ref: services/ocean/aksV2/paths/importCluster.yaml
  /ocean/azure/np/cluster/launchNewNodes:
    $ref: services/ocean/aksV2/paths/clusterLaunchNodes.yaml
  /ocean/azure/np/virtualNodeGroup:
      $ref: services/ocean/aksV2/paths/virtualNodeGroups.yaml
  /ocean/azure/np/virtualNodeGroup/{virtualNodeGroupId}:
      $ref: services/ocean/aksV2/paths/virtualNodeGroup.yaml
  /ocean/azure/np/virtualNodeGroup/import:
      $ref: services/ocean/aksV2/paths/importVirtualNodeGroup.yaml
  /ocean/azure/np/virtualNodeGroup/vmSizes:
    $ref: services/ocean/aksV2/paths/virtualNodeGroupAllowedVmSizes.yaml
  /ocean/azure/np/cluster/{oceanClusterId}/roll:
    $ref: services/ocean/aksV2/paths/roll.yaml
  /ocean/azure/np/cluster/{oceanClusterId}/roll/{rollId}:
    $ref: services/ocean/aksV2/paths/roll-get.yaml
  /ocean/azure/np/cluster/{oceanClusterId}/roll/{rollId}/stop:
    $ref: services/ocean/aksV2/paths/roll-stop.yaml
  /ocean/azure/np/cluster/{oceanClusterId}/migration/discovery:
    $ref: services/ocean/aksV2/paths/workloadMigrationDiscovery.yaml
  /ocean/azure/np/cluster/{oceanClusterId}/migration:
    $ref: services/ocean/aksV2/paths/migration.yaml
  /ocean/azure/np/cluster/{oceanClusterId}/migration/{migrationId}:
    $ref: services/ocean/aksV2/paths/migration-get.yaml
  /ocean/azure/np/cluster/{oceanClusterId}/migration/{migrationId}/stop:
    $ref: services/ocean/aksV2/paths/migration-stop.yaml
  /ocean/azure/np/cluster/{oceanClusterId}/rightSizing/suggestion:
    $ref: services/ocean/aksV2/paths/rightSizing.yaml
  /ocean/azure/np/cluster/{oceanClusterId}/log:
    $ref: services/ocean/aksV2/paths/clusterFetchElastilog.yaml
  /ocean/azure/k8s/cluster/{oceanClusterId}/aggregatedCosts:
    $ref: services/ocean/aks/paths/cluster-aggregated-costs.yaml
  /ocean/azure/k8s/cluster/{oceanClusterId}/aggregatedCosts/summary:
    $ref: services/ocean/aks/paths/cluster-aggregated-costs-summary.yaml
  /ocean/aws/k8s/launchSpec/{oceanLaunchSpecId}/launchNodes:
    $ref: services/ocean/aws/paths/cluster-launchSpec-launchNodes.yaml
  /ocean/aws/ecs/launchSpec/{oceanLaunchSpecId}/launchContainerInstances:
    $ref: services/ocean/ecs/paths/cluster-launchSpec-launchContainerInstances.yaml
  /ocean/k8s/extendedResourceDefinition:
    $ref: services/ocean/commons/paths/extendedResourceDefinitions.yaml
  /ocean/k8s/extendedResourceDefinition/{oceanExtendedResourceDefinitionId}:
    $ref: services/ocean/commons/paths/extendedResourceDefinition.yaml
  /ocean/aws/k8s/cluster/{oceanClusterId}/migration/discovery:
    $ref: services/ocean/aws/paths/workloadMigrationDiscovery.yaml
  /ocean/aws/k8s/cluster/{oceanClusterId}/migration:
    $ref: services/ocean/aws/paths/workloadMigration.yaml
  /ocean/aws/k8s/cluster/{oceanClusterId}/migration/{migrationId}:
    $ref: services/ocean/aws/paths/workloadMigrationStatus.yaml
  /ocean/insights/k8s/cluster:
    $ref: services/ocean/oceanInsights/paths/clusters.yaml
  /ocean/insights/k8s/cluster/{OCEAN_INSIGHT_ID}:
    $ref: services/ocean/oceanInsights/paths/cluster.yaml
  /ocean/cd/cluster:
    $ref: services/ocean/cd/paths/clusters.yaml
  /ocean/cd/cluster/{clusterId}:
    $ref: services/ocean/cd/paths/cluster.yaml
  /ocean/cd/verificationProvider:
    $ref: services/ocean/cd/paths/verificationProviders.yaml
  /ocean/cd/verificationProvider/{name}:
    $ref: services/ocean/cd/paths/verificationProvider.yaml
  /ocean/cd/verificationTemplate:
    $ref: services/ocean/cd/paths/verificationTemplates.yaml
  /ocean/cd/verificationTemplate/{name}:
    $ref: services/ocean/cd/paths/verificationTemplate.yaml
  /ocean/cd/strategy:
    $ref: services/ocean/cd/paths/strategies.yaml
  /ocean/cd/strategy/{strategyName}:
    $ref: services/ocean/cd/paths/strategy.yaml
  /ocean/cd/rolloutSpec:
    $ref: services/ocean/cd/paths/rolloutSpecs.yaml
  /ocean/cd/rolloutSpec/{rolloutSpecName}:
    $ref: services/ocean/cd/paths/rolloutSpec.yaml
  /ocean/cd/rollout/{rolloutId}:
    $ref: services/ocean/cd/paths/rollout.yaml
  /ocean/cd/rollout:
    $ref: services/ocean/cd/paths/rollouts.yaml
  /ocean/cd/rollout/{rolloutId}/status:
    $ref: services/ocean/cd/paths/rolloutStatus.yaml
  /ocean/cd/rollout/latest:
    $ref: services/ocean/cd/paths/rolloutLatest.yaml
  /ocean/cd/rollout/ongoing:
    $ref: services/ocean/cd/paths/rolloutOngoing.yaml
  /ocean/cd/rollout/{rolloutId}/verification:
    $ref: services/ocean/cd/paths/rolloutVerification.yaml
  /ocean/cd/rollout/{rolloutId}/definition:
    $ref: services/ocean/cd/paths/rolloutDefinition.yaml
  /ocean/cd/rollout/{rolloutId}/resource:
    $ref: services/ocean/cd/paths/rolloutResource.yaml
  /ocean/cd/rollout/{rolloutId}/phase:
    $ref: services/ocean/cd/paths/rolloutPhase.yaml
  /ocean/cd/rollout/{rolloutId}/strategyOverride:
    $ref: services/ocean/cd/paths/rolloutStrategyOverride.yaml
  /ocean/cd/workload:
    $ref: services/ocean/cd/paths/workloads.yaml
  /ocean/cd/workload/{workloadName}/namespace/{namespace}/activeOperation:
    $ref: services/ocean/cd/paths/workloadActiveOperations.yaml
  /ocean/cd/workload/{workloadName}/namespace/{namespace}/revision:
    $ref: services/ocean/cd/paths/workloadRevision.yaml
  /ocean/cd/workload/{workloadName}/namespace/{namespace}/restart:
    $ref: services/ocean/cd/paths/workloadRestart.yaml
  /ocean/cd/workload/{workloadName}/namespace/{namespace}/revision/{revisionId}/retry:
    $ref: services/ocean/cd/paths/workloadRetry.yaml
  /ocean/cd/workload/{workloadName}/namespace/{namespace}/revision/{revisionId}/rollback:
    $ref: services/ocean/cd/paths/workloadRollback.yaml
  /ocean/cd/workload/{workloadName}/namespace/{namespace}/graph:
    $ref: services/ocean/cd/paths/workloadGraph.yaml
  /ocean/spark/cluster:
    $ref: services/ocean/spark/paths/clusters.yaml
  /ocean/spark/cluster/{clusterId}:
    $ref: services/ocean/spark/paths/cluster.yaml
  /ocean/spark/cluster/sparkCoreHours:
    $ref: services/ocean/spark/paths/clusterSparkCoreHours.yaml
  /ocean/spark/cluster/{clusterId}/appCompletionTrend:
    $ref: services/ocean/spark/paths/clusterAppCompletionTrend.yaml
  /ocean/spark/cluster/{clusterId}/appLoadHistory:
    $ref: services/ocean/spark/paths/clusterAppLoadHistory.yaml
  /ocean/spark/cluster/{clusterId}/statistics:
    $ref: services/ocean/spark/paths/clusterStatistics.yaml
  /ocean/spark/app:
    $ref: services/ocean/spark/paths/applications.yaml
  /ocean/spark/cluster/{clusterId}/app:
    $ref: services/ocean/spark/paths/clusterApplications.yaml
  /ocean/spark/cluster/{clusterId}/app/{applicationId}:
    $ref: services/ocean/spark/paths/clusterApplication.yaml
  /ocean/spark/cluster/{clusterId}/app/{applicationId}/issues:
    $ref: services/ocean/spark/paths/clusterApplicationIssues.yaml
  /ocean/spark/cluster/{clusterId}/app/{applicationId}/log/live:
    $ref: services/ocean/spark/paths/clusterApplicationLogsLive.yaml
  /ocean/spark/cluster/{clusterId}/app/{applicationId}/log/archive:
    $ref: services/ocean/spark/paths/clusterApplicationLogsArchive.yaml
  /ocean/spark/cluster/{clusterId}/app/{applicationId}/executor-log/archive:
    $ref: services/ocean/spark/paths/clusterApplicationExecutorLogsArchive.yaml
  /ocean/spark/cluster/{clusterId}/app/{applicationId}/kubeEvent/live:
    $ref: services/ocean/spark/paths/clusterApplicationKubeEventsLive.yaml
  /ocean/spark/configTemplate:
    $ref: services/ocean/spark/paths/configTemplates.yaml
  /ocean/spark/cluster/{clusterId}/configTemplate:
    $ref: services/ocean/spark/paths/clusterConfigTemplates.yaml
  /ocean/spark/cluster/{clusterId}/configTemplate/{configTemplateId}:
    $ref: services/ocean/spark/paths/clusterConfigTemplate.yaml
  /ocean/spark/job:
    $ref: services/ocean/spark/paths/jobs.yaml
  /ocean/spark/cluster/{clusterId}/job:
    $ref: services/ocean/spark/paths/clusterJobs.yaml
  /ocean/spark/cluster/{clusterId}/job/{jobId}:
    $ref: services/ocean/spark/paths/clusterJob.yaml
  /ocean/spark/cluster/{clusterId}/job/{jobId}/config:
    $ref: services/ocean/spark/paths/jobConfig.yaml
  /ocean/spark/cluster/{clusterId}/virtualNodeGroup:
    $ref: services/ocean/spark/paths/virtualNodeGroup.yaml
  /ocean/spark/cluster/{clusterId}/workspace:
    $ref: services/ocean/spark/paths/workspaces.yaml
  /ocean/spark/cluster/{clusterId}/workspace/{workspaceId}:
      $ref: services/ocean/spark/paths/workspace.yaml
  /ocean/spark/cluster/{clusterId}/workspace/{workspaceId}/start:
    $ref: services/ocean/spark/paths/workspaceStart.yaml
  /ocean/spark/cluster/{clusterId}/workspace/{workspaceId}/stop:
    $ref: services/ocean/spark/paths/workspaceStop.yaml
  /insights/savings:
    $ref: services/insights/paths/organizationSavings.yaml

