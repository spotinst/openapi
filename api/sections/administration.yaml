openapi: "3.0.0"
info:
  version: "1.0"
  description: |
    Welcome to the Spot by NetApp OpenAPI Specification.
    Here you will find REST definitions for all Spot products and platform administration tasks.

    The API is hosted at `https://api.spotinst.io` and requires Bearer Token
    Authentication.

    For more information on how to use the Spot platform, including user guides,
    developer guides, concepts, and tutorials, see the external [Spot Documentation](https://docs.spot.io/).
  title: Spot by NetApp API
  x-logo:
    url: https://docs.spot.io/_media/images/spot.png
    altText: SpotByNetAppLogo
    href: https://docs.spot.io/api
  contact:
    email: support@spot.io
externalDocs:
  url: https://docs.spot.io/
servers:
  - url: https://api.spotinst.io
security:
  - auth: [ ]

components:
  securitySchemes:
    auth:
      $ref: ../commons/security.yaml#/components/securitySchemes/BearerAuth

tags:
  - name: Create an API Token
    description: |
      * Please log in to the [Spot Console](https://console.spotinst.com) to create an API token. Navigate to `Settings` and select `API`.
      * The [Spot Console](https://console.spotinst.com) provides both permanent and temporary tokens. Select your preferred token type and click `Generate Token`.
      * Give your token a name and click `Generate`.
      > NOTE: Remember to keep your tokens secret. Treat them just like passwords! They act on your behalf when interacting with the API. Do not share your personal access tokens with anyone outside your organization. Do not hard-code them into your programs. Instead, opt to use them as environment variables. Please contact our support if you think your token has been compromised.
    externalDocs:
      url: https://docs.spot.io/administration/api/create-api-token

  - name: Whitelist IPs
    description: |
      * Spot permit list IPs are required for integrations to work as expected. The IP needs to be permit-listed on the primary nodes of Rancher, HCS, Kubernetes, Chef, Nomad, and Docker Swarm. Make sure your permit list IPs are always up-to-date with the latest list.
      *  34.226.61.134/32
    externalDocs:
      url: https://docs.spot.io/administration/api/whitelist-ips

  - name: Spot Policy
    description: |
      Spots Latest Policy for AWS.
      * You can find and modify your Spot Policy in the AWS IAM Console.
      * For additional information and guide please see Updating the Spot Policy
      * You can restrict your Spot Policy using custom AWS IAM Condition Statements using this Guide.
      *  Make sure your policy is always up-to-date with the latest JSON
    externalDocs:
      url: https://docs.spot.io/administration/api/spot-policy-in-aws

x-tagGroups:
  - name: Administration
    tags:
      - Organizations
      - Accounts

paths:
  /setup/account/{accountId}:
    $ref: ../services/administration/general/paths/updateAccount.yaml
  /setup/user:
    $ref: ../services/administration/general/paths/getAccountUsers.yaml
  /setup/organization/user:
    $ref: ../services/administration/general/paths/user/organizationUsers.yaml
  /setup/organization/policy:
    $ref: ../services/administration/general/paths/policy/organizationPolicies.yaml
  /setup/user/{userId}:
    $ref: ../services/administration/general/paths/user/userDetails.yaml
  /setup/user/{userId}/userGroupMapping:
    $ref: ../services/administration/general/paths/user/userGroupMapping.yaml
  /setup/user/{userId}/policyMapping:
    $ref: ../services/administration/general/paths/user/policyMapping.yaml
  /setup/accountUserMapping:
    $ref: ../services/administration/general/paths/getUser.yaml
  /setup/organization/{organizationId}:
    $ref: ../services/administration/general/paths/deleteOrganization.yaml
  /setup/account/{accountId}/user:
    $ref: ../services/administration/general/paths/updateUserPermissions.yaml
  /setup/user/programmatic:
    $ref: ../services/administration/general/paths/createProgrammaticUser.yaml
  /setup/organization:
    $ref: ../services/administration/general/paths/createOrganization.yaml
  /setup/access/policyAction:
    $ref: ../services/administration/general/paths/getPolicyAction.yaml
  /setup/account:
    $ref: ../services/administration/general/paths/createAccount.yaml
  /setup/access/policy:
    $ref: ../services/administration/general/paths/createAccessPolicy.yaml
  /setup/access/policy/{policyId}:
    $ref: ../services/administration/general/paths/updateAccessPolicy.yaml
  /setup/access/userGroup:
    $ref: ../services/administration/general/paths/userGroup/userGroups.yaml
  /setup/access/userGroup/{userGroupId}:
    $ref: ../services/administration/general/paths/userGroup/userGroup.yaml
  /setup/access/userGroup/{userGroupId}/userMapping:
    $ref: ../services/administration/general/paths/userGroup/userMapping.yaml
  /setup/access/userGroup/{userGroupId}/policyMapping:
    $ref: ../services/administration/general/paths/userGroup/policyMapping.yaml
  /setup/user/permission:
    $ref: ../services/administration/general/paths/getAllUsersPermissions.yaml
  /setup/credentials/aws:
    $ref: ../services/administration/general/paths/setCloudCredentialsForAWS.yaml
  /setup/credentials/aws/externalId:
    $ref: ../services/administration/general/paths/createAWSAccountExternalId.yaml

