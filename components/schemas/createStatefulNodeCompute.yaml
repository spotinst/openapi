type: object
title: Stateful Node Compute
description: >
  Defines the computational parameters to use when launch the VM for the
  Stateful Node.
required:
  - os
  - vmSizes
  - launchSpecification
properties:
  os:
    type: string
    enum:
      - Linux
      - Windows
    description: |
      Defines the type of the operating system.
    example: Linux
  vmSizes:
    type: object
    description: |
      Defines the VM sizes to use when launching VMs.
    required:
      - odSizes
      - spotSizes
    properties:
      odSizes:
        type: array
        description: |
          Defines the on-demand sizes to use when launching VMs.
        items:
          type: string
          example: standard_a1_v2
      spotSizes:
        type: array
        description: |
          Defines the spot-VM sizes to use when launching VMs.
        items:
          type: string
          example: standard_a2_v2
      preferredSpotSizes:
        type: array
        description: >
          Prioritize Spot VM sizes when launching Spot VMs.

          * <a style=color:red>If set, must be a sublist of
          compute.vmSizes.spotSizes. </a>
        items:
          type: string
          example: standard_a2_v2
  zones:
    type: array
    description: |
      List of Azure Availability Zones in the defined region.
      * If not defined, VMs will be launched regionally.
    items:
      enum:
        - '1'
        - '2'
        - '3'
      type: string
      example: '1'
  preferredZone:
    type: string
    description: >
      The AZ to prioritize when launching VMs.

      * If no markets are available in the Preferred AZ, VMs will be launched in
      the non-preferred AZs.

      * <a style=color:red>Must be one of the zones in compute.zones.</a>
    enum:
      - '1'
      - '2'
      - '3'
    example: '1'
  launchSpecification:
    type: object
    description: Defines the launch specification of the VM.
    required:
      - image
      - network
    properties:
      image:
        type: object
        description: >
          Defines the image with which the VM will be launched.

          * <a style=color:red>Must be only one initialized from the following
          (marketplace, custom, gallery).</a>

          * <a style=color:red>For import or update operations, image object
          cannot be defined when the compute.persistence.shouldPersistOsDisk =
          true.</a>

          * <a style=color:red>For import or update operations, image that
          contains data disk definitions cannot be defined when the
          compute.persistence.shouldPersistDataDisks = true.</a>
        properties:
          marketplace:
            type: object
            description: >
              Select an image from Azure's Marketplace image catalogue.

              * <a style=color:red>Required if the custom image or gallery image
              are not specified.</a>
            required:
              - publisher
              - offer
              - sku
              - version
            properties:
              publisher:
                type: string
                description: |
                  Image publisher.
                example: OpenLogic
              offer:
                type: string
                description: |
                  Image offer.
                example: CentOS
              sku:
                type: string
                description: >
                  Image Stock Keeping Unit, which is the specific version of the
                  image.
                example: '7.3'
              version:
                type: string
                description: |
                  Image's version. if version not provided we use "latest"
                default: lastest
                example: 7.3-1611
          custom:
            type: object
            description: >
              Custom image definitions.

              * <a style=color:red>Required if marketplace image or gallery
              image are not specified.</a>
            required:
              - resourceGroupName
              - name
            properties:
              resourceGroupName:
                type: string
                description: |
                  The resource group name for custom image.
                example: spotinst-azure
              name:
                type: string
                description: |
                  The name of the custom image.
                example: custom-image-name
          gallery:
            title: Gallery
            type: object
            description: >
              Gallery image definitions.

              * <a style=color:red>Required if custom image or marketplace image
              are not specified.</a>
            required:
              - resourceGroupName
              - galleryName
              - imageName
              - versionName
            properties:
              resourceGroupName:
                title: Resource Group Name
                description: |
                  The resource group name for gallery image.
                type: string
                example: spotinst-azure
              galleryName:
                title: Gallery Name
                description: |
                  Name of the gallery.
                type: string
                example: gallery-name
              imageName:
                title: Image Name
                description: |
                  Name of the gallery image.
                type: string
                example: gallery-image-name
              versionName:
                title: Version
                description: |
                  Image's version. Can be in the format x.x.x or 'latest'.
                type: string
                example: 0.0.1
              spotAccountId:
                title: Spot Account ID
                description: >-
                  The Spot account ID that connected to the Azure subscription
                  to which the gallery belongs. Relevant only in case of
                  cross-subscription shared galleries. [Read
                  more](https://docs.spot.io/elastigroup/features-azure/shared-image-galleries)
                  about cross-subscription shared galleries in Elastigroup.
                type: string
                example: act-123456789
      vmName:
        type: string
        description: >
          * Set a VM name that will be persisted throughout the entire node
          lifecycle.

          * The name value should comply with the following limitations: 
            *  A maximal length of 64 characters.
            * The name can’t contain spaces, control characters, or these characters: ~ ! @ # $ % ^ & * ( ) = + _ [ ] { } | ; : . ' " , < > / ?
            *  A Windows VM name can't include a period or end with a hyphen.
            * A Linux VM name can't end with a period or hyphen.
        example: devVm1
      vmNamePrefix:
        type: string
        description: >
          * Set a VM name prefix to be used for all launched VMs and the VM
          resources.

          * The prefix value should comply with the following limitations: 
            *  A maximal length of 25 characters.
            * The prefix can’t contain spaces, control characters, or these characters: ~ ! @ # $ % ^ & * ( ) = + _ [ ] { } | ; : . ' " , < > / ?
            *  A Windows VM prefix can't include a period or end with a hyphen.
            * A Linux VM prefix can't end with a period or hyphen.
        example: prefix
      customData:
        type: string
        format: byte
        description: >
          Defines the custom data (YAML encoded at Base64) that will be executed
          upon VM launch.

          * <a style=color:red>The customData object cannot be defined when the
          compute.launchSpecification.image is defined as specialized.</a>

          * <a style=color:red>For import or update operations, customData
          object cannot be defined when the
          compute.persistence.shouldPersistOsDisk = true.</a>
        example: ''
      userData:
        type: string
        description: >
          Define a set of scripts or other metadata that's inserted to an Azure
          virtual machine at provision time. (Base64 encoded)
        example: IyEvYmluL2Jhc2gKZWNobyAidGVzdCI
      shutdownScript:
        type: string
        format: byte
        writeOnly: true
        example: IyEvdXNyL2Jpbi9lbnYgYmFzaAoiR29vZGJ5ZSBvbGQgaW5zdGFuY2Ui
        description: >
          Defines the shutdown script (encoded at Base64) to execute once the VM
          is detached.

          * <a style=color:red>For import or update operations, shutdownScript
          object cannot be defined when the
          compute.persistence.shouldPersistOsDisk = true.</a>
      network:
        title: Network
        description: >
          Defines the network profile with which the VM will be launched.

          * <a style=color:red>For import or update operations, network object
          cannot be defined when the compute.persistence.shouldPersistNetwork =
          true.</a>
        type: object
        required:
          - resourceGroupName
          - virtualNetworkName
          - networkInterfaces
        properties:
          resourceGroupName:
            title: Resource Group Name
            description: >-
              Defines the resource group name of the virtual network with which
              the VM will be launched.
            type: string
            example: subnetResourceGroup
          virtualNetworkName:
            title: Virtual Network Name
            description: >-
              Defines the name of the virtual network with which the VM will be
              launched.
            type: string
            example: vname
          networkInterfaces:
            title: Network Interfaces
            description: Defines the network interfaces with which the VM will be launched.
            type: array
            items:
              type: object
              required:
                - isPrimary
                - subnetName
              properties:
                isPrimary:
                  title: Is Primary Criteria
                  description: >
                    Defines whether the network interface is primary or not.

                    * <a style=color:red>Must be true for only one of the
                    items.</a>
                  type: boolean
                  example: true
                subnetName:
                  title: Subnet Name
                  description: >-
                    Defines the subnet to which the network interface will be
                    connected.
                  type: string
                  example: testSubnet
                assignPublicIp:
                  title: Assign Public IP
                  description: >-
                    Defines if a Public IP should be assigned in this network
                    interface.
                  type: boolean
                  example: true
                publicIpSku:
                  title: Public Ip Sku
                  description: |
                    Defines the type of public IP to assign the VM.
                    * <a style=color:red>Required if assignPublicIp=true.</a>
                  type: string
                  enum:
                    - Standard
                    - Basic
                  example: Standard
                networkSecurityGroup:
                  title: Network Security Group
                  description: >-
                    Defines the network security group to which the network
                    interface will be assigned.
                  type: object
                  required:
                    - name
                    - resourceGroupName
                  properties:
                    name:
                      title: Name
                      description: >-
                        Specify the name of the network security group to use in
                        this network interface.
                      type: string
                      example: test
                    resourceGroupName:
                      title: Resource Group Name
                      description: >-
                        Specify the resource group of the network security
                        group.
                      type: string
                      example: test
                enableIpForwarding:
                  title: Enable IP Forwarding
                  description: Enables IP forwarding on the network interface.
                  type: boolean
                  example: true
                privateIpAddresses:
                  type: array
                  description: >
                    Specify the private IP pool in which the VMs will be
                    launched.

                    * A list of unique IP addresses.

                    * If none of the IP addresses available then a dynamic IP is
                    used.
                  items:
                    type: string
                    example:
                      - 172.23.4.20
                additionalIpConfigurations:
                  title: Additional IP Configurations
                  description: Defines a list of extra IPs to be dynamically allocated.
                  type: array
                  items:
                    type: object
                    required:
                      - privateIpAddressVersion
                      - name
                    properties:
                      name:
                        title: Name
                        description: >
                          Specify the name of the additional Ip Configuration.

                          * <a style=color:red>Must be unique across
                          additionalIpConfigurations.</a>
                        type: string
                        example: test
                      privateIpAddressVersion:
                        title: Private IP Address Version
                        description: Defines the version of the private IP address.
                        type: string
                        enum:
                          - IPv4
                          - IPv6
                        default: IPv4
                        example: IPv4
                publicIps:
                  description: >
                    Specify the public IP pool in which the VMs will be
                    launched.

                    * A list of unique IP addresses.

                    * If none of the IP addresses available then a dynamic IP is
                    used.
                  type: array
                  items:
                    type: object
                    required:
                      - resourceGroupName
                      - name
                    properties:
                      resourceGroupName:
                        description: Specify the resource group of the public IP.
                        type: string
                        example: resourceGroup
                      name:
                        description: >-
                          Specify the name of the public IP to which the VMs
                          will be assigned.
                        type: string
                        example: name
                applicationSecurityGroups:
                  description: >-
                    Defines the Application Security Groups that will be
                    associated to the primary IP configration of the network
                    interface.
                  type: array
                  items:
                    type: object
                    required:
                      - resourceGroupName
                      - name
                    properties:
                      resourceGroupName:
                        description: >-
                          Specify the resource group of the Application Security
                          Group.
                        type: string
                        example: AsgResourceGroup
                      name:
                        description: Specify the name of the Application Security Group.
                        type: string
                        example: AsgName
      login:
        type: object
        description: >
          Specify the authentication details to be used for launching VMs.

          * <a style=color:red>For Linux: password/sshPublicKey is required.</a>

          * <a style=color:red>For Windows: password is required.</a>

          * <a style=color:red>The login object cannot be defined when the
          compute.launchSpecification.image is defined as specialized.</a>

          * <a style=color:red>For import or update operations, login object
          cannot be defined when the compute.persistence.shouldPersistOsDisk =
          true.</a>
        required:
          - userName
        properties:
          userName:
            type: string
            description: |
              Defines the admin user name for launching VMs.
            example: spotinst
          sshPublicKey:
            type: string
            description: |
              Defines the SSH public key for admin access to Linux VMs.
              * Optional only for Linux.
            example: ssh-rsa
          password:
            type: string
            writeOnly: true
            description: |
              Defines the password for admin access to Windows VMs.
              * <a style=color:red>Required for Windows.</a>
      loadBalancersConfig:
        type: object
        description: |
          Configure a Load Balancer.
        properties:
          loadBalancers:
            type: array
            description: >
              Add a load balancer. For Azure Gateway, each Backend Pool is a
              separate load balancer.
            items:
              type: object
              required:
                - type
                - resourceGroupName
                - name
                - backendPoolNames
              properties:
                type:
                  type: string
                  description: |
                    The type of load balancer.
                  enum:
                    - loadBalancer
                    - applicationGateway
                  example: loadBalancer
                resourceGroupName:
                  type: string
                  description: |
                    The Resource Group name of the Load Balancer.
                  example: testResourceGroup
                name:
                  type: string
                  description: |
                    Name of the Application Gateway/Load Balancer
                  example: testLoadBalancer
                loadBalancerSku:
                  type: string
                  description: |
                    * if type is LoadBalancer then possible values are:
                     * “Standard"
                     * Basic”
                    * if ApplicationGateway then possible values are:
                     * “Standard_Large”
                     * “Standard_Medium”
                     * “Standard_Small”
                     * “Standard_v2
                     * “WAF_Large”
                     * “WAF_Medium"
                     * “WAF_v2"
                  example: Standard
                backendPoolNames:
                  type: array
                  items:
                    type: string
                  description: >
                    Name of the Backend Pool to register the Stateful Node VMs
                    to.\

                    Each Backend Pool is a separate load balancer.\

                    Required if Type is APPLICATION_GATEWAY.
                  example:
                    - testBackendPool1
                    - testBackendPool2
      tags:
        type: array
        description: |
          Defines the tags (unique key-value pairs) to tag your resources.
        items:
          type: object
          properties:
            tagKey:
              type: string
              description: |
                Tag key for all resources.
                * Maximum length of 512 characters.
              example: env
            tagValue:
              type: string
              description: |
                Tag value for all resources.
                * Maximum length of 512 characters.
              example: staging
        maximum: 44
      managedServiceIdentities:
        type: array
        writeOnly: true
        description: |
          Defines a user-assigned managed identity to the launched VMs.
        items:
          type: object
          required:
            - name
            - resourceGroupName
          properties:
            name:
              type: string
              description: |
                Defines the name of the managed service identities.
              example: mySI2
            resourceGroupName:
              type: string
              description: |
                Defines the resource group of the managed service identities.
              example: myResourceGroup
      extensions:
        type: array
        description: |
          A list of objects for Azure extensions.
        items:
          type: object
          required:
            - name
            - type
            - publisher
            - apiVersion
            - minorVersionAutoUpgrade
          properties:
            name:
              type: string
              description: |
                Required on compute.launchSpecification.extensions object
              example: extensionName
            type:
              type: string
              description: |
                Required on compute.launchSpecification.extensions object
              example: customScript
            publisher:
              type: string
              description: |
                Required on compute.launchSpecification.extensions object
              example: Microsoft.Azure.Extensions
            apiVersion:
              type: string
              description: >
                The API version of the extension. Required if extension
                specified.
              example: '2.0'
            minorVersionAutoUpgrade:
              type: boolean
              description: |
                Required on compute.launchSpecification.extensions object
              example: true
            publicSettings:
              type: object
              description: |
                Object for public settings
            protectedSettings:
              type: object
              description: |
                Object for protected settings
      dataDisks:
        type: array
        description: >
          The definitions of data disks that will be created and attached to the
          stateful node's VM.
        items:
          type: object
          required:
            - sizeGB
            - lun
            - type
          properties:
            sizeGB:
              type: integer
              description: >
                The size of the data disk in GB, required if dataDisks is
                specified.
              minimum: 1
              maximum: 1023
              example: 1
            lun:
              type: integer
              description: |
                The LUN of the data disk.
              example: 1
            type:
              type: string
              description: |
                The type of the data disk.
              enum:
                - Standard_LRS
                - Premium_LRS
                - StandardSSD_LRS
                - UltraSSD_LRS
              example: Standard_LRS
        minimum: 0
        maximum: 4
      osDisk:
        type: object
        description: |
          Specify OS disk specification other than default.
        required:
          - type
        properties:
          type:
            type: string
            description: |
              The type of the OS disk.
            enum:
              - Standard_LRS
              - Premium_LRS
              - StandardSSD_LRS
            example: Standard_LRS
          sizeGB:
            type: integer
            description: |
              The size of the data disk in GB.
            minimum: 1
            maximum: 1023
            example: 30
      secrets:
        title: secrets
        type: array
        description: |
          Set of certificates that should be installed on the VM
        items:
          type: object
          required:
            - sourceVault
            - vaultCertificates
          properties:
            sourceVault:
              type: object
              description: |
                The key vault reference, contains the required certificates
              required:
                - resourceGroupName
                - name
              properties:
                resourceGroupName:
                  type: string
                  description: |
                    The resource group name of the key vault
                name:
                  type: string
                  description: |
                    The name of the key vault
            vaultCertificates:
              type: array
              description: |
                The required certificate references
              items:
                type: object
                required:
                  - certificateUrl
                  - certificateStore
                properties:
                  certificateUrl:
                    type: string
                    description: |
                      The URL of the certificate under the key vault
                  certificateStore:
                    type: string
                    description: >
                      The certificate store directory the VM. The directory is
                      created in the LocalMachine account.

                      * This field is required only when using windows OS type

                      * This field must be ‘null’ when the OS type is Linux
      bootDiagnostics:
        required:
          - isEnabled
          - type
        type: object
        description: Will enable boot diagnostics in Azure when a new VM is launched
        properties:
          isEnabled:
            type: boolean
            description: >-
              Allows you to enable and disable the configuration of boot
              diagnostics at launch
            example: true
          type:
            type: string
            description: Defines the storage type on VM launch  in Azure.
            enum:
              - managed
              - unmanaged
            example: managed
          storageUri:
            type: string
            description: >
              The storage URI that is used if a type is unmanaged.

              * The storage URI must follow the blob storage URI format
              (\"https://<blobstoragename>.blob.core.windows.net/\").

              * StorageUri is required if the type is unmanaged.

              * StorageUri must be ‘null’ in case the boot diagnostics type is
              managed.
            example: https://example.blob.core.windows.net/
      licenseType:
        type: string
        description: |
          Specify an existing Azure license type to use when launching new VMs.
          * Valid values for Windows OS: "Windows_Server", "Windows_Client"
          * Valid values for Linux OS: "RHEL_BYOS", "SLES_BYOS"
        example: Windows_Client
      security:
        type: object
        description: >
          Specifies the Security related profile settings for the virtual
          machine.
        properties:
          securityType:
            type: string
            description: >
              Security type refers to the different security features of a
              virtual machine.

              Security features like Trusted launch virtual machines help to
              improve the security of Azure generation 2 virtual machines.
            enum:
              - Standard
              - TrustedLaunch
            example: TrustedLaunch
          secureBootEnabled:
            type: boolean
            description: >
              Specifies whether secure boot should be enabled on the virtual
              machine.
            example: true
          vTpmEnabled:
            type: boolean
            description: |
              Specifies whether vTPM should be enabled on the virtual machine.
            example: true
      proximityPlacementGroups:
        type: array
        description: >-
          Defines the proximity placement group in which the VM will be
          launched.
        items:
          type: object
          required:
            - name
            - resourceGroupName
          properties:
            name:
              type: string
              description: The name of the proximity placement group.
              example: testPPG
            resourceGroupName:
              type: string
              description: The resource group name of the proximity placement group.
              example: testResourceGroup
