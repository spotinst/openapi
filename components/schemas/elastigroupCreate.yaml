type: object
title: AWS Elastigroup
required:
  - group
properties:
  group:
    type: object
    description: Elastigroup Configuration
    required:
      - name
      - capacity
      - region
      - strategy
      - compute
    properties:
      name:
        type: string
        description: |
          AWS Elastigroup Name
        example: my-Elastigroup
      description:
        type: string
        description: |
          Describe your AWS Elastigroup
        example: This Elastigroup is used for Development
      region:
        type: string
        description: |
          The AWS region your group will be created in.
           This parameter is required if you specify subnets (through compute.subnetIds).
           This parameter is optional if you specify Availability Zones (through compute.availabilityZones).
        example: use-east-1
      capacity:
        description: Capacity Configuration
        type: object
        title: Elastigroup Capacity
        required:
          - target
          - minimum
          - maximum
          - unit
        properties:
          target:
            type: integer
            description: |
              The number of instances to launch
            example: 1
          minimum:
            type: integer
            description: |
              The lower limit number of instances that you can scale down to
            example: 0
          maximum:
            type: integer
            description: |
              The upper limit number of instances that you can scale up to
            example: 10
          unit:
            type: string
            enum:
              - instance
              - weight
            description: >
              The capacity unit to launch instances by.

              Note: for groups with integration to K8S / ECS weight option is
              not supported.
            example: instance
      strategy:
        type: object
        title: Elastigroup Strategy
        description: Strategy
        required:
          - availabilityVsCost
        properties:
          risk:
            type: integer
            minimum: 0
            maximum: 100
            example: 100
            default: 0
            description: >
              The percentage of Elastigroup that will run with spot market
              capacity
          onDemandCount:
            type: integer
            minimum: 0
            example: 0
            description: |
              Minimum number of instances that will always be on-demand
          availabilityVsCost:
            type: string
            enum:
              - costOriented
              - availabilityOriented
              - balanced
              - cheapest
              - equalAzDistribution
            default: balanced
            description: >
              How Elastigroup determines which instances to add and replace.

              (please read this article before using [Equal AZ Instance
              Distribution](https://docs.spot.io/elastigroup-for-aws/concepts/general-concepts/equal-az-distribution))
          fallbackToOd:
            type: boolean
            default: true
            example: true
            description: >
              When set to `true` Elastigroup will launch On Demand instances if
              no spot market is available
          considerODPricing:
            type: boolean
            default: false
            example: false
            description: >
              When the value is set to `true`, Elastigroup will prioritize
              launching On-Demand instances if they are found to be more
              cost-effective than available Spot markets.
          utilizeReservedInstances:
            type: boolean
            description: >
              In case of any available Reserved Instances, Elastigroup will
              utilize them before purchasing Spot instances
            example: false
          utilizeCommitments:
            type: boolean
            description: >
              If there are available Reserved Instances or Savings Plans,
              Elastigroup will utilize them before using Spot instances
            example: false
          restrictSingleAz:
            type: boolean
            description: >
              Elastigroup will automatically scale your instances in the most
              available and cost efficient availability zone. Every evaluation
              will be done when there are no active instances in the group.
            example: false
          drainingTimeout:
            type: integer
            example: 120
            description: >
              The time in seconds to allow the instance be drained from incoming
              TCP connections and detached from ELB before terminating it,
              during a scale down operation
          signals:
            type: array
            description: >
              The signals defined for this group. For more information refer the
              below article:
              [Signals](https://docs.spot.io/elastigroup-for-aws/concepts/compute-concepts/using-signals-in-elastigroups)
            items:
              type: object
              properties:
                name:
                  type: string
                  description: |
                    The name of the signal defined for the group.
                  enum:
                    - INSTANCE_READY
                    - INSTANCE_READY_TO_SHUTDOWN
                timeout:
                  type: integer
                  minimum: 60
                  maximum: 1800
                  description: >
                    The timeout in seconds to hold the instance until a signal
                    is sent.

                    If no signal is sent the instance will be replaced
                    (INSTANCE_READY) or we will terminate the instance
                    (INSTANCE_READY_TO_SHUTDOWN) after the timeout.
                  default: 1800
                  example: 120
          persistence:
            type: array
            description: |
              You can register persistence (Stateful) recovery arguments
            items:
              type: object
              properties:
                shouldPersistPrivateIp:
                  type: boolean
                  description: |
                    Should the instance maintain its private IP
                  example: true
                shouldPersistRootDevice:
                  type: boolean
                  description: |
                    Should the instance maintain its root device volumes
                  example: true
                shouldPersistBlockDevices:
                  type: boolean
                  description: |
                    Should the instance maintain its Data volumes
                  example: true
                blockDevicesMode:
                  type: string
                  description: >
                    Determine the way we attach the data volumes to the data
                    devices
                  enum:
                    - reattach
                    - onLaunch
                  example: reattach
          revertToSpot:
            type: object
            description: >
              Hold settings for strategy correction - replacing On-Demand for
              Spot instances
            properties:
              performAt:
                type: string
                description: >
                  Settings for maintenance strategy - possible values:
                  timeWindow, never, always.

                  performAt of type: 'never' OR 'timeWindow' can only be applied
                  to groups with "availabilityOriented" OR groups with
                  "persistence",

                  other groups allow either 'always' type or nothing which also
                  means always.
                enum:
                  - never
                  - always
                  - timeWindow
                example: timeWindow
                default: always
              timeWindows:
                type: array
                description: >
                  When performAt is 'timeWindow': must specify a list of
                  'timeWindows' with at least one time window Each string is in
                  the format of - ddd:hh:mm-ddd:hh:mm

                  ddd = day of week = Sun | Mon | Tue | Wed | Thu | Fri | Sat

                  hh = hour 24 = 0 -23

                  mm = minute = 0 - 59
                items:
                  type: string
                  example: Mon:03:00-Wed:02:30
          scalingStrategy:
            type: object
            description: |
              Set termination policy
            properties:
              terminationPolicy:
                type: string
                enum:
                  - default
                  - newestInstance
                example: default
      compute:
        type: object
        title: Elastigroup Compute
        required:
          - availabilityZones
          - launchSpecification
        properties:
          product:
            type: string
            description: |
              Operation system type.
            enum:
              - Linux/UNIX (Amazon VPC)
              - SUSE Linux (Amazon VPC)
              - Windows (Amazon VPC)
              - Red Hat Enterprise Linux (Amazon VPC)
            example: Linux/UNIX
          elasticIps:
            type: array
            description: >
              List of ElasticIPs Allocation Ids to associate to the group
              instances
            items:
              type: string
              example: eipalloc-9d4e16f8
          privateIps:
            type: array
            description: >
              List of Private IPs to associate to the group instances.

              Please note: This setting will only apply if
              rategy.persistence.shouldPersistPrivateIp is set to true.
            items:
              type: string
              default: 172.1.1.0
          instanceTypes:
            type: object
            description: |
              Instance Types
            properties:
              ondemand:
                type: string
                description: >
                  Available on demand instance type.

                  Note: Either ondemand or onDemandTypes must be defined, but
                  not both.
                example: m3.medium
              onDemandTypes:
                type: array
                description: >
                  Available on demand instance types.

                  Note: Either ondemand or onDemandTypes must be defined, but
                  not both.
                items:
                  type: string
                  example:
                    - c3.large
                    - c4.large
                    - m3.large
                    - r3.large
              spot:
                type: array
                description: |
                  Available Spot Instance types.  
                  Note: Cannot be defined if 'resourceRequirements' is defined.
                items:
                  type: string
                  example:
                    - c3.large
                    - c4.large
                    - m3.large
                    - r3.large
              resourceRequirements:
                $ref: ./resourceRequirements.yaml
              preferredSpot:
                type: array
                description: >
                  Prioritized subset of spot instance types. The list must be a
                  subset of the selected spot instance 

                  types or meet the resource requirements if defined.
                items:
                  type: string
                  example:
                    - c4.large
              weights:
                type: array
                description: >
                  Custom weight for each instance type (only valid in weight
                  capacity unit)
                items:
                  type: object
                  properties:
                    instanceType:
                      type: string
                      description: |
                        The instance type to customize its weight
                      example: c4.large
                    weightedCapacity:
                      type: integer
                      description: |
                        The weight
                      example: 8
          subnetIds:
            type: array
            description: >
              A comma-separated list of subnet identifiers for your group.

              When this parameter is set, compute.availabilityZones should be
              left unused.
            items:
              type: string
              example:
                - subnet-4c1d1538
                - subnet-2791bb61
                - subnet-703a6f58
                - subnet-c62846fc
          availabilityZones:
            type: array
            description: >
              One or more availability Zones for the group.

              When this parameter is set, compute.subnetIds should be left
              unused.
            items:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  description: |
                    The Availability Zone name
                  example: us-west-2a
                subnetIds:
                  type: array
                  description: |
                    A comma-separated list of subnet identifiers for your group.
                  items:
                    type: string
                    example:
                      - subnet-4333093a
                placementGroupName:
                  type: string
                  description: >
                    specify a Placement Group name, the instances will be
                    launched in the Placement Group for the AZ.
          preferredAvailabilityZones:
            type: array
            description: >
              The AZs to prioritize when launching Spot instances.

              If no markets are available in the Preferred AZs, Spot instances
              are launched in the non-preferred AZs.

              * Must be a sublist of compute.AvailabilityZones

              * strategy.availabilityVsCost must not be equalAzDistribution
            items:
              type: string
              example:
                - us-east-1a
                - us-east-1b
          launchSpecification:
            type: object
            required:
              - securityGroupIds
              - monitoring
            properties:
              creditSpecification:
                type: object
                description: >
                  creditSpecification is a parameter that indicates in what mode
                  t2/t3 instances will be launched with. It consists of one key:
                  cpuCredits (String)
                properties:
                  cpuCredits:
                    type: string
                    enum:
                      - unlimited
                      - standard
                    example: unlimited
              loadBalancersConfig:
                type: object
                description: |
                  Elastic Load Balancers configurations
                properties:
                  loadBalancers:
                    type: array
                    description: >
                      List of classic load balancers and/or application load
                      balancer target groups and/or Multai load balancer target
                      sets
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: >
                            The AWS resource name. Required for Classic Load
                            Balancer. Optional for Application Load Balancer.
                          example: MyTargetGroup
                        arn:
                          type: string
                          description: >
                            The AWS resource ARN (Required only for ALB target
                            groups)
                          example: >-
                            arn:aws:elasticloadbalancing:us-west-2:922761411234:targetgroup/MyTargetGroup/1fe63217f8ff1234
                        type:
                          type: string
                          description: |
                            The resource type.
                          enum:
                            - CLASSIC
                            - TARGET_GROUP
                            - MULTAI_TARGET_SET
                          example: TARGET_GROUP
                        balancerId:
                          type: string
                          description: |
                            The Multai load balancer ID
                          example: lb-123456789
                        targetSetId:
                          description: |
                            The Multai load target set ID
                          type: string
                          example: ts-123456789
                        azAwareness:
                          description: >
                            `AZ Awareness` will ensure that instances within the
                            same AZ are using the corresponding MLB runtime
                            instance in the same AZ. This feature reduces
                            multi-zone data transfer fees
                          type: boolean
                          example: false
                        autoWeight:
                          description: >
                            `Auto Weight` will automatically provide a higher
                            weight for instances that are larger as appropriate.
                            For example, if you have configured your Elastigroup
                            with m4.large and m4.xlarge instances the m4.large
                            will have half the weight of an m4.xlarge. This
                            ensures that larger instances receive a higher
                            number of MLB requests
                          type: boolean
                          example: true
              itf:
                $ref: ./itfConfigCreateGroup.yaml
              healthCheckType:
                type: string
                description: |
                  The service to use for the health check.
                enum:
                  - ELB
                  - HCS
                  - TARGET_GROUP
                  - MLB
                  - ECS_CLUSTER_INSTANCE
                  - EC2
                  - OPSWORKS
                  - MULTAI_TARGET_SET
                  - K8S_NODE
                  - NOMAD_NODE
                example: EC2
              healthCheckGracePeriod:
                type: integer
                description: >
                  The amount of time, in seconds, after the instance has
                  launched to starts and check its health.
                default: 300
                example: 600
              healthCheckUnhealthyDurationBeforeReplacement:
                type: integer
                description: >
                  The amount of time, in seconds, an existing instance should
                  remain active after becoming unhealthy.

                  After the set time out the instance will be replaced
                example: 60
              securityGroupIds:
                type: array
                description: >
                  One or more security group IDs. In case of update it will
                  override the existing Security Group with the new given array
                items:
                  type: string
                  example:
                    - sg-0dfc2c8760df6fec7
              monitoring:
                type: boolean
                description: |
                  Describes whether instance Enhanced Monitoring is enabled
                example: false
              ebsOptimized:
                type: boolean
                description: >
                  Enable EBS optimization for supported instance which is not
                  enabled by default.

                  Note - additional charges will be applied.
                example: false
              imageId:
                type: string
                description: >
                  The ID of the image used to launch the instance.

                  * The following instance types are supported by HVM image: M3,
                  M4, C3, C4, D2, G2, R3, CC2, CC1, CG1, CR1.

                  * The following instance types are supported by PV image: M1,
                  M2, M3, C1, C3.

                  * In case of conflict between Instance type to image type, an
                  error message will be returned
                example: ami-01e24be29428c15b2
              images:
                type: array
                description: >
                  An array of image objects. <br>

                  Elastigroup can be configured with either imageId or images,
                  but not both. <br>

                  * Valid values: null, or an array with at least 1 element.

                  * Multiple AMIs aren't allowed with stateful groups / Stateful
                  Node / Ocean
                    or with the following third-party integrations: ECS / Nomad / Docker Swarm / Kubernetes
                items:
                  $ref: ./elastigroupComputeLaunchSpecImage.yaml
              keyPair:
                type: string
                description: |
                  Specify a Key Pair to attach to the instances
                example: labs-oregon
              blockDeviceMappings:
                type: array
                description: >
                  Array list of block devices that are exposed to the instance,
                  You can specify virtual devices and EBS volumes.
                items:
                  type: object
                  properties:
                    deviceName:
                      type: string
                      description: |
                        Set device name
                      example: /dev/xvdcz
                    ebs:
                      type: object
                      description: |
                        Set EBS properties
                      properties:
                        encrypted:
                          type: boolean
                          example: true
                        iops:
                          type: integer
                          minimum: 0
                          description: |
                            Must be greater than or equal to 0
                          example: 0
                        dynamicIops:
                          type: object
                          description: >
                            Set dynamic IOPS properties. When using this object,
                            you cannot use the 'iops' object. You must use one
                            or the other.
                          properties:
                            baseSize:
                              type: integer
                              description: |
                                Initial size for IOPS.
                              example: 50
                            resource:
                              type: string
                              enum:
                                - CPU
                                - MEMORY
                              description: |
                                Type of resource
                              example: CPU
                            sizePerResourceUnit:
                              type: integer
                              description: >
                                Additional size per resource unit (in IOPS). For
                                example: if baseSize=50, and
                                sizePerResourceUnit=20, and an instance with 2
                                CPU is launched - its IOPS size will be: 90
                              example: 20
                        kmsKeyId:
                          type: string
                          example: alias/aws/ebs
                        snapshotId:
                          type: string
                          example: snap-abcdefghi111110
                        throughput:
                          type: integer
                          minimum: 125
                          maximum: 1000
                          example: 125
                          description: >
                            The amount of data transferred to or from a storage
                            device per second, you can use this param just in a
                            case that volumetype=‘gp3’.
                        volumeType:
                          type: string
                          description: |
                            Set volume type
                          example: gp2
                        deleteOnTermination:
                          type: boolean
                          description: |
                            Flag to delete the EBS on instance termination
                          example: true
                        volumeSize:
                          type: integer
                          description: >
                            Set volume size (in GB). When using this property -
                            don't use dynamicVolumeSize.

                            Volume size should be greater or equal than the size
                            configured in the AMI
                          example: 12
                        dynamicVolumeSize:
                          type: object
                          description: >
                            Set dynamic volume size properties. When using this
                            object, you cannot use volumeSize. You must use one
                            or the other.
                          properties:
                            baseSize:
                              type: integer
                              description: |
                                Initial size for volume
                              example: 50
                            resource:
                              type: string
                              example: CPU
                            sizePerResourceUnit:
                              type: integer
                              description: >
                                Additional size per resource unit (in GB). For
                                example: if baseSize=50, and
                                sizePerResourceUnit=20, and an instance with 2
                                CPU is launched - its disk size will be: 90GB
                              example: 20
              networkInterfaces:
                type: array
                description: >
                  List of network interfaces in an EC2 instance.

                  If you define network interface, please pay attention to omit
                  these properties from other sections in this JSON and set them
                  here: subnetId - compute.availabilityZones
                items:
                  type: object
                  required:
                    - deviceIndex
                  properties:
                    description:
                      type: string
                      description: >
                        The description of the network interface. Applies only
                        if creating a network interface when launching an
                        instance.
                    deviceIndex:
                      type: integer
                      description: >
                        The position of the network interface in the attachment
                        order.

                        A primary network interface has a device index of 0.

                        If you specify a network interface when launching an
                        instance, you must specify the device index.
                      example: 0
                    secondaryPrivateIpAddressCount:
                      type: integer
                      description: >
                        The number of secondary private IPv4 addresses to assign
                        to a network interface.

                        When you specify a number of secondary IPv4 addresses,
                        Amazon EC2 selects these IP addresses within the
                        subnet's IPv4 CIDR range.

                        You can't specify this option and specify more than one
                        private IP address using privateIpAddresses.

                        The number of IP addresses you can assign to a network
                        interface varies by instance type.

                        For more information, see IP Addresses Per ENI Per
                        Instance Type in the Amazon Virtual Private Cloud User
                        Guide.
                    associatePublicIpAddress:
                      type: boolean
                      description: >
                        Indicates whether to assign a public IPv4 address to an
                        instance you launch in a VPC.

                        The public IP address can only be assigned to a network
                        interface for eth0, and can only be assigned to a new
                        network interface, not an existing one.

                        You cannot specify more than one network interface in
                        the request.

                        If launching into a default subnet, the default value is
                        true.
                      example: true
                    deleteOnTermination:
                      type: boolean
                      description: >
                        If set to true, the interface is deleted when the
                        instance is terminated.

                        You can specify true only if creating a new network
                        interface when launching an instance.
                    networkInterfaceId:
                      type: string
                      description: >
                        The ID of the network interface. Used to attach the
                        specified network interface to the instance.
                    privateIpAddresses:
                      type: array
                      description: >
                        One or more private IPv4 addresses to assign to the
                        network interface.

                        Only one private IPv4 address can be designated as
                        primary.

                        You cannot specify this option if you're launching more
                        than one instance in a RunInstances request.
                      items:
                        type: object
                        required:
                          - privateIpAddress
                          - primary
                        properties:
                          privateIpAddress:
                            type: string
                            description: |
                              The private IPv4 address.
                          primary:
                            type: boolean
                            description: >
                              Indicates whether the private IPv4 address is the
                              primary private IPv4 address. Only one IPv4
                              address can be designated as primary.
                    subnetId:
                      type: string
                      description: >
                        The ID of the subnet to associate with the network
                        interface.

                        Required when creating a new Network Interface, and not
                        attaching an existing one via networkInterfaceId.
                    associateIpv6Address:
                      type: boolean
                      description: >
                        Indicates whether to assign an IPv6 address. Amazon EC2
                        chooses the IPv6 addresses from the range of the subnet.
              iamRole:
                type: object
                description: |
                  The instance profile iamRole
                properties:
                  name:
                    type: string
                    description: |
                      The iamRole name
                    example: my-iamRole
              userData:
                type: string
                format: byte
                description: >
                  The Base64-encoded MIME user data to make available to the
                  instances
                example: dXNlcmJhc2g2NGVuY29kZWQ=
              shutdownScript:
                type: string
                format: byte
                description: >
                  The Base64-encoded shutdown script to execute prior to
                  instance termination. For more information please see:
                  [Shutdown
                  Script](https://docs.spot.io/integration-docs/elastigroup/concepts/compute-concepts/shutdown-scripts/)
                example: dXNlcmJhc2g2NGVuY29kZWQ=
              tags:
                type: array
                items:
                  type: object
                  properties:
                    tagKey:
                      type: string
                      description: |
                        The tag's key
                      example: Creator
                    tagValue:
                      type: string
                      description: |
                        The tag's value
                      example: John Doe
              resourceTagSpecification:
                type: object
                description: >-
                  Optional field. User will specified which resources should be
                  tagged with group tags.
                properties:
                  volumes:
                    type: object
                    description: Optional field. Tag specification for Volume resources.
                    properties:
                      shouldTag:
                        type: boolean
                        description: >-
                          Optional field. Volume resources will be tagged with
                          group tags.
                        default: false
                        example: false
                  snapshots:
                    type: object
                    description: Optional field. Tag specification for Snapshot resources.
                    properties:
                      shouldTag:
                        type: boolean
                        description: >-
                          Optional field. Snapshot resources will be tagged with
                          group tags.
                        default: true
                        example: true
                  enis:
                    type: object
                    description: Optional field. Tag specification for ENI resources.
                    properties:
                      shouldTag:
                        type: boolean
                        description: >-
                          Optional field. ENI resources will be tagged with
                          group tags.
                        default: false
                        example: false
                  amis:
                    type: object
                    description: Optional field. Tag specification for AMI resources.
                    properties:
                      shouldTag:
                        type: boolean
                        description: >-
                          Optional field. AMI resources will be tagged with
                          group tags.
                        default: true
                        example: true
              metadataOptions:
                title: Metadata Options
                type: object
                description: >-
                  Optional field. Used for IMDSv2. In Create route can't be
                  null. In Update route can be null.
                required:
                  - httpTokens
                properties:
                  httpTokens:
                    title: HTTP Tokens
                    type: string
                    description: >-
                      Required for IMDSv2. Can’t be null in Create or Update.
                      Values can be "optional" or "required".
                    example: optional
                  httpPutResponseHopLimit:
                    type: integer
                    example: '33'
                    description: >
                      An integer within 1,64 range (including).

                      The desired HTTP PUT response hop limit for instance
                      metadata requests.

                      The larger the number, the further instance metadata
                      requests can travel.
                  instanceMetadataTags:
                    title: Instance Metadata Tags
                    type: string
                    enum:
                      - Enabled
                      - Disabled
                    description: >
                      Indicates whether access to instance tags from the
                      instance metadata is enabled or disabled.

                      Can’t be null.
                    example: Enabled
              cpuOptions:
                title: CPU options
                type: object
                description: >-
                  Optional field. The CPU options for the instances that are
                  launched within the group.
                required:
                  - threadsPerCore
                properties:
                  threadsPerCore:
                    title: thread per core
                    type: integer
                    example: '1'
                    description: >
                      The number of threads per CPU core.

                      To disable multithreading for the instances, specify a
                      value of 1 .

                      Otherwise, specify the default value of 2 .
              autoHealing:
                type: boolean
                description: >
                  Optional field. Auto-healing replacement won't be triggered if
                  this parameter value is "false".

                  In a case of a stateful group - no recycling will start if
                  this parameter value is "false".
                default: true
                example: true
          volumeAttachments:
            $ref: ./volumeAttachments.yaml
      scaling:
        type: object
        title: Elastigroup Scaling
        properties:
          up:
            type: array
            items:
              $ref: ./elastigroupScaleUp.yaml
          down:
            type: array
            items:
              $ref: ./elastigroupScaleDown.yaml
          multipleMetrics:
            type: object
            properties:
              metrics:
                type: array
                items:
                  $ref: ./multipleMetricsMetricConfig.yaml
              expressions:
                type: array
                items:
                  $ref: ./multipleMetricsExpressionConfig.yaml
          target:
            type: array
            items:
              $ref: ./elastigroupTargetScale.yaml
      scheduling:
        type: object
        title: Elastigroup Scheduling
        description: |
          Schedule tasks to execute, using CRON expressions.
        properties:
          tasks:
            type: array
            description: |
              The scheduling tasks for the group.
            items:
              type: object
              properties:
                isEnabled:
                  type: boolean
                  description: >
                    Describes whether the task is enabled. When true the task
                    should run when false it should not run.
                  example: true
                startTime:
                  type: string
                  description: >
                    DATETIME in ISO-8601 format and is in UTC time. Sets a start
                    time for scheduled actions.

                    If "frequency" or "cronExpression" are not used - the task
                    will run only once at the start time and will then be
                    deleted from the group configuration.
                  example: '2018-05-23T10:55:09Z'
                frequency:
                  type: string
                  description: >
                    The recurrence frequency to run this task.

                    Only one of ‘frequency' or ‘cronExpression' should be used
                    at a time
                  enum:
                    - hourly
                    - daily
                    - weekly
                  example: hourly
                cronExpression:
                  type: string
                  description: >
                    A valid cron expression.

                    The cron is running in UTC time zone and is in Unix cron
                    format Cron Expression Validator Script.

                    Only one of ‘frequency' or ‘cronExpression' should be used
                    at a time.
                  example: 0 1 * * *
                taskType:
                  type: string
                  description: >
                    The task type to run. For stateful groups, use only those
                    who has a `stateful` prefix, or `backup_ami`. For
                    non-stateful group, use the rest.
                  enum:
                    - backup_ami
                    - scale
                    - scaleUp
                    - percentageScaleUp
                    - scaleDown
                    - percentageScaleDown
                    - roll
                    - clusterRoll (For ECS Integration)
                    - statefulUpdateCapacity
                    - statefulRecycle
                  example: scale
                scaleTargetCapacity:
                  type: integer
                  description: |
                    The target capacity of the group.
                    Should be used when choosing ‘taskType' of ‘scale'.
                scaleMinCapacity:
                  type: integer
                  description: |
                    The min capacity of the group.
                    Should be used when choosing ‘taskType' of ‘scale'.
                scaleMaxCapacity:
                  type: integer
                  description: |
                    The max capacity of the group.
                    Required when ‘taskType' is ‘scale'.
                targetCapacity:
                  type: integer
                  description: |
                    Set a new target capacity for the Elastigroup.
                    Required when ‘taskType' is ‘statefulUpdateCapacity'.
                MinCapacity:
                  type: integer
                  description: |
                    Set a new minimum capacity for the Elastigroup.
                    Required when ‘taskType' is ‘statefulUpdateCapacity'.
                MaxCapacity:
                  type: integer
                  description: |
                    Set a new maximum capacity for the Elastigroup.
                    Required when ‘taskType' is ‘statefulUpdateCapacity'.
                batchSizePercentage:
                  type: integer
                  description: >
                    The percentage size of each batch in the scheduled
                    deployment roll.

                    Required when the taskType is roll.
      thirdPartiesIntegration:
        type: object
        title: Elastigroup Third Party Integrations
        description: |
          All definitions for using third-party Integrations
        properties:
          rancher:
            type: object
            description: |
              Rancher integration object.
            properties:
              masterHost:
                type: string
                description: |
                  Rancher master url
                example: http://myRancher.com:8080/v1
              accessKey:
                type: string
                description: |
                  Rancher version
                example: '1'
                default: '1'
              secretKey:
                type: string
                example: SECRET
              version:
                type: string
                example: 1
          kubernetes:
            type: object
            properties:
              integrationMode:
                type: string
                example: pod
              clusterIdentifier:
                type: string
                example: test-k8s
              autoScale:
                type: object
                properties:
                  isEnabled:
                    type: boolean
                    example: true
                    default: true
                  cooldown:
                    type: integer
                    example: 300
                  down:
                    type: object
                    description: |
                      Auto Scaling scale down operations.
                    properties:
                      evaluationPeriods:
                        type: integer
                        example: 5
                      maxScaleDownPercentage:
                        type: integer
                        description: >
                          The maximum % of nodes that will be scaled down at
                          once out of the total amount of potential nodes to
                          scale down.

                          example: if 10 nodes can be scaled down, only 5 will
                          be given 50% in this parameter.

                          the other 50% will be scaled down in the next
                          autoscaling iteration.
                        example: 70
                      headroom:
                        type: object
                        description: >
                          Spare resource capacity management enabling fast
                          assignment of Pods without waiting for new resources
                          to launch.
                        properties:
                          cpuPerUnit:
                            type: integer
                            description: >
                              Optionally configure the number of CPUs to
                              allocate per headroom unit. CPUs are denoted in
                              CPU units, where 1024 units = 1 vCPU.
                            example: 2048
                          memoryPerUnit:
                            type: integer
                            description: >
                              Optionally configure the amount of memory (MiB) to
                              allocate per headroom unit.
                            example: 3
                          numOfUnits:
                            type: integer
                            description: >
                              The number of units to retain as headroom, where
                              each unit has the defined headroom CPU and memory.
                            example: 2
                          gpuPerUnit:
                            type: integer
                            example: 2
                  labels:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                          example: group, kops.k8s.io/instancegroup
                        value:
                          type: string
                          example: microservices
                  isAutoConfig:
                    type: boolean
                    example: false
                    default: false
          nomad:
            type: object
            properties:
              masterHost:
                type: string
                example: https://master.host.com
              masterPort:
                type: integer
                example: 443
              autoScale:
                type: object
                properties:
                  isEnabled:
                    type: boolean
                    description: |
                      Enable the Autoscaler.
                    example: true
                  cooldown:
                    type: integer
                    description: >
                      Cooldown period between scaling actions. Value should be
                      cooldown period in seconds, greater than 180
                    example: 180
                  down:
                    type: object
                    description: |
                      Auto Scaling scale down operations.
                    properties:
                      evaluationPeriods:
                        type: integer
                        example: 3
                  headroom:
                    type: object
                    description: >
                      Spare resource capacity management enabling fast
                      assignment of Pods without waiting for new resources to
                      launch.
                    properties:
                      cpuPerUnit:
                        type: integer
                        description: >
                          Optionally configure the number of CPUs to allocate
                          per headroom unit. CPUs are denoted in CPU units,
                          where 1024 units = 1 vCPU.
                        example: 2048
                      memoryPerUnit:
                        type: integer
                        description: >
                          Optionally configure the amount of memory (MiB) to
                          allocate per headroom unit.
                        example: 3
                      numOfUnits:
                        type: integer
                        description: >
                          The number of units to retain as headroom, where each
                          unit has the defined headroom CPU and memory.
                        example: 2
                  constraints:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                          example: ${node.class}
                        value:
                          type: string
                          example: value
              aclToken:
                type: string
                example: 123
              tlsConfig:
                type: object
                description: |
                  Configuration object for TLS integration. (optional)
                properties:
                  tlsEnabled:
                    type: boolean
                    example: true
                    description: >
                      When true, all communication to the master is with TLS.
                      (required)
                  privateKey:
                    type: string
                    example: PRIVATE KEY CERTIFICATE STR
                    description: |
                      A generated client private key. (required)
                  certificate:
                    type: string
                    example: PUBLIC KEY CERTIFICATE STR
                    description: >
                      The certificates chain, first the client certificate then
                      the ca certificate. (required)
          opsWorks:
            type: object
            properties:
              layerId:
                type: string
                example: >-
                  00d9m815-8aac-62b7-cc01-123456, xxxxxx-xxxxxxxx,
                  xxxxxxx-xxxxxxxxxx
              stackType:
                type: string
                example: CLASSIC
          codeDeploy:
            type: object
            properties:
              cleanUpOnFailure:
                type: boolean
                example: false
              terminateInstanceOnFailure:
                type: boolean
                example: false
              deploymentGroups:
                type: array
                items:
                  type: object
                  properties:
                    applicationName:
                      type: string
                      example: test-app
                    deploymentGroupName:
                      type: string
                      example: test-grp
          route53:
            type: object
            description: |
              Route53 integration object.
            properties:
              domains:
                type: array
                description: |
                  Route53 domain configurations.
                items:
                  type: object
                  properties:
                    hostedZoneId:
                      type: string
                      description: |
                        The Route53 Hosted Zone ID for the registered domain.
                      example: Z3UFMBCGJMYLUT
                    spotinstAccountId:
                      type: string
                      description: >
                        The Spot account ID that is linked to the AWS account
                        that holds the Route53 hosted Zone ID.

                        The default is the user Spot account provided as a URL
                        parameter.
                      example: act-1234abcd
                    recordSetType:
                      type: string
                      description: >
                        Set the type of recordSet to update.

                        Valid values:

                        * "a" - means register and de-register of instances done
                        by IP address (IPv4).

                        When it is "a" you should also specify usePublicIp.

                        * "cname" - register and de-register of instances done
                        by CNAME. When it is "cname", you should also specify
                        usePublicDns.
                      enum:
                        - a
                        - cname
                      example: a
                      default: a
                    recordSets:
                      type: array
                      description: |
                        List of record sets.
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                            description: |
                              Name of the recordSet.
                            example: testcname.spot.io.
                          usePublicIp:
                            type: boolean
                            description: >
                              Defines whether to use public or private IP.
                              Relevant only when recordSetType=a.
                            example: true
                            default: false
                          usePublicDns:
                            type: boolean
                            description: >
                              Defines whether to use a public DNS or private DNS
                              in the instance registration process.

                              Relevant only when recordSetType=cname.

                              * False=Create a new weighted CNAME recordset with
                              same name and the instance Private DNS.

                              * True=instances should be registered with public
                              DNS.
                            example: true
                            default: false
          elasticBeanstalk:
            type: object
            description: |
              Beanstalk integration object.
            properties:
              environmentId:
                type: string
                example: e-12345
              deploymentPreferences:
                type: object
                properties:
                  automaticRoll:
                    type: boolean
                    example: true
                  batchSizePercentage:
                    type: integer
                    example: 50
                  gracePeriod:
                    type: integer
                    example: 600
                  strategy:
                    type: object
                    properties:
                      action:
                        type: string
                        example: REPLACE_SERVER
                      shouldDrainInstances:
                        type: boolean
                        example: true
              managedActions:
                type: object
                properties:
                  platformUpdate:
                    type: object
                    properties:
                      performAt:
                        type: string
                        example: timeWindow
                      timeWindow:
                        type: string
                        example: Mon:23:50-Tue:00:20
                      updateLevel:
                        type: string
                        example: patch
                      instanceRefreshEnabled:
                        type: boolean
                        example: true
          ecs:
            type: object
            description: |
              ECS integration object.
            properties:
              clusterName:
                type: string
                example: test-ecs
                description: |
                  ECS cluster name
              autoScale:
                type: object
                title: ECS Autoscaler
                description: |
                  The ECS Autoscaler properties.
                required:
                  - isEnabled
                properties:
                  isEnabled:
                    type: boolean
                    description: |
                      Enable the ECS Autoscaler.
                    example: true
                  cooldown:
                    type: integer
                    description: >
                      Cooldown period between scaling actions. Value should be
                      cooldown period in seconds, greater than 180.
                    example: 300
                  attributes:
                    type: object
                    properties:
                      key:
                        type: string
                        example: the_key
                      value:
                        type: string
                        example: the_value
                  resourceLimits:
                    type: object
                    description: >
                      Optionally set upper and lower bounds on the resource
                      usage of the cluster.
                    properties:
                      maxMemoryGib:
                        type: integer
                        description: >
                          The maximum memory in GiB units that can be allocated
                          to the cluster. Minimum value: 1.
                        example: 1
                      maxVcpu:
                        type: integer
                        description: >
                          The maximum CPU in vCPU units that can be allocated to
                          the cluster. Minimum value: 1.
                        example: 1
                  down:
                    type: object
                    description: |
                      Autoscaling scale down operations.
                    properties:
                      evaluationPeriods:
                        type: integer
                        example: 4
                      maxScaleDownPercentage:
                        type: integer
                        description: >
                          The maximum portion (as a %) of nodes that will be
                          scaled down at once out of the total number of
                          potential nodes to scale down.

                          Example: If there are 10 nodes to scale down and the
                          parameter is 50%, then only 5 nodes will be scaled
                          down at once.

                          The other 5 nodes will be scaled down in the next
                          autoscaling iteration.
                        example: 20
                  headroom:
                    type: object
                    description: >
                      Spare resource capacity management enabling fast
                      assignment of pods without waiting for new resources to
                      launch.
                    properties:
                      cpuPerUnit:
                        type: integer
                        description: >
                          Optionally configure the number of CPUs to allocate
                          per headroom unit. CPUs are denoted in CPU units,
                          where 1024 units = 1 vCPU.
                        example: 2048
                      memoryPerUnit:
                        type: integer
                        description: >
                          Optionally configure the amount of memory (MiB) to
                          allocate per headroom unit.
                        example: 3
                      numOfUnits:
                        type: integer
                        description: >
                          The number of units to retain as headroom, where each
                          unit has the defined headroom CPU and memory.
                        example: 2
                  isAutoConfig:
                    type: boolean
                    description: >
                      Use automatic headroom. When set to true, the values under
                      cluster.autoScaler.headroom are not effective, as Ocean
                      configures and optimizes headroom automatically.
                    example: false
                  shouldScaleDownNonServiceTasks:
                    type: boolean
                    description: >
                      Option to scale down non-service tasks. If not set, Ocean
                      does not scale down standalone tasks.
                    default: false
                    example: true
                  enableAutomaticAndManualHeadroom:
                    type: boolean
                    description: >
                      When set to true, both automatic and per custom launch
                      specification manual headroom to be saved concurrently and
                      independently in the cluster. prerequisite: isAutoConfig
                      must be true
                    example: false
              batch:
                type: object
                properties:
                  jobQueueNames:
                    type: array
                    items:
                      type: string
                      example:
                        - dumpy-big-processing
              optimizeImages:
                type: object
                properties:
                  shouldOptimizeEcsAmi:
                    type: boolean
                    example: true
                  performAt:
                    type: string
                    description: >
                      Settings for maintenance strategy.\

                      performAt of type: 'never' OR 'timeWindow' can only be
                      applied to groups with "availabilityOriented" OR groups
                      with "persistence",\

                      other groups allow either 'always' type or nothing which
                      also means always.
                    enum:
                      - never
                      - always
                      - timeWindow
                    example: timeWindow
                    default: always
                  timeWindows:
                    type: array
                    description: >
                      When performAt is 'timeWindow':\

                      must specify a list of 'timeWindows' with at least one
                      time window Each string is in the format of -
                      ddd:hh:mm-ddd:hh:mm

                      * ddd = day of week = Sun | Mon | Tue | Wed | Thu | Fri |
                      Sat

                      * hh = hour 24 = 0 -23

                      * mm = minute = 0 - 59
                    items:
                      type: string
                      example: Mon:03:00-Wed:02:30
          dockerSwarm:
            $ref: ./dockerSwarm.yaml
          jenkins:
            $ref: ./jenkins.yaml
      logging:
        $ref: ./elastigroupLogging.yaml
