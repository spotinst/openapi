type: object
description: A configuration for a Spark application
additionalProperties: false
properties:
  arguments:
    items:
      type: string
    title: Arguments
    type: array
  deps:
    $ref: ./Dependencies.yaml
  driver:
    $ref: ./DriverSpec.yaml
  executor:
    $ref: ./ExecutorSpec.yaml
  hadoopConf:
    additionalProperties:
      type: string
    title: Hadoopconf
    type: object
  hadoopConfigMap:
    title: Hadoopconfigmap
    type: string
  image:
    title: Image
    type: string
  imagePullPolicy:
    title: Imagepullpolicy
    type: string
  imagePullSecrets:
    items:
      type: string
    title: Imagepullsecrets
    type: array
  interactive:
    title: Interactive
    type: boolean
  initContainerImage:
    title: Initcontainerimage
    type: string
  labels:
    additionalProperties:
      type: string
    title: Labels
    type: object
    description: Labels to be attached to the custom resource of the application.
  logCollection:
    title: LogCollection
    type: object
    additionalProperties: false
    description: Configure the application logs collection
    properties:
      collectAppLogs:
        title: CollectAppLogs
        type: boolean
        description: >-
          Set this parameter to override the cluster configuration on driver and
          executor log collection. If set to false, no logs will be saved for
          this application.
  mainApplicationFile:
    title: Mainapplicationfile
    type: string
  mainClass:
    title: Mainclass
    type: string
  memoryOverheadFactor:
    title: Memoryoverheadfactor
    type: number
  availabilityZone:
    title: Availabilityzone
    type: string
    description: >-
      The availability zone to use for the Spark application pods. Leave this
      empty and Ocean Spark will choose the best availability zone for the Spark
      application
  priority:
    title: Priority
    type: string
    example: low
    description: The priority of the Spark application.
  pythonVersion:
    $ref: ./PythonVersion.yaml
  sparkConf:
    additionalProperties:
      type: string
    title: Sparkconf
    type: object
  sparkConfigMap:
    title: Sparkconfigmap
    type: string
  sparkVersion:
    title: Sparkversion
    type: string
  timeout:
    title: Timeout
    anyOf:
      - type: string
        enum:
          - DISABLED
      - $ref: ./TimeoutSpec.yaml
  timeToLiveSeconds:
    title: Timetoliveseconds
    type: integer
  type:
    $ref: ./SparkApplicationType.yaml
  volumes:
    items:
      $ref: ./Volume.yaml
    title: Volumes
    type: array
  namespace:
    title: Namespace
    type: string
    description: >-
      The Kubernetes namespace the Spark application should run in. The provided
      namespace must be present in the cluster's Spark app namespace list. If
      empty, Ocean Spark will use the default 'spark-apps' namespace
  serviceAccountName:
    title: ServiceAccountName
    type: string
    description: >-
      The Kubernetes service account to assign to the Spark application pods If
      empty Ocean Spark will use the default `spark-driver` service account
components:
  schemas:
    AWSElasticBlockStoreVolumeSource:
      properties:
        fsType:
          description: >-
            Filesystem type of the volume that you want to mount. Tip: Ensure
            that the filesystem type is supported by the host operating system.
            Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if
            unspecified. More info:
            https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
          title: Fstype
          type: string
        partition:
          description: >-
            The partition in the volume that you want to mount. If omitted, the
            default is to mount by volume name. Examples: For volume /dev/sda1,
            you specify the partition as "1". Similarly, the volume partition
            for /dev/sda is "0" (or you can leave the property empty).
          title: Partition
          type: integer
        readOnly:
          description: >-
            Specify "true" to force and set the ReadOnly property in
            VolumeMounts to "true". If omitted, the default is "false". More
            info:
            https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
          title: Readonly
          type: boolean
        volumeID:
          description: >-
            Unique ID of the persistent disk resource in AWS (Amazon EBS
            volume). More info:
            https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
          title: Volumeid
          type: string
      required:
        - volumeID
      title: AWSElasticBlockStoreVolumeSource
      type: object
    Affinity:
      properties:
        nodeAffinity:
          allOf:
            - $ref: ./NodeAffinity.yaml
          description: Describes node affinity scheduling rules for the pod.
          title: Nodeaffinity
        podAffinity:
          allOf:
            - $ref: ./PodAffinity.yaml
          description: >-
            Describes pod affinity scheduling rules (e.g. co-locate this pod in
            the same node, zone, etc. as some other pod(s)).
          title: Podaffinity
        podAntiAffinity:
          allOf:
            - $ref: ./PodAntiAffinity.yaml
          description: >-
            Describes pod anti-affinity scheduling rules (e.g. avoid putting
            this pod in the same node, zone, etc. as some other pod(s)).
          title: Podantiaffinity
      title: Affinity
      type: object
    AzureDiskVolumeSource:
      properties:
        cachingMode:
          description: 'Host Caching mode: None, Read Only, Read Write.'
          title: Cachingmode
          type: string
        diskName:
          description: The Name of the data disk in the blob storage
          title: Diskname
          type: string
        diskURI:
          description: The URI the data disk in the blob storage
          title: Diskuri
          type: string
        fsType:
          description: >-
            Filesystem type to mount. Must be a filesystem type supported by the
            host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly
            inferred to be "ext4" if unspecified.
          title: Fstype
          type: string
        kind:
          description: >-
            Expected values Shared: multiple blob disks per storage account 
            Dedicated: single blob disk per storage account  Managed: azure
            managed data disk (only in managed availability set). defaults to
            shared
          title: Kind
          type: string
        readOnly:
          description: >-
            Defaults to false (read/write). ReadOnly here will force the
            ReadOnly setting in VolumeMounts.
          title: Readonly
          type: boolean
      required:
        - diskName
        - diskURI
      title: AzureDiskVolumeSource
      type: object
    AzureFileVolumeSource:
      properties:
        readOnly:
          description: >-
            Defaults to false (read/write). ReadOnly here will force the
            ReadOnly setting in VolumeMounts.
          title: Readonly
          type: boolean
        secretName:
          description: the name of secret that contains Azure Storage Account Name and Key
          title: Secretname
          type: string
        shareName:
          description: Share Name
          title: Sharename
          type: string
      required:
        - secretName
        - shareName
      title: AzureFileVolumeSource
      type: object
    CSIVolumeSource:
      properties:
        driver:
          description: >-
            Driver is the name of the CSI driver that handles this volume.
            Consult with your admin for the correct name as registered in the
            cluster.
          title: Driver
          type: string
        fsType:
          description: >-
            Filesystem type to mount. Ex. "ext4", "xfs", "ntfs". If not
            provided, the empty value is passed to the associated CSI driver
            which will determine the default filesystem to apply.
          title: Fstype
          type: string
        nodePublishSecretRef:
          allOf:
            - $ref: ./LocalObjectReference.yaml
          description: >-
            NodePublishSecretRef is a reference to the secret object containing
            sensitive information to pass to the CSI driver to complete the CSI
            NodePublishVolume and NodeUnpublishVolume calls. This field is
            optional, and  may be empty if no secret is required. If the secret
            object contains more than one secret, all secret references are
            passed.
          title: Nodepublishsecretref
        readOnly:
          description: >-
            Specifies a read-only configuration for the volume. Defaults to
            false (read/write).
          title: Readonly
          type: boolean
        volumeAttributes:
          additionalProperties:
            type: string
          description: >-
            VolumeAttributes stores driver-specific properties that are passed
            to the CSI driver. Consult your driver's documentation for supported
            values.
          title: Volumeattributes
          type: object
      required:
        - driver
      title: CSIVolumeSource
      type: object
    Capabilities:
      properties:
        add:
          description: Added capabilities
          items:
            type: string
          title: Add
          type: array
        drop:
          description: Removed capabilities
          items:
            type: string
          title: Drop
          type: array
      title: Capabilities
      type: object
    CephFSVolumeSource:
      properties:
        monitors:
          description: >-
            Required: Monitors is a collection of Ceph monitors More info:
            https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
          items:
            type: string
          title: Monitors
          type: array
        path:
          description: >-
            Optional: Used as the mounted root, rather than the full Ceph tree,
            default is /
          title: Path
          type: string
        readOnly:
          description: >-
            Optional: Defaults to false (read/write). ReadOnly here will force
            the ReadOnly setting in VolumeMounts. More info:
            https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
          title: Readonly
          type: boolean
        secretFile:
          description: >-
            Optional: SecretFile is the path to key ring for User, default is
            /etc/ceph/user.secret More info:
            https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
          title: Secretfile
          type: string
        secretRef:
          allOf:
            - $ref: ./LocalObjectReference.yaml
          description: >-
            Optional: SecretRef is reference to the authentication secret for
            User, default is empty. More info:
            https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
          title: Secretref
        user:
          description: >-
            Optional: User is the rados user name, default is admin More info:
            https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
          title: User
          type: string
      required:
        - monitors
      title: CephFSVolumeSource
      type: object
    CinderVolumeSource:
      properties:
        fsType:
          description: >-
            Filesystem type to mount. Must be a filesystem type supported by the
            host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly
            inferred to be "ext4" if unspecified. More info:
            https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
          title: Fstype
          type: string
        readOnly:
          description: >-
            Optional: Defaults to false (read/write). ReadOnly here will force
            the ReadOnly setting in VolumeMounts. More info:
            https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
          title: Readonly
          type: boolean
        secretRef:
          allOf:
            - $ref: ./LocalObjectReference.yaml
          description: >-
            Optional: points to a secret object containing parameters used to
            connect to OpenStack.
          title: Secretref
        volumeID:
          description: >-
            volume id used to identify the volume in cinder More info:
            https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
          title: Volumeid
          type: string
      required:
        - volumeID
      title: CinderVolumeSource
      type: object
    ConfigMapProjection:
      properties:
        items:
          description: >-
            If unspecified, each key-value pair in the Data field of the
            referenced ConfigMap will be projected into the volume as a file
            whose name is the key and content is the value. If specified, the
            listed keys will be projected into the specified paths, and unlisted
            keys will not be present. If a key is specified which is not present
            in the ConfigMap, the volume setup will error unless it is marked
            optional. Paths must be relative and may not contain the '..' path
            or start with '..'.
          items:
            $ref: ./KeyToPath.yaml
          title: Items
          type: array
        name:
          description: >-
            Name of the referent. More info:
            https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
          title: Name
          type: string
        optional:
          description: Specify whether the ConfigMap or its keys must be defined
          title: Optional
          type: boolean
      title: ConfigMapProjection
      type: object
    ConfigMapVolumeSource:
      properties:
        defaultMode:
          description: >-
            Optional: mode bits to use on created files by default. Must be a
            value between 0 and 0777. Defaults to 0644. Directories within the
            path are not affected by this setting. This might be in conflict
            with other options that affect the file mode, like fsGroup, and the
            result can be other mode bits set.
          title: Defaultmode
          type: integer
        items:
          description: >-
            If unspecified, each key-value pair in the Data field of the
            referenced ConfigMap will be projected into the volume as a file
            whose name is the key and content is the value. If specified, the
            listed keys will be projected into the specified paths, and unlisted
            keys will not be present. If a key is specified which is not present
            in the ConfigMap, the volume setup will error unless it is marked
            optional. Paths must be relative and may not contain the '..' path
            or start with '..'.
          items:
            $ref: ./KeyToPath.yaml
          title: Items
          type: array
        name:
          description: >-
            Name of the referent. More info:
            https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
          title: Name
          type: string
        optional:
          description: Specify whether the ConfigMap or its keys must be defined
          title: Optional
          type: boolean
      title: ConfigMapVolumeSource
      type: object
    Dependencies:
      description: Dependencies of the Spark application
      properties:
        files:
          items:
            type: string
          title: Files
          type: array
        jars:
          items:
            type: string
          title: Jars
          type: array
        pyFiles:
          items:
            type: string
          title: Pyfiles
          type: array
        packages:
          items:
            type: string
          title: Packages
          type: array
        excludePackages:
          items:
            type: string
          title: Excludepackages
          type: array
        repositories:
          items:
            type: string
          title: Repositories
          type: array
      title: Dependencies
      type: object
    DownwardAPIProjection:
      properties:
        items:
          description: Items is a list of DownwardAPIVolume file
          items:
            $ref: ./DownwardAPIVolumeFile.yaml
          title: Items
          type: array
      title: DownwardAPIProjection
      type: object
    DownwardAPIVolumeFile:
      properties:
        fieldRef:
          allOf:
            - $ref: ./ObjectFieldSelector.yaml
          description: >-
            Required: Selects a field of the pod: only annotations, labels, name
            and namespace are supported.
          title: Fieldref
        mode:
          description: >-
            Optional: mode bits to use on this file, must be a value between 0
            and 0777. If not specified, the volume defaultMode will be used.
            This might be in conflict with other options that affect the file
            mode, like fsGroup, and the result can be other mode bits set.
          title: Mode
          type: integer
        path:
          description: >-
            Required: Path is  the relative path name of the file to be created.
            Must not be absolute or contain the '..' path. Must be utf-8
            encoded. The first item of the relative path must not start with
            '..'
          title: Path
          type: string
        resourceFieldRef:
          allOf:
            - $ref: ./ResourceFieldSelector.yaml
          description: >-
            Selects a resource of the container: only resources limits and
            requests (limits.cpu, limits.memory, requests.cpu and
            requests.memory) are currently supported.
          title: Resourcefieldref
      required:
        - path
      title: DownwardAPIVolumeFile
      type: object
    DownwardAPIVolumeSource:
      properties:
        defaultMode:
          description: >-
            Optional: mode bits to use on created files by default. Must be a
            value between 0 and 0777. Defaults to 0644. Directories within the
            path are not affected by this setting. This might be in conflict
            with other options that affect the file mode, like fsGroup, and the
            result can be other mode bits set.
          title: Defaultmode
          type: integer
        items:
          description: Items is a list of downward API volume file
          items:
            $ref: ./DownwardAPIVolumeFile.yaml
          title: Items
          type: array
      title: DownwardAPIVolumeSource
      type: object
    DriverSpec:
      additionalProperties: false
      description: A configuration for a Spark driver (no required field)
      properties:
        affinity:
          $ref: ./Affinity.yaml
        annotations:
          additionalProperties:
            type: string
          title: Annotations
          type: object
        configMaps:
          items:
            $ref: ./NamePath.yaml
          title: Configmaps
          type: array
        coreLimit:
          title: Corelimit
          type: string
        coreRequest:
          title: Corerequest
          type: string
        cores:
          $ref: ./cores.yaml
        env:
          $ref: ./Env.yaml
        envSecretKeyRefs:
          $ref: ./EnvSecretKeyRefs.yaml
        envVars:
          $ref: ./EnvVars.yaml
        hostAliases:
          items:
            $ref: ./HostAlias.yaml
          title: Hostaliases
          type: array
        image:
          title: Image
          type: string
        instanceSelector:
          $ref: ./InstanceSelector.yaml
        instanceAllowList:
          $ref: ./InstanceAllowList.yaml
        javaOptions:
          title: Javaoptions
          type: string
        lifecycle:
          title: Lifecycle
          allOf:
            - $ref: ./Lifecycle.yaml
          description: Optional lifecycle hooks to add to the driver pod
        sidecars:
          title: Sidecars
          type: array
          items:
            $ref: ./Container.yaml
        initContainers:
          title: Initcontainers
          type: array
          items:
            $ref: ./Container.yaml
        labels:
          additionalProperties:
            type: string
          title: Labels
          type: object
        memory:
          title: Memory
          type: string
        memoryOverhead:
          title: Memoryoverhead
          type: string
        podName:
          $ref: ./K8sName.yaml
        podSecurityContext:
          $ref: ./PodSecurityContext.yaml
        secrets:
          items:
            $ref: ./SecretInfo.yaml
          title: Secrets
          type: array
        securityContext:
          $ref: ./SecurityContext.yaml
        spot:
          title: Spot
          type: boolean
        tolerations:
          items:
            $ref: ./Toleration.yaml
          title: Tolerations
          type: array
        vngIds:
          $ref: ./VngIds.yaml
        volumeMounts:
          items:
            $ref: ./VolumeMount.yaml
          title: Volumemounts
          type: array
      title: DriverSpec
      type: object
    EmptyDirVolumeSource:
      properties:
        medium:
          description: >-
            What type of storage medium should back this directory. The default
            is "" which means to use the node's default medium. Must be an empty
            string (default) or Memory. More info:
            https://kubernetes.io/docs/concepts/storage/volumes#emptydir
          title: Medium
          type: string
        sizeLimit:
          allOf:
            - $ref: ./Quantity.yaml
          description: >-
            Total amount of local storage required for this EmptyDir volume. The
            size limit is also applicable for memory medium. The maximum usage
            on memory medium EmptyDir would be the minimum value between the
            SizeLimit specified here and the sum of memory limits of all
            containers in a pod. The default is nil which means that the limit
            is undefined. More info:
            http://kubernetes.io/docs/user-guide/volumes#emptydir
          title: Sizelimit
      title: EmptyDirVolumeSource
      type: object
    Env:
      title: Env
      type: array
      items:
        $ref: ./EnvVar.yaml
      description: List of environment variables to set in the container.
    EnvSecretKeyRefs:
      additionalProperties:
        $ref: ./NameKey.yaml
      title: EnvSecretKeyRefs
      type: object
      description: DEPRECATED use `env` instead
    EnvVars:
      additionalProperties:
        type: string
      title: EnvVars
      type: object
      description: DEPRECATED use `env` instead
    ExecutorSpec:
      additionalProperties: false
      description: A configuration for a Spark executor (no required field)
      properties:
        affinity:
          $ref: ./Affinity.yaml
        annotations:
          additionalProperties:
            type: string
          title: Annotations
          type: object
        configMaps:
          items:
            $ref: ./NamePath.yaml
          title: Configmaps
          type: array
        coreLimit:
          title: Corelimit
          type: string
        coreRequest:
          title: Corerequest
          type: string
        cores:
          $ref: ./cores.yaml
        env:
          $ref: ./Env.yaml
        envSecretKeyRefs:
          $ref: ./EnvSecretKeyRefs.yaml
        envVars:
          $ref: ./EnvVars.yaml
        hostAliases:
          items:
            $ref: ./HostAlias.yaml
          title: Hostaliases
          type: array
        image:
          title: Image
          type: string
        instanceSelector:
          $ref: ./InstanceSelector.yaml
        instanceAllowList:
          $ref: ./InstanceAllowList.yaml
        sidecars:
          title: Sidecars
          type: array
          items:
            $ref: ./Container.yaml
        initContainers:
          title: Initcontainers
          type: array
          items:
            $ref: ./Container.yaml
        instances:
          title: Instances
          type: integer
        javaOptions:
          title: Javaoptions
          type: string
        labels:
          additionalProperties:
            type: string
          title: Labels
          type: object
        memory:
          oneOf:
            - $ref: ./StaticMemoryString.yaml
            - $ref: ./OOMRecoveryStrategy.yaml
            - $ref: ./MemoryAutotuningStrategy.yaml
        memoryOverhead:
          title: Memoryoverhead
          type: string
        podSecurityContext:
          $ref: ./PodSecurityContext.yaml
        secrets:
          items:
            $ref: ./SecretInfo.yaml
          title: Secrets
          type: array
        securityContext:
          $ref: ./SecurityContext.yaml
        spot:
          title: Spot
          type: boolean
        tolerations:
          items:
            $ref: ./Toleration.yaml
          title: Tolerations
          type: array
        vngIds:
          $ref: ./VngIds.yaml
        volumeMounts:
          items:
            $ref: ./VolumeMount.yaml
          title: Volumemounts
          type: array
      title: ExecutorSpec
      type: object
    FCVolumeSource:
      properties:
        fsType:
          description: >-
            Filesystem type to mount. Must be a filesystem type supported by the
            host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly
            inferred to be "ext4" if unspecified.
          title: Fstype
          type: string
        lun:
          description: 'Optional: FC target lun number'
          title: Lun
          type: integer
        readOnly:
          description: >-
            Optional: Defaults to false (read/write). ReadOnly here will force
            the ReadOnly setting in VolumeMounts.
          title: Readonly
          type: boolean
        targetWWNs:
          description: 'Optional: FC target worldwide names (WWNs)'
          items:
            type: string
          title: Targetwwns
          type: array
        wwids:
          description: >-
            Optional: FC volume world wide identifiers (wwids) Either wwids or
            combination of targetWWNs and lun must be set, but not both
            simultaneously.
          items:
            type: string
          title: Wwids
          type: array
      title: FCVolumeSource
      type: object
    FlexVolumeSource:
      properties:
        driver:
          description: Driver is the name of the driver to use for this volume.
          title: Driver
          type: string
        fsType:
          description: >-
            Filesystem type to mount. Must be a filesystem type supported by the
            host operating system. Ex. "ext4", "xfs", "ntfs". The default
            filesystem depends on FlexVolume script.
          title: Fstype
          type: string
        options:
          additionalProperties:
            type: string
          description: 'Optional: Extra command options if any.'
          title: Options
          type: object
        readOnly:
          description: >-
            Optional: Defaults to false (read/write). ReadOnly here will force
            the ReadOnly setting in VolumeMounts.
          title: Readonly
          type: boolean
        secretRef:
          allOf:
            - $ref: ./LocalObjectReference.yaml
          description: >-
            Optional: SecretRef is reference to the secret object containing
            sensitive information to pass to the plugin scripts. This may be
            empty if no secret object is specified. If the secret object
            contains more than one secret, all secrets are passed to the plugin
            scripts.
          title: Secretref
      required:
        - driver
      title: FlexVolumeSource
      type: object
    FlockerVolumeSource:
      properties:
        datasetName:
          description: >-
            Name of the dataset stored as metadata -> name on the dataset for
            Flocker should be considered as deprecated
          title: Datasetname
          type: string
        datasetUUID:
          description: UUID of the dataset. This is unique identifier of a Flocker dataset
          title: Datasetuuid
          type: string
      title: FlockerVolumeSource
      type: object
    GCEPersistentDiskVolumeSource:
      properties:
        fsType:
          description: >-
            Filesystem type of the volume that you want to mount. Tip: Ensure
            that the filesystem type is supported by the host operating system.
            Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if
            unspecified. More info:
            https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
          title: Fstype
          type: string
        partition:
          description: >-
            The partition in the volume that you want to mount. If omitted, the
            default is to mount by volume name. Examples: For volume /dev/sda1,
            you specify the partition as "1". Similarly, the volume partition
            for /dev/sda is "0" (or you can leave the property empty). More
            info:
            https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
          title: Partition
          type: integer
        pdName:
          description: >-
            Unique name of the PD resource in GCE. Used to identify the disk in
            GCE. More info:
            https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
          title: Pdname
          type: string
        readOnly:
          description: >-
            ReadOnly here will force the ReadOnly setting in VolumeMounts.
            Defaults to false. More info:
            https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
          title: Readonly
          type: boolean
      required:
        - pdName
      title: GCEPersistentDiskVolumeSource
      type: object
    GitRepoVolumeSource:
      properties:
        directory:
          description: >-
            Target directory name. Must not contain or start with '..'.  If '.'
            is supplied, the volume directory will be the git repository. 
            Otherwise, if specified, the volume will contain the git repository
            in the subdirectory with the given name.
          title: Directory
          type: string
        repository:
          description: Repository URL
          title: Repository
          type: string
        revision:
          description: Commit hash for the specified revision.
          title: Revision
          type: string
      required:
        - repository
      title: GitRepoVolumeSource
      type: object
    GlusterfsVolumeSource:
      properties:
        endpoints:
          description: >-
            EndpointsName is the endpoint name that details Glusterfs topology.
            More info:
            https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
          title: Endpoints
          type: string
        path:
          description: >-
            Path is the Glusterfs volume path. More info:
            https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
          title: Path
          type: string
        readOnly:
          description: >-
            ReadOnly here will force the Glusterfs volume to be mounted with
            read-only permissions. Defaults to false. More info:
            https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
          title: Readonly
          type: boolean
      required:
        - endpoints
        - path
      title: GlusterfsVolumeSource
      type: object
    HostAlias:
      properties:
        hostnames:
          description: Hostnames for the above IP address.
          items:
            type: string
          title: Hostnames
          type: array
        ip:
          description: IP address of the host file entry.
          title: Ip
          type: string
      title: HostAlias
      type: object
    HostPathVolumeSource:
      properties:
        path:
          description: >-
            Path of the directory on the host. If the path is a symlink, it will
            follow the link to the real path. More info:
            https://kubernetes.io/docs/concepts/storage/volumes#hostpath
          title: Path
          type: string
        type:
          description: >-
            Type for HostPath Volume Defaults to "" More info:
            https://kubernetes.io/docs/concepts/storage/volumes#hostpath
          title: Type
          type: string
      required:
        - path
      title: HostPathVolumeSource
      type: object
    InstanceSelector:
      title: InstanceSelector
      description: DEPRECATED use `instanceAllowList` instead
      type: string
    InstanceAllowList:
      title: InstanceAllowList
      description: >
        Restricts what instances can by used by pods:


        - On AWS, can be an instance type (ex: `i3.large`, `m5d.xlarge`) or an
        instance family (ex: `i3`, `m5d`).

        - On GCP, can be a machine type + VCPU spec (ex: `n2-highmem-4`,
        `n2-standard-2`) or a machine type (ex: `n2-highmem`, `n2-standard`).

        - On Azure, can be a VM size (ex: `standard_a2_v2`, `standard_e16-8_v3`)
        or a group of VM sizes (ex: `standard_a_v2`, `standard_e_v3`).
          The group name is obtained by removing the number of vCPU (and constrained vCPU if there is one) from the VM size, and does not
          necessarily map to a VM series. For Azure, this field is **not** case sensitive.
      type: array
      items:
        type: string
    ISCSIVolumeSource:
      properties:
        chapAuthDiscovery:
          description: whether support iSCSI Discovery CHAP authentication
          title: Chapauthdiscovery
          type: boolean
        chapAuthSession:
          description: whether support iSCSI Session CHAP authentication
          title: Chapauthsession
          type: boolean
        fsType:
          description: >-
            Filesystem type of the volume that you want to mount. Tip: Ensure
            that the filesystem type is supported by the host operating system.
            Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if
            unspecified. More info:
            https://kubernetes.io/docs/concepts/storage/volumes#iscsi
          title: Fstype
          type: string
        initiatorName:
          description: >-
            Custom iSCSI Initiator Name. If initiatorName is specified with
            iscsiInterface simultaneously, new iSCSI interface <target
            portal>:<volume name> will be created for the connection.
          title: Initiatorname
          type: string
        iqn:
          description: Target iSCSI Qualified Name.
          title: Iqn
          type: string
        iscsiInterface:
          description: >-
            iSCSI Interface Name that uses an iSCSI transport. Defaults to
            'default' (tcp).
          title: Iscsiinterface
          type: string
        lun:
          description: iSCSI Target Lun number.
          title: Lun
          type: integer
        portals:
          description: >-
            iSCSI Target Portal List. The portal is either an IP or ip_addr:port
            if the port is other than default (typically TCP ports 860 and
            3260).
          items:
            type: string
          title: Portals
          type: array
        readOnly:
          description: >-
            ReadOnly here will force the ReadOnly setting in VolumeMounts.
            Defaults to false.
          title: Readonly
          type: boolean
        secretRef:
          allOf:
            - $ref: ./LocalObjectReference.yaml
          description: CHAP Secret for iSCSI target and initiator authentication
          title: Secretref
        targetPortal:
          description: >-
            iSCSI Target Portal. The Portal is either an IP or ip_addr:port if
            the port is other than default (typically TCP ports 860 and 3260).
          title: Targetportal
          type: string
      required:
        - iqn
        - lun
        - targetPortal
      title: ISCSIVolumeSource
      type: object
    K8sName:
      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
      title: K8sName
      type: string
    KeyToPath:
      properties:
        key:
          description: The key to project.
          title: Key
          type: string
        mode:
          description: >-
            Optional: mode bits to use on this file, must be a value between 0
            and 0777. If not specified, the volume defaultMode will be used.
            This might be in conflict with other options that affect the file
            mode, like fsGroup, and the result can be other mode bits set.
          title: Mode
          type: integer
        path:
          description: >-
            The relative path of the file to map the key to. May not be an
            absolute path. May not contain the path element '..'. May not start
            with the string '..'.
          title: Path
          type: string
      required:
        - key
        - path
      title: KeyToPath
      type: object
    LabelSelector:
      properties:
        matchExpressions:
          description: >-
            matchExpressions is a list of label selector requirements. The
            requirements are ANDed.
          items:
            $ref: ./LabelSelectorRequirement.yaml
          title: Matchexpressions
          type: array
        matchLabels:
          additionalProperties:
            type: string
          description: >-
            matchLabels is a map of {key,value} pairs. A single {key,value} in
            the matchLabels map is equivalent to an element of matchExpressions,
            whose key field is "key", the operator is "In", and the values array
            contains only "value". The requirements are ANDed.
          title: Matchlabels
          type: object
      title: LabelSelector
      type: object
    LabelSelectorRequirement:
      properties:
        key:
          description: key is the label key that the selector applies to.
          title: Key
          type: string
        operator:
          description: >-
            operator represents a key's relationship to a set of values. Valid
            operators are In, NotIn, Exists and DoesNotExist.
          title: Operator
          type: string
        values:
          description: >-
            values is an array of string values. If the operator is In or NotIn,
            the values array must be non-empty. If the operator is Exists or
            DoesNotExist, the values array must be empty. This array is replaced
            during a strategic merge patch.
          items:
            type: string
          title: Values
          type: array
      required:
        - key
        - operator
      title: LabelSelectorRequirement
      type: object
    LocalObjectReference:
      properties:
        name:
          description: >-
            Name of the referent. More info:
            https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
          title: Name
          type: string
      title: LocalObjectReference
      type: object
    NFSVolumeSource:
      properties:
        path:
          description: >-
            Path that is exported by the NFS server. More info:
            https://kubernetes.io/docs/concepts/storage/volumes#nfs
          title: Path
          type: string
        readOnly:
          description: >-
            ReadOnly here will force the NFS export to be mounted with read-only
            permissions. Defaults to false. More info:
            https://kubernetes.io/docs/concepts/storage/volumes#nfs
          title: Readonly
          type: boolean
        server:
          description: >-
            Server is the hostname or IP address of the NFS server. More info:
            https://kubernetes.io/docs/concepts/storage/volumes#nfs
          title: Server
          type: string
      required:
        - path
        - server
      title: NFSVolumeSource
      type: object
    NameKey:
      description: The name and key of a SecretKeyRef
      properties:
        key:
          title: Key
          type: string
        name:
          title: Name
          type: string
      required:
        - name
        - key
      title: NameKey
      type: object
    NamePath:
      description: >-
        A pair of a name and a path to which the named objects should be mounted
        to
      properties:
        name:
          title: Name
          type: string
        path:
          title: Path
          type: string
      required:
        - name
        - path
      title: NamePath
      type: object
    NodeAffinity:
      properties:
        preferredDuringSchedulingIgnoredDuringExecution:
          description: >-
            The scheduler will prefer to schedule pods to nodes that satisfy the
            affinity expressions specified by this field, but it may choose a
            node that violates one or more of the expressions. The node that is
            most preferred is the one with the greatest sum of weights, i.e. for
            each node that meets all of the scheduling requirements (resource
            request, requiredDuringScheduling affinity expressions, etc.),
            compute a sum by iterating through the elements of this field and
            adding "weight" to the sum if the node matches the corresponding
            matchExpressions; the node(s) with the highest sum are the most
            preferred.
          items:
            $ref: ./PreferredSchedulingTerm.yaml
          title: Preferredduringschedulingignoredduringexecution
          type: array
        requiredDuringSchedulingIgnoredDuringExecution:
          allOf:
            - $ref: ./NodeSelector.yaml
          description: >-
            If the affinity requirements specified by this field are not met at
            scheduling time, the pod will not be scheduled onto the node. If the
            affinity requirements specified by this field cease to be met at
            some point during pod execution (e.g. due to an update), the system
            may or may not try to eventually evict the pod from its node.
          title: Requiredduringschedulingignoredduringexecution
      title: NodeAffinity
      type: object
    NodeSelector:
      properties:
        nodeSelectorTerms:
          description: Required. A list of node selector terms. The terms are ORed.
          items:
            $ref: ./NodeSelectorTerm.yaml
          title: Nodeselectorterms
          type: array
      required:
        - nodeSelectorTerms
      title: NodeSelector
      type: object
    NodeSelectorRequirement:
      properties:
        key:
          description: The label key that the selector applies to.
          title: Key
          type: string
        operator:
          description: >-
            Represents a key's relationship to a set of values. Valid operators
            are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
          title: Operator
          type: string
        values:
          description: >-
            An array of string values. If the operator is In or NotIn, the
            values array must be non-empty. If the operator is Exists or
            DoesNotExist, the values array must be empty. If the operator is Gt
            or Lt, the values array must have a single element, which will be
            interpreted as an integer. This array is replaced during a strategic
            merge patch.
          items:
            type: string
          title: Values
          type: array
      required:
        - key
        - operator
      title: NodeSelectorRequirement
      type: object
    NodeSelectorTerm:
      properties:
        matchExpressions:
          description: A list of node selector requirements by node's labels.
          items:
            $ref: ./NodeSelectorRequirement.yaml
          title: Matchexpressions
          type: array
        matchFields:
          description: A list of node selector requirements by node's fields.
          items:
            $ref: ./NodeSelectorRequirement.yaml
          title: Matchfields
          type: array
      title: NodeSelectorTerm
      type: object
    ObjectFieldSelector:
      properties:
        apiVersion:
          description: >-
            Version of the schema the FieldPath is written in terms of, defaults
            to "v1".
          title: Apiversion
          type: string
        fieldPath:
          description: Path of the field to select in the specified API version.
          title: Fieldpath
          type: string
      required:
        - fieldPath
      title: ObjectFieldSelector
      type: object
    StaticMemoryString:
      title: StaticMemoryString
      description: static memory
      type: string
    OOMRecoveryStrategy:
      description: >-
        Memory allocation strategy that automatically increments the memory when
        a previous app failed with an OOM
      properties:
        strategy:
          type: string
          title: oomRecovery
          enum:
            - oomRecovery
          description: >-
            Automatically increase memory if a previous app failed with an OOM
            error
        scalingFactor:
          title: scalingFactor
          description: Memory multiplier after an OOM failure. Optional, defaults to 2.0
          type: number
        maxMemory:
          title: maxMemory
          description: Optional, maximum allocatable memory
          type: string
      required:
        - strategy
    MemoryAutotuningStrategy:
      description: >-
        Memory allocation strategy that automatically increments the memory when
        a previous app failed with an OOM, and decreases it based on past
        applications' memory usage
      properties:
        strategy:
          type: string
          title: autotuning
          enum:
            - autotuning
          description: >-
            Automatically increase memory if a previous app failed with an OOM
            error, and decrease it based on past applications' memory usage
        scalingFactor:
          title: scalingFactor
          description: Memory multiplier after an OOM failure. Optional, defaults to 2.0
          type: number
        maxMemory:
          title: maxMemory
          description: Optional, maximum allocatable memory
          type: string
        historySize:
          title: historySize
          description: >-
            Number of past apps to take into account to compute the recommended
            memory, defaults to 6
          type: integer
        marginRatio:
          title: marginRatio
          description: >-
            Additional safety margin on top of the recommended memory, defaults
            to 0.1
          type: number
      required:
        - strategy
    PersistentVolumeClaimVolumeSource:
      properties:
        claimName:
          description: >-
            ClaimName is the name of a PersistentVolumeClaim in the same
            namespace as the pod using this volume. More info:
            https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
          title: Claimname
          type: string
        readOnly:
          description: Will force the ReadOnly setting in VolumeMounts. Default false.
          title: Readonly
          type: boolean
      required:
        - claimName
      title: PersistentVolumeClaimVolumeSource
      type: object
    PhotonPersistentDiskVolumeSource:
      properties:
        fsType:
          description: >-
            Filesystem type to mount. Must be a filesystem type supported by the
            host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly
            inferred to be "ext4" if unspecified.
          title: Fstype
          type: string
        pdID:
          description: ID that identifies Photon Controller persistent disk
          title: Pdid
          type: string
      required:
        - pdID
      title: PhotonPersistentDiskVolumeSource
      type: object
    PodAffinity:
      properties:
        preferredDuringSchedulingIgnoredDuringExecution:
          description: >-
            The scheduler will prefer to schedule pods to nodes that satisfy the
            affinity expressions specified by this field, but it may choose a
            node that violates one or more of the expressions. The node that is
            most preferred is the one with the greatest sum of weights, i.e. for
            each node that meets all of the scheduling requirements (resource
            request, requiredDuringScheduling affinity expressions, etc.),
            compute a sum by iterating through the elements of this field and
            adding "weight" to the sum if the node has pods which matches the
            corresponding podAffinityTerm; the node(s) with the highest sum are
            the most preferred.
          items:
            $ref: ./WeightedPodAffinityTerm.yaml
          title: Preferredduringschedulingignoredduringexecution
          type: array
        requiredDuringSchedulingIgnoredDuringExecution:
          description: >-
            If the affinity requirements specified by this field are not met at
            scheduling time, the pod will not be scheduled onto the node. If the
            affinity requirements specified by this field cease to be met at
            some point during pod execution (e.g. due to a pod label update),
            the system may or may not try to eventually evict the pod from its
            node. When there are multiple elements, the lists of nodes
            corresponding to each podAffinityTerm are intersected, i.e. all
            terms must be satisfied.
          items:
            $ref: ./PodAffinityTerm.yaml
          title: Requiredduringschedulingignoredduringexecution
          type: array
      title: PodAffinity
      type: object
    PodAffinityTerm:
      properties:
        labelSelector:
          allOf:
            - $ref: ./LabelSelector.yaml
          description: A label query over a set of resources, in this case pods.
          title: Labelselector
        namespaces:
          description: >-
            namespaces specifies which namespaces the labelSelector applies to
            (matches against); null or empty list means "this pod's namespace"
          items:
            type: string
          title: Namespaces
          type: array
        topologyKey:
          description: >-
            This pod should be co-located (affinity) or not co-located
            (anti-affinity) with the pods matching the labelSelector in the
            specified namespaces, where co-located is defined as running on a
            node whose value of the label with key topologyKey matches that of
            any node on which any of the selected pods is running. Empty
            topologyKey is not allowed.
          title: Topologykey
          type: string
      required:
        - topologyKey
      title: PodAffinityTerm
      type: object
    PodAntiAffinity:
      properties:
        preferredDuringSchedulingIgnoredDuringExecution:
          description: >-
            The scheduler will prefer to schedule pods to nodes that satisfy the
            anti-affinity expressions specified by this field, but it may choose
            a node that violates one or more of the expressions. The node that
            is most preferred is the one with the greatest sum of weights, i.e.
            for each node that meets all of the scheduling requirements
            (resource request, requiredDuringScheduling anti-affinity
            expressions, etc.), compute a sum by iterating through the elements
            of this field and adding "weight" to the sum if the node has pods
            which matches the corresponding podAffinityTerm; the node(s) with
            the highest sum are the most preferred.
          items:
            $ref: ./WeightedPodAffinityTerm.yaml
          title: Preferredduringschedulingignoredduringexecution
          type: array
        requiredDuringSchedulingIgnoredDuringExecution:
          description: >-
            If the anti-affinity requirements specified by this field are not
            met at scheduling time, the pod will not be scheduled onto the node.
            If the anti-affinity requirements specified by this field cease to
            be met at some point during pod execution (e.g. due to a pod label
            update), the system may or may not try to eventually evict the pod
            from its node. When there are multiple elements, the lists of nodes
            corresponding to each podAffinityTerm are intersected, i.e. all
            terms must be satisfied.
          items:
            $ref: ./PodAffinityTerm.yaml
          title: Requiredduringschedulingignoredduringexecution
          type: array
      title: PodAntiAffinity
      type: object
    PodSecurityContext:
      properties:
        fsGroup:
          description: >-
            A special supplemental group that applies to all containers in a
            pod. Some volume types allow the Kubelet to change the ownership of
            that volume to be owned by the pod:


            1. The owning GID will be the FSGroup 2. The setgid bit is set (new
            files created in the volume will be owned by FSGroup) 3. The
            permission bits are OR'd with rw-rw----


            If unset, the Kubelet will not modify the ownership and permissions
            of any volume.
          title: Fsgroup
          type: integer
        runAsGroup:
          description: >-
            The GID to run the entrypoint of the container process. Uses runtime
            default if unset. May also be set in SecurityContext.  If set in
            both SecurityContext and PodSecurityContext, the value specified in
            SecurityContext takes precedence for that container.
          title: Runasgroup
          type: integer
        runAsNonRoot:
          description: >-
            Indicates that the container must run as a non-root user. If true,
            the Kubelet will validate the image at runtime to ensure that it
            does not run as UID 0 (root) and fail to start the container if it
            does. If unset or false, no such validation will be performed. May
            also be set in SecurityContext.  If set in both SecurityContext and
            PodSecurityContext, the value specified in SecurityContext takes
            precedence.
          title: Runasnonroot
          type: boolean
        runAsUser:
          description: >-
            The UID to run the entrypoint of the container process. Defaults to
            user specified in image metadata if unspecified. May also be set in
            SecurityContext.  If set in both SecurityContext and
            PodSecurityContext, the value specified in SecurityContext takes
            precedence for that container.
          title: Runasuser
          type: integer
        seLinuxOptions:
          allOf:
            - $ref: ./SELinuxOptions.yaml
          description: >-
            The SELinux context to be applied to all containers. If unspecified,
            the container runtime will allocate a random SELinux context for
            each container.  May also be set in SecurityContext.  If set in both
            SecurityContext and PodSecurityContext, the value specified in
            SecurityContext takes precedence for that container.
          title: Selinuxoptions
        supplementalGroups:
          description: >-
            A list of groups applied to the first process run in each container,
            in addition to the container's primary GID.  If unspecified, no
            groups will be added to any container.
          items:
            type: integer
          title: Supplementalgroups
          type: array
        sysctls:
          description: >-
            Sysctls hold a list of namespaced sysctls used for the pod. Pods
            with unsupported sysctls (by the container runtime) might fail to
            launch.
          items:
            $ref: ./Sysctl.yaml
          title: Sysctls
          type: array
        windowsOptions:
          allOf:
            - $ref: ./WindowsSecurityContextOptions.yaml
          description: Windows security options.
          title: Windowsoptions
      title: PodSecurityContext
      type: object
    PortworxVolumeSource:
      properties:
        fsType:
          description: >-
            FSType represents the filesystem type to mount Must be a filesystem
            type supported by the host operating system. Ex. "ext4", "xfs".
            Implicitly inferred to be "ext4" if unspecified.
          title: Fstype
          type: string
        readOnly:
          description: >-
            Defaults to false (read/write). ReadOnly here will force the
            ReadOnly setting in VolumeMounts.
          title: Readonly
          type: boolean
        volumeID:
          description: VolumeID uniquely identifies a Portworx volume
          title: Volumeid
          type: string
      required:
        - volumeID
      title: PortworxVolumeSource
      type: object
    PreferredSchedulingTerm:
      properties:
        preference:
          allOf:
            - $ref: ./NodeSelectorTerm.yaml
          description: A node selector term, associated with the corresponding weight.
          title: Preference
        weight:
          description: >-
            Weight associated with matching the corresponding nodeSelectorTerm,
            in the range 1-100.
          title: Weight
          type: integer
      required:
        - preference
        - weight
      title: PreferredSchedulingTerm
      type: object
    ProjectedVolumeSource:
      properties:
        defaultMode:
          description: >-
            Mode bits to use on created files by default. Must be a value
            between 0 and 0777. Directories within the path are not affected by
            this setting. This might be in conflict with other options that
            affect the file mode, like fsGroup, and the result can be other mode
            bits set.
          title: Defaultmode
          type: integer
        sources:
          description: list of volume projections
          items:
            $ref: ./VolumeProjection.yaml
          title: Sources
          type: array
      required:
        - sources
      title: ProjectedVolumeSource
      type: object
    PythonVersion:
      description: An enumeration.
      enum:
        - '2'
        - '3'
      default: '3'
      example: '3'
      title: PythonVersion
      type: string
    Quantity:
      anyOf:
        - type: string
        - type: number
      title: Quantity
    QuobyteVolumeSource:
      properties:
        group:
          description: Group to map volume access to Default is no group
          title: Group
          type: string
        readOnly:
          description: >-
            ReadOnly here will force the Quobyte volume to be mounted with
            read-only permissions. Defaults to false.
          title: Readonly
          type: boolean
        registry:
          description: >-
            Registry represents a single or multiple Quobyte Registry services
            specified as a string as host:port pair (multiple entries are
            separated with commas) which acts as the central registry for
            volumes
          title: Registry
          type: string
        tenant:
          description: >-
            Tenant owning the given Quobyte volume in the Backend Used with
            dynamically provisioned Quobyte volumes, value is set by the plugin
          title: Tenant
          type: string
        user:
          description: User to map volume access to Defaults to serivceaccount user
          title: User
          type: string
        volume:
          description: >-
            Volume is a string that references an already created Quobyte volume
            by name.
          title: Volume
          type: string
      required:
        - registry
        - volume
      title: QuobyteVolumeSource
      type: object
    RBDVolumeSource:
      properties:
        fsType:
          description: >-
            Filesystem type of the volume that you want to mount. Tip: Ensure
            that the filesystem type is supported by the host operating system.
            Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if
            unspecified. More info:
            https://kubernetes.io/docs/concepts/storage/volumes#rbd
          title: Fstype
          type: string
        image:
          description: >-
            The rados image name. More info:
            https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
          title: Image
          type: string
        keyring:
          description: >-
            Keyring is the path to key ring for RBDUser. Default is
            /etc/ceph/keyring. More info:
            https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
          title: Keyring
          type: string
        monitors:
          description: >-
            A collection of Ceph monitors. More info:
            https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
          items:
            type: string
          title: Monitors
          type: array
        pool:
          description: >-
            The rados pool name. Default is rbd. More info:
            https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
          title: Pool
          type: string
        readOnly:
          description: >-
            ReadOnly here will force the ReadOnly setting in VolumeMounts.
            Defaults to false. More info:
            https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
          title: Readonly
          type: boolean
        secretRef:
          allOf:
            - $ref: ./LocalObjectReference.yaml
          description: >-
            SecretRef is name of the authentication secret for RBDUser. If
            provided overrides keyring. Default is nil. More info:
            https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
          title: Secretref
        user:
          description: >-
            The rados user name. Default is admin. More info:
            https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
          title: User
          type: string
      required:
        - image
        - monitors
      title: RBDVolumeSource
      type: object
    ResourceFieldSelector:
      properties:
        containerName:
          description: 'Container name: required for volumes, optional for env vars'
          title: Containername
          type: string
        divisor:
          allOf:
            - $ref: ./Quantity.yaml
          description: >-
            Specifies the output format of the exposed resources, defaults to
            "1"
          title: Divisor
        resource:
          description: 'Required: resource to select'
          title: Resource
          type: string
      required:
        - resource
      title: ResourceFieldSelector
      type: object
    SELinuxOptions:
      properties:
        level:
          description: Level is SELinux level label that applies to the container.
          title: Level
          type: string
        role:
          description: Role is a SELinux role label that applies to the container.
          title: Role
          type: string
        type:
          description: Type is a SELinux type label that applies to the container.
          title: Type
          type: string
        user:
          description: User is a SELinux user label that applies to the container.
          title: User
          type: string
      title: SELinuxOptions
      type: object
    ScaleIOVolumeSource:
      properties:
        fsType:
          description: >-
            Filesystem type to mount. Must be a filesystem type supported by the
            host operating system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".
          title: Fstype
          type: string
        gateway:
          description: The host address of the ScaleIO API Gateway.
          title: Gateway
          type: string
        protectionDomain:
          description: >-
            The name of the ScaleIO Protection Domain for the configured
            storage.
          title: Protectiondomain
          type: string
        readOnly:
          description: >-
            Defaults to false (read/write). ReadOnly here will force the
            ReadOnly setting in VolumeMounts.
          title: Readonly
          type: boolean
        secretRef:
          allOf:
            - $ref: ./LocalObjectReference.yaml
          description: >-
            SecretRef references to the secret for ScaleIO user and other
            sensitive information. If this is not provided, Login operation will
            fail.
          title: Secretref
        sslEnabled:
          description: Flag to enable/disable SSL communication with Gateway, default false
          title: Sslenabled
          type: boolean
        storageMode:
          description: >-
            Indicates whether the storage for a volume should be
            ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
          title: Storagemode
          type: string
        storagePool:
          description: The ScaleIO Storage Pool associated with the protection domain.
          title: Storagepool
          type: string
        system:
          description: The name of the storage system as configured in ScaleIO.
          title: System
          type: string
        volumeName:
          description: >-
            The name of a volume already created in the ScaleIO system that is
            associated with this volume source.
          title: Volumename
          type: string
      required:
        - gateway
        - secretRef
        - system
      title: ScaleIOVolumeSource
      type: object
    SecretInfo:
      description: The information of a secret
      properties:
        name:
          title: Name
          type: string
        path:
          title: Path
          type: string
        secretType:
          $ref: ./SecretType.yaml
      required:
        - name
        - path
        - secretType
      title: SecretInfo
      type: object
    SecretProjection:
      properties:
        items:
          description: >-
            If unspecified, each key-value pair in the Data field of the
            referenced Secret will be projected into the volume as a file whose
            name is the key and content is the value. If specified, the listed
            keys will be projected into the specified paths, and unlisted keys
            will not be present. If a key is specified which is not present in
            the Secret, the volume setup will error unless it is marked
            optional. Paths must be relative and may not contain the '..' path
            or start with '..'.
          items:
            $ref: ./KeyToPath.yaml
          title: Items
          type: array
        name:
          description: >-
            Name of the referent. More info:
            https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
          title: Name
          type: string
        optional:
          description: Specify whether the Secret or its key must be defined
          title: Optional
          type: boolean
      title: SecretProjection
      type: object
    SecretType:
      description: An enumeration.
      enum:
        - GCPServiceAccount
        - HadoopDelegationToken
        - Generic
      title: SecretType
      type: string
    SecretVolumeSource:
      properties:
        defaultMode:
          description: >-
            Optional: mode bits to use on created files by default. Must be a
            value between 0 and 0777. Defaults to 0644. Directories within the
            path are not affected by this setting. This might be in conflict
            with other options that affect the file mode, like fsGroup, and the
            result can be other mode bits set.
          title: Defaultmode
          type: integer
        items:
          description: >-
            If unspecified, each key-value pair in the Data field of the
            referenced Secret will be projected into the volume as a file whose
            name is the key and content is the value. If specified, the listed
            keys will be projected into the specified paths, and unlisted keys
            will not be present. If a key is specified which is not present in
            the Secret, the volume setup will error unless it is marked
            optional. Paths must be relative and may not contain the '..' path
            or start with '..'.
          items:
            $ref: ./KeyToPath.yaml
          title: Items
          type: array
        optional:
          description: Specify whether the Secret or its keys must be defined
          title: Optional
          type: boolean
        secretName:
          description: >-
            Name of the secret in the pod's namespace to use. More info:
            https://kubernetes.io/docs/concepts/storage/volumes#secret
          title: Secretname
          type: string
      title: SecretVolumeSource
      type: object
    SecurityContext:
      properties:
        allowPrivilegeEscalation:
          description: >-
            AllowPrivilegeEscalation controls whether a process can gain more
            privileges than its parent process. This bool directly controls if
            the no_new_privs flag will be set on the container process.
            AllowPrivilegeEscalation is true always when the container is: 1)
            run as Privileged 2) has CAP_SYS_ADMIN
          title: Allowprivilegeescalation
          type: boolean
        capabilities:
          allOf:
            - $ref: ./Capabilities.yaml
          description: >-
            The capabilities to add/drop when running containers. Defaults to
            the default set of capabilities granted by the container runtime.
          title: Capabilities
        privileged:
          description: >-
            Run container in privileged mode. Processes in privileged containers
            are essentially equivalent to root on the host. Defaults to false.
          title: Privileged
          type: boolean
        procMount:
          description: >-
            procMount denotes the type of proc mount to use for the containers.
            The default is DefaultProcMount which uses the container runtime
            defaults for readonly paths and masked paths. This requires the
            ProcMountType feature flag to be enabled.
          title: Procmount
          type: string
        readOnlyRootFilesystem:
          description: >-
            Whether this container has a read-only root filesystem. Default is
            false.
          title: Readonlyrootfilesystem
          type: boolean
        runAsGroup:
          description: >-
            The GID to run the entrypoint of the container process. Uses runtime
            default if unset. May also be set in PodSecurityContext.  If set in
            both SecurityContext and PodSecurityContext, the value specified in
            SecurityContext takes precedence.
          title: Runasgroup
          type: integer
        runAsNonRoot:
          description: >-
            Indicates that the container must run as a non-root user. If true,
            the Kubelet will validate the image at runtime to ensure that it
            does not run as UID 0 (root) and fail to start the container if it
            does. If unset or false, no such validation will be performed. May
            also be set in PodSecurityContext.  If set in both SecurityContext
            and PodSecurityContext, the value specified in SecurityContext takes
            precedence.
          title: Runasnonroot
          type: boolean
        runAsUser:
          description: >-
            The UID to run the entrypoint of the container process. Defaults to
            user specified in image metadata if unspecified. May also be set in
            PodSecurityContext.  If set in both SecurityContext and
            PodSecurityContext, the value specified in SecurityContext takes
            precedence.
          title: Runasuser
          type: integer
        seLinuxOptions:
          allOf:
            - $ref: ./SELinuxOptions.yaml
          description: >-
            The SELinux context to be applied to the container. If unspecified,
            the container runtime will allocate a random SELinux context for
            each container.  May also be set in PodSecurityContext.  If set in
            both SecurityContext and PodSecurityContext, the value specified in
            SecurityContext takes precedence.
          title: Selinuxoptions
        windowsOptions:
          allOf:
            - $ref: ./WindowsSecurityContextOptions.yaml
          description: Windows security options.
          title: Windowsoptions
      title: SecurityContext
      type: object
    ServiceAccountTokenProjection:
      properties:
        audience:
          description: >-
            Audience is the intended audience of the token. A recipient of a
            token must identify itself with an identifier specified in the
            audience of the token, and otherwise should reject the token. The
            audience defaults to the identifier of the apiserver.
          title: Audience
          type: string
        expirationSeconds:
          description: >-
            ExpirationSeconds is the requested duration of validity of the
            service account token. As the token approaches expiration, the
            kubelet volume plugin will proactively rotate the service account
            token. The kubelet will start trying to rotate the token if the
            token is older than 80 percent of its time to live or if the token
            is older than 24 hours.Defaults to 1 hour and must be at least 10
            minutes.
          title: Expirationseconds
          type: integer
        path:
          description: >-
            Path is the path relative to the mount point of the file to project
            the token into.
          title: Path
          type: string
      required:
        - path
      title: ServiceAccountTokenProjection
      type: object
    SparkApplicationType:
      description: An enumeration.
      enum:
        - Java
        - Python
        - Scala
      title: SparkApplicationType
      type: string
    StorageOSVolumeSource:
      properties:
        fsType:
          description: >-
            Filesystem type to mount. Must be a filesystem type supported by the
            host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly
            inferred to be "ext4" if unspecified.
          title: Fstype
          type: string
        readOnly:
          description: >-
            Defaults to false (read/write). ReadOnly here will force the
            ReadOnly setting in VolumeMounts.
          title: Readonly
          type: boolean
        secretRef:
          allOf:
            - $ref: ./LocalObjectReference.yaml
          description: >-
            SecretRef specifies the secret to use for obtaining the StorageOS
            API credentials.  If not specified, default values will be
            attempted.
          title: Secretref
        volumeName:
          description: >-
            VolumeName is the human-readable name of the StorageOS volume. 
            Volume names are only unique within a namespace.
          title: Volumename
          type: string
        volumeNamespace:
          description: >-
            VolumeNamespace specifies the scope of the volume within StorageOS. 
            If no namespace is specified then the Pod's namespace will be used. 
            This allows the Kubernetes name scoping to be mirrored within
            StorageOS for tighter integration. Set VolumeName to any name to
            override the default behaviour. Set to "default" if you are not
            using namespaces within StorageOS. Namespaces that do not pre-exist
            within StorageOS will be created.
          title: Volumenamespace
          type: string
      title: StorageOSVolumeSource
      type: object
    Sysctl:
      properties:
        name:
          description: Name of a property to set
          title: Name
          type: string
        value:
          description: Value of a property to set
          title: Value
          type: string
      required:
        - name
        - value
      title: Sysctl
      type: object
    Toleration:
      properties:
        effect:
          description: >-
            Effect indicates the taint effect to match. Empty means match all
            taint effects. When specified, allowed values are NoSchedule,
            PreferNoSchedule and NoExecute.
          title: Effect
          type: string
        key:
          description: >-
            Key is the taint key that the toleration applies to. Empty means
            match all taint keys. If the key is empty, operator must be Exists;
            this combination means to match all values and all keys.
          title: Key
          type: string
        operator:
          description: >-
            Operator represents a key's relationship to the value. Valid
            operators are Exists and Equal. Defaults to Equal. Exists is
            equivalent to wildcard for value, so that a pod can tolerate all
            taints of a particular category.
          title: Operator
          type: string
        tolerationSeconds:
          description: >-
            TolerationSeconds represents the period of time the toleration
            (which must be of effect NoExecute, otherwise this field is ignored)
            tolerates the taint. By default, it is not set, which means tolerate
            the taint forever (do not evict). Zero and negative values will be
            treated as 0 (evict immediately) by the system.
          title: Tolerationseconds
          type: integer
        value:
          description: >-
            Value is the taint value the toleration matches to. If the operator
            is Exists, the value should be empty, otherwise just a regular
            string.
          title: Value
          type: string
      title: Toleration
      type: object
    VngIds:
      items:
        type: string
      title: Vngids
      description: >-
        An optional list of Virtual Node Group identifiers (like
        ["ols-d1d766b9"]) on which the pod can be run. If omitted, the pod can
        be run on any VNG.
    Volume:
      properties:
        awsElasticBlockStore:
          allOf:
            - $ref: ./AWSElasticBlockStoreVolumeSource.yaml
          description: >-
            AWSElasticBlockStore represents an AWS Disk resource that is
            attached to a kubelet's host machine and then exposed to the pod.
            More info:
            https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
          title: Awselasticblockstore
        azureDisk:
          allOf:
            - $ref: ./AzureDiskVolumeSource.yaml
          description: >-
            AzureDisk represents an Azure Data Disk mount on the host and bind
            mount to the pod.
          title: Azuredisk
        azureFile:
          allOf:
            - $ref: ./AzureFileVolumeSource.yaml
          description: >-
            AzureFile represents an Azure File Service mount on the host and
            bind mount to the pod.
          title: Azurefile
        cephfs:
          allOf:
            - $ref: ./CephFSVolumeSource.yaml
          description: >-
            CephFS represents a Ceph FS mount on the host that shares a pod's
            lifetime
          title: Cephfs
        cinder:
          allOf:
            - $ref: ./CinderVolumeSource.yaml
          description: >-
            Cinder represents a cinder volume attached and mounted on kubelets
            host machine More info:
            https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
          title: Cinder
        configMap:
          allOf:
            - $ref: ./ConfigMapVolumeSource.yaml
          description: ConfigMap represents a configMap that should populate this volume
          title: Configmap
        csi:
          allOf:
            - $ref: ./CSIVolumeSource.yaml
          description: >-
            CSI (Container Storage Interface) represents storage that is handled
            by an external CSI driver (Alpha feature).
          title: Csi
        downwardAPI:
          allOf:
            - $ref: ./DownwardAPIVolumeSource.yaml
          description: >-
            DownwardAPI represents downward API about the pod that should
            populate this volume
          title: Downwardapi
        emptyDir:
          allOf:
            - $ref: ./EmptyDirVolumeSource.yaml
          description: >-
            EmptyDir represents a temporary directory that shares a pod's
            lifetime. More info:
            https://kubernetes.io/docs/concepts/storage/volumes#emptydir
          title: Emptydir
        fc:
          allOf:
            - $ref: ./FCVolumeSource.yaml
          description: >-
            FC represents a Fibre Channel resource that is attached to a
            kubelet's host machine and then exposed to the pod.
          title: Fc
        flexVolume:
          allOf:
            - $ref: ./FlexVolumeSource.yaml
          description: >-
            FlexVolume represents a generic volume resource that is
            provisioned/attached using an exec based plugin.
          title: Flexvolume
        flocker:
          allOf:
            - $ref: ./FlockerVolumeSource.yaml
          description: >-
            Flocker represents a Flocker volume attached to a kubelet's host
            machine. This depends on the Flocker control service being running
          title: Flocker
        gcePersistentDisk:
          allOf:
            - $ref: ./GCEPersistentDiskVolumeSource.yaml
          description: >-
            GCEPersistentDisk represents a GCE Disk resource that is attached to
            a kubelet's host machine and then exposed to the pod. More info:
            https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
          title: Gcepersistentdisk
        gitRepo:
          allOf:
            - $ref: ./GitRepoVolumeSource.yaml
          description: >-
            GitRepo represents a git repository at a particular revision.
            DEPRECATED: GitRepo is deprecated. To provision a container with a
            git repo, mount an EmptyDir into an InitContainer that clones the
            repo using git, then mount the EmptyDir into the Pod's container.
          title: Gitrepo
        glusterfs:
          allOf:
            - $ref: ./GlusterfsVolumeSource.yaml
          description: >-
            Glusterfs represents a Glusterfs mount on the host that shares a
            pod's lifetime. More info:
            https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md
          title: Glusterfs
        hostPath:
          allOf:
            - $ref: ./HostPathVolumeSource.yaml
          description: >-
            HostPath represents a pre-existing file or directory on the host
            machine that is directly exposed to the container. This is generally
            used for system agents or other privileged things that are allowed
            to see the host machine. Most containers will NOT need this. More
            info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
          title: Hostpath
        iscsi:
          allOf:
            - $ref: ./ISCSIVolumeSource.yaml
          description: >-
            ISCSI represents an ISCSI Disk resource that is attached to a
            kubelet's host machine and then exposed to the pod. More info:
            https://releases.k8s.io/HEAD/examples/volumes/iscsi/README.md
          title: Iscsi
        name:
          description: >-
            Volume's name. Must be a DNS_LABEL and unique within the pod. More
            info:
            https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
          title: Name
          type: string
        nfs:
          allOf:
            - $ref: ./NFSVolumeSource.yaml
          description: >-
            NFS represents an NFS mount on the host that shares a pod's lifetime
            More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
          title: Nfs
        persistentVolumeClaim:
          allOf:
            - $ref: ./PersistentVolumeClaimVolumeSource.yaml
          description: >-
            PersistentVolumeClaimVolumeSource represents a reference to a
            PersistentVolumeClaim in the same namespace. More info:
            https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
          title: Persistentvolumeclaim
        photonPersistentDisk:
          allOf:
            - $ref: ./PhotonPersistentDiskVolumeSource.yaml
          description: >-
            PhotonPersistentDisk represents a PhotonController persistent disk
            attached and mounted on kubelets host machine
          title: Photonpersistentdisk
        portworxVolume:
          allOf:
            - $ref: ./PortworxVolumeSource.yaml
          description: >-
            PortworxVolume represents a portworx volume attached and mounted on
            kubelets host machine
          title: Portworxvolume
        projected:
          allOf:
            - $ref: ./ProjectedVolumeSource.yaml
          description: Items for all in one resources secrets, configmaps, and downward API
          title: Projected
        quobyte:
          allOf:
            - $ref: ./QuobyteVolumeSource.yaml
          description: >-
            Quobyte represents a Quobyte mount on the host that shares a pod's
            lifetime
          title: Quobyte
        rbd:
          allOf:
            - $ref: ./RBDVolumeSource.yaml
          description: >-
            RBD represents a Rados Block Device mount on the host that shares a
            pod's lifetime. More info:
            https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md
          title: Rbd
        scaleIO:
          allOf:
            - $ref: ./ScaleIOVolumeSource.yaml
          description: >-
            ScaleIO represents a ScaleIO persistent volume attached and mounted
            on Kubernetes nodes.
          title: Scaleio
        secret:
          allOf:
            - $ref: ./SecretVolumeSource.yaml
          description: >-
            Secret represents a secret that should populate this volume. More
            info: https://kubernetes.io/docs/concepts/storage/volumes#secret
          title: Secret
        storageos:
          allOf:
            - $ref: ./StorageOSVolumeSource.yaml
          description: >-
            StorageOS represents a StorageOS volume attached and mounted on
            Kubernetes nodes.
          title: Storageos
        vsphereVolume:
          allOf:
            - $ref: ./VsphereVirtualDiskVolumeSource.yaml
          description: >-
            VsphereVolume represents a vSphere volume attached and mounted on
            kubelets host machine
          title: Vspherevolume
      required:
        - name
      title: Volume
      type: object
    VolumeMount:
      properties:
        mountPath:
          description: >-
            Path within the container at which the volume should be mounted. 
            Must not contain ':'.
          title: Mountpath
          type: string
        mountPropagation:
          description: >-
            mountPropagation determines how mounts are propagated from the host
            to container and the other way around. When not set,
            MountPropagationNone is used. This field is beta in 1.10.
          title: Mountpropagation
          type: string
        name:
          description: This must match the Name of a Volume.
          title: Name
          type: string
        readOnly:
          description: >-
            Mounted read-only if true, read-write otherwise (false or
            unspecified). Defaults to false.
          title: Readonly
          type: boolean
        subPath:
          description: >-
            Path within the volume from which the container's volume should be
            mounted. Defaults to "" (volume's root).
          title: Subpath
          type: string
        subPathExpr:
          description: >-
            Expanded path within the volume from which the container's volume
            should be mounted. Behaves similarly to SubPath but environment
            variable references $(VAR_NAME) are expanded using the container's
            environment. Defaults to "" (volume's root). SubPathExpr and SubPath
            are mutually exclusive. This field is beta in 1.15.
          title: Subpathexpr
          type: string
      required:
        - mountPath
        - name
      title: VolumeMount
      type: object
    VolumeProjection:
      properties:
        configMap:
          allOf:
            - $ref: ./ConfigMapProjection.yaml
          description: information about the configMap data to project
          title: Configmap
        downwardAPI:
          allOf:
            - $ref: ./DownwardAPIProjection.yaml
          description: information about the downwardAPI data to project
          title: Downwardapi
        secret:
          allOf:
            - $ref: ./SecretProjection.yaml
          description: information about the secret data to project
          title: Secret
        serviceAccountToken:
          allOf:
            - $ref: ./ServiceAccountTokenProjection.yaml
          description: information about the serviceAccountToken data to project
          title: Serviceaccounttoken
      title: VolumeProjection
      type: object
    VsphereVirtualDiskVolumeSource:
      properties:
        fsType:
          description: >-
            Filesystem type to mount. Must be a filesystem type supported by the
            host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly
            inferred to be "ext4" if unspecified.
          title: Fstype
          type: string
        storagePolicyID:
          description: >-
            Storage Policy Based Management (SPBM) profile ID associated with
            the StoragePolicyName.
          title: Storagepolicyid
          type: string
        storagePolicyName:
          description: Storage Policy Based Management (SPBM) profile name.
          title: Storagepolicyname
          type: string
        volumePath:
          description: Path that identifies vSphere volume vmdk
          title: Volumepath
          type: string
      required:
        - volumePath
      title: VsphereVirtualDiskVolumeSource
      type: object
    WeightedPodAffinityTerm:
      properties:
        podAffinityTerm:
          allOf:
            - $ref: ./PodAffinityTerm.yaml
          description: >-
            Required. A pod affinity term, associated with the corresponding
            weight.
          title: Podaffinityterm
        weight:
          description: >-
            weight associated with matching the corresponding podAffinityTerm,
            in the range 1-100.
          title: Weight
          type: integer
      required:
        - podAffinityTerm
        - weight
      title: WeightedPodAffinityTerm
      type: object
    WindowsSecurityContextOptions:
      properties:
        gmsaCredentialSpec:
          description: >-
            GMSACredentialSpec is where the GMSA admission webhook
            (https://github.com/kubernetes-sigs/windows-gmsa) inlines the
            contents of the GMSA credential spec named by the
            GMSACredentialSpecName field. This field is alpha-level and is only
            honored by servers that enable the WindowsGMSA feature flag.
          title: Gmsacredentialspec
          type: string
        gmsaCredentialSpecName:
          description: >-
            GMSACredentialSpecName is the name of the GMSA credential spec to
            use. This field is alpha-level and is only honored by servers that
            enable the WindowsGMSA feature flag.
          title: Gmsacredentialspecname
          type: string
      title: WindowsSecurityContextOptions
      type: object
    Container:
      title: Container
      required:
        - name
      type: object
      properties:
        args:
          title: Args
          type: array
          items:
            type: string
          description: >-
            Arguments to the entrypoint. The docker image's CMD is used if this
            is not provided. Variable references $(VAR_NAME) are expanded using
            the container's environment. If a variable cannot be resolved, the
            reference in the input string will be unchanged. The $(VAR_NAME)
            syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped
            references will never be expanded, regardless of whether the
            variable exists or not. Cannot be updated. More info:
            https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
        command:
          title: Command
          type: array
          items:
            type: string
          description: >-
            Entrypoint array. Not executed within a shell. The docker image's
            ENTRYPOINT is used if this is not provided. Variable references
            $(VAR_NAME) are expanded using the container's environment. If a
            variable cannot be resolved, the reference in the input string will
            be unchanged. The $(VAR_NAME) syntax can be escaped with a double
            $$, ie: $$(VAR_NAME). Escaped references will never be expanded,
            regardless of whether the variable exists or not. Cannot be updated.
            More info:
            https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
        env:
          $ref: ./Env.yaml
        envFrom:
          title: Envfrom
          type: array
          items:
            $ref: ./EnvFromSource.yaml
          description: >-
            List of sources to populate environment variables in the container.
            The keys defined within a source must be a C_IDENTIFIER. All invalid
            keys will be reported as an event when the container is starting.
            When a key exists in multiple sources, the value associated with the
            last source will take precedence. Values defined by an Env with a
            duplicate key will take precedence. Cannot be updated.
        image:
          title: Image
          type: string
          description: >-
            Docker image name. More info:
            https://kubernetes.io/docs/concepts/containers/images This field is
            optional to allow higher level config management to default or
            override container images in workload controllers like Deployments
            and StatefulSets.
        imagePullPolicy:
          title: Imagepullpolicy
          type: string
          description: >-
            Image pull policy. One of Always, Never, IfNotPresent. Defaults to
            Always if :latest tag is specified, or IfNotPresent otherwise.
            Cannot be updated. More info:
            https://kubernetes.io/docs/concepts/containers/images#updating-images
        lifecycle:
          title: Lifecycle
          allOf:
            - $ref: ./Lifecycle.yaml
          description: >-
            Actions that the management system should take in response to
            container lifecycle events. Cannot be updated.
        livenessProbe:
          title: Livenessprobe
          allOf:
            - $ref: ./Probe.yaml
          description: >-
            Periodic probe of container liveness. Container will be restarted if
            the probe fails. Cannot be updated. More info:
            https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
        name:
          title: Name
          type: string
          description: >-
            Name of the container specified as a DNS_LABEL. Each container in a
            pod must have a unique name (DNS_LABEL). Cannot be updated.
        ports:
          title: Ports
          type: array
          items:
            $ref: ./ContainerPort.yaml
          description: >-
            List of ports to expose from the container. Exposing a port here
            gives the system additional information about the network
            connections a container uses, but is primarily informational. Not
            specifying a port here DOES NOT prevent that port from being
            exposed. Any port which is listening on the default "0.0.0.0"
            address inside a container will be accessible from the network.
            Cannot be updated.
        readinessProbe:
          title: Readinessprobe
          allOf:
            - $ref: ./Probe.yaml
          description: >-
            Periodic probe of container service readiness. Container will be
            removed from service endpoints if the probe fails. Cannot be
            updated. More info:
            https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
        resources:
          title: Resources
          allOf:
            - $ref: ./ResourceRequirements.yaml
          description: >-
            Compute Resources required by this container. Cannot be updated.
            More info:
            https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
        securityContext:
          title: Securitycontext
          allOf:
            - $ref: ./SecurityContext.yaml
          description: >-
            Security options the pod should run with. More info:
            https://kubernetes.io/docs/concepts/policy/security-context/ More
            info:
            https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
        stdin:
          title: Stdin
          type: boolean
          description: >-
            Whether this container should allocate a buffer for stdin in the
            container runtime. If this is not set, reads from stdin in the
            container will always result in EOF. Default is false.
        stdinOnce:
          title: Stdinonce
          type: boolean
          description: >-
            Whether the container runtime should close the stdin channel after
            it has been opened by a single attach. When stdin is true the stdin
            stream will remain open across multiple attach sessions. If
            stdinOnce is set to true, stdin is opened on container start, is
            empty until the first client attaches to stdin, and then remains
            open and accepts data until the client disconnects, at which time
            stdin is closed and remains closed until the container is restarted.
            If this flag is false, a container processes that reads from stdin
            will never receive an EOF. Default is false
        terminationMessagePath:
          title: Terminationmessagepath
          type: string
          description: >-
            Optional: Path at which the file to which the container's
            termination message will be written is mounted into the container's
            filesystem. Message written is intended to be brief final status,
            such as an assertion failure message. Will be truncated by the node
            if greater than 4096 bytes. The total message length across all
            containers will be limited to 12kb. Defaults to
            /dev/termination-log. Cannot be updated.
        terminationMessagePolicy:
          title: Terminationmessagepolicy
          type: string
          description: >-
            Indicate how the termination message should be populated. File will
            use the contents of terminationMessagePath to populate the container
            status message on both success and failure. FallbackToLogsOnError
            will use the last chunk of container log output if the termination
            message file is empty and the container exited with an error. The
            log output is limited to 2048 bytes or 80 lines, whichever is
            smaller. Defaults to File. Cannot be updated.
        tty:
          title: Tty
          type: boolean
          description: >-
            Whether this container should allocate a TTY for itself, also
            requires 'stdin' to be true. Default is false.
        volumeDevices:
          title: Volumedevices
          type: array
          items:
            $ref: ./VolumeDevice.yaml
          description: >-
            volumeDevices is the list of block devices to be used by the
            container. This is a beta feature.
        volumeMounts:
          title: Volumemounts
          type: array
          items:
            $ref: ./VolumeMount.yaml
          description: >-
            Pod volumes to mount into the container's filesystem. Cannot be
            updated.
        workingDir:
          title: Workingdir
          type: string
          description: >-
            Container's working directory. If not specified, the container
            runtime's default will be used, which might be configured in the
            container image. Cannot be updated.
    EnvVar:
      title: EnvVar
      required:
        - name
      type: object
      properties:
        name:
          title: Name
          type: string
          description: Name of the environment variable. Must be a C_IDENTIFIER.
        value:
          title: Value
          type: string
          description: >-
            Variable references $(VAR_NAME) are expanded using the previous
            defined environment variables in the container and any service
            environment variables. If a variable cannot be resolved, the
            reference in the input string will be unchanged. The $(VAR_NAME)
            syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped
            references will never be expanded, regardless of whether the
            variable exists or not. Defaults to "".
        valueFrom:
          title: Valuefrom
          allOf:
            - $ref: ./EnvVarSource.yaml
          description: >-
            Source for the environment variable's value. Cannot be used if value
            is not empty.
    EnvVarSource:
      title: EnvVarSource
      type: object
      properties:
        configMapKeyRef:
          title: Configmapkeyref
          allOf:
            - $ref: ./ConfigMapKeySelector.yaml
          description: Selects a key of a ConfigMap.
        fieldRef:
          title: Fieldref
          allOf:
            - $ref: ./ObjectFieldSelector.yaml
          description: >-
            Selects a field of the pod: supports metadata.name,
            metadata.namespace, metadata.labels, metadata.annotations,
            spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP.
        resourceFieldRef:
          title: Resourcefieldref
          allOf:
            - $ref: ./ResourceFieldSelector.yaml
          description: >-
            Selects a resource of the container: only resources limits and
            requests (limits.cpu, limits.memory, limits.ephemeral-storage,
            requests.cpu, requests.memory and requests.ephemeral-storage) are
            currently supported.
        secretKeyRef:
          title: Secretkeyref
          allOf:
            - $ref: ./SecretKeySelector.yaml
          description: Selects a key of a secret in the pod's namespace
    Lifecycle:
      title: Lifecycle
      type: object
      properties:
        postStart:
          title: Poststart
          allOf:
            - $ref: ./Handler.yaml
          description: >-
            PostStart is called immediately after a container is created. If the
            handler fails, the container is terminated and restarted according
            to its restart policy. Other management of the container blocks
            until the hook completes. More info:
            https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
        preStop:
          title: Prestop
          allOf:
            - $ref: ./Handler.yaml
          description: >-
            PreStop is called immediately before a container is terminated due
            to an API request or management event such as liveness probe
            failure, preemption, resource contention, etc. The handler is not
            called if the container crashes or exits. The reason for termination
            is passed to the handler. The Pod's termination grace period
            countdown begins before the PreStop hooked is executed. Regardless
            of the outcome of the handler, the container will eventually
            terminate within the Pod's termination grace period. Other
            management of the container blocks until the hook completes or until
            the termination grace period is reached. More info:
            https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
    Handler:
      title: Handler
      type: object
      properties:
        exec:
          title: Exec
          allOf:
            - $ref: ./ExecAction.yaml
          description: >-
            One and only one of the following should be specified. Exec
            specifies the action to take.
        httpGet:
          title: Httpget
          allOf:
            - $ref: ./HTTPGetAction.yaml
          description: HTTPGet specifies the http request to perform.
        tcpSocket:
          title: Tcpsocket
          allOf:
            - $ref: ./TCPSocketAction.yaml
          description: >-
            TCPSocket specifies an action involving a TCP port. TCP hooks not
            yet supported
    ExecAction:
      title: ExecAction
      type: object
      properties:
        command:
          title: Command
          type: array
          items:
            type: string
          description: >-
            Command is the command line to execute inside the container, the
            working directory for the command  is root ('/') in the container's
            filesystem. The command is simply exec'd, it is not run inside a
            shell, so traditional shell instructions ('|', etc) won't work. To
            use a shell, you need to explicitly call out to that shell. Exit
            status of 0 is treated as live/healthy and non-zero is unhealthy.
    HTTPGetAction:
      title: HTTPGetAction
      required:
        - port
      type: object
      properties:
        host:
          title: Host
          type: string
          description: >-
            Host name to connect to, defaults to the pod IP. You probably want
            to set "Host" in httpHeaders instead.
        httpHeaders:
          title: Httpheaders
          type: array
          items:
            $ref: ./HTTPHeader.yaml
          description: Custom headers to set in the request. HTTP allows repeated headers.
        path:
          title: Path
          type: string
          description: Path to access on the HTTP server.
        port:
          title: Port
          allOf:
            - $ref: ./IntOrString.yaml
          description: >-
            Name or number of the port to access on the container. Number must
            be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
        scheme:
          title: Scheme
          type: string
          description: Scheme to use for connecting to the host. Defaults to HTTP.
    HTTPHeader:
      title: HTTPHeader
      required:
        - name
        - value
      type: object
      properties:
        name:
          title: Name
          type: string
          description: The header field name
        value:
          title: Value
          type: string
          description: The header field value
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
    Probe:
      title: Probe
      type: object
      properties:
        exec:
          title: Exec
          allOf:
            - $ref: ./ExecAction.yaml
          description: >-
            One and only one of the following should be specified. Exec
            specifies the action to take.
        failureThreshold:
          title: Failurethreshold
          type: integer
          description: >-
            Minimum consecutive failures for the probe to be considered failed
            after having succeeded. Defaults to 3. Minimum value is 1.
        httpGet:
          title: Httpget
          allOf:
            - $ref: ./HTTPGetAction.yaml
          description: HTTPGet specifies the http request to perform.
        initialDelaySeconds:
          title: Initialdelayseconds
          type: integer
          description: >-
            Number of seconds after the container has started before liveness
            probes are initiated. More info:
            https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
        periodSeconds:
          title: Periodseconds
          type: integer
          description: >-
            How often (in seconds) to perform the probe. Default to 10 seconds.
            Minimum value is 1.
        successThreshold:
          title: Successthreshold
          type: integer
          description: >-
            Minimum consecutive successes for the probe to be considered
            successful after having failed. Defaults to 1. Must be 1 for
            liveness. Minimum value is 1.
        tcpSocket:
          title: Tcpsocket
          allOf:
            - $ref: ./TCPSocketAction.yaml
          description: >-
            TCPSocket specifies an action involving a TCP port. TCP hooks not
            yet supported
        timeoutSeconds:
          title: Timeoutseconds
          type: integer
          description: >-
            Number of seconds after which the probe times out. Defaults to 1
            second. Minimum value is 1. More info:
            https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    ResourceRequirements:
      title: ResourceRequirements
      type: object
      properties:
        limits:
          title: Limits
          type: object
          additionalProperties:
            $ref: ./Quantity.yaml
          description: >-
            Limits describes the maximum amount of compute resources allowed.
            More info:
            https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
        requests:
          title: Requests
          type: object
          additionalProperties:
            $ref: ./Quantity.yaml
          description: >-
            Requests describes the minimum amount of compute resources required.
            If Requests is omitted for a container, it defaults to Limits if
            that is explicitly specified, otherwise to an implementation-defined
            value. More info:
            https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
    ConfigMapKeySelector:
      title: ConfigMapKeySelector
      required:
        - key
      type: object
      properties:
        key:
          title: Key
          type: string
          description: The key to select.
        name:
          title: Name
          type: string
          description: >-
            Name of the referent. More info:
            https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        optional:
          title: Optional
          type: boolean
          description: Specify whether the ConfigMap or its key must be defined
    SecretKeySelector:
      title: SecretKeySelector
      required:
        - key
      type: object
      properties:
        key:
          title: Key
          type: string
          description: The key of the secret to select from.  Must be a valid secret key.
        name:
          title: Name
          type: string
          description: >-
            Name of the referent. More info:
            https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        optional:
          title: Optional
          type: boolean
          description: Specify whether the Secret or its key must be defined
    EnvFromSource:
      title: EnvFromSource
      type: object
      properties:
        configMapRef:
          title: Configmapref
          allOf:
            - $ref: ./ConfigMapEnvSource.yaml
          description: The ConfigMap to select from
        prefix:
          title: Prefix
          type: string
          description: >-
            An optional identifier to prepend to each key in the ConfigMap. Must
            be a C_IDENTIFIER.
        secretRef:
          title: Secretref
          allOf:
            - $ref: ./SecretEnvSource.yaml
          description: The Secret to select from
    ConfigMapEnvSource:
      title: ConfigMapEnvSource
      type: object
      properties:
        name:
          title: Name
          type: string
          description: >-
            Name of the referent. More info:
            https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        optional:
          title: Optional
          type: boolean
          description: Specify whether the ConfigMap must be defined
    SecretEnvSource:
      title: SecretEnvSource
      type: object
      properties:
        name:
          title: Name
          type: string
          description: >-
            Name of the referent. More info:
            https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        optional:
          title: Optional
          type: boolean
          description: Specify whether the Secret must be defined
    IntOrString:
      title: IntOrString
      anyOf:
        - type: string
        - type: integer
    TCPSocketAction:
      title: TCPSocketAction
      required:
        - port
      type: object
      properties:
        host:
          title: Host
          type: string
          description: 'Optional: Host name to connect to, defaults to the pod IP.'
        port:
          title: Port
          allOf:
            - $ref: ./IntOrString.yaml
          description: >-
            Number or name of the port to access on the container. Number must
            be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    ContainerPort:
      title: ContainerPort
      required:
        - containerPort
      type: object
      properties:
        containerPort:
          title: Containerport
          type: integer
          description: >-
            Number of port to expose on the pod's IP address. This must be a
            valid port number, 0 < x < 65536.
        hostIP:
          title: Hostip
          type: string
          description: What host IP to bind the external port to.
        hostPort:
          title: Hostport
          type: integer
          description: >-
            Number of port to expose on the host. If specified, this must be a
            valid port number, 0 < x < 65536. If HostNetwork is specified, this
            must match ContainerPort. Most containers do not need this.
        name:
          title: Name
          type: string
          description: >-
            If specified, this must be an IANA_SVC_NAME and unique within the
            pod. Each named port in a pod must have a unique name. Name for the
            port that can be referred to by services.
        protocol:
          title: Protocol
          type: string
          description: Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
    VolumeDevice:
      title: VolumeDevice
      required:
        - devicePath
        - name
      type: object
      properties:
        devicePath:
          title: Devicepath
          type: string
          description: >-
            devicePath is the path inside of the container that the device will
            be mapped to.
        name:
          title: Name
          type: string
          description: name must match the name of a persistentVolumeClaim in the pod
    ValidationError:
      title: ValidationError
      required:
        - loc
        - msg
        - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            type: string
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
    TimeoutSpec:
      title: TimeoutSpec
      required:
        - minutes
        - policy
      type: object
      properties:
        minutes:
          title: Minutes
          exclusiveMinimum: true
          type: integer
        policy:
          $ref: ./TimeoutPolicy.yaml
    TimeoutPolicy:
      title: TimeoutPolicy
      type: string
      description: >-
        A TimeoutPolicy is an action that needs to be run when a timeout reaches
        its end.

        For now, only KILL is supported, but to make the API extensible we
        require the

        policy to be set. Future policies may include behaviours like "NOTIFY"
        instead of

        just killing the application.
      enum:
        - KILL
