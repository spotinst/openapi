openapi: 3.0.0
info:
  version: '1.0'
  description: >
    Welcome to the Spot by NetApp OpenAPI Specification.

    Here you will find REST definitions for all Spot products and platform
    administration tasks.


    The API is hosted at `https://api.spotinst.io` and requires Bearer Token

    Authentication.


    For more information on how to use the Spot platform, including user guides,

    developer guides, concepts, and tutorials, see the external [Spot
    Documentation](https://docs.spot.io/).
  title: Spot by NetApp API
  x-logo:
    url: https://docs.spot.io/_media/images/spot.png
    altText: SpotByNetAppLogo
    href: https://docs.spot.io/api
  contact:
    email: support@spot.io
servers:
  - url: https://api.spotinst.io
security:
  - auth: []
tags:
  - name: Elastigroup AWS
    description: Elastigroup for Amazon Web Services (AWS)
    externalDocs:
      description: Elastigroup Concepts and Tutorials
      url: https://docs.spot.io/elastigroup/
  - name: Elastigroup Azure Spot VMs
    description: Elastigroup for Microsoft Azure
    externalDocs:
      description: Elastigroup Concepts and Tutorials
      url: https://docs.spot.io/elastigroup/
  - name: Elastigroup GCP
    description: Elastigroup for Google Cloud
    externalDocs:
      description: Elastigroup Concepts and Tutorials
      url: https://docs.spot.io/elastigroup/
  - name: Elastigroup Azure Stateful
    description: Elastigroup for Microsoft Azure Stateful Node
    externalDocs:
      description: Elastigroup Concepts and Tutorials
      url: https://docs.spot.io/elastigroup/
  - name: Ocean AWS
    description: Ocean - Serverless containers for Amazon Web Services (AWS)
    externalDocs:
      description: Ocean Concepts and Tutorials
      url: https://docs.spot.io/ocean/
  - name: Ocean ECS
    description: Ocean - Serverless containers for Amazon Elastic Container Service (ECS)
    externalDocs:
      description: Ocean Concepts and Tutorials
      url: https://docs.spot.io/ocean/
  - name: Ocean GKE
    description: Ocean - Serverless containers for Google Kubernetes Engine
    externalDocs:
      description: Ocean Concepts and Tutorials
      url: https://docs.spot.io/ocean/
  - name: Ocean AKS (Deprecated)
    description: Ocean - Serverless containers for Azure Kubernetes Service
    externalDocs:
      description: Ocean Concepts and Tutorials
      url: https://docs.spot.io/ocean/
  - name: Ocean AKS
    description: Ocean - Serverless containers for Azure Kubernetes Service
    externalDocs:
      description: Ocean Concepts and Tutorials
      url: https://docs.spot.io/ocean/
  - name: Ocean Insights
    description: >
      Insights allows Spot users on AWS to connect a Kubernetes cluster and
      within minutes get the cluster analyzed with insights

      about the current state of infrastructure in the cluster, and the
      potential effect of migrating the specific cluster into Ocean.

      Through its powerful features, Ocean presents significant opportunities
      for infrastructure optimization and automation, which are on display in
      the Insights console.

      Connected to Kubernetes clusters and running a continuous analysis, Ocean
      Insights delivers a holistic picture of your cluster and workloads
      behavior, from expected cloud costs and resource utilization.

      Through a simple UI, users will see a breakdown of potential savings when
      they first connect to Ocean Insights.
    externalDocs:
      description: Ocean Insights
      url: https://docs.spot.io/ocean-insights/
  - name: Ocean CD
    description: >
      Ocean CD is a fully managed continuous delivery ('CD') solution for
      Kubernetes applications. Designed for end-to-end automation and
      verification of frequent application-deployment processes at scale.

      Ocean CD architecture and API enable a simple and secured installation
      that seamlessly fits into any Kubernetes environment. Users get key
      features like granular visibility, SaaS logic that manage the rollout
      process, verifications of the applied workloads and automatic rollbacks.

      To enable Ocean CD, install the controller with one simple command in the
      Kubernetes cluster and create the following entities using the API:

      * Strategy

      * Rollout Spec
    externalDocs:
      description: Ocean CD
      url: https://docs.spot.io/ocean-cd/
  - name: Ocean Spark
    description: >
      Ocean for Apache Spark is a managed cloud-native Spark platform that can
      be deployed in your cloud account.


      Running on top of Ocean, Spot’s serverless infrastructure engine for
      containers, Ocean Spark makes it easy for your data teams to be successful
      with Apache Spark on Kubernetes, without dealing with the complexity of
      managing servers.
    externalDocs:
      description: Ocean Spark
      url: https://docs.spot.io/ocean-spark/
  - name: EMR Scaler
    description: AWS EMR Scaler
    externalDocs:
      description: AWS EMR Scaler Concepts and Tutorials
      url: https://docs.spot.io/elastigroup/tools-integrations/elastic-mapreduce/
  - name: Stateful Node AWS
    description: >
      Stateful Node is a Spot solution for launching and managing a single
      compute instance.

      On the AWS cloud, for a standard single instance workload, an On-Demand
      EC2 instance is launched.

      The instance is expected to be highly available, easily manageable, and
      integrate well with additional services and monitoring tools.

      For more information please review the concepts section.
    externalDocs:
      description: Stateful Node for AWS Concepts and Tutorials
      url: https://docs.spot.io/managed-instance/
  - name: Create an API Token
    description: >
      * Please log in to the [Spot Console](https://console.spotinst.com) to
      create an API token. Navigate to `Settings` and select `API`.

      * The [Spot Console](https://console.spotinst.com) provides both permanent
      and temporary tokens. Select your preferred token type and click `Generate
      Token`.

      * Give your token a name and click `Generate`.

      > NOTE: Remember to keep your tokens secret. Treat them just like
      passwords! They act on your behalf when interacting with the API. Do not
      share your personal access tokens with anyone outside your organization.
      Do not hard-code them into your programs. Instead, opt to use them as
      environment variables. Please contact our support if you think your token
      has been compromised.
    externalDocs:
      url: https://docs.spot.io/administration/api/create-api-token
  - name: Whitelist IPs
    description: >
      * Spot permit list IPs are required for integrations to work as expected.
      The IP needs to be permit-listed on the primary nodes of Rancher, HCS,
      Kubernetes, Chef, Nomad, and Docker Swarm. Make sure your permit list IPs
      are always up-to-date with the latest list.

      *  34.226.61.134/32
    externalDocs:
      url: https://docs.spot.io/administration/api/whitelist-ips
  - name: Spot Policy
    description: >
      Spots Latest Policy for AWS.

      * You can find and modify your Spot Policy in the AWS IAM Console.

      * For additional information and guide please see Updating the Spot Policy

      * You can restrict your Spot Policy using custom AWS IAM Condition
      Statements using this Guide.

      *  Make sure your policy is always up-to-date with the latest JSON
    externalDocs:
      url: https://docs.spot.io/administration/api/spot-policy-in-aws
  - name: Audit Service
    externalDocs:
      url: https://docs.spot.io/api/#tag/Audit-Service
  - name: Health Check Service
    externalDocs:
      url: >-
        https://docs.spot.io/elastigroup/tools-integrations/custom-health-check-service
  - name: Notifications Service
    description: >
      A Spot Notifications service enables you a fast, flexible, fully managed
      push notification service that lets you know about major events that
      happened in your Spot account.ֿ Spot Notifications makes it simple and
      cost-effective to get push notifications to your email address, HTTP,
      HTTPS or AWS SNS (Simple Notifications Service).
  - name: Insights Service
externalDocs:
  url: https://docs.spot.io/
paths:
  /aws/ec2/group:
    $ref: paths/aws_ec2_group.yaml
  /aws/ec2/group/{groupId}:
    $ref: paths/aws_ec2_group_{groupId}.yaml
  /aws/ec2/group/{groupId}/statefulInstance:
    $ref: paths/aws_ec2_group_{groupId}_statefulInstance.yaml
  /aws/ec2/group/{groupId}/statefulInstance/{statefulInstanceId}/pause:
    $ref: >-
      paths/aws_ec2_group_{groupId}_statefulInstance_{statefulInstanceId}_pause.yaml
  /aws/ec2/group/{groupId}/statefulInstance/{statefulInstanceId}/resume:
    $ref: >-
      paths/aws_ec2_group_{groupId}_statefulInstance_{statefulInstanceId}_resume.yaml
  /aws/ec2/group/{groupId}/statefulInstance/{statefulInstanceId}/recycle:
    $ref: >-
      paths/aws_ec2_group_{groupId}_statefulInstance_{statefulInstanceId}_recycle.yaml
  /aws/ec2/group/{groupId}/statefulInstance/{statefulInstanceId}/deallocate:
    $ref: >-
      paths/aws_ec2_group_{groupId}_statefulInstance_{statefulInstanceId}_deallocate.yaml
  /aws/ec2/group/{groupId}/statefulInstance/{statefulInstanceId}/volume/{volumeId}:
    $ref: >-
      paths/aws_ec2_group_{groupId}_statefulInstance_{statefulInstanceId}_volume_{volumeId}.yaml
  /aws/ec2/statefulMigrationGroup:
    $ref: paths/aws_ec2_statefulMigrationGroup.yaml
  /aws/ec2/statefulMigrationGroup/{statefulMigrationGroupId}:
    $ref: paths/aws_ec2_statefulMigrationGroup_{statefulMigrationGroupId}.yaml
  /aws/ec2/statefulMigrationGroup/{statefulMigrationGroupId}/userAction:
    $ref: >-
      paths/aws_ec2_statefulMigrationGroup_{statefulMigrationGroupId}_userAction.yaml
  /aws/ec2/instance/{instanceId}/lock:
    $ref: paths/aws_ec2_instance_{instanceId}_lock.yaml
  /aws/ec2/instance/{instanceId}/unlock:
    $ref: paths/aws_ec2_instance_{instanceId}_unlock.yaml
  /aws/emr/mrScaler:
    $ref: paths/aws_emr_mrScaler.yaml
  /aws/emr/mrScalerOperator:
    $ref: paths/aws_emr_mrScalerOperator.yaml
  /aws/emr/mrScaler/{mrScalerId}:
    $ref: paths/aws_emr_mrScaler_{mrScalerId}.yaml
  /aws/emr/mrScaler/{mrScalerId}/instance:
    $ref: paths/aws_emr_mrScaler_{mrScalerId}_instance.yaml
  /aws/emr/mrScaler/{mrScalerId}/scale/up:
    $ref: paths/aws_emr_mrScaler_{mrScalerId}_scale_up.yaml
  /aws/emr/mrScaler/{mrScalerId}/scale/down:
    $ref: paths/aws_emr_mrScaler_{mrScalerId}_scale_down.yaml
  /aws/emr/mrScaler/{mrScalerId}/cluster:
    $ref: paths/aws_emr_mrScaler_{mrScalerId}_cluster.yaml
  /aws/emr/mrScaler/{mrScalerId}/costs:
    $ref: paths/aws_emr_mrScaler_{mrScalerId}_costs.yaml
  /aws/ec2/group/{groupId}/status:
    $ref: paths/aws_ec2_group_{groupId}_status.yaml
  /aws/ec2/group/{groupId}/events:
    $ref: paths/aws_ec2_group_{groupId}_events.yaml
  /aws/ec2/group/{groupId}/logs:
    $ref: paths/aws_ec2_group_{groupId}_logs.yaml
  /aws/ec2/group/{groupId}/capacity:
    $ref: paths/aws_ec2_group_{groupId}_capacity.yaml
  /aws/ec2/group/{groupId}/scale/up:
    $ref: paths/aws_ec2_group_{groupId}_scale_up.yaml
  /aws/ec2/group/{groupId}/scale/down:
    $ref: paths/aws_ec2_group_{groupId}_scale_down.yaml
  /aws/ec2/group/{groupId}/scale/suspendPolicy:
    $ref: paths/aws_ec2_group_{groupId}_scale_suspendPolicy.yaml
  /aws/ec2/group/{groupId}/suspension:
    $ref: paths/aws_ec2_group_{groupId}_suspension.yaml
  /aws/ec2/group/{groupId}/scale/suspensions:
    $ref: paths/aws_ec2_group_{groupId}_scale_suspensions.yaml
  /aws/ec2/group/{groupId}/scale/resumePolicy:
    $ref: paths/aws_ec2_group_{groupId}_scale_resumePolicy.yaml
  /aws/potentialSavings:
    $ref: paths/aws_potentialSavings.yaml
  /aws/instancePotentialSavings:
    $ref: paths/aws_instancePotentialSavings.yaml
  /aws/costs:
    $ref: paths/aws_costs.yaml
  /aws/ec2/group/{groupId}/costs:
    $ref: paths/aws_ec2_group_{groupId}_costs.yaml
  /aws/ec2/group/{groupId}/costs/detailed:
    $ref: paths/aws_ec2_group_{groupId}_costs_detailed.yaml
  /aws/ec2/instance/{instanceId}:
    $ref: paths/aws_ec2_instance_{instanceId}.yaml
  /aws/ec2/group/instance/import:
    $ref: paths/aws_ec2_group_instance_import.yaml
  /aws/ec2/group/{groupId}/amiBackup:
    $ref: paths/aws_ec2_group_{groupId}_amiBackup.yaml
  /aws/ec2/group/{groupId}/instanceHealthiness:
    $ref: paths/aws_ec2_group_{groupId}_instanceHealthiness.yaml
  /aws/ec2/group/{groupId}/detachInstances:
    $ref: paths/aws_ec2_group_{groupId}_detachInstances.yaml
  /aws/ec2/group/autoScalingGroup/import:
    $ref: paths/aws_ec2_group_autoScalingGroup_import.yaml
  /aws/ec2/spotType:
    $ref: paths/aws_ec2_spotType.yaml
  /aws/ec2/instanceTypeRecommendation:
    $ref: paths/aws_ec2_instanceTypeRecommendation.yaml
  /aws/ec2/instance/interruption:
    $ref: paths/aws_ec2_instance_interruption.yaml
  /aws/ec2/instance/signal:
    $ref: paths/aws_ec2_instance_signal.yaml
  /aws/ec2/instance/{instanceId}/standby/enter:
    $ref: paths/aws_ec2_instance_{instanceId}_standby_enter.yaml
  /aws/ec2/instance/{instanceId}/standby/exit:
    $ref: paths/aws_ec2_instance_{instanceId}_standby_exit.yaml
  /aws/ec2/group/{groupId}/roll:
    $ref: paths/aws_ec2_group_{groupId}_roll.yaml
  /aws/ec2/group/{groupId}/roll/{rollId}:
    $ref: paths/aws_ec2_group_{groupId}_roll_{rollId}.yaml
  /aws/ec2/group/{groupId}/roll/{rollId}/status:
    $ref: paths/aws_ec2_group_{groupId}_roll_{rollId}_status.yaml
  /aws/ec2/group/{groupId}/roll/{rollId}/action:
    $ref: paths/aws_ec2_group_{groupId}_roll_{rollId}_action.yaml
  /azure/costs:
    $ref: paths/azure_costs.yaml
  /azure/compute/group/{groupId}:
    $ref: paths/azure_compute_group_{groupId}.yaml
  /azure/compute/group/{groupId}/capacity:
    $ref: paths/azure_compute_group_{groupId}_capacity.yaml
  /azure/compute/group:
    $ref: paths/azure_compute_group.yaml
  /azure/compute/group/{groupId}/status:
    $ref: paths/azure_compute_group_{groupId}_status.yaml
  /azure/compute/group/{groupId}/vmHealthiness:
    $ref: paths/azure_compute_group_{groupId}_vmHealthiness.yaml
  /azure/compute/group/{groupId}/suspend:
    $ref: paths/azure_compute_group_{groupId}_suspend.yaml
  /azure/compute/group/{groupId}/resume:
    $ref: paths/azure_compute_group_{groupId}_resume.yaml
  /azure/compute/group/{groupId}/detachVms:
    $ref: paths/azure_compute_group_{groupId}_detachVms.yaml
  /azure/compute/group/{groupId}/scale/down:
    $ref: paths/azure_compute_group_{groupId}_scale_down.yaml
  /azure/compute/group/{groupId}/scale/up:
    $ref: paths/azure_compute_group_{groupId}_scale_up.yaml
  /azure/compute/group/{groupId}/deployment:
    $ref: paths/azure_compute_group_{groupId}_deployment.yaml
  /azure/compute/group/{groupId}/deployment/{deploymentId}:
    $ref: paths/azure_compute_group_{groupId}_deployment_{deploymentId}.yaml
  /azure/compute/group/{groupId}/deployment/{deploymentId}/details:
    $ref: paths/azure_compute_group_{groupId}_deployment_{deploymentId}_details.yaml
  /azure/compute/group/import/resourceGroup/{resourceGroupName}/scaleSet/{scaleSetName}:
    $ref: >-
      paths/azure_compute_group_import_resourceGroup_{resourceGroupName}_scaleSet_{scaleSetName}.yaml
  /azure/compute/group/import/resourceGroup/{resourceGroupName}/virtualMachine/{virtualMachineName}:
    $ref: >-
      paths/azure_compute_group_import_resourceGroup_{resourceGroupName}_virtualMachine_{virtualMachineName}.yaml
  /azure/compute/group/import/resourceGroup/{resourceGroupName}/loadBalancer/{loadBalancerName}/backendPool/{backendPoolName}:
    $ref: >-
      paths/azure_compute_group_import_resourceGroup_{resourceGroupName}_loadBalancer_{loadBalancerName}_backendPool_{backendPoolName}.yaml
  /azure/compute/group/import/resourceGroup/{resourceGroupName}/applicationGateway/{applicationGatewayName}/backendPool/{backendPoolName}:
    $ref: >-
      paths/azure_compute_group_import_resourceGroup_{resourceGroupName}_applicationGateway_{applicationGatewayName}_backendPool_{backendPoolName}.yaml
  /azure/compute/vm/signal:
    $ref: paths/azure_compute_vm_signal.yaml
  /azure/compute/group/{groupId}/vm/{vmName}/protection:
    $ref: paths/azure_compute_group_{groupId}_vm_{vmName}_protection.yaml
  /azure/compute/group/{groupId}/logs:
    $ref: paths/azure_compute_group_{groupId}_logs.yaml
  /azure/compute/statefulNode:
    $ref: paths/azure_compute_statefulNode.yaml
  /azure/compute/statefulNode/{nodeId}:
    $ref: paths/azure_compute_statefulNode_{nodeId}.yaml
  /azure/compute/statefulNode/{nodeId}/resources:
    $ref: paths/azure_compute_statefulNode_{nodeId}_resources.yaml
  /azure/compute/statefulNode/{nodeId}/status:
    $ref: paths/azure_compute_statefulNode_{nodeId}_status.yaml
  /azure/compute/statefulNode/status:
    $ref: paths/azure_compute_statefulNode_status.yaml
  /azure/compute/statefulNode/{nodeId}/state:
    $ref: paths/azure_compute_statefulNode_{nodeId}_state.yaml
  /azure/compute/statefulNode/resourceGroup/{resourceGroupName}/virtualMachine/{virtualMachineName}/importConfiguration:
    $ref: >-
      paths/azure_compute_statefulNode_resourceGroup_{resourceGroupName}_virtualMachine_{virtualMachineName}_importConfiguration.yaml
  /azure/compute/statefulNode/import:
    $ref: paths/azure_compute_statefulNode_import.yaml
  /azure/compute/statefulNode/import/{importId}/status:
    $ref: paths/azure_compute_statefulNode_import_{importId}_status.yaml
  /azure/compute/statefulNode/{nodeId}/osDisk/swap:
    $ref: paths/azure_compute_statefulNode_{nodeId}_osDisk_swap.yaml
  /azure/compute/statefulNode/{nodeId}/dataDisk/attach:
    $ref: paths/azure_compute_statefulNode_{nodeId}_dataDisk_attach.yaml
  /azure/compute/statefulNode/{nodeId}/dataDisk/detach:
    $ref: paths/azure_compute_statefulNode_{nodeId}_dataDisk_detach.yaml
  /azure/compute/statefulNode/{nodeId}/log:
    $ref: paths/azure_compute_statefulNode_{nodeId}_log.yaml
  /azure/compute/statefulNode/cost:
    $ref: paths/azure_compute_statefulNode_cost.yaml
  /azure/compute/statefulNode/cost/daily:
    $ref: paths/azure_compute_statefulNode_cost_daily.yaml
  /azure/compute/statefulNode/sizeUsage/daily:
    $ref: paths/azure_compute_statefulNode_sizeUsage_daily.yaml
  /gcp/gce/group:
    $ref: paths/gcp_gce_group.yaml
  /gcp/gce/group/{groupId}:
    $ref: paths/gcp_gce_group_{groupId}.yaml
  /gcp/gce/group/{groupId}/status:
    $ref: paths/gcp_gce_group_{groupId}_status.yaml
  /gcp/gce/group/{groupId}/events:
    $ref: paths/gcp_gce_group_{groupId}_events.yaml
  /gcp/gce/group/{groupId}/log:
    $ref: paths/gcp_gce_group_{groupId}_log.yaml
  /gcp/gce/group/{groupId}/scale/up:
    $ref: paths/gcp_gce_group_{groupId}_scale_up.yaml
  /gcp/gce/group/{groupId}/scale/down:
    $ref: paths/gcp_gce_group_{groupId}_scale_down.yaml
  /gcp/gce/costs:
    $ref: paths/gcp_gce_costs.yaml
  /gcp/gce/group/{groupId}/costs:
    $ref: paths/gcp_gce_group_{groupId}_costs.yaml
  /gcp/gce/group/{groupId}/roll:
    $ref: paths/gcp_gce_group_{groupId}_roll.yaml
  /gcp/gce/group/{groupId}/roll/{rollId}:
    $ref: paths/gcp_gce_group_{groupId}_roll_{rollId}.yaml
  /gcp/gce/group/{groupId}/deatchInstances:
    $ref: paths/gcp_gce_group_{groupId}_deatchInstances.yaml
  /gcp/gce/instance/{instanceId}:
    $ref: paths/gcp_gce_instance_{instanceId}.yaml
  /gcp/gce/instance/{instanceId}/lock:
    $ref: paths/gcp_gce_instance_{instanceId}_lock.yaml
  /gcp/gce/instance/{instanceId}/unlock:
    $ref: paths/gcp_gce_instance_{instanceId}_unlock.yaml
  /ocean/aws/ecs/cluster:
    $ref: paths/ocean_aws_ecs_cluster.yaml
  /ocean/aws/ecs/cluster/{oceanClusterId}:
    $ref: paths/ocean_aws_ecs_cluster_{oceanClusterId}.yaml
  /ocean/aws/ecs/cluster/{EcsClusterName}/import:
    $ref: paths/ocean_aws_ecs_cluster_{EcsClusterName}_import.yaml
  /ocean/aws/ecs/cluster/{oceanClusterId}/log:
    $ref: paths/ocean_aws_ecs_cluster_{oceanClusterId}_log.yaml
  /ocean/aws/ecs/cluster/{oceanClusterId}/rightSizing/suggestion:
    $ref: paths/ocean_aws_ecs_cluster_{oceanClusterId}_rightSizing_suggestion.yaml
  /ocean/aws/ecs/cluster/{oceanClusterId}/instanceTypeFiltersSimulation:
    $ref: >-
      paths/ocean_aws_ecs_cluster_{oceanClusterId}_instanceTypeFiltersSimulation.yaml
  /ocean/aws/ecs/cluster/{oceanClusterId}/allowedInstanceTypes:
    $ref: paths/ocean_aws_ecs_cluster_{oceanClusterId}_allowedInstanceTypes.yaml
  /ocean/aws/ecs/cluster/import:
    $ref: paths/ocean_aws_ecs_cluster_import.yaml
  /ocean/aws/ecs/cluster/{oceanClusterId}/roll:
    $ref: paths/ocean_aws_ecs_cluster_{oceanClusterId}_roll.yaml
  /ocean/aws/ecs/cluster/{oceanClusterId}/roll/{ROLL_ID}:
    $ref: paths/ocean_aws_ecs_cluster_{oceanClusterId}_roll_{ROLL_ID}.yaml
  /ocean/aws/ecs/cluster/{oceanClusterId}/containerInstances:
    $ref: paths/ocean_aws_ecs_cluster_{oceanClusterId}_containerInstances.yaml
  /ocean/aws/ecs/launchSpec:
    $ref: paths/ocean_aws_ecs_launchSpec.yaml
  /ocean/aws/ecs/launchSpec/{oceanLaunchSpecId}:
    $ref: paths/ocean_aws_ecs_launchSpec_{oceanLaunchSpecId}.yaml
  /ocean/aws/ecs/cluster/{oceanClusterId}/fargateMigration:
    $ref: paths/ocean_aws_ecs_cluster_{oceanClusterId}_fargateMigration.yaml
  /ocean/aws/ecs/cluster/{oceanClusterId}/fargateMigration/serviceDiscovery:
    $ref: >-
      paths/ocean_aws_ecs_cluster_{oceanClusterId}_fargateMigration_serviceDiscovery.yaml
  /ocean/aws/ecs/cluster/{oceanClusterId}/fargateMigration/status:
    $ref: paths/ocean_aws_ecs_cluster_{oceanClusterId}_fargateMigration_status.yaml
  /ocean/aws/ecs/cluster/fargate/import:
    $ref: paths/ocean_aws_ecs_cluster_fargate_import.yaml
  /ocean/aws/ecs/cluster/{oceanClusterId}/aggregatedCosts:
    $ref: paths/ocean_aws_ecs_cluster_{oceanClusterId}_aggregatedCosts.yaml
  /aws/ec2/group/{groupId}/clusterRoll:
    $ref: paths/aws_ec2_group_{groupId}_clusterRoll.yaml
  /aws/ec2/group/{groupId}/clusterRoll/{rollId}:
    $ref: paths/aws_ec2_group_{groupId}_clusterRoll_{rollId}.yaml
  /aws/ec2/group/{groupId}/beanstalk/maintenance/start:
    $ref: paths/aws_ec2_group_{groupId}_beanstalk_maintenance_start.yaml
  /aws/ec2/group/{groupId}/beanstalk/maintenance/finish:
    $ref: paths/aws_ec2_group_{groupId}_beanstalk_maintenance_finish.yaml
  /aws/ec2/group/{groupId}/beanstalk/maintenance/status:
    $ref: paths/aws_ec2_group_{groupId}_beanstalk_maintenance_status.yaml
  /aws/ec2/group/beanstalk/import:
    $ref: paths/aws_ec2_group_beanstalk_import.yaml
  /aws/ec2/group/{groupId}/beanstalk/reimport:
    $ref: paths/aws_ec2_group_{groupId}_beanstalk_reimport.yaml
  /aws/ec2/group/{groupId}/codeDeploy/blueGreenDeployment:
    $ref: paths/aws_ec2_group_{groupId}_codeDeploy_blueGreenDeployment.yaml
  /aws/ec2/group/{groupId}/itf/migration:
    $ref: paths/aws_ec2_group_{groupId}_itf_migration.yaml
  /aws/ec2/group/{groupId}/itf/migration/{migrationId}:
    $ref: paths/aws_ec2_group_{groupId}_itf_migration_{migrationId}.yaml
  /ocean/aws/k8s/cluster:
    $ref: paths/ocean_aws_k8s_cluster.yaml
  /ocean/aws/k8s/cluster/{oceanClusterId}:
    $ref: paths/ocean_aws_k8s_cluster_{oceanClusterId}.yaml
  /ocean/k8s/cluster/{oceanClusterId}/controllerHeartbeat:
    $ref: paths/ocean_k8s_cluster_{oceanClusterId}_controllerHeartbeat.yaml
  /ocean/aws/k8s/cluster/{clusterIdentifier}/log:
    $ref: paths/ocean_aws_k8s_cluster_{clusterIdentifier}_log.yaml
  /ocean/aws/k8s/cluster/autoScalingGroup/import:
    $ref: paths/ocean_aws_k8s_cluster_autoScalingGroup_import.yaml
  /ocean/aws/k8s/cluster/{oceanClusterId}/rightSizing/suggestion:
    $ref: paths/ocean_aws_k8s_cluster_{oceanClusterId}_rightSizing_suggestion.yaml
  /ocean/aws/k8s/cluster/{oceanClusterId}/instanceTypeFiltersSimulation:
    $ref: >-
      paths/ocean_aws_k8s_cluster_{oceanClusterId}_instanceTypeFiltersSimulation.yaml
  /ocean/aws/k8s/cluster/{oceanClusterId}/allowedInstanceTypes:
    $ref: paths/ocean_aws_k8s_cluster_{oceanClusterId}_allowedInstanceTypes.yaml
  /ocean/aws/k8s/cluster/{oceanClusterId}/loadBalancer/attach:
    $ref: paths/ocean_aws_k8s_cluster_{oceanClusterId}_loadBalancer_attach.yaml
  /ocean/aws/k8s/cluster/{oceanClusterId}/loadBalancer/detach:
    $ref: paths/ocean_aws_k8s_cluster_{oceanClusterId}_loadBalancer_detach.yaml
  /mcs/ecs/cluster/{clusterName}/costs:
    $ref: paths/mcs_ecs_cluster_{clusterName}_costs.yaml
  /ocean/aws/k8s/cluster/import:
    $ref: paths/ocean_aws_k8s_cluster_import.yaml
  /ocean/aws/k8s/cluster/{oceanClusterId}/roll:
    $ref: paths/ocean_aws_k8s_cluster_{oceanClusterId}_roll.yaml
  /ocean/aws/k8s/cluster/{oceanClusterId}/roll/{ROLL_ID}:
    $ref: paths/ocean_aws_k8s_cluster_{oceanClusterId}_roll_{ROLL_ID}.yaml
  /ocean/aws/k8s/cluster/{oceanClusterId}/nodes:
    $ref: paths/ocean_aws_k8s_cluster_{oceanClusterId}_nodes.yaml
  /ocean/aws/k8s/cluster/{oceanClusterId}/detachInstances:
    $ref: paths/ocean_aws_k8s_cluster_{oceanClusterId}_detachInstances.yaml
  /ocean/aws/k8s/cluster/{oceanClusterId}/aggregatedCosts:
    $ref: paths/ocean_aws_k8s_cluster_{oceanClusterId}_aggregatedCosts.yaml
  /ocean/aws/k8s/cluster/{oceanClusterId}/aggregatedCosts/summary:
    $ref: paths/ocean_aws_k8s_cluster_{oceanClusterId}_aggregatedCosts_summary.yaml
  /ocean/aws/k8s/launchSpec:
    $ref: paths/ocean_aws_k8s_launchSpec.yaml
  /ocean/aws/k8s/launchSpec/{oceanLaunchSpecId}:
    $ref: paths/ocean_aws_k8s_launchSpec_{oceanLaunchSpecId}.yaml
  /ocean/aws/k8s/launchSpec/{oceanLaunchSpecId}/instanceTypeFiltersSimulation:
    $ref: >-
      paths/ocean_aws_k8s_launchSpec_{oceanLaunchSpecId}_instanceTypeFiltersSimulation.yaml
  /ocean/aws/k8s/launchSpec/{oceanLaunchSpecId}/allowedInstanceTypesByFilters:
    $ref: >-
      paths/ocean_aws_k8s_launchSpec_{oceanLaunchSpecId}_allowedInstanceTypesByFilters.yaml
  /ocean/aws/k8s/launchSpec/autoScalingGroup/import:
    $ref: paths/ocean_aws_k8s_launchSpec_autoScalingGroup_import.yaml
  /ocean/aws/k8s/launchSpec/eksNodeGroup/import:
    $ref: paths/ocean_aws_k8s_launchSpec_eksNodeGroup_import.yaml
  /aws/ec2/managedInstance:
    $ref: paths/aws_ec2_managedInstance.yaml
  /aws/ec2/managedInstance/{MI_ID}:
    $ref: paths/aws_ec2_managedInstance_{MI_ID}.yaml
  /aws/ec2/managedInstance/{MI_ID}/pause:
    $ref: paths/aws_ec2_managedInstance_{MI_ID}_pause.yaml
  /aws/ec2/managedInstance/{MI_ID}/resume:
    $ref: paths/aws_ec2_managedInstance_{MI_ID}_resume.yaml
  /aws/ec2/managedInstance/{MI_ID}/recycle:
    $ref: paths/aws_ec2_managedInstance_{MI_ID}_recycle.yaml
  /aws/ec2/managedInstance/{MI_ID}/costs:
    $ref: paths/aws_ec2_managedInstance_{MI_ID}_costs.yaml
  /aws/ec2/managedInstance/{MI_ID}/status:
    $ref: paths/aws_ec2_managedInstance_{MI_ID}_status.yaml
  /aws/ec2/managedInstance/{MI_ID}/volume/{volumeId}:
    $ref: paths/aws_ec2_managedInstance_{MI_ID}_volume_{volumeId}.yaml
  /aws/ec2/managedInstance/migration:
    $ref: paths/aws_ec2_managedInstance_migration.yaml
  /aws/ec2/managedInstance/migration/bulk:
    $ref: paths/aws_ec2_managedInstance_migration_bulk.yaml
  /aws/ec2/managedInstance/migration/{MIGRATION_ID}:
    $ref: paths/aws_ec2_managedInstance_migration_{MIGRATION_ID}.yaml
  /aws/ec2/managedInstance/migration/search:
    $ref: paths/aws_ec2_managedInstance_migration_search.yaml
  /aws/ec2/managedInstance/state:
    $ref: paths/aws_ec2_managedInstance_state.yaml
  /audit/events:
    $ref: paths/audit_events.yaml
  /healthCheck:
    $ref: paths/healthCheck.yaml
  /healthCheck/{HEALTHCHECK_ID}:
    $ref: paths/healthCheck_{HEALTHCHECK_ID}.yaml
  /events/notification/accountPolicy:
    $ref: paths/events_notification_accountPolicy.yaml
  /events/subscription:
    $ref: paths/events_subscription.yaml
  /events/subscription/{subscriptionId}:
    $ref: paths/events_subscription_{subscriptionId}.yaml
  /insights/dataIntegration:
    $ref: paths/insights_dataIntegration.yaml
  /insights/dataIntegration/{dataIntegrationId}:
    $ref: paths/insights_dataIntegration_{dataIntegrationId}.yaml
  /setup/account/{accountId}:
    $ref: paths/setup_account_{accountId}.yaml
  /setup/user:
    $ref: paths/setup_user.yaml
  /setup/organization/user:
    $ref: paths/setup_organization_user.yaml
  /setup/organization/policy:
    $ref: paths/setup_organization_policy.yaml
  /setup/user/{userId}:
    $ref: paths/setup_user_{userId}.yaml
  /setup/user/{userId}/userGroupMapping:
    $ref: paths/setup_user_{userId}_userGroupMapping.yaml
  /setup/user/{userId}/policyMapping:
    $ref: paths/setup_user_{userId}_policyMapping.yaml
  /setup/accountUserMapping:
    $ref: paths/setup_accountUserMapping.yaml
  /setup/organization/{organizationId}:
    $ref: paths/setup_organization_{organizationId}.yaml
  /setup/account/{accountId}/user:
    $ref: paths/setup_account_{accountId}_user.yaml
  /setup/user/programmatic:
    $ref: paths/setup_user_programmatic.yaml
  /setup/organization:
    $ref: paths/setup_organization.yaml
  /setup/access/policyAction:
    $ref: paths/setup_access_policyAction.yaml
  /setup/account:
    $ref: paths/setup_account.yaml
  /setup/access/policy:
    $ref: paths/setup_access_policy.yaml
  /setup/access/policy/{policyId}:
    $ref: paths/setup_access_policy_{policyId}.yaml
  /setup/access/userGroup:
    $ref: paths/setup_access_userGroup.yaml
  /setup/access/userGroup/{userGroupId}:
    $ref: paths/setup_access_userGroup_{userGroupId}.yaml
  /setup/access/userGroup/{userGroupId}/userMapping:
    $ref: paths/setup_access_userGroup_{userGroupId}_userMapping.yaml
  /setup/access/userGroup/{userGroupId}/policyMapping:
    $ref: paths/setup_access_userGroup_{userGroupId}_policyMapping.yaml
  /setup/user/permission:
    $ref: paths/setup_user_permission.yaml
  /setup/credentials/aws:
    $ref: paths/setup_credentials_aws.yaml
  /setup/credentials/aws/externalId:
    $ref: paths/setup_credentials_aws_externalId.yaml
  /gcp/setup/credentials:
    $ref: paths/gcp_setup_credentials.yaml
  /gcp/setup/credentials/validation:
    $ref: paths/gcp_setup_credentials_validation.yaml
  /azure/setup/credentials:
    $ref: paths/azure_setup_credentials.yaml
  /azure/setup/credentials/validation:
    $ref: paths/azure_setup_credentials_validation.yaml
  /ocean/gcp/k8s/cluster:
    $ref: paths/ocean_gcp_k8s_cluster.yaml
  /ocean/gcp/k8s/cluster/{oceanClusterId}:
    $ref: paths/ocean_gcp_k8s_cluster_{oceanClusterId}.yaml
  /ocean/gcp/k8s/cluster/{oceanClusterId}/reImport:
    $ref: paths/ocean_gcp_k8s_cluster_{oceanClusterId}_reImport.yaml
  /ocean/gcp/k8s/cluster/{oceanClusterId}/log:
    $ref: paths/ocean_gcp_k8s_cluster_{oceanClusterId}_log.yaml
  /ocean/gcp/k8s/cluster/{oceanClusterId}/rightSizing/suggestion:
    $ref: paths/ocean_gcp_k8s_cluster_{oceanClusterId}_rightSizing_suggestion.yaml
  /ocean/gcp/k8s/cluster/{oceanClusterId}/aggregatedCosts:
    $ref: paths/ocean_gcp_k8s_cluster_{oceanClusterId}_aggregatedCosts.yaml
  /ocean/gcp/k8s/cluster/{oceanClusterId}/aggregatedCosts/summary:
    $ref: paths/ocean_gcp_k8s_cluster_{oceanClusterId}_aggregatedCosts_summary.yaml
  /ocean/gcp/k8s/launchSpec:
    $ref: paths/ocean_gcp_k8s_launchSpec.yaml
  /ocean/gcp/k8s/launchSpec/import:
    $ref: paths/ocean_gcp_k8s_launchSpec_import.yaml
  /ocean/gcp/k8s/launchSpec/{oceanLaunchSpecId}:
    $ref: paths/ocean_gcp_k8s_launchSpec_{oceanLaunchSpecId}.yaml
  /ocean/gcp/k8s/cluster/{oceanClusterId}/roll:
    $ref: paths/ocean_gcp_k8s_cluster_{oceanClusterId}_roll.yaml
  /ocean/gcp/k8s/cluster/{oceanClusterId}/roll/{ROLL_ID}:
    $ref: paths/ocean_gcp_k8s_cluster_{oceanClusterId}_roll_{ROLL_ID}.yaml
  /ocean/gcp/k8s/cluster/{oceanClusterId}/nodes:
    $ref: paths/ocean_gcp_k8s_cluster_{oceanClusterId}_nodes.yaml
  /ocean/gcp/k8s/cluster/import:
    $ref: paths/ocean_gcp_k8s_cluster_import.yaml
  /ocean/gcp/k8s/cluster/gke/import:
    $ref: paths/ocean_gcp_k8s_cluster_gke_import.yaml
  /ocean/gcp/k8s/launchSpec/{oceanLaunchSpecId}/launchNodes:
    $ref: paths/ocean_gcp_k8s_launchSpec_{oceanLaunchSpecId}_launchNodes.yaml
  /ocean/azure/k8s/cluster:
    $ref: paths/ocean_azure_k8s_cluster.yaml
  /ocean/azure/k8s/cluster/{oceanClusterId}:
    $ref: paths/ocean_azure_k8s_cluster_{oceanClusterId}.yaml
  /ocean/azure/k8s/cluster/{oceanClusterId}/roll:
    $ref: paths/ocean_azure_k8s_cluster_{oceanClusterId}_roll.yaml
  /ocean/azure/k8s/cluster/{oceanClusterId}/roll/{clusterRollId}:
    $ref: paths/ocean_azure_k8s_cluster_{oceanClusterId}_roll_{clusterRollId}.yaml
  /ocean/azure/k8s/cluster/{oceanClusterId}/nodes:
    $ref: paths/ocean_azure_k8s_cluster_{oceanClusterId}_nodes.yaml
  /ocean/azure/k8s/cluster/aks/import/{acdIdentifier}:
    $ref: paths/ocean_azure_k8s_cluster_aks_import_{acdIdentifier}.yaml
  /ocean/azure/k8s/cluster/{oceanClusterId}/aks/reimport/{acdIdentifier}:
    $ref: >-
      paths/ocean_azure_k8s_cluster_{oceanClusterId}_aks_reimport_{acdIdentifier}.yaml
  /ocean/azure/k8s/cluster/{oceanClusterId}/detachVms:
    $ref: paths/ocean_azure_k8s_cluster_{oceanClusterId}_detachVms.yaml
  /ocean/azure/k8s/virtualNodeGroup:
    $ref: paths/ocean_azure_k8s_virtualNodeGroup.yaml
  /ocean/azure/k8s/virtualNodeGroup/{virtualNodeGroupId}:
    $ref: paths/ocean_azure_k8s_virtualNodeGroup_{virtualNodeGroupId}.yaml
  /ocean/azure/k8s/virtualNodeGroup/{virtualNodeGroupId}/launchVms:
    $ref: paths/ocean_azure_k8s_virtualNodeGroup_{virtualNodeGroupId}_launchVms.yaml
  /ocean/azure/k8s/cluster/{oceanClusterId}/rightSizing/suggestion:
    $ref: paths/ocean_azure_k8s_cluster_{oceanClusterId}_rightSizing_suggestion.yaml
  /ocean/azure/k8s/cluster/{oceanClusterId}/log:
    $ref: paths/ocean_azure_k8s_cluster_{oceanClusterId}_log.yaml
  /ocean/azure/np/cluster:
    $ref: paths/ocean_azure_np_cluster.yaml
  /ocean/azure/np/cluster/{oceanClusterId}:
    $ref: paths/ocean_azure_np_cluster_{oceanClusterId}.yaml
  /ocean/azure/np/cluster/aks/import:
    $ref: paths/ocean_azure_np_cluster_aks_import.yaml
  /ocean/azure/np/cluster/launchNewNodes:
    $ref: paths/ocean_azure_np_cluster_launchNewNodes.yaml
  /ocean/azure/np/virtualNodeGroup:
    $ref: paths/ocean_azure_np_virtualNodeGroup.yaml
  /ocean/azure/np/virtualNodeGroup/{virtualNodeGroupId}:
    $ref: paths/ocean_azure_np_virtualNodeGroup_{virtualNodeGroupId}.yaml
  /ocean/azure/np/virtualNodeGroup/import:
    $ref: paths/ocean_azure_np_virtualNodeGroup_import.yaml
  /ocean/azure/np/virtualNodeGroup/vmSizes:
    $ref: paths/ocean_azure_np_virtualNodeGroup_vmSizes.yaml
  /ocean/azure/k8s/cluster/{oceanClusterId}/aggregatedCosts:
    $ref: paths/ocean_azure_k8s_cluster_{oceanClusterId}_aggregatedCosts.yaml
  /ocean/azure/k8s/cluster/{oceanClusterId}/aggregatedCosts/summary:
    $ref: >-
      paths/ocean_azure_k8s_cluster_{oceanClusterId}_aggregatedCosts_summary.yaml
  /ocean/aws/k8s/launchSpec/{oceanLaunchSpecId}/launchNodes:
    $ref: paths/ocean_aws_k8s_launchSpec_{oceanLaunchSpecId}_launchNodes.yaml
  /ocean/aws/ecs/launchSpec/{oceanLaunchSpecId}/launchContainerInstances:
    $ref: >-
      paths/ocean_aws_ecs_launchSpec_{oceanLaunchSpecId}_launchContainerInstances.yaml
  /ocean/k8s/extendedResourceDefinition:
    $ref: paths/ocean_k8s_extendedResourceDefinition.yaml
  /ocean/k8s/extendedResourceDefinition/{oceanExtendedResourceDefinitionId}:
    $ref: >-
      paths/ocean_k8s_extendedResourceDefinition_{oceanExtendedResourceDefinitionId}.yaml
  /ocean/aws/k8s/cluster/{oceanClusterId}/migration/discovery:
    $ref: paths/ocean_aws_k8s_cluster_{oceanClusterId}_migration_discovery.yaml
  /ocean/aws/k8s/cluster/{oceanClusterId}/migration:
    $ref: paths/ocean_aws_k8s_cluster_{oceanClusterId}_migration.yaml
  /ocean/aws/k8s/cluster/{oceanClusterId}/migration/{migrationId}:
    $ref: paths/ocean_aws_k8s_cluster_{oceanClusterId}_migration_{migrationId}.yaml
  /ocean/insights/k8s/cluster:
    $ref: paths/ocean_insights_k8s_cluster.yaml
  /ocean/insights/k8s/cluster/{OCEAN_INSIGHT_ID}:
    $ref: paths/ocean_insights_k8s_cluster_{OCEAN_INSIGHT_ID}.yaml
  /ocean/cd/cluster:
    $ref: paths/ocean_cd_cluster.yaml
  /ocean/cd/cluster/{clusterId}:
    $ref: paths/ocean_cd_cluster_{clusterId}.yaml
  /ocean/cd/verificationProvider:
    $ref: paths/ocean_cd_verificationProvider.yaml
  /ocean/cd/verificationProvider/{name}:
    $ref: paths/ocean_cd_verificationProvider_{name}.yaml
  /ocean/cd/verificationTemplate:
    $ref: paths/ocean_cd_verificationTemplate.yaml
  /ocean/cd/verificationTemplate/{name}:
    $ref: paths/ocean_cd_verificationTemplate_{name}.yaml
  /ocean/cd/strategy:
    $ref: paths/ocean_cd_strategy.yaml
  /ocean/cd/strategy/{strategyName}:
    $ref: paths/ocean_cd_strategy_{strategyName}.yaml
  /ocean/cd/rolloutSpec:
    $ref: paths/ocean_cd_rolloutSpec.yaml
  /ocean/cd/rolloutSpec/{rolloutSpecName}:
    $ref: paths/ocean_cd_rolloutSpec_{rolloutSpecName}.yaml
  /ocean/cd/rollout/{rolloutId}:
    $ref: paths/ocean_cd_rollout_{rolloutId}.yaml
  /ocean/cd/rollout:
    $ref: paths/ocean_cd_rollout.yaml
  /ocean/cd/rollout/{rolloutId}/status:
    $ref: paths/ocean_cd_rollout_{rolloutId}_status.yaml
  /ocean/cd/rollout/latest:
    $ref: paths/ocean_cd_rollout_latest.yaml
  /ocean/cd/rollout/ongoing:
    $ref: paths/ocean_cd_rollout_ongoing.yaml
  /ocean/cd/rollout/{rolloutId}/verification:
    $ref: paths/ocean_cd_rollout_{rolloutId}_verification.yaml
  /ocean/cd/rollout/{rolloutId}/definition:
    $ref: paths/ocean_cd_rollout_{rolloutId}_definition.yaml
  /ocean/cd/rollout/{rolloutId}/resource:
    $ref: paths/ocean_cd_rollout_{rolloutId}_resource.yaml
  /ocean/cd/rollout/{rolloutId}/phase:
    $ref: paths/ocean_cd_rollout_{rolloutId}_phase.yaml
  /ocean/cd/rollout/{rolloutId}/strategyOverride:
    $ref: paths/ocean_cd_rollout_{rolloutId}_strategyOverride.yaml
  /ocean/cd/workload:
    $ref: paths/ocean_cd_workload.yaml
  /ocean/cd/workload/{workloadName}/namespace/{namespace}/activeOperation:
    $ref: >-
      paths/ocean_cd_workload_{workloadName}_namespace_{namespace}_activeOperation.yaml
  /ocean/cd/workload/{workloadName}/namespace/{namespace}/revision:
    $ref: paths/ocean_cd_workload_{workloadName}_namespace_{namespace}_revision.yaml
  /ocean/cd/workload/{workloadName}/namespace/{namespace}/restart:
    $ref: paths/ocean_cd_workload_{workloadName}_namespace_{namespace}_restart.yaml
  /ocean/cd/workload/{workloadName}/namespace/{namespace}/revision/{revisionId}/retry:
    $ref: >-
      paths/ocean_cd_workload_{workloadName}_namespace_{namespace}_revision_{revisionId}_retry.yaml
  /ocean/cd/workload/{workloadName}/namespace/{namespace}/revision/{revisionId}/rollback:
    $ref: >-
      paths/ocean_cd_workload_{workloadName}_namespace_{namespace}_revision_{revisionId}_rollback.yaml
  /ocean/cd/workload/{workloadName}/namespace/{namespace}/graph:
    $ref: paths/ocean_cd_workload_{workloadName}_namespace_{namespace}_graph.yaml
  /ocean/spark/cluster:
    $ref: paths/ocean_spark_cluster.yaml
  /ocean/spark/cluster/{clusterId}:
    $ref: paths/ocean_spark_cluster_{clusterId}.yaml
  /ocean/spark/cluster/sparkCoreHours:
    $ref: paths/ocean_spark_cluster_sparkCoreHours.yaml
  /ocean/spark/cluster/{clusterId}/appCompletionTrend:
    $ref: paths/ocean_spark_cluster_{clusterId}_appCompletionTrend.yaml
  /ocean/spark/cluster/{clusterId}/appLoadHistory:
    $ref: paths/ocean_spark_cluster_{clusterId}_appLoadHistory.yaml
  /ocean/spark/cluster/{clusterId}/statistics:
    $ref: paths/ocean_spark_cluster_{clusterId}_statistics.yaml
  /ocean/spark/app:
    $ref: paths/ocean_spark_app.yaml
  /ocean/spark/cluster/{clusterId}/app:
    $ref: paths/ocean_spark_cluster_{clusterId}_app.yaml
  /ocean/spark/cluster/{clusterId}/app/{applicationId}:
    $ref: paths/ocean_spark_cluster_{clusterId}_app_{applicationId}.yaml
  /ocean/spark/cluster/{clusterId}/app/{applicationId}/issues:
    $ref: paths/ocean_spark_cluster_{clusterId}_app_{applicationId}_issues.yaml
  /ocean/spark/cluster/{clusterId}/app/{applicationId}/log/live:
    $ref: paths/ocean_spark_cluster_{clusterId}_app_{applicationId}_log_live.yaml
  /ocean/spark/cluster/{clusterId}/app/{applicationId}/log/archive:
    $ref: paths/ocean_spark_cluster_{clusterId}_app_{applicationId}_log_archive.yaml
  /ocean/spark/cluster/{clusterId}/app/{applicationId}/executor-log/archive:
    $ref: >-
      paths/ocean_spark_cluster_{clusterId}_app_{applicationId}_executor-log_archive.yaml
  /ocean/spark/cluster/{clusterId}/app/{applicationId}/kubeEvent/live:
    $ref: >-
      paths/ocean_spark_cluster_{clusterId}_app_{applicationId}_kubeEvent_live.yaml
  /ocean/spark/configTemplate:
    $ref: paths/ocean_spark_configTemplate.yaml
  /ocean/spark/cluster/{clusterId}/configTemplate:
    $ref: paths/ocean_spark_cluster_{clusterId}_configTemplate.yaml
  /ocean/spark/cluster/{clusterId}/configTemplate/{configTemplateId}:
    $ref: >-
      paths/ocean_spark_cluster_{clusterId}_configTemplate_{configTemplateId}.yaml
  /ocean/spark/job:
    $ref: paths/ocean_spark_job.yaml
  /ocean/spark/cluster/{clusterId}/job:
    $ref: paths/ocean_spark_cluster_{clusterId}_job.yaml
  /ocean/spark/cluster/{clusterId}/job/{jobId}:
    $ref: paths/ocean_spark_cluster_{clusterId}_job_{jobId}.yaml
  /ocean/spark/cluster/{clusterId}/job/{jobId}/config:
    $ref: paths/ocean_spark_cluster_{clusterId}_job_{jobId}_config.yaml
  /ocean/spark/cluster/{clusterId}/virtualNodeGroup:
    $ref: paths/ocean_spark_cluster_{clusterId}_virtualNodeGroup.yaml
  /insights/savings:
    $ref: paths/insights_savings.yaml
components:
  securitySchemes:
    auth:
      description: >
        To generate bearer tokens and understand more about Spot by NetApp

        authentication see the howto for

        [token
        creation](https://docs.spot.io/administration/api/create-api-token)

        on the Spot Help site.


        ### Organizations and Accounts


        Each Spot account is assigned to an organization and a set of
        environment Accounts.

        An account is then linked to a specific cloud provider account.


        Spot accounts are given an ID in the format `act-123abcd` that is sent
        as a query parameter while performing API calls.


        To locate the account ID navigate to Settings -> Account in the Spot
        console.


        ### Organizations with a Single Account

        Each API call you make can be used with or without the account ID.


        ### Organizations with Multiple Accounts

        Each API call you make should be appended to the account ID. For
        example:


        GET `https://api.spotinst.io/aws/ec2/group?accountId=act-123de678`

        This call will return the list of Elastigroups for the specific Account
        used.


        > NOTE: If no `accountId` is provided, the default (dldest) account for
        the Organization will be used.
      type: http
      scheme: bearer
x-tagGroups:
  - name: Administration
    tags:
      - Organizations
      - Accounts
  - name: Ocean
    tags:
      - Ocean AWS
      - Ocean ECS
      - Ocean GKE
      - Ocean AKS
      - Ocean Insights
      - Ocean CD
      - Ocean Spark
      - Ocean AKS (Deprecated)
  - name: Elastigroup
    tags:
      - Elastigroup AWS
      - Elastigroup AWS EMR Scaler
      - Elastigroup GCP
      - Elastigroup Azure Spot VMs
      - Elastigroup Azure Stateful
  - name: Stateful Node
    tags:
      - Stateful Node AWS
  - name: Services
    tags:
      - Audit Service
      - Health Check Service
      - Notifications Service
      - Insights Service
