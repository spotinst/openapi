{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0",
    "description": "Welcome to the Spot by NetApp OpenAPI Specification.\nHere you will find REST definitions for all Spot products and platform administration tasks.\n\nThe API is hosted at `https://api.spotinst.io` and requires Bearer Token\nAuthentication.\n\nFor more information on how to use the Spot platform, including user guides,\ndeveloper guides, concepts, and tutorials, see the external [Spot Documentation](https://docs.spot.io/).\n",
    "title": "Spot by NetApp API",
    "x-logo": {
      "url": "https://docs.spot.io/_media/images/spot.png",
      "altText": "SpotByNetAppLogo",
      "href": "https://docs.spot.io/api"
    },
    "contact": {
      "email": "support@spot.io"
    }
  },
  "externalDocs": {
    "url": "https://docs.spot.io/"
  },
  "servers": [
    {
      "url": "https://api.spotinst.io"
    }
  ],
  "security": [
    {
      "auth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "auth": {
        "description": "To generate bearer tokens and understand more about Spot by NetApp\nauthentication see the howto for\n[token creation](https://docs.spot.io/administration/api/create-api-token)\non the Spot Help site.\n\n### Organizations and Accounts\n\nEach Spot account is assigned to an organization and a set of environment Accounts.\nAn account is then linked to a specific cloud provider account.\n\nSpot accounts are given an ID in the format `act-123abcd` that is sent as a query parameter while performing API calls.\n\nTo locate the account ID navigate to Settings -> Account in the Spot console.\n\n### Organizations with a Single Account\nEach API call you make can be used with or without the account ID.\n\n### Organizations with Multiple Accounts\nEach API call you make should be appended to the account ID. For example:\n\nGET `https://api.spotinst.io/aws/ec2/group?accountId=act-123de678`\nThis call will return the list of Elastigroups for the specific Account used.\n\n> NOTE: If no `accountId` is provided, the default (dldest) account for the Organization will be used.\n",
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "tags": [
    {
      "name": "Elastigroup AWS",
      "description": "Elastigroup for Amazon Web Services (AWS)",
      "externalDocs": {
        "description": "Elastigroup Concepts and Tutorials",
        "url": "https://docs.spot.io/elastigroup/"
      }
    },
    {
      "name": "Elastigroup Azure Spot VMs",
      "description": "Elastigroup for Microsoft Azure",
      "externalDocs": {
        "description": "Elastigroup Concepts and Tutorials",
        "url": "https://docs.spot.io/elastigroup/"
      }
    },
    {
      "name": "Elastigroup GCP",
      "description": "Elastigroup for Google Cloud",
      "externalDocs": {
        "description": "Elastigroup Concepts and Tutorials",
        "url": "https://docs.spot.io/elastigroup/"
      }
    },
    {
      "name": "Elastigroup Azure Stateful",
      "description": "Elastigroup for Microsoft Azure Stateful Node",
      "externalDocs": {
        "description": "Elastigroup Concepts and Tutorials",
        "url": "https://docs.spot.io/elastigroup/"
      }
    },
    {
      "name": "Ocean AWS",
      "description": "Ocean - Serverless containers for Amazon Web Services (AWS)",
      "externalDocs": {
        "description": "Ocean Concepts and Tutorials",
        "url": "https://docs.spot.io/ocean/"
      }
    },
    {
      "name": "Ocean ECS",
      "description": "Ocean - Serverless containers for Amazon Elastic Container Service (ECS)",
      "externalDocs": {
        "description": "Ocean Concepts and Tutorials",
        "url": "https://docs.spot.io/ocean/"
      }
    },
    {
      "name": "Ocean GKE",
      "description": "Ocean - Serverless containers for Google Kubernetes Engine",
      "externalDocs": {
        "description": "Ocean Concepts and Tutorials",
        "url": "https://docs.spot.io/ocean/"
      }
    },
    {
      "name": "Ocean AKS",
      "description": "Ocean - Serverless containers for Azure Kubernetes Service",
      "externalDocs": {
        "description": "Ocean Concepts and Tutorials",
        "url": "https://docs.spot.io/ocean/"
      }
    },
    {
      "name": "Ocean Insights",
      "description": "Insights allows Spot users on AWS to connect a Kubernetes cluster and within minutes get the cluster analyzed with insights\nabout the current state of infrastructure in the cluster, and the potential effect of migrating the specific cluster into Ocean.\nThrough its powerful features, Ocean presents significant opportunities for infrastructure optimization and automation, which are on display in the Insights console.\nConnected to Kubernetes clusters and running a continuous analysis, Ocean Insights delivers a holistic picture of your cluster and workloads behavior, from expected cloud costs and resource utilization.\nThrough a simple UI, users will see a breakdown of potential savings when they first connect to Ocean Insights.\n",
      "externalDocs": {
        "description": "Ocean Insights",
        "url": "https://docs.spot.io/ocean-insights/"
      }
    },
    {
      "name": "Ocean CD",
      "description": "Ocean CD is a fully managed continuous delivery ('CD') solution for Kubernetes applications. Designed for end-to-end automation and verification of frequent application-deployment processes at scale.\nOcean CD architecture and API enable a simple and secured installation that seamlessly fits into any Kubernetes environment. Users get key features like granular visibility, SaaS logic that manage the rollout process, verifications of the applied workloads and automatic rollbacks.\nTo enable Ocean CD, install the controller with one simple command in the Kubernetes cluster and create the following entities using the API:\n* Strategy\n* Rollout Spec\n",
      "externalDocs": {
        "description": "Ocean CD",
        "url": "https://docs.spot.io/ocean-cd/"
      }
    },
    {
      "name": "Ocean Spark",
      "description": "Ocean for Apache Spark is a managed cloud-native Spark platform that can be deployed in your cloud account.\n\nRunning on top of Ocean, Spot’s serverless infrastructure engine for containers, Ocean Spark makes it easy for your data teams to be successful with Apache Spark on Kubernetes, without dealing with the complexity of managing servers.\n",
      "externalDocs": {
        "description": "Ocean Spark",
        "url": "https://docs.spot.io/ocean-spark/"
      }
    },
    {
      "name": "EMR Scaler",
      "description": "AWS EMR Scaler",
      "externalDocs": {
        "description": "AWS EMR Scaler Concepts and Tutorials",
        "url": "https://docs.spot.io/elastigroup/tools-integrations/elastic-mapreduce/"
      }
    },
    {
      "name": "Stateful Node AWS",
      "description": "Stateful Node is a Spot solution for launching and managing a single compute instance.\nOn the AWS cloud, for a standard single instance workload, an On-Demand EC2 instance is launched.\nThe instance is expected to be highly available, easily manageable, and integrate well with additional services and monitoring tools.\nFor more information please review the concepts section.\n",
      "externalDocs": {
        "description": "Stateful Node for AWS Concepts and Tutorials",
        "url": "https://docs.spot.io/managed-instance/"
      }
    },
    {
      "name": "Create an API Token",
      "description": "* Please log in to the [Spot Console](https://console.spotinst.com) to create an API token. Navigate to `Settings` and select `API`.\n* The [Spot Console](https://console.spotinst.com) provides both permanent and temporary tokens. Select your preferred token type and click `Generate Token`.\n* Give your token a name and click `Generate`.\n> NOTE: Remember to keep your tokens secret. Treat them just like passwords! They act on your behalf when interacting with the API. Do not share your personal access tokens with anyone outside your organization. Do not hard-code them into your programs. Instead, opt to use them as environment variables. Please contact our support if you think your token has been compromised.\n",
      "externalDocs": {
        "url": "https://docs.spot.io/administration/api/create-api-token"
      }
    },
    {
      "name": "Whitelist IPs",
      "description": "* Spot permit list IPs are required for integrations to work as expected. The IP needs to be permit-listed on the primary nodes of Rancher, HCS, Kubernetes, Chef, Nomad, and Docker Swarm. Make sure your permit list IPs are always up-to-date with the latest list.\n*  34.226.61.134/32\n",
      "externalDocs": {
        "url": "https://docs.spot.io/administration/api/whitelist-ips"
      }
    },
    {
      "name": "Spot Policy",
      "description": "Spots Latest Policy for AWS.\n* You can find and modify your Spot Policy in the AWS IAM Console.\n* For additional information and guide please see Updating the Spot Policy\n* You can restrict your Spot Policy using custom AWS IAM Condition Statements using this Guide.\n*  Make sure your policy is always up-to-date with the latest JSON\n",
      "externalDocs": {
        "url": "https://docs.spot.io/administration/api/spot-policy-in-aws"
      }
    },
    {
      "name": "Audit Service",
      "externalDocs": {
        "url": "https://docs.spot.io/api/#tag/Audit-Service"
      }
    },
    {
      "name": "Health Check Service",
      "externalDocs": {
        "url": "https://docs.spot.io/elastigroup/tools-integrations/custom-health-check-service"
      }
    },
    {
      "name": "Notifications Service",
      "description": "A Spot Notifications service enables you a fast, flexible, fully managed push notification service that lets you know about major events that happened in your Spot account.ֿ Spot Notifications makes it simple and cost-effective to get push notifications to your email address, HTTP, HTTPS or AWS SNS (Simple Notifications Service).\n"
    },
    {
      "name": "Insights Service"
    }
  ],
  "x-tagGroups": [
    {
      "name": "Administration",
      "tags": [
        "Organizations",
        "Accounts"
      ]
    },
    {
      "name": "Ocean",
      "tags": [
        "Ocean AWS",
        "Ocean ECS",
        "Ocean GKE",
        "Ocean AKS",
        "Ocean Insights",
        "Ocean CD",
        "Ocean Spark"
      ]
    },
    {
      "name": "Elastigroup",
      "tags": [
        "Elastigroup AWS",
        "Elastigroup AWS EMR Scaler",
        "Elastigroup GCP",
        "Elastigroup Azure Spot VMs",
        "Elastigroup Azure Stateful"
      ]
    },
    {
      "name": "Stateful Node",
      "tags": [
        "Stateful Node AWS"
      ]
    },
    {
      "name": "Services",
      "tags": [
        "Audit Service",
        "Health Check Service",
        "Notifications Service",
        "Insights Service"
      ]
    },
    {
      "name": "Spot Connect",
      "tags": [
        "Connect Executions",
        "Connect Schedules",
        "Connect Settings",
        "Connect Targets",
        "Connect Workflows",
        "Connect Workspaces"
      ]
    }
  ],
  "paths": {
    "/aws/ec2/group": {
      "summary": "Elastigroups for AWS",
      "post": {
        "summary": "Create Elastigroup",
        "description": "Create a new AWS Elastigroup.\n\nThere are several third Party Integrations available, which can be activated based on your configuration, such as:\n* [Rancher Elastigroup](https://docs.spot.io/elastigroup/tools-integrations/rancher)\n* [Route53 Elastigroup](https://docs.spot.io/elastigroup/tools-integrations/route53)\n* [DockerSwarm Elastigroup](https://docs.spot.io/elastigroup/tools-integrations/docker-swarm)\n* [ECS Elastigroup](https://docs.spot.io/elastigroup/features/amazon-ecs/elastigroup-for-ecs)\n* [Beanstalk Elastigroup](https://docs.spot.io/elastigroup/tools-integrations/elastic-beanstalk)\n\n\n  You can create a beanstalk elastigroup with the following steps:\n  * [Get the beanstalk configuration](https://docs.spot.io/api/#operation/elastigroupAwsGetBeanstalkConfiguration) to JSON format\n  * Modify required parameters and post the JSON as a body to create a new elastigroup\n",
        "operationId": "elastigroupAwsCreate",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "AWS Elastigroup",
                    "required": [
                      "group"
                    ],
                    "properties": {
                      "group": {
                        "type": "object",
                        "description": "Elastigroup Configuration",
                        "required": [
                          "name",
                          "capacity",
                          "region",
                          "strategy",
                          "compute"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "AWS Elastigroup Name\n",
                            "example": "my-Elastigroup"
                          },
                          "description": {
                            "type": "string",
                            "description": "Describe your AWS Elastigroup\n",
                            "example": "This Elastigroup is used for Development"
                          },
                          "region": {
                            "type": "string",
                            "description": "The AWS region your group will be created in.\n This parameter is required if you specify subnets (through compute.subnetIds).\n This parameter is optional if you specify Availability Zones (through compute.availabilityZones).\n",
                            "example": "use-east-1"
                          },
                          "capacity": {
                            "description": "Capacity Configuration",
                            "type": "object",
                            "title": "Elastigroup Capacity",
                            "required": [
                              "target",
                              "minimum",
                              "maximum",
                              "unit"
                            ],
                            "properties": {
                              "target": {
                                "type": "integer",
                                "description": "The number of instances to launch\n",
                                "example": 1
                              },
                              "minimum": {
                                "type": "integer",
                                "description": "The lower limit number of instances that you can scale down to\n",
                                "example": 0
                              },
                              "maximum": {
                                "type": "integer",
                                "description": "The upper limit number of instances that you can scale up to\n",
                                "example": 10
                              },
                              "unit": {
                                "type": "string",
                                "enum": [
                                  "instance",
                                  "weight"
                                ],
                                "description": "The capacity unit to launch instances by.\nNote: for groups with integration to K8S / ECS weight option is not supported.\n",
                                "example": "instance"
                              }
                            }
                          },
                          "strategy": {
                            "type": "object",
                            "title": "Elastigroup Strategy",
                            "description": "Strategy",
                            "required": [
                              "availabilityVsCost"
                            ],
                            "properties": {
                              "risk": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 100,
                                "example": 100,
                                "default": 0,
                                "description": "The percentage of Elastigroup that will run with spot market capacity\n"
                              },
                              "onDemandCount": {
                                "type": "integer",
                                "minimum": 0,
                                "example": 0,
                                "description": "Minimum number of instances that will always be on-demand\n"
                              },
                              "availabilityVsCost": {
                                "type": "string",
                                "enum": [
                                  "costOriented",
                                  "availabilityOriented",
                                  "balanced",
                                  "cheapest",
                                  "equalAzDistribution"
                                ],
                                "default": "balanced",
                                "description": "How Elastigroup determines which instances to add and replace.\n(please read this article before using [Equal AZ Instance Distribution](https://docs.spot.io/elastigroup-for-aws/concepts/general-concepts/equal-az-distribution))\n"
                              },
                              "fallbackToOd": {
                                "type": "boolean",
                                "default": true,
                                "example": true,
                                "description": "When set to `true` Elastigroup will launch On Demand instances if no spot market is available\n"
                              },
                              "considerODPricing": {
                                "type": "boolean",
                                "default": false,
                                "example": false,
                                "description": "When the value is set to `true`, Elastigroup will prioritize launching On-Demand instances if they are found to be more cost-effective than available Spot markets.\n"
                              },
                              "utilizeReservedInstances": {
                                "type": "boolean",
                                "description": "In case of any available Reserved Instances, Elastigroup will utilize them before purchasing Spot instances\n",
                                "example": false
                              },
                              "utilizeCommitments": {
                                "type": "boolean",
                                "description": "If there are available Reserved Instances or Savings Plans, Elastigroup will utilize them before using Spot instances\n",
                                "example": false
                              },
                              "restrictSingleAz": {
                                "type": "boolean",
                                "description": "Elastigroup will automatically scale your instances in the most available and cost efficient availability zone. Every evaluation will be done when there are no active instances in the group.\n",
                                "example": false
                              },
                              "drainingTimeout": {
                                "type": "integer",
                                "example": 120,
                                "description": "The time in seconds to allow the instance be drained from incoming TCP connections and detached from ELB before terminating it, during a scale down operation\n"
                              },
                              "signals": {
                                "type": "array",
                                "description": "The signals defined for this group. For more information refer the below article: [Signals](https://docs.spot.io/elastigroup-for-aws/concepts/compute-concepts/using-signals-in-elastigroups)\n",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the signal defined for the group.\n",
                                      "enum": [
                                        "INSTANCE_READY",
                                        "INSTANCE_READY_TO_SHUTDOWN"
                                      ]
                                    },
                                    "timeout": {
                                      "type": "integer",
                                      "minimum": 60,
                                      "maximum": 1800,
                                      "description": "The timeout in seconds to hold the instance until a signal is sent.\nIf no signal is sent the instance will be replaced (INSTANCE_READY) or we will terminate the instance (INSTANCE_READY_TO_SHUTDOWN) after the timeout.\n",
                                      "default": 1800,
                                      "example": 120
                                    }
                                  }
                                }
                              },
                              "persistence": {
                                "type": "array",
                                "description": "You can register persistence (Stateful) recovery arguments\n",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "shouldPersistPrivateIp": {
                                      "type": "boolean",
                                      "description": "Should the instance maintain its private IP\n",
                                      "example": true
                                    },
                                    "shouldPersistRootDevice": {
                                      "type": "boolean",
                                      "description": "Should the instance maintain its root device volumes\n",
                                      "example": true
                                    },
                                    "shouldPersistBlockDevices": {
                                      "type": "boolean",
                                      "description": "Should the instance maintain its Data volumes\n",
                                      "example": true
                                    },
                                    "blockDevicesMode": {
                                      "type": "string",
                                      "description": "Determine the way we attach the data volumes to the data devices\n",
                                      "enum": [
                                        "reattach",
                                        "onLaunch"
                                      ],
                                      "example": "reattach"
                                    }
                                  }
                                }
                              },
                              "revertToSpot": {
                                "type": "object",
                                "description": "Hold settings for strategy correction - replacing On-Demand for Spot instances\n",
                                "properties": {
                                  "performAt": {
                                    "type": "string",
                                    "description": "Settings for maintenance strategy - possible values: timeWindow, never, always.\nperformAt of type: 'never' OR 'timeWindow' can only be applied to groups with \"availabilityOriented\" OR groups with \"persistence\",\nother groups allow either 'always' type or nothing which also means always.\n",
                                    "enum": [
                                      "never",
                                      "always",
                                      "timeWindow"
                                    ],
                                    "example": "timeWindow",
                                    "default": "always"
                                  },
                                  "timeWindows": {
                                    "type": "array",
                                    "description": "When performAt is 'timeWindow': must specify a list of 'timeWindows' with at least one time window Each string is in the format of - ddd:hh:mm-ddd:hh:mm\nddd = day of week = Sun | Mon | Tue | Wed | Thu | Fri | Sat\nhh = hour 24 = 0 -23\nmm = minute = 0 - 59\n",
                                    "items": {
                                      "type": "string",
                                      "example": "Mon:03:00-Wed:02:30"
                                    }
                                  }
                                }
                              },
                              "scalingStrategy": {
                                "type": "object",
                                "description": "Set termination policy\n",
                                "properties": {
                                  "terminationPolicy": {
                                    "type": "string",
                                    "enum": [
                                      "default",
                                      "newestInstance"
                                    ],
                                    "example": "default"
                                  }
                                }
                              }
                            }
                          },
                          "compute": {
                            "type": "object",
                            "title": "Elastigroup Compute",
                            "required": [
                              "availabilityZones",
                              "launchSpecification"
                            ],
                            "properties": {
                              "product": {
                                "type": "string",
                                "description": "Operation system type.\n",
                                "enum": [
                                  "Linux/UNIX (Amazon VPC)",
                                  "SUSE Linux (Amazon VPC)",
                                  "Windows (Amazon VPC)",
                                  "Red Hat Enterprise Linux (Amazon VPC)"
                                ],
                                "example": "Linux/UNIX"
                              },
                              "elasticIps": {
                                "type": "array",
                                "description": "List of ElasticIPs Allocation Ids to associate to the group instances\n",
                                "items": {
                                  "type": "string",
                                  "example": "eipalloc-9d4e16f8"
                                }
                              },
                              "privateIps": {
                                "type": "array",
                                "description": "List of Private IPs to associate to the group instances.\nPlease note: This setting will only apply if rategy.persistence.shouldPersistPrivateIp is set to true.\n",
                                "items": {
                                  "type": "string",
                                  "default": "172.1.1.0"
                                }
                              },
                              "instanceTypes": {
                                "type": "object",
                                "description": "Instance Types\n",
                                "properties": {
                                  "ondemand": {
                                    "type": "string",
                                    "description": "Available on demand instance type.\nNote: Either ondemand or onDemandTypes must be defined, but not both.\n",
                                    "example": "m3.medium"
                                  },
                                  "onDemandTypes": {
                                    "type": "array",
                                    "description": "Available on demand instance types.\nNote: Either ondemand or onDemandTypes must be defined, but not both.\n",
                                    "items": {
                                      "type": "string",
                                      "example": [
                                        "c3.large",
                                        "c4.large",
                                        "m3.large",
                                        "r3.large"
                                      ]
                                    }
                                  },
                                  "spot": {
                                    "type": "array",
                                    "description": "Available Spot Instance types.  \nNote: Cannot be defined if 'resourceRequirements' is defined.\n",
                                    "items": {
                                      "type": "string",
                                      "example": [
                                        "c3.large",
                                        "c4.large",
                                        "m3.large",
                                        "r3.large"
                                      ]
                                    }
                                  },
                                  "resourceRequirements": {
                                    "type": "object",
                                    "title": "Resource Requirements",
                                    "description": "Required instance attributes. Instance types will be selected based on these requirements.\n",
                                    "required": [
                                      "requiredVCpu",
                                      "requiredMemory"
                                    ],
                                    "properties": {
                                      "requiredGpu": {
                                        "type": "object",
                                        "description": "Required instance GPU",
                                        "properties": {
                                          "minimum": {
                                            "type": "integer",
                                            "minimum": 1
                                          },
                                          "maximum": {
                                            "type": "integer",
                                            "maximum": 16
                                          }
                                        }
                                      },
                                      "requiredVCpu": {
                                        "type": "object",
                                        "description": "Required instance vCPU",
                                        "properties": {
                                          "minimum": {
                                            "type": "integer",
                                            "minimum": 1
                                          },
                                          "maximum": {
                                            "type": "integer",
                                            "maximum": 64
                                          }
                                        }
                                      },
                                      "requiredMemory": {
                                        "type": "object",
                                        "description": "Required instance memory (GiB)",
                                        "properties": {
                                          "minimum": {
                                            "type": "integer",
                                            "minimum": 1
                                          },
                                          "maximum": {
                                            "type": "integer",
                                            "maximum": 512
                                          }
                                        }
                                      },
                                      "excludedInstanceTypes": {
                                        "type": "array",
                                        "description": "Instance types to exclude",
                                        "items": {
                                          "type": "string",
                                          "example": [
                                            "c4.large"
                                          ]
                                        }
                                      },
                                      "excludedInstanceFamilies": {
                                        "type": "array",
                                        "description": "Instance families to exclude",
                                        "items": {
                                          "type": "string",
                                          "example": [
                                            "A",
                                            "C",
                                            "D"
                                          ]
                                        }
                                      },
                                      "excludedInstanceGenerations": {
                                        "type": "array",
                                        "description": "Instance generations to exclude",
                                        "items": {
                                          "type": "string",
                                          "example": [
                                            "1",
                                            "2",
                                            "3"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "preferredSpot": {
                                    "type": "array",
                                    "description": "Prioritized subset of spot instance types. The list must be a subset of the selected spot instance \ntypes or meet the resource requirements if defined.\n",
                                    "items": {
                                      "type": "string",
                                      "example": [
                                        "c4.large"
                                      ]
                                    }
                                  },
                                  "weights": {
                                    "type": "array",
                                    "description": "Custom weight for each instance type (only valid in weight capacity unit)\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "instanceType": {
                                          "type": "string",
                                          "description": "The instance type to customize its weight\n",
                                          "example": "c4.large"
                                        },
                                        "weightedCapacity": {
                                          "type": "integer",
                                          "description": "The weight\n",
                                          "example": 8
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "subnetIds": {
                                "type": "array",
                                "description": "A comma-separated list of subnet identifiers for your group.\nWhen this parameter is set, compute.availabilityZones should be left unused.\n",
                                "items": {
                                  "type": "string",
                                  "example": [
                                    "subnet-4c1d1538",
                                    "subnet-2791bb61",
                                    "subnet-703a6f58",
                                    "subnet-c62846fc"
                                  ]
                                }
                              },
                              "availabilityZones": {
                                "type": "array",
                                "description": "One or more availability Zones for the group.\nWhen this parameter is set, compute.subnetIds should be left unused.\n",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "name"
                                  ],
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The Availability Zone name\n",
                                      "example": "us-west-2a"
                                    },
                                    "subnetIds": {
                                      "type": "array",
                                      "description": "A comma-separated list of subnet identifiers for your group.\n",
                                      "items": {
                                        "type": "string",
                                        "example": [
                                          "subnet-4333093a"
                                        ]
                                      }
                                    },
                                    "placementGroupName": {
                                      "type": "string",
                                      "description": "specify a Placement Group name, the instances will be launched in the Placement Group for the AZ.\n"
                                    }
                                  }
                                }
                              },
                              "preferredAvailabilityZones": {
                                "type": "array",
                                "description": "The AZs to prioritize when launching Spot instances.\nIf no markets are available in the Preferred AZs, Spot instances are launched in the non-preferred AZs.\n* Must be a sublist of compute.AvailabilityZones\n* strategy.availabilityVsCost must not be equalAzDistribution\n",
                                "items": {
                                  "type": "string",
                                  "example": [
                                    "us-east-1a",
                                    "us-east-1b"
                                  ]
                                }
                              },
                              "launchSpecification": {
                                "type": "object",
                                "required": [
                                  "securityGroupIds",
                                  "monitoring"
                                ],
                                "properties": {
                                  "creditSpecification": {
                                    "type": "object",
                                    "description": "creditSpecification is a parameter that indicates in what mode t2/t3 instances will be launched with. It consists of one key: cpuCredits (String)\n",
                                    "properties": {
                                      "cpuCredits": {
                                        "type": "string",
                                        "enum": [
                                          "unlimited",
                                          "standard"
                                        ],
                                        "example": "unlimited"
                                      }
                                    }
                                  },
                                  "loadBalancersConfig": {
                                    "type": "object",
                                    "description": "Elastic Load Balancers configurations\n",
                                    "properties": {
                                      "loadBalancers": {
                                        "type": "array",
                                        "description": "List of classic load balancers and/or application load balancer target groups\n",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "The AWS resource name. Required for Classic Load Balancer. Optional for Application Load Balancer.\n",
                                              "example": "MyTargetGroup"
                                            },
                                            "arn": {
                                              "type": "string",
                                              "description": "The AWS resource ARN (Required only for ALB target groups)\n",
                                              "example": "arn:aws:elasticloadbalancing:us-west-2:922761411234:targetgroup/MyTargetGroup/1fe63217f8ff1234"
                                            },
                                            "type": {
                                              "type": "string",
                                              "description": "The resource type.\n",
                                              "enum": [
                                                "CLASSIC",
                                                "TARGET_GROUP"
                                              ],
                                              "example": "TARGET_GROUP"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "itf": {
                                    "title": "Intelligent Traffic Flow (ITF) Configuration",
                                    "type": "object",
                                    "description": "Contains the configuration details of Intelligent Traffic Flow (ITF).\n",
                                    "properties": {
                                      "fixedTargetGroups": {
                                        "type": "boolean",
                                        "description": "Boolean to control whether to keep the set of target groups fixed. When set to true, all target groups will be created in advance upon create/update group, and will not be deleted even when not being used anymore.\n",
                                        "default": false,
                                        "example": false
                                      },
                                      "weightStrategy": {
                                        "type": "string",
                                        "description": "Distribution strategy (either 'vcpu' or 'custom'). 'Custom' strategy can be set only when the group is configured with custom weights.\n",
                                        "enum": [
                                          "vcpu",
                                          "custom"
                                        ],
                                        "default": "vcpu",
                                        "example": "custom"
                                      },
                                      "migrationHealthinessThreshold": {
                                        "type": "integer",
                                        "description": "Threshold for the minimum healthiness level of the target groups that is needed before activating the ITF rules. Integer representing the percentage of healthy instances within the target groups. Valid values: integer between 0-100.\n",
                                        "default": 50,
                                        "example": 80
                                      },
                                      "loadBalancers": {
                                        "type": "array",
                                        "description": "The load balancer associated with the ITF. Array with a single element.\n",
                                        "items": {
                                          "title": "ITF Load Balancer Configuration",
                                          "type": "object",
                                          "description": "Contains the configuration details of an ITF load balancer.\n",
                                          "required": [
                                            "loadBalancerArn",
                                            "listenerRules"
                                          ],
                                          "properties": {
                                            "loadBalancerArn": {
                                              "type": "string",
                                              "description": "Identifier of the load balancer in AWS.\n",
                                              "example": "arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188"
                                            },
                                            "listenerRules": {
                                              "type": "array",
                                              "description": "The listener rules that should be maintained by ITF. Array with a minimum of 1 element.\n",
                                              "items": {
                                                "title": "ITF Listener Rule Configuration",
                                                "type": "object",
                                                "description": "Contains the configuration details of an ITF listener rule.\n",
                                                "required": [
                                                  "ruleArn"
                                                ],
                                                "properties": {
                                                  "ruleArn": {
                                                    "type": "string",
                                                    "description": "Identifier of the listener rule in AWS.\n",
                                                    "example": "arn:aws:elasticloadbalancing:us-west-2:123456789012:listener-rule/app/0123456789012345/1234567890123456/234567890123456"
                                                  },
                                                  "staticTargetGroups": {
                                                    "type": "array",
                                                    "description": "Listener rule target group whose percentage should remain static (unchanged). Array with a single element.",
                                                    "items": {
                                                      "$ref": "#/paths/~1aws~1ec2~1group/post/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/compute/properties/launchSpecification/properties/itf/properties/loadBalancers/items/properties/defaultStaticTargetGroups/items"
                                                    },
                                                    "example": [
                                                      {
                                                        "arn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/blue-targets/73e2d6bc24d8a068",
                                                        "percentage": 0.5
                                                      }
                                                    ]
                                                  }
                                                }
                                              }
                                            },
                                            "defaultStaticTargetGroups": {
                                              "type": "array",
                                              "description": "A default static target group on the rule. Array with a single element.",
                                              "items": {
                                                "title": "ITF Static Target Group Configuration",
                                                "type": "object",
                                                "description": "Contains the configuration details of an ITF static target group.\n",
                                                "required": [
                                                  "arn",
                                                  "percentage"
                                                ],
                                                "properties": {
                                                  "arn": {
                                                    "type": "string",
                                                    "description": "Identifier of the target group in AWS.\n",
                                                    "example": "arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/blue-targets/73e2d6bc24d8a067"
                                                  },
                                                  "percentage": {
                                                    "type": "number",
                                                    "description": "A float number in the range of 0.1-10.\n",
                                                    "example": 0.4
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "targetGroupConfig": {
                                        "title": "ITF Target Group Configuration",
                                        "type": "object",
                                        "description": "Contains the configuration details of an ITF target group.\n",
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "vpcId": {
                                                "type": "string",
                                                "description": "The ID of the AWS VPC for the targets. Valid values: any string which is not empty or null.\n",
                                                "example": "vpc-0410a20ec1702a537"
                                              },
                                              "healthCheckPath": {
                                                "type": "string",
                                                "description": "The destination for health checks on the targets.\n",
                                                "example": "/index.html"
                                              },
                                              "healthCheckProtocol": {
                                                "type": "string",
                                                "description": "HTTP, HTTPS are already listed under the enum below, no need to repeat.\n",
                                                "enum": [
                                                  "HTTP",
                                                  "HTTPS"
                                                ],
                                                "default": "HTTP",
                                                "example": "HTTP"
                                              },
                                              "healthCheckPort": {
                                                "type": "string",
                                                "description": "The port to use to connect with the target. Valid values: 1-65535 or \"traffic-port\".\n",
                                                "default": "80",
                                                "example": "traffic-port"
                                              },
                                              "healthCheckIntervalSeconds": {
                                                "type": "integer",
                                                "description": "The approximate amount of time, in seconds, between health checks of an individual target. Valid values: integer between 5-300.\n",
                                                "default": 30,
                                                "example": 40
                                              },
                                              "healthCheckTimeoutSeconds": {
                                                "type": "integer",
                                                "description": "The amount of time, in seconds, during which no response means a failed health check. Valid values: integer between 2-120.\n",
                                                "default": 5,
                                                "example": 20
                                              },
                                              "healthyThresholdCount": {
                                                "type": "integer",
                                                "description": "The number of consecutive health checks successes required before considering an unhealthy target healthy. Valid values: integer between 2-10.\n",
                                                "default": 5,
                                                "example": 3
                                              },
                                              "unhealthyThresholdCount": {
                                                "type": "integer",
                                                "description": "The number of consecutive health check failures required before considering the target unhealthy. Valid values: integer between 2-10.\n",
                                                "default": 2,
                                                "example": 4
                                              },
                                              "port": {
                                                "type": "integer",
                                                "description": "The port on which the targets are listening. Not used if the target is a Lambda function. Valid values: integer between 1-65535.\n",
                                                "example": 80
                                              },
                                              "protocol": {
                                                "type": "string",
                                                "description": "The protocol to use for routing traffic to the targets.\n",
                                                "enum": [
                                                  "HTTP",
                                                  "HTTPS"
                                                ],
                                                "example": "HTTP"
                                              },
                                              "protocolVersion": {
                                                "type": "string",
                                                "description": "The protocol version.\n",
                                                "default": "HTTP1",
                                                "enum": [
                                                  "GRPC",
                                                  "HTTP1",
                                                  "HTTP2"
                                                ],
                                                "example": "HTTP1"
                                              },
                                              "tags": {
                                                "type": "array",
                                                "description": "The tags to assigned with the created target groups\n",
                                                "default": [],
                                                "example": [
                                                  {
                                                    "creator": "John Doe"
                                                  }
                                                ],
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "tagKey": {
                                                      "type": "string",
                                                      "description": "The tag's key\n",
                                                      "example": "Creator"
                                                    },
                                                    "tagValue": {
                                                      "type": "string",
                                                      "description": "The tag's value\n",
                                                      "example": "John Doe"
                                                    }
                                                  }
                                                }
                                              },
                                              "matcher": {
                                                "type": "object",
                                                "description": "Matcher to use when checking for a successful response from a target group. One of 'httpCode' or 'grpcCode' is required.\n",
                                                "default": {
                                                  "httpCode": "200"
                                                },
                                                "properties": {
                                                  "httpCode": {
                                                    "type": "string",
                                                    "description": "You can specify values between 200 and 499, and the default value is 200. You can specify multiple values (for example, “200,202”) or a range of values (for example, “200-299”).\n",
                                                    "default": "200",
                                                    "example": "200"
                                                  },
                                                  "grpcCode": {
                                                    "type": "string",
                                                    "description": "You can specify values between 0 and 99. You can specify multiple values (for example, “0,1”) or a range of values (for example, “0-5”). The default value is 12.\n",
                                                    "default": "12",
                                                    "example": "4"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "required": [
                                              "vpcId",
                                              "healthCheckPath",
                                              "port",
                                              "protocol"
                                            ]
                                          }
                                        ]
                                      }
                                    },
                                    "required": [
                                      "loadBalancers",
                                      "targetGroupConfig"
                                    ]
                                  },
                                  "healthCheckType": {
                                    "type": "string",
                                    "description": "The service to use for the health check.\n",
                                    "enum": [
                                      "ELB",
                                      "HCS",
                                      "TARGET_GROUP",
                                      "ECS_CLUSTER_INSTANCE",
                                      "EC2",
                                      "OPSWORKS",
                                      "K8S_NODE",
                                      "NOMAD_NODE"
                                    ],
                                    "example": "EC2"
                                  },
                                  "healthCheckGracePeriod": {
                                    "type": "integer",
                                    "description": "The amount of time, in seconds, after the instance has launched to starts and check its health.\n",
                                    "default": 300,
                                    "example": 600
                                  },
                                  "healthCheckUnhealthyDurationBeforeReplacement": {
                                    "type": "integer",
                                    "description": "The amount of time, in seconds, an existing instance should remain active after becoming unhealthy.\nAfter the set time out the instance will be replaced\n",
                                    "example": 60
                                  },
                                  "securityGroupIds": {
                                    "type": "array",
                                    "description": "One or more security group IDs. In case of update it will override the existing Security Group with the new given array\n",
                                    "items": {
                                      "type": "string",
                                      "example": [
                                        "sg-0dfc2c8760df6fec7"
                                      ]
                                    }
                                  },
                                  "monitoring": {
                                    "type": "boolean",
                                    "description": "Describes whether instance Enhanced Monitoring is enabled\n",
                                    "example": false
                                  },
                                  "ebsOptimized": {
                                    "type": "boolean",
                                    "description": "Enable EBS optimization for supported instance which is not enabled by default.\nNote - additional charges will be applied.\n",
                                    "example": false
                                  },
                                  "imageId": {
                                    "type": "string",
                                    "description": "The ID of the image used to launch the instance.\n* The following instance types are supported by HVM image: M3, M4, C3, C4, D2, G2, R3, CC2, CC1, CG1, CR1.\n* The following instance types are supported by PV image: M1, M2, M3, C1, C3.\n* In case of conflict between Instance type to image type, an error message will be returned\n",
                                    "example": "ami-01e24be29428c15b2"
                                  },
                                  "images": {
                                    "type": "array",
                                    "description": "An array of image objects. <br>\nElastigroup can be configured with either imageId or images, but not both. <br>\n* Valid values: null, or an array with at least 1 element.\n* Multiple AMIs aren't allowed with stateful groups / Stateful Node / Ocean\n  or with the following third-party integrations: ECS / Nomad / Docker Swarm / Kubernetes\n",
                                    "items": {
                                      "type": "object",
                                      "title": "Image object, containing the id of the image used to launch the instance.",
                                      "required": [
                                        "id"
                                      ],
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "Identifier of the image in AWS. Valid values: any string which is not empty or null.\n",
                                          "example": "ami-123456789"
                                        }
                                      }
                                    }
                                  },
                                  "keyPair": {
                                    "type": "string",
                                    "description": "Specify a Key Pair to attach to the instances\n",
                                    "example": "labs-oregon"
                                  },
                                  "blockDeviceMappings": {
                                    "type": "array",
                                    "description": "Array list of block devices that are exposed to the instance, You can specify virtual devices and EBS volumes.\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "deviceName": {
                                          "type": "string",
                                          "description": "Set device name\n",
                                          "example": "/dev/xvdcz"
                                        },
                                        "ebs": {
                                          "type": "object",
                                          "description": "Set EBS properties\n",
                                          "properties": {
                                            "encrypted": {
                                              "type": "boolean",
                                              "example": true
                                            },
                                            "iops": {
                                              "type": "integer",
                                              "minimum": 0,
                                              "description": "Must be greater than or equal to 0\n",
                                              "example": 0
                                            },
                                            "dynamicIops": {
                                              "type": "object",
                                              "description": "Set dynamic IOPS properties. When using this object, you cannot use the 'iops' object. You must use one or the other.\n",
                                              "properties": {
                                                "baseSize": {
                                                  "type": "integer",
                                                  "description": "Initial size for IOPS.\n",
                                                  "example": 50
                                                },
                                                "resource": {
                                                  "type": "string",
                                                  "enum": [
                                                    "CPU",
                                                    "MEMORY"
                                                  ],
                                                  "description": "Type of resource\n",
                                                  "example": "CPU"
                                                },
                                                "sizePerResourceUnit": {
                                                  "type": "integer",
                                                  "description": "Additional size per resource unit (in IOPS). For example: if baseSize=50, and sizePerResourceUnit=20, and an instance with 2 CPU is launched - its IOPS size will be: 90\n",
                                                  "example": 20
                                                }
                                              }
                                            },
                                            "kmsKeyId": {
                                              "type": "string",
                                              "example": "alias/aws/ebs"
                                            },
                                            "snapshotId": {
                                              "type": "string",
                                              "example": "snap-abcdefghi111110"
                                            },
                                            "throughput": {
                                              "type": "integer",
                                              "minimum": 125,
                                              "maximum": 1000,
                                              "example": 125,
                                              "description": "The amount of data transferred to or from a storage device per second, you can use this param just in a case that volumetype=‘gp3’.\n"
                                            },
                                            "volumeType": {
                                              "type": "string",
                                              "description": "Set volume type\n",
                                              "example": "gp2"
                                            },
                                            "deleteOnTermination": {
                                              "type": "boolean",
                                              "description": "Flag to delete the EBS on instance termination\n",
                                              "example": true
                                            },
                                            "volumeSize": {
                                              "type": "integer",
                                              "description": "Set volume size (in GB). When using this property - don't use dynamicVolumeSize.\nVolume size should be greater or equal than the size configured in the AMI\n",
                                              "example": 12
                                            },
                                            "dynamicVolumeSize": {
                                              "type": "object",
                                              "description": "Set dynamic volume size properties. When using this object, you cannot use volumeSize. You must use one or the other.\n",
                                              "properties": {
                                                "baseSize": {
                                                  "type": "integer",
                                                  "description": "Initial size for volume\n",
                                                  "example": 50
                                                },
                                                "resource": {
                                                  "type": "string",
                                                  "example": "CPU"
                                                },
                                                "sizePerResourceUnit": {
                                                  "type": "integer",
                                                  "description": "Additional size per resource unit (in GB). For example: if baseSize=50, and sizePerResourceUnit=20, and an instance with 2 CPU is launched - its disk size will be: 90GB\n",
                                                  "example": 20
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "networkInterfaces": {
                                    "type": "array",
                                    "description": "List of network interfaces in an EC2 instance.\nIf you define network interface, please pay attention to omit these properties from other sections in this JSON and set them here: subnetId - compute.availabilityZones\n",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "deviceIndex"
                                      ],
                                      "properties": {
                                        "description": {
                                          "type": "string",
                                          "description": "The description of the network interface. Applies only if creating a network interface when launching an instance.\n"
                                        },
                                        "deviceIndex": {
                                          "type": "integer",
                                          "description": "The position of the network interface in the attachment order.\nA primary network interface has a device index of 0.\nIf you specify a network interface when launching an instance, you must specify the device index.\n",
                                          "example": 0
                                        },
                                        "secondaryPrivateIpAddressCount": {
                                          "type": "integer",
                                          "description": "The number of secondary private IPv4 addresses to assign to a network interface.\nWhen you specify a number of secondary IPv4 addresses, Amazon EC2 selects these IP addresses within the subnet's IPv4 CIDR range.\nYou can't specify this option and specify more than one private IP address using privateIpAddresses.\nThe number of IP addresses you can assign to a network interface varies by instance type.\nFor more information, see IP Addresses Per ENI Per Instance Type in the Amazon Virtual Private Cloud User Guide.\n"
                                        },
                                        "associatePublicIpAddress": {
                                          "type": "boolean",
                                          "description": "Indicates whether to assign a public IPv4 address to an instance you launch in a VPC.\nThe public IP address can only be assigned to a network interface for eth0, and can only be assigned to a new network interface, not an existing one.\nYou cannot specify more than one network interface in the request.\nIf launching into a default subnet, the default value is true.\n",
                                          "example": true
                                        },
                                        "deleteOnTermination": {
                                          "type": "boolean",
                                          "description": "If set to true, the interface is deleted when the instance is terminated.\nYou can specify true only if creating a new network interface when launching an instance.\n"
                                        },
                                        "networkInterfaceId": {
                                          "type": "string",
                                          "description": "The ID of the network interface. Used to attach the specified network interface to the instance.\n"
                                        },
                                        "privateIpAddresses": {
                                          "type": "array",
                                          "description": "One or more private IPv4 addresses to assign to the network interface.\nOnly one private IPv4 address can be designated as primary.\nYou cannot specify this option if you're launching more than one instance in a RunInstances request.\n",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "privateIpAddress",
                                              "primary"
                                            ],
                                            "properties": {
                                              "privateIpAddress": {
                                                "type": "string",
                                                "description": "The private IPv4 address.\n"
                                              },
                                              "primary": {
                                                "type": "boolean",
                                                "description": "Indicates whether the private IPv4 address is the primary private IPv4 address. Only one IPv4 address can be designated as primary.\n"
                                              }
                                            }
                                          }
                                        },
                                        "subnetId": {
                                          "type": "string",
                                          "description": "The ID of the subnet to associate with the network interface.\nRequired when creating a new Network Interface, and not attaching an existing one via networkInterfaceId.\n"
                                        },
                                        "associateIpv6Address": {
                                          "type": "boolean",
                                          "description": "Indicates whether to assign an IPv6 address. Amazon EC2 chooses the IPv6 addresses from the range of the subnet.\n"
                                        }
                                      }
                                    }
                                  },
                                  "iamRole": {
                                    "type": "object",
                                    "description": "The instance profile iamRole\n",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "The iamRole name\n",
                                        "example": "my-iamRole"
                                      }
                                    }
                                  },
                                  "userData": {
                                    "type": "string",
                                    "format": "byte",
                                    "description": "The Base64-encoded MIME user data to make available to the instances\n",
                                    "example": "dXNlcmJhc2g2NGVuY29kZWQ="
                                  },
                                  "shutdownScript": {
                                    "type": "string",
                                    "format": "byte",
                                    "description": "The Base64-encoded shutdown script to execute prior to instance termination. For more information please see: [Shutdown Script](https://docs.spot.io/integration-docs/elastigroup/concepts/compute-concepts/shutdown-scripts/)\n",
                                    "example": "dXNlcmJhc2g2NGVuY29kZWQ="
                                  },
                                  "tags": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "tagKey": {
                                          "type": "string",
                                          "description": "The tag's key\n",
                                          "example": "Creator"
                                        },
                                        "tagValue": {
                                          "type": "string",
                                          "description": "The tag's value\n",
                                          "example": "John Doe"
                                        }
                                      }
                                    }
                                  },
                                  "resourceTagSpecification": {
                                    "type": "object",
                                    "description": "Optional field. User will specified which resources should be tagged with group tags.",
                                    "properties": {
                                      "volumes": {
                                        "type": "object",
                                        "description": "Optional field. Tag specification for Volume resources.",
                                        "properties": {
                                          "shouldTag": {
                                            "type": "boolean",
                                            "description": "Optional field. Volume resources will be tagged with group tags.",
                                            "default": false,
                                            "example": false
                                          }
                                        }
                                      },
                                      "snapshots": {
                                        "type": "object",
                                        "description": "Optional field. Tag specification for Snapshot resources.",
                                        "properties": {
                                          "shouldTag": {
                                            "type": "boolean",
                                            "description": "Optional field. Snapshot resources will be tagged with group tags.",
                                            "default": true,
                                            "example": true
                                          }
                                        }
                                      },
                                      "enis": {
                                        "type": "object",
                                        "description": "Optional field. Tag specification for ENI resources.",
                                        "properties": {
                                          "shouldTag": {
                                            "type": "boolean",
                                            "description": "Optional field. ENI resources will be tagged with group tags.",
                                            "default": false,
                                            "example": false
                                          }
                                        }
                                      },
                                      "amis": {
                                        "type": "object",
                                        "description": "Optional field. Tag specification for AMI resources.",
                                        "properties": {
                                          "shouldTag": {
                                            "type": "boolean",
                                            "description": "Optional field. AMI resources will be tagged with group tags.",
                                            "default": true,
                                            "example": true
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "metadataOptions": {
                                    "title": "Metadata Options",
                                    "type": "object",
                                    "description": "Optional field. Used for IMDSv2. In Create route can't be null. In Update route can be null.",
                                    "required": [
                                      "httpTokens"
                                    ],
                                    "properties": {
                                      "httpTokens": {
                                        "title": "HTTP Tokens",
                                        "type": "string",
                                        "description": "Required for IMDSv2. Can’t be null in Create or Update. Values can be \"optional\" or \"required\".",
                                        "example": "optional"
                                      },
                                      "httpPutResponseHopLimit": {
                                        "type": "integer",
                                        "example": "33",
                                        "description": "An integer within 1,64 range (including).\nThe desired HTTP PUT response hop limit for instance metadata requests.\nThe larger the number, the further instance metadata requests can travel.\n"
                                      },
                                      "instanceMetadataTags": {
                                        "title": "Instance Metadata Tags",
                                        "type": "string",
                                        "enum": [
                                          "Enabled",
                                          "Disabled"
                                        ],
                                        "description": "Indicates whether access to instance tags from the instance metadata is enabled or disabled.\nCan’t be null.\n",
                                        "example": "Enabled"
                                      }
                                    }
                                  },
                                  "cpuOptions": {
                                    "title": "CPU options",
                                    "type": "object",
                                    "description": "Optional field. The CPU options for the instances that are launched within the group.",
                                    "required": [
                                      "threadsPerCore"
                                    ],
                                    "properties": {
                                      "threadsPerCore": {
                                        "title": "thread per core",
                                        "type": "integer",
                                        "example": "1",
                                        "description": "The number of threads per CPU core.\nTo disable multithreading for the instances, specify a value of 1 .\nOtherwise, specify the default value of 2 .\n"
                                      }
                                    }
                                  },
                                  "autoHealing": {
                                    "type": "boolean",
                                    "description": "Optional field. Auto-healing replacement won't be triggered if this parameter value is \"false\".\nIn a case of a stateful group - no recycling will start if this parameter value is \"false\".\n",
                                    "default": true,
                                    "example": true
                                  }
                                }
                              },
                              "volumeAttachments": {
                                "type": "object",
                                "title": "AWS Volume Attachments",
                                "description": "Any volumes specified in this field will be automatically attached to every instance launched in the group.\nAll volumes must be located within the availability zone of the group. \nAdditionally, the group must have at least one persistence configuration.\nIf your group has more than one instance or you want to share the same volume between several instances,\nit's important to use [Amazon EBS Multi-Attach supported volumes](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-volumes-multi.html)\nto enable concurrent attachment of the volumes to multiple instances. This ensures that your volumes can be effectively\nshared among instances in your group.\n",
                                "required": [
                                  "volumes"
                                ],
                                "properties": {
                                  "volumes": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "volumeId",
                                        "deviceName"
                                      ],
                                      "properties": {
                                        "volumeId": {
                                          "type": "string",
                                          "description": "The volume id to attach\n",
                                          "example": "vol-1234567"
                                        },
                                        "deviceName": {
                                          "type": "string",
                                          "description": "The device name to attach. When you attach a volume to your instance, you include a device name for the volume.\nDo not use a device name that is reserved for the root volume (for example - `/dev/sda1` or `/dev/xvda`).\n",
                                          "example": "/dev/sdb"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "scaling": {
                            "type": "object",
                            "title": "Elastigroup Scaling",
                            "properties": {
                              "up": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "title": "scale up config",
                                  "required": [
                                    "metricName",
                                    "namespace"
                                  ],
                                  "properties": {
                                    "policyName": {
                                      "type": "string",
                                      "description": "The policy name.\n",
                                      "example": "my-up-policy"
                                    },
                                    "namespace": {
                                      "type": "string",
                                      "description": "The namespace for the alarm's associated metric.\n",
                                      "default": "AWS/EC2"
                                    },
                                    "source": {
                                      "type": "string",
                                      "description": "The metric source.\n",
                                      "enum": [
                                        "spectrum",
                                        "cloudWatch"
                                      ],
                                      "example": "spectrum"
                                    },
                                    "metricName": {
                                      "type": "string",
                                      "description": "The name of the metric.\n",
                                      "default": "CPUUtilization",
                                      "example": "CPUUtilization"
                                    },
                                    "statistic": {
                                      "type": "string",
                                      "description": "The metric statistics to return.\n",
                                      "enum": [
                                        "average",
                                        "sum",
                                        "sampleCount",
                                        "maximum",
                                        "minimum",
                                        "percentile"
                                      ],
                                      "example": "average"
                                    },
                                    "extendedStatistic": {
                                      "type": "string",
                                      "description": "Percentile statistic. Valid values: p0.1 - p100.\n",
                                      "example": "p1.5"
                                    },
                                    "unit": {
                                      "type": "string",
                                      "description": "The unit for the alarm's associated metric.\n",
                                      "enum": [
                                        "seconds",
                                        "microseconds",
                                        "milliseconds",
                                        "bytes",
                                        "kilobytes",
                                        "megabytes",
                                        "gigabytes",
                                        "terabytes",
                                        "bits",
                                        "kilobits",
                                        "megabits",
                                        "gigabits",
                                        "terabits",
                                        "percent",
                                        "count",
                                        "bytes/second",
                                        "kilobytes/second",
                                        "megabytes/second",
                                        "gigabytes/second",
                                        "terabytes/second",
                                        "bits/second",
                                        "kilobits/second",
                                        "megabits/second",
                                        "gigabits/second",
                                        "terabits/second",
                                        "count/second",
                                        "none"
                                      ],
                                      "example": "percent"
                                    },
                                    "threshold": {
                                      "type": "integer",
                                      "description": "The value against which the specified statistic is compared.\n",
                                      "example": 90
                                    },
                                    "adjustment": {
                                      "type": "integer",
                                      "description": "The number associated with the specified adjustment type.\n"
                                    },
                                    "stepAdjustments": {
                                      "type": "array",
                                      "description": "The list of steps to define actions to take based on different thresholds.\nWhen set, policy-level threshold and action cannot be specified.\nIf specified, at least one step should be defined.\n",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "threshold"
                                        ],
                                        "properties": {
                                          "action": {
                                            "type": "object",
                                            "required": [
                                              "type"
                                            ],
                                            "description": "The action to take when scale up according to step's threshold is needed.\nA mandatory field, that should be filled with one of the following:\n\"adjustment\", \"percentageAdjustment\", \"setMinTarget\", \"updateCapacity\".\n",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "description": "The type of the action to take when scale up is needed.\n",
                                                "enum": [
                                                  "adjustment",
                                                  "updateCapacity",
                                                  "setMinTarget",
                                                  "percentageAdjustment"
                                                ],
                                                "example": "setMinTarget"
                                              },
                                              "adjustment": {
                                                "type": "integer",
                                                "description": "The number / percentage associated with the specified adjustment type.\nRequired if using `adjustment` or `percentageAdjustment` as action type\n",
                                                "example": 2
                                              },
                                              "minTargetCapacity": {
                                                "type": "integer",
                                                "description": "The desired target capacity of a group.\nRequired if using `setMinTarget` as action type\n",
                                                "example": 3
                                              },
                                              "target": {
                                                "type": "integer",
                                                "description": "The desired number of instances. Required if using `updateCapacity` as action type and neither `minimum` nor `maximum` are not defined.\n",
                                                "example": 3
                                              },
                                              "minimum": {
                                                "type": "integer",
                                                "description": "The lower limit number of instances that you can scale down to. Optional, required if using `updateCapacity` as action type and neither `target` nor `maximum` are not defined\n",
                                                "example": 4
                                              },
                                              "maximum": {
                                                "type": "integer",
                                                "description": "The upper limit number of instances that you can scale up to. Optional, required if using `updateCapacity` as action type and neither `target` nor `minimum` are not defined\n",
                                                "example": 10
                                              }
                                            }
                                          },
                                          "threshold": {
                                            "type": "integer",
                                            "description": "The value against which the specified statistic is compared in order\nto determine if a step should be applied.\n",
                                            "example": 50
                                          }
                                        }
                                      }
                                    },
                                    "action": {
                                      "type": "object",
                                      "required": [
                                        "type"
                                      ],
                                      "description": "The action to take when scale up is needed.\nA mandatory field, that should be filled with one of the following:\n\"adjustment\", \"percentageAdjustment\", \"setMaxTarget\", \"setMinTarget\", \"updateCapacity\".\n",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "description": "The type of the action to take when scale up is needed.\n",
                                          "enum": [
                                            "adjustment",
                                            "updateCapacity",
                                            "setMinTarget",
                                            "percentageAdjustment"
                                          ],
                                          "example": "updateCapacity"
                                        },
                                        "adjustment": {
                                          "type": "integer",
                                          "description": "The number / percentage associated with the specified adjustment type.\nRequired if using `adjustment` or `percentageAdjustment` as action type\n",
                                          "example": 1
                                        },
                                        "minTargetCapacity": {
                                          "type": "integer",
                                          "description": "The minimum target capacity.\nRequired if using `setMinTarget` as action type.\n",
                                          "example": 1
                                        },
                                        "target": {
                                          "type": "integer",
                                          "description": "The desired number of instances. Required if using `updateCapacity` as action type and neither `minimum` nor `maximum` are defined.\n",
                                          "example": 1
                                        },
                                        "minimum": {
                                          "type": "integer",
                                          "description": "The lower limit number of instances that you can scale down to. Optional, required if using `updateCapacity` as action type and neither `target` nor `maximum` are defined\n",
                                          "example": 0
                                        },
                                        "maximum": {
                                          "type": "integer",
                                          "description": "The upper limit number of instances that you can scale up to. Optional, required if using `updateCapacity` as action type and neither `target` nor `minimum` are defined\n",
                                          "example": 5
                                        }
                                      }
                                    },
                                    "minTargetCapacity": {
                                      "type": "integer",
                                      "description": "The minimum target capacity.\n"
                                    },
                                    "dimensions": {
                                      "type": "array",
                                      "description": "The dimensions for the alarm's associated metric.\nWhen name is \"instanceId\", no value is needed.\n",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "name"
                                        ],
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "InstanceId"
                                          },
                                          "value": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "period": {
                                      "type": "integer",
                                      "description": "The period in seconds over which the statistic is applied.\n",
                                      "example": 300
                                    },
                                    "evaluationPeriods": {
                                      "type": "integer",
                                      "description": "The number of periods over which data is compared to the specified threshold.\n",
                                      "example": 1
                                    },
                                    "cooldown": {
                                      "type": "integer",
                                      "description": "The amount of time, in seconds, after a scaling activity completes before any further trigger-related scaling activities can start.\n",
                                      "example": 300
                                    },
                                    "operator": {
                                      "type": "string",
                                      "description": "The operator to use in order to determine if the scaling policy is applicable.\n",
                                      "enum": [
                                        "gt",
                                        "gte",
                                        "lt",
                                        "lte"
                                      ],
                                      "example": "gte"
                                    },
                                    "isEnabled": {
                                      "type": "boolean",
                                      "description": "Specifies whether the scaling policy described in this block is enabled.\n",
                                      "default": true,
                                      "example": true
                                    }
                                  }
                                }
                              },
                              "down": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "title": "scale down config",
                                  "properties": {
                                    "policyName": {
                                      "type": "string",
                                      "description": "The policy name.\n",
                                      "example": "my-down-policy"
                                    },
                                    "namespace": {
                                      "type": "string",
                                      "description": "The namespace for the alarm's associated metric.\n",
                                      "default": "AWS/EC2"
                                    },
                                    "source": {
                                      "type": "string",
                                      "description": "The metric source.\n",
                                      "enum": [
                                        "spectrum",
                                        "cloudWatch"
                                      ],
                                      "example": "spectrum"
                                    },
                                    "metricName": {
                                      "type": "string",
                                      "description": "The name of the metric.\n",
                                      "default": "CPUUtilization",
                                      "example": "CPUUtilization"
                                    },
                                    "statistic": {
                                      "type": "string",
                                      "description": "The metric statistics to return.\n",
                                      "enum": [
                                        "average",
                                        "sum",
                                        "sampleCount",
                                        "maximum",
                                        "minimum",
                                        "percentile"
                                      ],
                                      "example": "average"
                                    },
                                    "extendedStatistic": {
                                      "type": "string",
                                      "description": "Percentile statistic. Valid values: p0.1 - p100.\n",
                                      "example": "p1.5"
                                    },
                                    "unit": {
                                      "type": "string",
                                      "description": "The unit for the alarm's associated metric.\n",
                                      "enum": [
                                        "seconds",
                                        "microseconds",
                                        "milliseconds",
                                        "bytes",
                                        "kilobytes",
                                        "megabytes",
                                        "gigabytes",
                                        "terabytes",
                                        "bits",
                                        "kilobits",
                                        "megabits",
                                        "gigabits",
                                        "terabits",
                                        "percent",
                                        "count",
                                        "bytes/second",
                                        "kilobytes/second",
                                        "megabytes/second",
                                        "gigabytes/second",
                                        "terabytes/second",
                                        "bits/second",
                                        "kilobits/second",
                                        "megabits/second",
                                        "gigabits/second",
                                        "terabits/second",
                                        "count/second",
                                        "none"
                                      ],
                                      "example": "percent"
                                    },
                                    "threshold": {
                                      "type": "integer",
                                      "description": "The value against which the specified statistic is compared.\n",
                                      "example": 90
                                    },
                                    "adjustment": {
                                      "type": "integer",
                                      "description": "The number associated with the specified adjustment type.\n"
                                    },
                                    "stepAdjustments": {
                                      "type": "array",
                                      "description": "The list of steps to define actions to take based on different thresholds.\nWhen set, policy-level threshold and action cannot be specified.\nIf specified, at least one step should be defined.\n",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "threshold"
                                        ],
                                        "properties": {
                                          "action": {
                                            "type": "object",
                                            "required": [
                                              "type"
                                            ],
                                            "description": "The action to take when scale down according to step's threshold is needed.\nA mandatory field, that should be filled with one of the following:\n\"adjustment\", \"percentageAdjustment\", \"setMaxTarget\", \"updateCapacity\".\n",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "description": "The type of the action to take when scale down is needed.\n",
                                                "enum": [
                                                  "adjustment",
                                                  "updateCapacity",
                                                  "setMaxTarget",
                                                  "percentageAdjustment"
                                                ],
                                                "example": "percentageAdjustment"
                                              },
                                              "adjustment": {
                                                "type": "integer",
                                                "description": "The number / percentage associated with the specified adjustment type.\nRequired if using `adjustment` or `percentageAdjustment` as action type\n",
                                                "example": 40
                                              },
                                              "maxTargetCapacity": {
                                                "type": "integer",
                                                "description": "The desired target capacity of.\nRequired if using `setMaxTarget` as action type\n",
                                                "example": 1
                                              },
                                              "target": {
                                                "type": "integer",
                                                "description": "The desired number of instances. Required if using `updateCapacity` as action type and neither `minimum` nor `maximum` are defined.\n",
                                                "example": 2
                                              },
                                              "minimum": {
                                                "type": "integer",
                                                "description": "The lower limit number of instances that you can scale down to. Optional, required if using `updateCapacity` as action type and neither `target` nor `maximum` are defined\n",
                                                "example": 1
                                              },
                                              "maximum": {
                                                "type": "integer",
                                                "description": "The upper limit number of instances that you can scale up to. Optional, required if using `updateCapacity` as action type and neither `target` nor `minimum` are defined\n",
                                                "example": 5
                                              }
                                            }
                                          },
                                          "threshold": {
                                            "type": "integer",
                                            "description": "The value against which the specified statistic is compared in order\nto determine if a step should be applied.\n",
                                            "example": 10
                                          }
                                        }
                                      }
                                    },
                                    "action": {
                                      "type": "object",
                                      "required": [
                                        "type"
                                      ],
                                      "description": "The action to take when scale up is needed.\nA mandatory field, that should be filled with one of the following:\n\"adjustment\", \"percentageAdjustment\", \"setMaxTarget\", \"setMinTarget\", \"updateCapacity\".\n",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "description": "The type of the action to take when scale up is needed.\n",
                                          "enum": [
                                            "adjustment",
                                            "updateCapacity",
                                            "setMinTarget",
                                            "percentageAdjustment"
                                          ],
                                          "example": "updateCapacity"
                                        },
                                        "adjustment": {
                                          "type": "integer",
                                          "description": "The number / percentage associated with the specified adjustment type.\nRequired if using `adjustment` or `percentageAdjustment` as action type.\n",
                                          "example": 1
                                        },
                                        "maxTargetCapacity": {
                                          "type": "integer",
                                          "description": "The maximum target capacity.\nRequired if using `setMaxTarget` as action type.\n",
                                          "example": 1
                                        },
                                        "target": {
                                          "type": "integer",
                                          "description": "The desired number of instances. Required if using `updateCapacity` as action type and neither `minimum` nor `maximum` are defined.\n",
                                          "example": 1
                                        },
                                        "minimum": {
                                          "type": "integer",
                                          "description": "The lower limit number of instances that you can scale down to. Optional, required if using `updateCapacity` as action type and neither minimum nor maximum are defined.\n",
                                          "example": 0
                                        },
                                        "maximum": {
                                          "type": "integer",
                                          "description": "The upper limit number of instances that you can scale up to. Optional, required if using `updateCapacity` as action type and neither minimum nor maximum are defined.\n",
                                          "example": 5
                                        }
                                      }
                                    },
                                    "maxTargetCapacity": {
                                      "type": "integer",
                                      "description": "The maximum target capacity.\n"
                                    },
                                    "dimensions": {
                                      "type": "array",
                                      "description": "The dimensions for the alarm's associated metric.\nWhen name is \"instanceId\", no value is needed.\n",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "name"
                                        ],
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "InstanceId"
                                          },
                                          "value": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "period": {
                                      "type": "integer",
                                      "description": "The period in seconds over which the statistic is applied.\n",
                                      "example": 300
                                    },
                                    "evaluationPeriods": {
                                      "type": "integer",
                                      "description": "The number of periods over which data is compared to the specified threshold.\n",
                                      "example": 1
                                    },
                                    "cooldown": {
                                      "type": "integer",
                                      "description": "The amount of time, in seconds, after a scaling activity completes and before any further trigger-related scaling activities can start.\n",
                                      "example": 300
                                    },
                                    "operator": {
                                      "type": "string",
                                      "description": "The operator to use in order to determine if the scaling policy is applicable.\n",
                                      "enum": [
                                        "gt",
                                        "gte",
                                        "lt",
                                        "lte"
                                      ],
                                      "example": "gte"
                                    },
                                    "isEnabled": {
                                      "type": "boolean",
                                      "description": "Specifies whether the scaling policy described in this block is enabled.\n",
                                      "default": true,
                                      "example": true
                                    }
                                  }
                                }
                              },
                              "multipleMetrics": {
                                "type": "object",
                                "properties": {
                                  "metrics": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "title": "Metric config",
                                      "required": [
                                        "name",
                                        "metricName",
                                        "namespace"
                                      ],
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The metric name.\n",
                                          "example": "metric1"
                                        },
                                        "metricName": {
                                          "type": "string",
                                          "description": "The name of the source metric.\n",
                                          "example": "CPUUtilization"
                                        },
                                        "namespace": {
                                          "type": "string",
                                          "description": "The namespace for the alarm's associated metric.\n",
                                          "default": "AWS/EC2"
                                        },
                                        "statistic": {
                                          "type": "string",
                                          "description": "The metric statistics to return.\n",
                                          "enum": [
                                            "average",
                                            "sum",
                                            "sampleCount",
                                            "maximum",
                                            "minimum",
                                            "percentile"
                                          ],
                                          "example": "average"
                                        },
                                        "extendedStatistic": {
                                          "type": "string",
                                          "description": "Percentile statistic. Valid values: p0.1 - p100.\n",
                                          "example": "p1.5"
                                        },
                                        "unit": {
                                          "type": "string",
                                          "description": "The unit for the alarm's associated metric.\n",
                                          "enum": [
                                            "seconds",
                                            "microseconds",
                                            "milliseconds",
                                            "bytes",
                                            "kilobytes",
                                            "megabytes",
                                            "gigabytes",
                                            "terabytes",
                                            "bits",
                                            "kilobits",
                                            "megabits",
                                            "gigabits",
                                            "terabits",
                                            "percent",
                                            "count",
                                            "bytes/second",
                                            "kilobytes/second",
                                            "megabytes/second",
                                            "gigabytes/second",
                                            "terabytes/second",
                                            "bits/second",
                                            "kilobits/second",
                                            "megabits/second",
                                            "gigabits/second",
                                            "terabits/second",
                                            "count/second",
                                            "none"
                                          ],
                                          "example": "percent"
                                        },
                                        "dimensions": {
                                          "type": "array",
                                          "description": "The dimensions for the alarm's associated metric.\nWhen name is \"instanceId\", no value is needed.\n",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "name"
                                            ],
                                            "properties": {
                                              "name": {
                                                "type": "string",
                                                "example": "InstanceId"
                                              },
                                              "value": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "expressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "title": "Expression config",
                                      "required": [
                                        "name",
                                        "expression"
                                      ],
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The expression name.\n",
                                          "example": "e1"
                                        },
                                        "expression": {
                                          "type": "string",
                                          "description": "An expression consisting of the metric names listed in the 'metrics' array.\n",
                                          "example": "metric1+10"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "target": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "title": "target scaling config",
                                  "required": [
                                    "policyName",
                                    "namespace",
                                    "metricName",
                                    "target"
                                  ],
                                  "properties": {
                                    "source": {
                                      "title": "Source",
                                      "description": "The source of the metric.\n",
                                      "enum": [
                                        "cloudWatch",
                                        "spectrum"
                                      ],
                                      "type": "string",
                                      "example": "spectrum"
                                    },
                                    "policyName": {
                                      "type": "string",
                                      "description": "The policy name\n",
                                      "example": "my-target-scaling-policy"
                                    },
                                    "metricName": {
                                      "type": "string",
                                      "description": "The name of the metric.\n",
                                      "default": "CPUUtilization",
                                      "example": "CPUUtilization"
                                    },
                                    "statistic": {
                                      "type": "string",
                                      "description": "The metric statistics to return.\n",
                                      "enum": [
                                        "average",
                                        "sum",
                                        "sampleCount",
                                        "maximum",
                                        "minimum",
                                        "percentile"
                                      ],
                                      "example": "average"
                                    },
                                    "unit": {
                                      "type": "string",
                                      "description": "The unit for the alarm's associated metric.\n",
                                      "enum": [
                                        "seconds",
                                        "microseconds",
                                        "milliseconds",
                                        "bytes",
                                        "kilobytes",
                                        "megabytes",
                                        "gigabytes",
                                        "terabytes",
                                        "bits",
                                        "kilobits",
                                        "megabits",
                                        "gigabits",
                                        "terabits",
                                        "percent",
                                        "count",
                                        "bytes/second",
                                        "kilobytes/second",
                                        "megabytes/second",
                                        "gigabytes/second",
                                        "terabytes/second",
                                        "bits/second",
                                        "kilobits/second",
                                        "megabits/second",
                                        "gigabits/second",
                                        "terabits/second",
                                        "count/second",
                                        "none"
                                      ],
                                      "example": "percent"
                                    },
                                    "namespace": {
                                      "type": "string",
                                      "description": "The namespace for the alarm's associated metric.\n",
                                      "default": "AWS/EC2"
                                    },
                                    "dimensions": {
                                      "type": "array",
                                      "description": "The dimensions for the alarm's associated metric.\nWhen name is \"instanceId\", no value is needed.\n",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "name"
                                        ],
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "InstanceId"
                                          },
                                          "value": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "period": {
                                      "type": "integer",
                                      "description": "The period in seconds over which the statistic is applied.\n",
                                      "example": 300
                                    },
                                    "evaluationPeriods": {
                                      "type": "integer",
                                      "description": "The number of periods over which data is compared to the specified threshold.\n",
                                      "example": 1
                                    },
                                    "cooldown": {
                                      "type": "integer",
                                      "description": "The amount of time, in seconds, after a scaling activity completes before any further trigger-related scaling activities can start.\n",
                                      "example": 300
                                    },
                                    "target": {
                                      "type": "integer",
                                      "description": "The target value for the group.\n",
                                      "example": 1
                                    },
                                    "predictive": {
                                      "type": "object",
                                      "description": "Enable predictive autoscaling.\n",
                                      "required": [
                                        "mode"
                                      ],
                                      "properties": {
                                        "mode": {
                                          "description": "Predictive autoscaling mode.\n",
                                          "enum": [
                                            "FORECAST_AND_SCALE",
                                            "FORECAST_ONLY"
                                          ],
                                          "type": "string",
                                          "example": "FORECAST_AND_SCALE"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "scheduling": {
                            "type": "object",
                            "title": "Elastigroup Scheduling",
                            "description": "Schedule tasks to execute, using CRON expressions.\n",
                            "properties": {
                              "tasks": {
                                "type": "array",
                                "description": "The scheduling tasks for the group.\n",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "isEnabled": {
                                      "type": "boolean",
                                      "description": "Describes whether the task is enabled. When true the task should run when false it should not run.\n",
                                      "example": true
                                    },
                                    "startTime": {
                                      "type": "string",
                                      "description": "DATETIME in ISO-8601 format and is in UTC time. Sets a start time for scheduled actions.\nIf \"frequency\" or \"cronExpression\" are not used - the task will run only once at the start time and will then be deleted from the group configuration.\n",
                                      "example": "2018-05-23T10:55:09Z"
                                    },
                                    "frequency": {
                                      "type": "string",
                                      "description": "The recurrence frequency to run this task.\nOnly one of ‘frequency' or ‘cronExpression' should be used at a time\n",
                                      "enum": [
                                        "hourly",
                                        "daily",
                                        "weekly"
                                      ],
                                      "example": "hourly"
                                    },
                                    "cronExpression": {
                                      "type": "string",
                                      "description": "A valid cron expression.\nThe cron is running in UTC time zone and is in Unix cron format Cron Expression Validator Script.\nOnly one of ‘frequency' or ‘cronExpression' should be used at a time.\n",
                                      "example": "0 1 * * *"
                                    },
                                    "taskType": {
                                      "type": "string",
                                      "description": "The task type to run. For stateful groups, use only those who has a `stateful` prefix, or `backup_ami`. For non-stateful group, use the rest.\n",
                                      "enum": [
                                        "backup_ami",
                                        "scale",
                                        "scaleUp",
                                        "percentageScaleUp",
                                        "scaleDown",
                                        "percentageScaleDown",
                                        "roll",
                                        "clusterRoll (For ECS Integration)",
                                        "statefulUpdateCapacity",
                                        "statefulRecycle"
                                      ],
                                      "example": "scale"
                                    },
                                    "scaleTargetCapacity": {
                                      "type": "integer",
                                      "description": "The target capacity of the group.\nShould be used when choosing ‘taskType' of ‘scale'.\n"
                                    },
                                    "scaleMinCapacity": {
                                      "type": "integer",
                                      "description": "The min capacity of the group.\nShould be used when choosing ‘taskType' of ‘scale'.\n"
                                    },
                                    "scaleMaxCapacity": {
                                      "type": "integer",
                                      "description": "The max capacity of the group.\nRequired when ‘taskType' is ‘scale'.\n"
                                    },
                                    "targetCapacity": {
                                      "type": "integer",
                                      "description": "Set a new target capacity for the Elastigroup.\nRequired when ‘taskType' is ‘statefulUpdateCapacity'.\n"
                                    },
                                    "MinCapacity": {
                                      "type": "integer",
                                      "description": "Set a new minimum capacity for the Elastigroup.\nRequired when ‘taskType' is ‘statefulUpdateCapacity'.\n"
                                    },
                                    "MaxCapacity": {
                                      "type": "integer",
                                      "description": "Set a new maximum capacity for the Elastigroup.\nRequired when ‘taskType' is ‘statefulUpdateCapacity'.\n"
                                    },
                                    "batchSizePercentage": {
                                      "type": "integer",
                                      "description": "The percentage size of each batch in the scheduled deployment roll.\nRequired when the taskType is roll.\n"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "thirdPartiesIntegration": {
                            "type": "object",
                            "title": "Elastigroup Third Party Integrations",
                            "description": "All definitions for using third-party Integrations\n",
                            "properties": {
                              "rancher": {
                                "type": "object",
                                "description": "Rancher integration object.\n",
                                "properties": {
                                  "masterHost": {
                                    "type": "string",
                                    "description": "Rancher master url\n",
                                    "example": "http://myRancher.com:8080/v1"
                                  },
                                  "accessKey": {
                                    "type": "string",
                                    "description": "Rancher version\n",
                                    "example": "1",
                                    "default": "1"
                                  },
                                  "secretKey": {
                                    "type": "string",
                                    "example": "SECRET"
                                  },
                                  "version": {
                                    "type": "string",
                                    "example": 1
                                  }
                                }
                              },
                              "kubernetes": {
                                "type": "object",
                                "properties": {
                                  "integrationMode": {
                                    "type": "string",
                                    "example": "pod"
                                  },
                                  "clusterIdentifier": {
                                    "type": "string",
                                    "example": "test-k8s"
                                  },
                                  "autoScale": {
                                    "type": "object",
                                    "properties": {
                                      "isEnabled": {
                                        "type": "boolean",
                                        "example": true,
                                        "default": true
                                      },
                                      "cooldown": {
                                        "type": "integer",
                                        "example": 300
                                      },
                                      "down": {
                                        "type": "object",
                                        "description": "Auto Scaling scale down operations.\n",
                                        "properties": {
                                          "evaluationPeriods": {
                                            "type": "integer",
                                            "example": 5
                                          },
                                          "maxScaleDownPercentage": {
                                            "type": "integer",
                                            "description": "The maximum % of nodes that will be scaled down at once out of the total amount of potential nodes to scale down.\nexample: if 10 nodes can be scaled down, only 5 will be given 50% in this parameter.\nthe other 50% will be scaled down in the next autoscaling iteration.\n",
                                            "example": 70
                                          },
                                          "headroom": {
                                            "type": "object",
                                            "description": "Spare resource capacity management enabling fast assignment of Pods without waiting for new resources to launch.\n",
                                            "properties": {
                                              "cpuPerUnit": {
                                                "type": "integer",
                                                "description": "Optionally configure the number of CPUs to allocate per headroom unit. CPUs are denoted in CPU units, where 1024 units = 1 vCPU.\n",
                                                "example": 2048
                                              },
                                              "memoryPerUnit": {
                                                "type": "integer",
                                                "description": "Optionally configure the amount of memory (MiB) to allocate per headroom unit.\n",
                                                "example": 3
                                              },
                                              "numOfUnits": {
                                                "type": "integer",
                                                "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n",
                                                "example": 2
                                              },
                                              "gpuPerUnit": {
                                                "type": "integer",
                                                "example": 2
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "labels": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "key": {
                                              "type": "string",
                                              "example": "group, kops.k8s.io/instancegroup"
                                            },
                                            "value": {
                                              "type": "string",
                                              "example": "microservices"
                                            }
                                          }
                                        }
                                      },
                                      "isAutoConfig": {
                                        "type": "boolean",
                                        "example": false,
                                        "default": false
                                      }
                                    }
                                  }
                                }
                              },
                              "nomad": {
                                "type": "object",
                                "properties": {
                                  "masterHost": {
                                    "type": "string",
                                    "example": "https://master.host.com"
                                  },
                                  "masterPort": {
                                    "type": "integer",
                                    "example": 443
                                  },
                                  "autoScale": {
                                    "type": "object",
                                    "properties": {
                                      "isEnabled": {
                                        "type": "boolean",
                                        "description": "Enable the Autoscaler.\n",
                                        "example": true
                                      },
                                      "cooldown": {
                                        "type": "integer",
                                        "description": "Cooldown period between scaling actions. Value should be cooldown period in seconds, greater than 180\n",
                                        "example": 180
                                      },
                                      "down": {
                                        "type": "object",
                                        "description": "Auto Scaling scale down operations.\n",
                                        "properties": {
                                          "evaluationPeriods": {
                                            "type": "integer",
                                            "example": 3
                                          }
                                        }
                                      },
                                      "headroom": {
                                        "type": "object",
                                        "description": "Spare resource capacity management enabling fast assignment of Pods without waiting for new resources to launch.\n",
                                        "properties": {
                                          "cpuPerUnit": {
                                            "type": "integer",
                                            "description": "Optionally configure the number of CPUs to allocate per headroom unit. CPUs are denoted in CPU units, where 1024 units = 1 vCPU.\n",
                                            "example": 2048
                                          },
                                          "memoryPerUnit": {
                                            "type": "integer",
                                            "description": "Optionally configure the amount of memory (MiB) to allocate per headroom unit.\n",
                                            "example": 3
                                          },
                                          "numOfUnits": {
                                            "type": "integer",
                                            "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n",
                                            "example": 2
                                          }
                                        }
                                      },
                                      "constraints": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "key": {
                                              "type": "string",
                                              "example": "${node.class}"
                                            },
                                            "value": {
                                              "type": "string",
                                              "example": "value"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "aclToken": {
                                    "type": "string",
                                    "example": 123
                                  },
                                  "tlsConfig": {
                                    "type": "object",
                                    "description": "Configuration object for TLS integration. (optional)\n",
                                    "properties": {
                                      "tlsEnabled": {
                                        "type": "boolean",
                                        "example": true,
                                        "description": "When true, all communication to the master is with TLS. (required)\n"
                                      },
                                      "privateKey": {
                                        "type": "string",
                                        "example": "PRIVATE KEY CERTIFICATE STR",
                                        "description": "A generated client private key. (required)\n"
                                      },
                                      "certificate": {
                                        "type": "string",
                                        "example": "PUBLIC KEY CERTIFICATE STR",
                                        "description": "The certificates chain, first the client certificate then the ca certificate. (required)\n"
                                      }
                                    }
                                  }
                                }
                              },
                              "opsWorks": {
                                "type": "object",
                                "properties": {
                                  "layerId": {
                                    "type": "string",
                                    "example": "00d9m815-8aac-62b7-cc01-123456, xxxxxx-xxxxxxxx, xxxxxxx-xxxxxxxxxx"
                                  },
                                  "stackType": {
                                    "type": "string",
                                    "example": "CLASSIC"
                                  }
                                }
                              },
                              "codeDeploy": {
                                "type": "object",
                                "properties": {
                                  "cleanUpOnFailure": {
                                    "type": "boolean",
                                    "example": false
                                  },
                                  "terminateInstanceOnFailure": {
                                    "type": "boolean",
                                    "example": false
                                  },
                                  "deploymentGroups": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "applicationName": {
                                          "type": "string",
                                          "example": "test-app"
                                        },
                                        "deploymentGroupName": {
                                          "type": "string",
                                          "example": "test-grp"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "route53": {
                                "type": "object",
                                "description": "Route53 integration object.\n",
                                "properties": {
                                  "domains": {
                                    "type": "array",
                                    "description": "Route53 domain configurations.\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "hostedZoneId": {
                                          "type": "string",
                                          "description": "The Route53 Hosted Zone ID for the registered domain.\n",
                                          "example": "Z3UFMBCGJMYLUT"
                                        },
                                        "spotinstAccountId": {
                                          "type": "string",
                                          "description": "The Spot account ID that is linked to the AWS account that holds the Route53 hosted Zone ID.\nThe default is the user Spot account provided as a URL parameter.\n",
                                          "example": "act-1234abcd"
                                        },
                                        "recordSetType": {
                                          "type": "string",
                                          "description": "Set the type of recordSet to update.\nValid values:\n* \"a\" - means register and de-register of instances done by IP address (IPv4).\nWhen it is \"a\" you should also specify usePublicIp.\n* \"cname\" - register and de-register of instances done by CNAME. When it is \"cname\", you should also specify usePublicDns.\n",
                                          "enum": [
                                            "a",
                                            "cname"
                                          ],
                                          "example": "a",
                                          "default": "a"
                                        },
                                        "recordSets": {
                                          "type": "array",
                                          "description": "List of record sets.\n",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "type": "string",
                                                "description": "Name of the recordSet.\n",
                                                "example": "testcname.spot.io."
                                              },
                                              "usePublicIp": {
                                                "type": "boolean",
                                                "description": "Defines whether to use public or private IP. Relevant only when recordSetType=a.\n",
                                                "example": true,
                                                "default": false
                                              },
                                              "usePublicDns": {
                                                "type": "boolean",
                                                "description": "Defines whether to use a public DNS or private DNS in the instance registration process.\nRelevant only when recordSetType=cname.\n* False=Create a new weighted CNAME recordset with same name and the instance Private DNS.\n* True=instances should be registered with public DNS.\n",
                                                "example": true,
                                                "default": false
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "elasticBeanstalk": {
                                "type": "object",
                                "description": "Beanstalk integration object.\n",
                                "properties": {
                                  "environmentId": {
                                    "type": "string",
                                    "example": "e-12345"
                                  },
                                  "deploymentPreferences": {
                                    "type": "object",
                                    "properties": {
                                      "automaticRoll": {
                                        "type": "boolean",
                                        "example": true
                                      },
                                      "batchSizePercentage": {
                                        "type": "integer",
                                        "example": 50
                                      },
                                      "gracePeriod": {
                                        "type": "integer",
                                        "example": 600
                                      },
                                      "strategy": {
                                        "type": "object",
                                        "properties": {
                                          "action": {
                                            "type": "string",
                                            "example": "REPLACE_SERVER"
                                          },
                                          "shouldDrainInstances": {
                                            "type": "boolean",
                                            "example": true
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "managedActions": {
                                    "type": "object",
                                    "properties": {
                                      "platformUpdate": {
                                        "type": "object",
                                        "properties": {
                                          "performAt": {
                                            "type": "string",
                                            "example": "timeWindow"
                                          },
                                          "timeWindow": {
                                            "type": "string",
                                            "example": "Mon:23:50-Tue:00:20"
                                          },
                                          "updateLevel": {
                                            "type": "string",
                                            "example": "patch"
                                          },
                                          "instanceRefreshEnabled": {
                                            "type": "boolean",
                                            "example": true
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "ecs": {
                                "type": "object",
                                "description": "ECS integration object.\n",
                                "properties": {
                                  "clusterName": {
                                    "type": "string",
                                    "example": "test-ecs",
                                    "description": "ECS cluster name\n"
                                  },
                                  "autoScale": {
                                    "type": "object",
                                    "title": "ECS Autoscaler",
                                    "description": "The ECS Autoscaler properties.\n",
                                    "required": [
                                      "isEnabled"
                                    ],
                                    "properties": {
                                      "isEnabled": {
                                        "type": "boolean",
                                        "description": "Enable the ECS Autoscaler.\n",
                                        "example": true
                                      },
                                      "cooldown": {
                                        "type": "integer",
                                        "description": "Cooldown period between scaling actions. Value should be cooldown period in seconds, greater than 180.\n",
                                        "example": 300
                                      },
                                      "attributes": {
                                        "type": "object",
                                        "properties": {
                                          "key": {
                                            "type": "string",
                                            "example": "the_key"
                                          },
                                          "value": {
                                            "type": "string",
                                            "example": "the_value"
                                          }
                                        }
                                      },
                                      "resourceLimits": {
                                        "type": "object",
                                        "description": "Optionally set upper and lower bounds on the resource usage of the cluster.\n",
                                        "properties": {
                                          "maxMemoryGib": {
                                            "type": "integer",
                                            "description": "The maximum memory in GiB units that can be allocated to the cluster. Minimum value: 1.\n",
                                            "example": 1
                                          },
                                          "maxVcpu": {
                                            "type": "integer",
                                            "description": "The maximum CPU in vCPU units that can be allocated to the cluster. Minimum value: 1.\n",
                                            "example": 1
                                          }
                                        }
                                      },
                                      "down": {
                                        "type": "object",
                                        "description": "Autoscaling scale down operations.\n",
                                        "properties": {
                                          "evaluationPeriods": {
                                            "type": "integer",
                                            "example": 4
                                          },
                                          "maxScaleDownPercentage": {
                                            "type": "integer",
                                            "description": "The maximum portion (as a %) of nodes that will be scaled down at once out of the total number of potential nodes to scale down.\nExample: If there are 10 nodes to scale down and the parameter is 50%, then only 5 nodes will be scaled down at once.\nThe other 5 nodes will be scaled down in the next autoscaling iteration.\n",
                                            "example": 20
                                          }
                                        }
                                      },
                                      "headroom": {
                                        "type": "object",
                                        "description": "Spare resource capacity management enabling fast assignment of pods without waiting for new resources to launch.\n",
                                        "properties": {
                                          "cpuPerUnit": {
                                            "type": "integer",
                                            "description": "Optionally configure the number of CPUs to allocate per headroom unit. CPUs are denoted in CPU units, where 1024 units = 1 vCPU.\n",
                                            "example": 2048
                                          },
                                          "memoryPerUnit": {
                                            "type": "integer",
                                            "description": "Optionally configure the amount of memory (MiB) to allocate per headroom unit.\n",
                                            "example": 3
                                          },
                                          "numOfUnits": {
                                            "type": "integer",
                                            "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n",
                                            "example": 2
                                          }
                                        }
                                      },
                                      "isAutoConfig": {
                                        "type": "boolean",
                                        "description": "Use automatic headroom. When set to true, the values under cluster.autoScaler.headroom are not effective, as Ocean configures and optimizes headroom automatically.\n",
                                        "example": false
                                      },
                                      "shouldScaleDownNonServiceTasks": {
                                        "type": "boolean",
                                        "description": "Option to scale down non-service tasks. If not set, Ocean does not scale down standalone tasks.\n",
                                        "default": false,
                                        "example": true
                                      },
                                      "enableAutomaticAndManualHeadroom": {
                                        "type": "boolean",
                                        "description": "When set to true, both automatic and per custom Virtual Node Group manual headroom to be saved concurrently and independently in the cluster. prerequisite: isAutoConfig must be true\n",
                                        "example": false
                                      }
                                    }
                                  },
                                  "batch": {
                                    "type": "object",
                                    "properties": {
                                      "jobQueueNames": {
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "example": [
                                            "dumpy-big-processing"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "optimizeImages": {
                                    "type": "object",
                                    "properties": {
                                      "shouldOptimizeEcsAmi": {
                                        "type": "boolean",
                                        "example": true
                                      },
                                      "performAt": {
                                        "type": "string",
                                        "description": "Settings for maintenance strategy.\\\nperformAt of type: 'never' OR 'timeWindow' can only be applied to groups with \"availabilityOriented\" OR groups with \"persistence\",\\\nother groups allow either 'always' type or nothing which also means always.\n",
                                        "enum": [
                                          "never",
                                          "always",
                                          "timeWindow"
                                        ],
                                        "example": "timeWindow",
                                        "default": "always"
                                      },
                                      "timeWindows": {
                                        "type": "array",
                                        "description": "When performAt is 'timeWindow':\\\nmust specify a list of 'timeWindows' with at least one time window Each string is in the format of - ddd:hh:mm-ddd:hh:mm\n* ddd = day of week = Sun | Mon | Tue | Wed | Thu | Fri | Sat\n* hh = hour 24 = 0 -23\n* mm = minute = 0 - 59\n",
                                        "items": {
                                          "type": "string",
                                          "example": "Mon:03:00-Wed:02:30"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "dockerSwarm": {
                                "title": "DockerSwarm ThirdPartiesIntegration Object",
                                "type": "object",
                                "description": "DockerSwarm integration object.\n",
                                "properties": {
                                  "masterHost": {
                                    "type": "string",
                                    "example": "swarm1.swarm.com",
                                    "description": "Docker swarm master hostname\n"
                                  },
                                  "masterPort": {
                                    "type": "integer",
                                    "example": 1234,
                                    "description": "Docker swarm master port number\n"
                                  },
                                  "autoScale": {
                                    "type": "object",
                                    "description": "autoScale configuration\n",
                                    "properties": {
                                      "isEnabled": {
                                        "type": "boolean",
                                        "example": "true",
                                        "description": "Specifies whether the scaling policy described in this block is enabled.\n",
                                        "default": true
                                      },
                                      "cooldown": {
                                        "type": "integer",
                                        "example": 300,
                                        "description": "The amount of time, in seconds, after a scaling activity completes before any further trigger-related scaling activities can start.\n"
                                      },
                                      "down": {
                                        "type": "object",
                                        "properties": {
                                          "evaluationPeriods": {
                                            "type": "integer",
                                            "example": 4,
                                            "description": "The number of periods over which data is compared to the specified threshold.\n"
                                          },
                                          "maxScaleDownPercentage": {
                                            "type": "integer",
                                            "example": 20,
                                            "description": "Would represent the maximum % to scale-down.\n",
                                            "minimum": 1,
                                            "maximum": 100
                                          }
                                        }
                                      },
                                      "headroom": {
                                        "type": "object",
                                        "description": "Set custom headroom per Virtual Node Group. provide list of launchSpec.autoScale.headrooms object\n",
                                        "properties": {
                                          "cpuPerUnit": {
                                            "type": "integer",
                                            "description": "configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU\n",
                                            "example": 1000
                                          },
                                          "memoryPerUnit": {
                                            "type": "integer",
                                            "description": "Configure the amount of memory (MiB) to allocate the headroom.\n",
                                            "example": 2048
                                          },
                                          "numOfUnits": {
                                            "type": "integer",
                                            "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n",
                                            "example": 3
                                          }
                                        }
                                      },
                                      "tlsConfig": {
                                        "type": "object",
                                        "properties": {
                                          "tlsEnabled": {
                                            "type": "boolean",
                                            "example": true
                                          },
                                          "privateKey": {
                                            "type": "string",
                                            "example": "PRIVATE KEY CERTIFICATE STR"
                                          },
                                          "certificate": {
                                            "type": "string",
                                            "example": "PUBLIC KEY CERTIFICATE STR"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "jenkins": {
                                "title": "Jenkins ThirdPartiesIntegration Object",
                                "type": "object",
                                "description": "Jenkins integration object.\n",
                                "properties": {
                                  "connectionMethod": {
                                    "type": "object",
                                    "description": "Connection method configuration, define how Jenkins orchestrator and elastigroup with Jenkins integration will connect and communicate\n",
                                    "properties": {
                                      "jnlp": {
                                        "type": "object",
                                        "properties": {
                                          "masterIP": {
                                            "type": "string",
                                            "example": "210.4.5.1",
                                            "description": "Jenkins orchestrator ip adress\n"
                                          },
                                          "masterPort": {
                                            "type": "string",
                                            "example": "8080",
                                            "description": "Jenkins orchestrator listening port (usually 8080)\n"
                                          },
                                          "password": {
                                            "type": "string",
                                            "example": "foo",
                                            "description": "Jenkins orchestrator password, when set, `userName` is required\n"
                                          },
                                          "userName": {
                                            "type": "string",
                                            "example": "foo",
                                            "description": "Jenkins orchestrator userName, when set, `password` is required\n"
                                          },
                                          "token": {
                                            "type": "string",
                                            "example": "1234",
                                            "description": "Jenkins orchestrator authentication token. Set both `token` and `password` is not allowed\n"
                                          }
                                        }
                                      },
                                      "ssh": {
                                        "type": "object",
                                        "properties": {
                                          "sshPublicKey": {
                                            "type": "string",
                                            "example": "ssh-rsa AAAAB3NzaC1y...",
                                            "description": "public key for SSH connection\n"
                                          }
                                        }
                                      },
                                      "manuallyConnection": {
                                        "type": "boolean",
                                        "example": "true",
                                        "description": "When set to `true`, startup-script for elsatigroup with jenkins integration need to be define manually by the user in `compute.launchSpecification.userData`\n"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "logging": {
                            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/requestBody/content/application~1json/schema/properties/group/properties/logging"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "kind": {
                              "type": "string",
                              "example": "spotinst:aws:ec2:group"
                            },
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/requestBody/content/application~1json/schema"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List All Elastigroups",
        "description": "List all AWS Elastigroups for a Spot Account\n",
        "operationId": "elastigroupAwsListAll",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "List All Groups Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "67582d0c-108b-4ef7-9fdc-d39678a30844",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-01-07T07:30:58.622Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "anyOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "ID",
                                            "example": "sig-1234567"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "EG Name",
                                            "example": "EG name"
                                          },
                                          "description": {
                                            "type": "string",
                                            "description": "Description",
                                            "example": "validation"
                                          },
                                          "capacity": {
                                            "type": "object",
                                            "description": "Capacity",
                                            "properties": {
                                              "minimum": {
                                                "type": "integer",
                                                "description": "Minimum Value",
                                                "example": 1
                                              },
                                              "maximum": {
                                                "type": "integer",
                                                "description": "Maximum Value",
                                                "example": 1
                                              },
                                              "target": {
                                                "type": "integer",
                                                "description": "Target Value",
                                                "example": 1
                                              },
                                              "unit": {
                                                "type": "string",
                                                "description": "Unit",
                                                "example": "instance"
                                              }
                                            }
                                          },
                                          "strategy": {
                                            "type": "object",
                                            "description": "Strategy",
                                            "properties": {
                                              "risk": {
                                                "type": "integer",
                                                "description": "Risk",
                                                "example": 0
                                              },
                                              "onDemandCount": {
                                                "type": "string",
                                                "description": "On Demand Count",
                                                "example": null
                                              },
                                              "availabilityVsCost": {
                                                "type": "string",
                                                "description": "Availability VS Cost",
                                                "example": "balanced"
                                              }
                                            }
                                          },
                                          "compute": {
                                            "type": "object",
                                            "description": "Compute",
                                            "properties": {
                                              "instanceTypes": {
                                                "type": "object",
                                                "properties": {
                                                  "ondemand": {
                                                    "type": "string",
                                                    "description": "On Demand",
                                                    "example": "m3.large"
                                                  },
                                                  "spot": {
                                                    "type": "string",
                                                    "description": "Spot",
                                                    "example": [
                                                      "c3.large m3.large"
                                                    ]
                                                  }
                                                }
                                              },
                                              "availabilityZones": {
                                                "type": "object",
                                                "properties": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name",
                                                    "example": "us-west-2a"
                                                  },
                                                  "subnetIds": {
                                                    "type": "string",
                                                    "description": "Subnet IDs",
                                                    "example": [
                                                      "subnet-1234567"
                                                    ]
                                                  }
                                                }
                                              },
                                              "product": {
                                                "type": "string",
                                                "description": "Operatin System",
                                                "example": "Linux/UNIX"
                                              },
                                              "launchSpecification": {
                                                "type": "object",
                                                "properties": {
                                                  "securityGroupIds": {
                                                    "type": "string",
                                                    "description": "Security Group IDs",
                                                    "example": [
                                                      "sg-1234567"
                                                    ]
                                                  },
                                                  "monitoring": {
                                                    "type": "boolean",
                                                    "description": "Monitoring",
                                                    "example": true
                                                  },
                                                  "imageId": {
                                                    "type": "string",
                                                    "description": "Image ID",
                                                    "example": "ami-987654"
                                                  },
                                                  "keyPair": {
                                                    "type": "string",
                                                    "description": "Key Pair",
                                                    "example": "keyp"
                                                  },
                                                  "userData": {
                                                    "type": "string",
                                                    "description": "User Data",
                                                    "example": null
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "scaling": {
                                            "type": "object",
                                            "properties": {
                                              "up": {
                                                "type": "object",
                                                "properties": {
                                                  "policyName": {
                                                    "type": "string",
                                                    "description": "Policy Name",
                                                    "example": "up Scaling Policy 1"
                                                  },
                                                  "metricName": {
                                                    "type": "string",
                                                    "description": "Metric Name",
                                                    "example": "CPUUtilization"
                                                  },
                                                  "statistic": {
                                                    "type": "string",
                                                    "description": "Statistics",
                                                    "example": "maximum"
                                                  },
                                                  "unit": {
                                                    "type": "string",
                                                    "description": "Unit",
                                                    "example": "percent"
                                                  },
                                                  "threshold": {
                                                    "type": "integer",
                                                    "description": "Threshold",
                                                    "example": 90
                                                  },
                                                  "adjustment": {
                                                    "type": "integer",
                                                    "description": "Adjustment",
                                                    "example": 2
                                                  },
                                                  "namespace": {
                                                    "type": "string",
                                                    "description": "Namespace",
                                                    "example": "AWS/EC2"
                                                  },
                                                  "period": {
                                                    "type": "integer",
                                                    "description": "Period",
                                                    "example": 300
                                                  },
                                                  "evaluationPeriods": {
                                                    "type": "integer",
                                                    "description": "Evaluation Period",
                                                    "example": 3
                                                  },
                                                  "cooldown": {
                                                    "type": "integer",
                                                    "description": "Cool Down",
                                                    "example": 60
                                                  }
                                                }
                                              },
                                              "down": {
                                                "type": "object",
                                                "properties": {
                                                  "policyName": {
                                                    "type": "string",
                                                    "description": "Policy Name",
                                                    "example": "down Scaling Policy 1"
                                                  },
                                                  "metricName": {
                                                    "type": "string",
                                                    "description": "Metric Name",
                                                    "example": "CPUUtilization"
                                                  },
                                                  "statistic": {
                                                    "type": "string",
                                                    "description": "Statistics",
                                                    "example": "maximum"
                                                  },
                                                  "unit": {
                                                    "type": "string",
                                                    "description": "Unit",
                                                    "example": "percent"
                                                  },
                                                  "threshold": {
                                                    "type": "integer",
                                                    "description": "Threshold",
                                                    "example": 50
                                                  },
                                                  "adjustment": {
                                                    "type": "integer",
                                                    "description": "Adjustment",
                                                    "example": 2
                                                  },
                                                  "namespace": {
                                                    "type": "string",
                                                    "description": "Namespace",
                                                    "example": "AWS/EC2"
                                                  },
                                                  "period": {
                                                    "type": "integer",
                                                    "description": "Period",
                                                    "example": 300
                                                  },
                                                  "evaluationPeriods": {
                                                    "type": "integer",
                                                    "description": "Evaluation Period",
                                                    "example": 3
                                                  },
                                                  "cooldown": {
                                                    "type": "integer",
                                                    "description": "Cool Down",
                                                    "example": 60
                                                  },
                                                  "dimensions": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "name": {
                                                          "type": "string",
                                                          "description": "Name",
                                                          "example": "InstanceId"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "scheduling": {
                                            "type": "object",
                                            "properties": {
                                              "tasks": {
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "frequency": {
                                                      "type": "string",
                                                      "description": "Frequency",
                                                      "example": "weekly"
                                                    },
                                                    "taskType": {
                                                      "type": "string",
                                                      "description": "Task Type",
                                                      "example": "backup_ami"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "thirdPartiesIntegration": {
                                            "type": "object"
                                          },
                                          "createdAt": {
                                            "type": "string",
                                            "description": "Created At",
                                            "example": "2016-02-16T09:03:23.000Z"
                                          },
                                          "updatedAt": {
                                            "type": "string",
                                            "description": "Updated At",
                                            "example": "2018-01-07T00:10:30.000Z"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "ID",
                                            "example": "sig-897654"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "EG Name",
                                            "example": "Test EG"
                                          },
                                          "description": {
                                            "type": "string",
                                            "description": "Description",
                                            "example": "Test"
                                          },
                                          "capacity": {
                                            "type": "object",
                                            "description": "Capacity",
                                            "properties": {
                                              "minimum": {
                                                "type": "integer",
                                                "description": "Minimum Value",
                                                "example": 0
                                              },
                                              "maximum": {
                                                "type": "integer",
                                                "description": "Maximum Value",
                                                "example": 0
                                              },
                                              "target": {
                                                "type": "integer",
                                                "description": "Target Value",
                                                "example": 0
                                              },
                                              "unit": {
                                                "type": "string",
                                                "description": "Unit",
                                                "example": "instance"
                                              }
                                            }
                                          },
                                          "strategy": {
                                            "type": "object",
                                            "description": "Strategy",
                                            "properties": {
                                              "risk": {
                                                "type": "integer",
                                                "description": "Risk",
                                                "example": 100
                                              },
                                              "onDemandCount": {
                                                "type": "string",
                                                "description": "On Demand Count",
                                                "example": null
                                              },
                                              "availabilityVsCost": {
                                                "type": "string",
                                                "description": "Availability VS Cost",
                                                "example": "balanced"
                                              }
                                            }
                                          },
                                          "compute": {
                                            "type": "object",
                                            "description": "Compute",
                                            "properties": {
                                              "instanceTypes": {
                                                "type": "object",
                                                "properties": {
                                                  "ondemand": {
                                                    "type": "string",
                                                    "description": "On Demand",
                                                    "example": "m3.large"
                                                  },
                                                  "spot": {
                                                    "type": "string",
                                                    "description": "Spot",
                                                    "example": [
                                                      "m3.large c3.large"
                                                    ]
                                                  }
                                                }
                                              },
                                              "availabilityZones": {
                                                "type": "object",
                                                "properties": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name",
                                                    "example": "us-west-2b"
                                                  },
                                                  "subnetIds": {
                                                    "type": "string",
                                                    "description": "Subnet IDs",
                                                    "example": [
                                                      "subnet-657493"
                                                    ]
                                                  }
                                                }
                                              },
                                              "product": {
                                                "type": "string",
                                                "description": "Operatin System",
                                                "example": "Linux/UNIX"
                                              },
                                              "launchSpecification": {
                                                "type": "object",
                                                "properties": {
                                                  "securityGroupIds": {
                                                    "type": "string",
                                                    "description": "Security Group IDs",
                                                    "example": [
                                                      "sg-987126"
                                                    ]
                                                  },
                                                  "monitoring": {
                                                    "type": "boolean",
                                                    "description": "Monitoring",
                                                    "example": true
                                                  },
                                                  "imageId": {
                                                    "type": "string",
                                                    "description": "Image ID",
                                                    "example": "ami-87236464"
                                                  },
                                                  "keyPair": {
                                                    "type": "string",
                                                    "description": "Key Pair",
                                                    "example": "PairKey"
                                                  },
                                                  "userData": {
                                                    "type": "string",
                                                    "description": "User Data",
                                                    "example": null
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "scaling": {
                                            "type": "object",
                                            "properties": {
                                              "up": {
                                                "type": "object",
                                                "properties": {
                                                  "policyName": {
                                                    "type": "string",
                                                    "description": "Policy Name",
                                                    "example": "up Scaling Policy 1"
                                                  },
                                                  "metricName": {
                                                    "type": "string",
                                                    "description": "Metric Name",
                                                    "example": "CPUUtilization"
                                                  },
                                                  "statistic": {
                                                    "type": "string",
                                                    "description": "Statistics",
                                                    "example": "maximum"
                                                  },
                                                  "unit": {
                                                    "type": "string",
                                                    "description": "Unit",
                                                    "example": "percent"
                                                  },
                                                  "stepAdjustments": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "action": {
                                                          "type": "object",
                                                          "example": {
                                                            "adjustment": "3",
                                                            "type": "adjustment"
                                                          }
                                                        },
                                                        "threshold": {
                                                          "type": "integer",
                                                          "description": "Step Threshold",
                                                          "example": 30
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "namespace": {
                                                    "type": "string",
                                                    "description": "Namespace",
                                                    "example": "AWS/EC2"
                                                  },
                                                  "period": {
                                                    "type": "integer",
                                                    "description": "Period",
                                                    "example": 300
                                                  },
                                                  "evaluationPeriods": {
                                                    "type": "integer",
                                                    "description": "Evaluation Period",
                                                    "example": 3
                                                  },
                                                  "cooldown": {
                                                    "type": "integer",
                                                    "description": "Cool Down",
                                                    "example": 60
                                                  }
                                                }
                                              },
                                              "down": {
                                                "type": "object",
                                                "properties": {
                                                  "policyName": {
                                                    "type": "string",
                                                    "description": "Policy Name",
                                                    "example": "down Scaling Policy 1"
                                                  },
                                                  "metricName": {
                                                    "type": "string",
                                                    "description": "Metric Name",
                                                    "example": "CPUUtilization"
                                                  },
                                                  "statistic": {
                                                    "type": "string",
                                                    "description": "Statistics",
                                                    "example": "maximum"
                                                  },
                                                  "unit": {
                                                    "type": "string",
                                                    "description": "Unit",
                                                    "example": "percent"
                                                  },
                                                  "threshold": {
                                                    "type": "integer",
                                                    "description": "Threshold",
                                                    "example": 50
                                                  },
                                                  "adjustment": {
                                                    "type": "integer",
                                                    "description": "Adjustment",
                                                    "example": 2
                                                  },
                                                  "namespace": {
                                                    "type": "string",
                                                    "description": "Namespace",
                                                    "example": "AWS/EC2"
                                                  },
                                                  "period": {
                                                    "type": "integer",
                                                    "description": "Period",
                                                    "example": 300
                                                  },
                                                  "evaluationPeriods": {
                                                    "type": "integer",
                                                    "description": "Evaluation Period",
                                                    "example": 3
                                                  },
                                                  "cooldown": {
                                                    "type": "integer",
                                                    "description": "Cool Down",
                                                    "example": 60
                                                  },
                                                  "dimensions": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "name": {
                                                          "type": "string",
                                                          "description": "Name",
                                                          "example": "InstanceId"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "scheduling": {
                                            "type": "object",
                                            "properties": {
                                              "tasks": {
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "frequency": {
                                                      "type": "string",
                                                      "description": "Frequency",
                                                      "example": "weekly"
                                                    },
                                                    "taskType": {
                                                      "type": "string",
                                                      "description": "Task Type",
                                                      "example": "backup_ami"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "thirdPartiesIntegration": {
                                            "type": "object"
                                          },
                                          "createdAt": {
                                            "type": "string",
                                            "description": "Created At",
                                            "example": "2016-02-16T06:35:03.000Z"
                                          },
                                          "updatedAt": {
                                            "type": "string",
                                            "description": "Updated At",
                                            "example": "2016-02-16T10:21:01.000Z"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}": {
      "put": {
        "summary": "Update Elastigroup",
        "description": "Describe a specific Elastigroup JSON\n",
        "operationId": "elastigroupAwsUpdate",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "example": "sig-12345",
            "description": "The Spot Elastigroup ID you want to update\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "autoApplyTags",
            "description": "Optionally update resource tags on the fly without performing a roll.\n",
            "schema": {
              "type": "boolean",
              "example": true,
              "default": false
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "AWS Elastigroup",
                "required": [
                  "group"
                ],
                "properties": {
                  "group": {
                    "type": "object",
                    "description": "Group",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "AWS Elastigroup Name\n",
                        "example": "my-Elastigroup"
                      },
                      "description": {
                        "type": "string",
                        "description": "Describe your AWS Elastigroup\n",
                        "example": "This Elastigroup is used for Development"
                      },
                      "region": {
                        "type": "string",
                        "description": "The AWS region your group will be created in.\n This parameter is required if you specify subnets (through compute.subnetIds).\n This parameter is optional if you specify Availability Zones (through compute.availabilityZones).\n",
                        "example": "us-east-1"
                      },
                      "capacity": {
                        "type": "object",
                        "title": "Elastigroup Capacity",
                        "properties": {
                          "target": {
                            "type": "integer",
                            "description": "The number of instances to launch\n",
                            "example": 1
                          },
                          "minimum": {
                            "type": "integer",
                            "description": "The lower limit number of instances that you can scale down to\n",
                            "example": 0
                          },
                          "maximum": {
                            "type": "integer",
                            "description": "The upper limit number of instances that you can scale up to\n",
                            "example": 10
                          },
                          "unit": {
                            "type": "string",
                            "enum": [
                              "instance",
                              "weight"
                            ],
                            "readOnly": true,
                            "description": "The capacity unit to launch instances by.\nNote: for groups with integration to K8S / ECS weight option is not supported.\n",
                            "example": "instance"
                          }
                        }
                      },
                      "strategy": {
                        "type": "object",
                        "title": "Elastigroup Strategy",
                        "properties": {
                          "risk": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 100,
                            "example": 100,
                            "default": 0,
                            "description": "The percentage of Elastigroup that will run with spot market capacity\n"
                          },
                          "onDemandCount": {
                            "type": "integer",
                            "minimum": 0,
                            "example": 0,
                            "description": "Minimum number of instances that will always be on-demand\n"
                          },
                          "availabilityVsCost": {
                            "type": "string",
                            "enum": [
                              "costOriented",
                              "availabilityOriented",
                              "balanced",
                              "cheapest",
                              "equalAzDistribution"
                            ],
                            "default": "balanced",
                            "description": "How Elastigroup determines which instances to add and replace.\n(please read this article before using [Equal AZ Instance Distribution](https://docs.spot.io/elastigroup-for-aws/concepts/general-concepts/equal-az-distribution))\n"
                          },
                          "fallbackToOd": {
                            "type": "boolean",
                            "default": true,
                            "example": true,
                            "description": "When set to `true` Elastigroup will launch On Demand instances if no spot market is available\n"
                          },
                          "considerODPricing": {
                            "type": "boolean",
                            "default": false,
                            "example": false,
                            "description": "When the value is set to `true`, Elastigroup will prioritize launching On-Demand instances if they are found to be more cost-effective than available Spot markets.\n"
                          },
                          "utilizeReservedInstances": {
                            "type": "boolean",
                            "description": "In case of any available Reserved Instances, Elastigroup will utilize them before purchasing Spot instances\n",
                            "example": false
                          },
                          "utilizeCommitments": {
                            "type": "boolean",
                            "description": "If there are available Reserved Instances or Savings Plans, Elastigroup will utilize them before using Spot instances\n",
                            "example": false
                          },
                          "restrictSingleAz": {
                            "type": "boolean",
                            "description": "Elastigroup will automatically scale your instances in the most available and cost efficient availability zone. Every evaluation will be done when there are no active instances in the group.\n"
                          },
                          "drainingTimeout": {
                            "type": "integer",
                            "example": 120,
                            "description": "The time in seconds to allow the instance be drained from incoming TCP connections and detached from ELB before terminating it, during a scale down operation\n"
                          },
                          "signals": {
                            "type": "array",
                            "description": "The signals defined for this group. For more information refer the below article: [Signals](https://docs.spot.io/elastigroup-for-aws/concepts/compute-concepts/using-signals-in-elastigroups)\n",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of the signal defined for the group.\n",
                                  "enum": [
                                    "INSTANCE_READY",
                                    "INSTANCE_READY_TO_SHUTDOWN"
                                  ]
                                },
                                "timeout": {
                                  "type": "integer",
                                  "minimum": 60,
                                  "maximum": 1800,
                                  "description": "The timeout in seconds to hold the instance until a signal is sent.\nIf no signal is sent the instance will be replaced (INSTANCE_READY) or we will terminate the instance (INSTANCE_READY_TO_SHUTDOWN) after the timeout.\n",
                                  "default": 1800,
                                  "example": 120
                                }
                              }
                            }
                          },
                          "persistence": {
                            "type": "array",
                            "description": "You can register persistence (Stateful) recovery arguments\n",
                            "items": {
                              "type": "object",
                              "properties": {
                                "shouldPersistPrivateIp": {
                                  "type": "boolean",
                                  "description": "Should the instance maintain its private IP\n",
                                  "example": true
                                },
                                "shouldPersistRootDevice": {
                                  "type": "boolean",
                                  "description": "Should the instance maintain its root device volumes\n",
                                  "example": true
                                },
                                "shouldPersistBlockDevices": {
                                  "type": "boolean",
                                  "description": "Should the instance maintain its Data volumes\n",
                                  "example": true
                                },
                                "blockDevicesMode": {
                                  "type": "string",
                                  "description": "Determine the way we attach the data volumes to the data devices\n",
                                  "enum": [
                                    "reattach",
                                    "onLaunch"
                                  ],
                                  "example": "reattach"
                                }
                              }
                            }
                          },
                          "revertToSpot": {
                            "type": "object",
                            "description": "Hold settings for strategy correction - replacing On-Demand for Spot instances\n",
                            "properties": {
                              "performAt": {
                                "type": "string",
                                "description": "Settings for maintenance strategy - possible values: timeWindow, never, always.\nperformAt of type: 'never' OR 'timeWindow' can only be applied to groups with \"availabilityOriented\" OR groups with \"persistence\",\nother groups allow either 'always' type or nothing which also means always.\n",
                                "enum": [
                                  "never",
                                  "always",
                                  "timeWindow"
                                ],
                                "example": "timeWindow",
                                "default": "always"
                              },
                              "timeWindows": {
                                "type": "array",
                                "description": "When performAt is 'timeWindow': must specify a list of 'timeWindows' with at least one time window Each string is in the format of - ddd:hh:mm-ddd:hh:mm\nddd = day of week = Sun | Mon | Tue | Wed | Thu | Fri | Sat\nhh = hour 24 = 0 -23\nmm = minute = 0 - 59\n",
                                "items": {
                                  "type": "string",
                                  "example": "Mon:03:00-Wed:02:30"
                                }
                              }
                            }
                          },
                          "scalingStrategy": {
                            "type": "object",
                            "description": "Set termination policy\n",
                            "properties": {
                              "terminationPolicy": {
                                "type": "string",
                                "enum": [
                                  "default",
                                  "newestInstance"
                                ],
                                "example": "default"
                              }
                            }
                          }
                        }
                      },
                      "compute": {
                        "type": "object",
                        "title": "Elastigroup Compute",
                        "properties": {
                          "product": {
                            "type": "string",
                            "description": "Operation system type.\n",
                            "enum": [
                              "Linux/UNIX (Amazon VPC)",
                              "SUSE Linux (Amazon VPC)",
                              "Windows (Amazon VPC)",
                              "Red Hat Enterprise Linux (Amazon VPC)"
                            ],
                            "readOnly": true,
                            "example": "Linux/UNIX"
                          },
                          "elasticIps": {
                            "type": "array",
                            "description": "List of ElasticIPs Allocation Ids to associate to the group instances\n",
                            "items": {
                              "type": "string",
                              "example": "eipalloc-9d4e16f8"
                            }
                          },
                          "privateIps": {
                            "type": "array",
                            "description": "List of Private IPs to associate to the group instances.\nPlease note: This setting will only apply if strategy.persistence.shouldPersistPrivateIp is set to true.\n",
                            "items": {
                              "type": "string",
                              "default": "172.1.1.1"
                            }
                          },
                          "instanceTypes": {
                            "type": "object",
                            "description": "Instance Types\n",
                            "properties": {
                              "ondemand": {
                                "type": "string",
                                "description": "Available on demand instance type.\nNote: Either ondemand or onDemandTypes can be defined, but not both.\n",
                                "example": "m3.medium"
                              },
                              "onDemandTypes": {
                                "type": "array",
                                "description": "Available on demand instance types.\nNote: Either ondemand or onDemandTypes can be defined, but not both.\n",
                                "items": {
                                  "type": "string",
                                  "example": [
                                    "c3.large",
                                    "c4.large",
                                    "m3.large",
                                    "r3.large"
                                  ]
                                }
                              },
                              "spot": {
                                "type": "array",
                                "description": "Available Spot Instance types.  \nNote: Cannot be defined if 'resourceRequirements' is defined.\n",
                                "items": {
                                  "type": "string",
                                  "example": [
                                    "c3.large",
                                    "c4.large",
                                    "m3.large",
                                    "r3.large"
                                  ]
                                }
                              },
                              "resourceRequirements": {
                                "$ref": "#/paths/~1aws~1ec2~1group/post/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/compute/properties/instanceTypes/properties/resourceRequirements"
                              },
                              "preferredSpot": {
                                "type": "array",
                                "description": "Prioritized subset of spot instance types. The list must be a subset of the selected spot instance types or \nmeet the resource requirements if defined.\n",
                                "items": {
                                  "type": "string",
                                  "example": [
                                    "c4.large"
                                  ]
                                }
                              },
                              "weights": {
                                "type": "array",
                                "description": "Custom weight for each instance type (only valid in weight capacity unit)\n",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "instanceType": {
                                      "type": "string",
                                      "description": "The instance type to customize its weight\n",
                                      "example": "c4.large"
                                    },
                                    "weightedCapacity": {
                                      "type": "integer",
                                      "description": "The weight\n",
                                      "example": 8
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "subnetIds": {
                            "type": "array",
                            "description": "A comma-separated list of subnet identifiers for your group.\nWhen this parameter is set, compute.availabilityZones should be left unused.\n",
                            "items": {
                              "type": "string",
                              "example": [
                                "subnet-4c1d1538",
                                "subnet-2791bb61",
                                "subnet-703a6f58",
                                "subnet-c62846fc"
                              ]
                            }
                          },
                          "availabilityZones": {
                            "type": "array",
                            "description": "One or more availability Zones for the group.\nWhen this parameter is set, compute.subnetIds should be left unused.\n",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The Availability Zone name\n",
                                  "example": "us-west-2a"
                                },
                                "subnetIds": {
                                  "type": "array",
                                  "description": "A comma-separated list of subnet identifiers for your group.\n",
                                  "items": {
                                    "type": "string",
                                    "example": [
                                      "subnet-4333093a"
                                    ]
                                  }
                                },
                                "placementGroupName": {
                                  "type": "string",
                                  "description": "specify a Placement Group name, the instances will be launched in the Placement Group for the AZ.\n"
                                }
                              }
                            }
                          },
                          "preferredAvailabilityZones": {
                            "type": "array",
                            "description": "The AZs to prioritize when launching Spot instances.\nIf no markets are available in the Preferred AZs, Spot instances are launched in the non-preferred AZs.\n* Must be a sublist of compute.AvailabilityZones\n* strategy.availabilityVsCost must not be equalAzDistribution\n",
                            "items": {
                              "type": "string",
                              "example": [
                                "us-east-1a",
                                "us-east-1b"
                              ]
                            }
                          },
                          "volumeAttachments": {
                            "$ref": "#/paths/~1aws~1ec2~1group/post/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/compute/properties/volumeAttachments"
                          },
                          "launchSpecification": {
                            "type": "object",
                            "properties": {
                              "creditSpecification": {
                                "type": "object",
                                "description": "creditSpecification is a parameter that indicates in what mode t2/t3 instances will be launched with. It consists of one key: cpuCredits (String)\n",
                                "properties": {
                                  "cpuCredits": {
                                    "type": "string",
                                    "enum": [
                                      "unlimited",
                                      "standard"
                                    ],
                                    "example": "unlimited"
                                  }
                                }
                              },
                              "loadBalancersConfig": {
                                "type": "object",
                                "description": "Elastic Load Balancers configurations\n",
                                "properties": {
                                  "loadBalancers": {
                                    "type": "array",
                                    "description": "List of classic load balancers and/or application load balancer target groups\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The AWS resource name. Required for Classic Load Balancer. Optional for Application Load Balancer.\n",
                                          "example": "MyTargetGroup"
                                        },
                                        "arn": {
                                          "type": "string",
                                          "description": "The AWS resource ARN (Required only for ALB target groups)\n",
                                          "example": "arn:aws:elasticloadbalancing:us-west-2:922761411234:targetgroup/MyTargetGroup/1fe63217f8ff1234"
                                        },
                                        "type": {
                                          "type": "string",
                                          "description": "The resource type.\n",
                                          "enum": [
                                            "CLASSIC",
                                            "TARGET_GROUP"
                                          ],
                                          "example": "TARGET_GROUP"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "itf": {
                                "title": "Intelligent Traffic Flow (ITF) Configuration",
                                "type": "object",
                                "description": "Contains the configuration details of Intelligent Traffic Flow (ITF).\n",
                                "properties": {
                                  "fixedTargetGroups": {
                                    "type": "boolean",
                                    "description": "Boolean to control whether to keep the set of target groups fixed. When set to true, all target groups will be created in advance upon create/update group, and will not be deleted even when not being used anymore.\n",
                                    "default": false,
                                    "example": false
                                  },
                                  "weightStrategy": {
                                    "type": "string",
                                    "description": "Distribution strategy (either 'vcpu' or 'custom'). 'Custom' strategy can be set only when the group is configured with custom weights.\n",
                                    "enum": [
                                      "vcpu",
                                      "custom"
                                    ],
                                    "default": "vcpu",
                                    "example": "custom"
                                  },
                                  "migrationHealthinessThreshold": {
                                    "type": "integer",
                                    "description": "Threshold for the minimum healthiness level of the target groups that is needed before activating the ITF rules. Integer representing the percentage of healthy instances within the target groups. Valid values: integer between 0-100.\n",
                                    "default": 50,
                                    "example": 80
                                  },
                                  "loadBalancers": {
                                    "type": "array",
                                    "description": "The load balancer associated with the ITF. Array with a single element.\n",
                                    "items": {
                                      "$ref": "#/paths/~1aws~1ec2~1group/post/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/compute/properties/launchSpecification/properties/itf/properties/loadBalancers/items"
                                    }
                                  },
                                  "targetGroupConfig": {
                                    "title": "ITF Target Group Configuration",
                                    "type": "object",
                                    "description": "Contains the configuration details of an ITF target group.\n",
                                    "allOf": [
                                      {
                                        "$ref": "#/paths/~1aws~1ec2~1group/post/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/compute/properties/launchSpecification/properties/itf/properties/targetGroupConfig/allOf/0"
                                      }
                                    ]
                                  }
                                }
                              },
                              "healthCheckType": {
                                "type": "string",
                                "description": "The service to use for the health check.\n",
                                "enum": [
                                  "ELB",
                                  "HCS",
                                  "TARGET_GROUP",
                                  "ECS_CLUSTER_INSTANCE",
                                  "EC2",
                                  "OPSWORKS",
                                  "K8S_NODE",
                                  "NOMAD_NODE"
                                ],
                                "example": "EC2"
                              },
                              "healthCheckGracePeriod": {
                                "type": "integer",
                                "description": "The amount of time, in seconds, after the instance has launched to starts and check its health.\n",
                                "default": 300,
                                "example": 600
                              },
                              "healthCheckUnhealthyDurationBeforeReplacement": {
                                "type": "integer",
                                "description": "The amount of time, in seconds, an existing instance should remain active after becoming unhealthy.\nAfter the set time out the instance will be replaced\n",
                                "example": 60
                              },
                              "securityGroupIds": {
                                "type": "array",
                                "description": "One or more security group IDs. In case of update it will override the existing Security Group with the new given array\n",
                                "items": {
                                  "type": "string",
                                  "example": [
                                    "sg-0dfc2c8760df6fec7"
                                  ]
                                }
                              },
                              "monitoring": {
                                "type": "boolean",
                                "description": "Describes whether instance Enhanced Monitoring is enabled\n",
                                "example": false
                              },
                              "ebsOptimized": {
                                "type": "boolean",
                                "description": "Enable EBS optimization for supported instance which is not enabled by default.\nNote - additional charges will be applied.\n",
                                "example": false
                              },
                              "imageId": {
                                "type": "string",
                                "description": "The ID of the image used to launch the instance.\n* The following instance types are supported by HVM image: M3, M4, C3, C4, D2, G2, R3, CC2, CC1, CG1, CR1.\n* The following instance types are supported by PV image: M1, M2, M3, C1, C3.\n* In case of conflict between Instance type to image type, an error message will be returned\n",
                                "example": "ami-01e24be29428c15b2"
                              },
                              "images": {
                                "type": "array",
                                "description": "An array of image objects. <br>\nElastigroup can be configured with either imageId or images, but not both. <br>\n* Valid values: null, or an array with at least 1 element.\n* Multiple AMIs aren't allowed with stateful groups / Stateful Node / Ocean\n  or with the following third-party integrations: ECS / Nomad / Docker Swarm / Kubernetes\n",
                                "items": {
                                  "$ref": "#/paths/~1aws~1ec2~1group/post/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/compute/properties/launchSpecification/properties/images/items"
                                }
                              },
                              "keyPair": {
                                "type": "string",
                                "description": "Specify a Key Pair to attach to the instances\n",
                                "example": "labs-oregon"
                              },
                              "blockDeviceMappings": {
                                "type": "array",
                                "description": "Array list of block devices that are exposed to the instance, You can specify virtual devices and EBS volumes.\n",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "deviceName": {
                                      "type": "string",
                                      "description": "Set device name\n",
                                      "example": "/dev/xvdcz"
                                    },
                                    "ebs": {
                                      "type": "object",
                                      "description": "Set EBS properties\n",
                                      "properties": {
                                        "encrypted": {
                                          "type": "boolean",
                                          "example": true
                                        },
                                        "iops": {
                                          "type": "integer",
                                          "minimum": 0,
                                          "description": "Must be greater than or equal to 0\nexample: 0\n"
                                        },
                                        "dynamicIops": {
                                          "type": "object",
                                          "description": "Set dynamic IOPS properties. When using this object, you cannot use the 'iops' object. You must use one or the other.\n",
                                          "properties": {
                                            "baseSize": {
                                              "type": "integer",
                                              "description": "Initial size for IOPS.\n",
                                              "example": 50
                                            },
                                            "resource": {
                                              "type": "string",
                                              "enum": [
                                                "CPU",
                                                "MEMORY"
                                              ],
                                              "description": "",
                                              "example": "CPU"
                                            },
                                            "sizePerResourceUnit": {
                                              "type": "integer",
                                              "description": "Additional size per resource unit (in IOPS).\nFor example: if baseSize=50, and sizePerResourceUnit=20, and an instance with 2 CPU is launched - its IOPS size will be: 90\n",
                                              "example": 20
                                            }
                                          }
                                        },
                                        "kmsKeyId": {
                                          "type": "string",
                                          "example": "alias/aws/ebs"
                                        },
                                        "snapshotId": {
                                          "type": "string",
                                          "example": "snap-abcdefghi111110"
                                        },
                                        "throughput": {
                                          "type": "integer",
                                          "minimum": 125,
                                          "maximum": 1000,
                                          "example": 125,
                                          "description": "The amount of data transferred to or from a storage device per second, you can use this param just in a case that volumetype=‘gp3’.\n"
                                        },
                                        "volumeType": {
                                          "type": "string",
                                          "description": "Set volume type\n",
                                          "example": "gp2"
                                        },
                                        "deleteOnTermination": {
                                          "type": "boolean",
                                          "description": "Flag to delete the EBS on instance termination\n",
                                          "example": true
                                        },
                                        "volumeSize": {
                                          "type": "integer",
                                          "description": "Set volume size (in GB). When using this property - don't use dynamicVolumeSize.\nVolume size should be greater or equal than the size configured in the AMI\n",
                                          "example": 12
                                        },
                                        "dynamicVolumeSize": {
                                          "type": "object",
                                          "description": "Set dynamic volume size properties. When using this object, you cannot use volumeSize. You must use one or the other.\n",
                                          "properties": {
                                            "baseSize": {
                                              "type": "integer",
                                              "description": "Initial size for volume\n",
                                              "example": 50
                                            },
                                            "resource": {
                                              "type": "string",
                                              "example": "CPU"
                                            },
                                            "sizePerResourceUnit": {
                                              "type": "integer",
                                              "description": "Additional size per resource unit (in GB). For example: if baseSize=50, and sizePerResourceUnit=20, and an instance with 2 CPU is launched - its disk size will be: 90GB\n",
                                              "example": 20
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "networkInterfaces": {
                                "type": "array",
                                "description": "List of network interfaces in an EC2 instance.\nIf you define network interface, please pay attention to omit these properties from other sections in this JSON and set them here: subnetId - compute.availabilityZones\n",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "description": "The description of the network interface. Applies only if creating a network interface when launching an instance.\n"
                                    },
                                    "deviceIndex": {
                                      "type": "integer",
                                      "description": "The position of the network interface in the attachment order.\nA primary network interface has a device index of 0.\nIf you specify a network interface when launching an instance, you must specify the device index.\n",
                                      "example": 0
                                    },
                                    "secondaryPrivateIpAddressCount": {
                                      "type": "integer",
                                      "description": "The number of secondary private IPv4 addresses to assign to a network interface.\nWhen you specify a number of secondary IPv4 addresses, Amazon EC2 selects these IP addresses within the subnet's IPv4 CIDR range.\nYou can't specify this option and specify more than one private IP address using privateIpAddresses.\nThe number of IP addresses you can assign to a network interface varies by instance type.\nFor more information, see IP Addresses Per ENI Per Instance Type in the Amazon Virtual Private Cloud User Guide.\n"
                                    },
                                    "associatePublicIpAddress": {
                                      "type": "boolean",
                                      "description": "Indicates whether to assign a public IPv4 address to an instance you launch in a VPC.\nThe public IP address can only be assigned to a network interface for eth0, and can only be assigned to a new network interface, not an existing one.\nYou cannot specify more than one network interface in the request.\nIf launching into a default subnet, the default value is true.\n",
                                      "example": true
                                    },
                                    "deleteOnTermination": {
                                      "type": "boolean",
                                      "description": "If set to true, the interface is deleted when the instance is terminated.\nYou can specify true only if creating a new network interface when launching an instance.\n"
                                    },
                                    "networkInterfaceId": {
                                      "type": "string",
                                      "description": "The ID of the network interface. Used to attach the specified network interface to the instance.\n"
                                    },
                                    "privateIpAddresses": {
                                      "type": "array",
                                      "description": "One or more private IPv4 addresses to assign to the network interface.\nOnly one private IPv4 address can be designated as primary.\nYou cannot specify this option if you're launching more than one instance in a RunInstances request.\n",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "privateIpAddress": {
                                            "type": "string",
                                            "description": "The private IPv4 address.\n"
                                          },
                                          "primary": {
                                            "type": "boolean",
                                            "description": "Indicates whether the private IPv4 address is the primary private IPv4 address. Only one IPv4 address can be designated as primary.\n"
                                          }
                                        }
                                      }
                                    },
                                    "subnetId": {
                                      "type": "string",
                                      "description": "The ID of the subnet to associate with the network interface.\nRequired when creating a new Network Interface, and not attaching an existing one via networkInterfaceId.\n"
                                    },
                                    "associateIpv6Address": {
                                      "type": "boolean",
                                      "description": "Indicates whether to assign an IPv6 address. Amazon EC2 chooses the IPv6 addresses from the range of the subnet.\n"
                                    }
                                  }
                                }
                              },
                              "iamRole": {
                                "type": "object",
                                "description": "The instance profile iamRole\n",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "The iamRole name\n",
                                    "example": "my-iamRole"
                                  }
                                }
                              },
                              "userData": {
                                "type": "string",
                                "format": "byte",
                                "description": "The Base64-encoded MIME user data to make available to the instances\n",
                                "example": "dXNlcmJhc2g2NGVuY29kZWQ="
                              },
                              "shutdownScript": {
                                "type": "string",
                                "format": "byte",
                                "description": "The Base64-encoded shutdown script to execute prior to instance termination. For more information please see: [Shutdown Script](https://docs.spot.io/integration-docs/elastigroup/concepts/compute-concepts/shutdown-scripts/)\n",
                                "example": "dXNlcmJhc2g2NGVuY29kZWQ="
                              },
                              "tags": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "tagKey": {
                                      "type": "string",
                                      "description": "The tag's key\n",
                                      "example": "Creator"
                                    },
                                    "tagValue": {
                                      "type": "string",
                                      "description": "The tag's value\n",
                                      "example": "John Doe"
                                    }
                                  }
                                }
                              },
                              "metadataOptions": {
                                "title": "Metadata Options",
                                "type": "object",
                                "description": "Optional field. Used for IMDSv2. In Create route can't be null. In Update route can be null.",
                                "required": [
                                  "httpTokens"
                                ],
                                "properties": {
                                  "httpTokens": {
                                    "title": "HTTP Tokens",
                                    "type": "string",
                                    "description": "Required for IMDSv2. Can’t be null in Create or Update. Values can be \"optional\" or \"required\".",
                                    "example": "optional"
                                  },
                                  "httpPutResponseHopLimit": {
                                    "type": "integer",
                                    "example": "33",
                                    "description": "An integer within 1,64 range (including).\nThe desired HTTP PUT response hop limit for instance metadata requests.\nThe larger the number, the further instance metadata requests can travel.\n"
                                  },
                                  "instanceMetadataTags": {
                                    "title": "Instance Metadata Tags",
                                    "type": "string",
                                    "enum": [
                                      "Enabled",
                                      "Disabled"
                                    ],
                                    "description": "Indicates whether access to instance tags from the instance metadata is enabled or disabled.\nCan’t be null.\n",
                                    "example": "Enabled"
                                  }
                                }
                              },
                              "cpuOptions": {
                                "title": "CPU options",
                                "type": "object",
                                "description": "Optional field. The CPU options for the instances that are launched within the group.",
                                "required": [
                                  "threadsPerCore"
                                ],
                                "properties": {
                                  "threadsPerCore": {
                                    "title": "thread per core",
                                    "type": "integer",
                                    "example": "1",
                                    "description": "The number of threads per CPU core.\nTo disable multithreading for the instances, specify a value of 1 .\nOtherwise, specify the default value of 2 .\n"
                                  }
                                }
                              },
                              "resourceTagSpecification": {
                                "type": "object",
                                "description": "Optional field. User will specified which resources should be tagged with group tags.",
                                "properties": {
                                  "volumes": {
                                    "type": "object",
                                    "description": "Optional field. Tag specification for Volume resources.",
                                    "properties": {
                                      "shouldTag": {
                                        "type": "boolean",
                                        "description": "Optional field. Volume resources will be tagged with group tags.",
                                        "default": false,
                                        "example": false
                                      }
                                    }
                                  },
                                  "snapshots": {
                                    "type": "object",
                                    "description": "Optional field. Tag specification for Snapshot resources.",
                                    "properties": {
                                      "shouldTag": {
                                        "type": "boolean",
                                        "description": "Optional field. Snapshot resources will be tagged with group tags.",
                                        "default": true,
                                        "example": true
                                      }
                                    }
                                  },
                                  "enis": {
                                    "type": "object",
                                    "description": "Optional field. Tag specification for ENI resources.",
                                    "properties": {
                                      "shouldTag": {
                                        "type": "boolean",
                                        "description": "Optional field. ENI resources will be tagged with group tags.",
                                        "default": false,
                                        "example": false
                                      }
                                    }
                                  },
                                  "amis": {
                                    "type": "object",
                                    "description": "Optional field. Tag specification for AMI resources.",
                                    "properties": {
                                      "shouldTag": {
                                        "type": "boolean",
                                        "description": "Optional field. AMI resources will be tagged with group tags.",
                                        "default": true,
                                        "example": true
                                      }
                                    }
                                  }
                                }
                              },
                              "autoHealing": {
                                "type": "boolean",
                                "description": "Optional field. Auto-healing replacement won't be triggered if this parameter value is \"false\".\nIn a case of a stateful group - no recycling will start if this parameter value is \"false\".\n",
                                "default": true,
                                "example": true
                              }
                            }
                          }
                        }
                      },
                      "scaling": {
                        "type": "object",
                        "title": "Elastigroup Scaling",
                        "properties": {
                          "up": {
                            "type": "array",
                            "items": {
                              "$ref": "#/paths/~1aws~1ec2~1group/post/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/scaling/properties/up/items"
                            }
                          },
                          "down": {
                            "type": "array",
                            "items": {
                              "$ref": "#/paths/~1aws~1ec2~1group/post/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/scaling/properties/down/items"
                            }
                          },
                          "multipleMetrics": {
                            "type": "object",
                            "properties": {
                              "metrics": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/paths/~1aws~1ec2~1group/post/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/scaling/properties/multipleMetrics/properties/metrics/items"
                                }
                              },
                              "expressions": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/paths/~1aws~1ec2~1group/post/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/scaling/properties/multipleMetrics/properties/expressions/items"
                                }
                              }
                            }
                          },
                          "target": {
                            "type": "array",
                            "items": {
                              "$ref": "#/paths/~1aws~1ec2~1group/post/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/scaling/properties/target/items"
                            }
                          }
                        }
                      },
                      "scheduling": {
                        "type": "object",
                        "title": "Elastigroup Scheduling",
                        "description": "Schedule tasks to execute, using CRON expressions.\n",
                        "properties": {
                          "tasks": {
                            "type": "array",
                            "description": "The scheduling tasks for the group.\n",
                            "items": {
                              "type": "object",
                              "properties": {
                                "isEnabled": {
                                  "type": "boolean",
                                  "description": "Describes whether the task is enabled. When true the task should run when false it should not run.\n",
                                  "example": true
                                },
                                "startTime": {
                                  "type": "string",
                                  "description": "DATETIME in ISO-8601 format and is in UTC time. Sets a start time for scheduled actions.\nIf \"frequency\" or \"cronExpression\" are not used - the task will run only once at the start time and will then be deleted from the group configuration.\n",
                                  "example": "2018-05-23T10:55:09Z"
                                },
                                "frequency": {
                                  "type": "string",
                                  "description": "The recurrence frequency to run this task.\nOnly one of ‘frequency' or ‘cronExpression' should be used at a time\n",
                                  "enum": [
                                    "hourly",
                                    "daily",
                                    "weekly"
                                  ],
                                  "example": "hourly"
                                },
                                "cronExpression": {
                                  "type": "string",
                                  "description": "A valid cron expression.\nThe cron is running in UTC time zone and is in Unix cron format Cron Expression Validator Script.\nOnly one of ‘frequency' or ‘cronExpression' should be used at a time.\n",
                                  "example": "0 1 * * *"
                                },
                                "taskType": {
                                  "type": "string",
                                  "description": "The task type to run. For stateful groups, use only those who has a `stateful` prefix, or `backup_ami`. For non-stateful group, use the rest.\n",
                                  "enum": [
                                    "backup_ami",
                                    "scale",
                                    "scaleUp",
                                    "percentageScaleUp",
                                    "scaleDown",
                                    "percentageScaleDown",
                                    "roll",
                                    "clusterRoll (For ECS Integration)",
                                    "statefulUpdateCapacity",
                                    "statefulRecycle"
                                  ],
                                  "example": "scale"
                                },
                                "scaleTargetCapacity": {
                                  "type": "integer",
                                  "description": "The target capacity of the group.\nShould be used when choosing ‘taskType' of ‘scale'.\n"
                                },
                                "scaleMinCapacity": {
                                  "type": "integer",
                                  "description": "The min capacity of the group.\nShould be used when choosing ‘taskType' of ‘scale'.\n"
                                },
                                "scaleMaxCapacity": {
                                  "type": "integer",
                                  "description": "The max capacity of the group.\nRequired when ‘taskType' is ‘scale'.\n"
                                },
                                "targetCapacity": {
                                  "type": "integer",
                                  "description": "Set a new target capacity for the Elastigroup.\nRequired when ‘taskType' is ‘statefulUpdateCapacity'.\n"
                                },
                                "MinCapacity": {
                                  "type": "integer",
                                  "description": "Set a new minimum capacity for the Elastigroup.\nRequired when ‘taskType' is ‘statefulUpdateCapacity'.\n"
                                },
                                "MaxCapacity": {
                                  "type": "integer",
                                  "description": "Set a new maximum capacity for the Elastigroup.\nRequired when ‘taskType' is ‘statefulUpdateCapacity'.\n"
                                },
                                "batchSizePercentage": {
                                  "type": "integer",
                                  "description": "The percentage size of each batch in the scheduled deployment roll.\nRequired when the taskType is roll.\n"
                                }
                              }
                            }
                          }
                        }
                      },
                      "thirdPartiesIntegration": {
                        "type": "object",
                        "title": "Elastigroup Third Party Integrations",
                        "description": "All definitions for using third-party Integrations\n",
                        "properties": {
                          "ecs": {
                            "type": "object",
                            "description": "ECS integration object.\n",
                            "properties": {
                              "clusterName": {
                                "type": "string",
                                "example": "test-ecs",
                                "description": "ECS cluster name\n"
                              },
                              "autoScale": {
                                "type": "object",
                                "title": "ECS Autoscaler",
                                "description": "The ECS Autoscaler properties.\n",
                                "required": [
                                  "isEnabled"
                                ],
                                "properties": {
                                  "isEnabled": {
                                    "type": "boolean",
                                    "description": "Enable the ECS Autoscaler.\n",
                                    "example": true
                                  },
                                  "cooldown": {
                                    "type": "integer",
                                    "description": "Cooldown period between scaling actions. Value should be cooldown period in seconds, greater than 180.\n",
                                    "example": 300
                                  },
                                  "attributes": {
                                    "type": "object",
                                    "properties": {
                                      "key": {
                                        "type": "string",
                                        "example": "the_key"
                                      },
                                      "value": {
                                        "type": "string",
                                        "example": "the_value"
                                      }
                                    }
                                  },
                                  "resourceLimits": {
                                    "type": "object",
                                    "description": "Optionally set upper and lower bounds on the resource usage of the cluster.\n",
                                    "properties": {
                                      "maxMemoryGib": {
                                        "type": "integer",
                                        "description": "The maximum memory in GiB units that can be allocated to the cluster. Minimum value: 1.\n",
                                        "example": 1
                                      },
                                      "maxVcpu": {
                                        "type": "integer",
                                        "description": "The maximum CPU in vCPU units that can be allocated to the cluster. Minimum value: 1.\n",
                                        "example": 1
                                      }
                                    }
                                  },
                                  "down": {
                                    "type": "object",
                                    "description": "Autoscaling scale down operations.\n",
                                    "properties": {
                                      "evaluationPeriods": {
                                        "type": "integer",
                                        "example": 4
                                      },
                                      "maxScaleDownPercentage": {
                                        "type": "integer",
                                        "description": "The maximum portion (as a %) of nodes that will be scaled down at once out of the total number of potential nodes to scale down.\nExample: If there are 10 nodes to scale down and the parameter is 50%, then only 5 nodes will be scaled down at once.\nThe other 5 nodes will be scaled down in the next autoscaling iteration.\n",
                                        "example": 20
                                      }
                                    }
                                  },
                                  "headroom": {
                                    "type": "object",
                                    "description": "Spare resource capacity management enabling fast assignment of pods without waiting for new resources to launch.\n",
                                    "properties": {
                                      "cpuPerUnit": {
                                        "type": "integer",
                                        "description": "Optionally configure the number of CPUs to allocate per headroom unit. CPUs are denoted in CPU units, where 1024 units = 1 vCPU.\n",
                                        "example": 2048
                                      },
                                      "memoryPerUnit": {
                                        "type": "integer",
                                        "description": "Optionally configure the amount of memory (MiB) to allocate per headroom unit.\n",
                                        "example": 3
                                      },
                                      "numOfUnits": {
                                        "type": "integer",
                                        "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n",
                                        "example": 2
                                      }
                                    }
                                  },
                                  "isAutoConfig": {
                                    "type": "boolean",
                                    "description": "Use automatic headroom. When set to true, the values under cluster.autoScaler.headroom are not effective, as Ocean configures and optimizes headroom automatically.\n",
                                    "example": false
                                  },
                                  "shouldScaleDownNonServiceTasks": {
                                    "type": "boolean",
                                    "description": "Option to scale down non-service tasks. If not set, Ocean does not scale down standalone tasks.\n",
                                    "default": false,
                                    "example": true
                                  },
                                  "enableAutomaticAndManualHeadroom": {
                                    "type": "boolean",
                                    "description": "When set to true, both automatic and per custom Virtual Node Group manual headroom to be saved concurrently and independently in the cluster. prerequisite: isAutoConfig must be true\n",
                                    "example": false
                                  }
                                }
                              },
                              "batch": {
                                "type": "object",
                                "properties": {
                                  "jobQueueNames": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "example": [
                                        "dumpy-big-processing"
                                      ]
                                    }
                                  }
                                }
                              },
                              "optimizeImages": {
                                "type": "object",
                                "properties": {
                                  "shouldOptimizeEcsAmi": {
                                    "type": "boolean",
                                    "example": true
                                  },
                                  "performAt": {
                                    "type": "string",
                                    "description": "Settings for maintenance strategy.\\\nperformAt of type: 'never' OR 'timeWindow' can only be applied to groups with \"availabilityOriented\" OR groups with \"persistence\",\\\nother groups allow either 'always' type or nothing which also means always.\n",
                                    "enum": [
                                      "never",
                                      "always",
                                      "timeWindow"
                                    ],
                                    "example": "timeWindow",
                                    "default": "always"
                                  },
                                  "timeWindows": {
                                    "type": "array",
                                    "description": "When performAt is 'timeWindow':\\\nmust specify a list of 'timeWindows' with at least one time window Each string is in the format of - ddd:hh:mm-ddd:hh:mm\n* ddd = day of week = Sun | Mon | Tue | Wed | Thu | Fri | Sat\n* hh = hour 24 = 0 -23\n* mm = minute = 0 - 59\n",
                                    "items": {
                                      "type": "string",
                                      "example": "Mon:03:00-Wed:02:30"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "rancher": {
                            "type": "object",
                            "description": "All definitions for using Rancher Labs integration.\n",
                            "properties": {
                              "masterHost": {
                                "type": "string",
                                "description": "Rancher master url\n",
                                "example": "http://myRancher.com:8080/v1"
                              },
                              "accessKey": {
                                "type": "string",
                                "description": "Rancher version\n",
                                "example": "1",
                                "default": "1"
                              },
                              "secretKey": {
                                "type": "string",
                                "example": "SECRET"
                              },
                              "version": {
                                "type": "string",
                                "example": 1
                              }
                            }
                          },
                          "kubernetes": {
                            "type": "object",
                            "properties": {
                              "integrationMode": {
                                "type": "string",
                                "example": "pod"
                              },
                              "clusterIdentifier": {
                                "type": "string",
                                "example": "test-k8s"
                              },
                              "autoScale": {
                                "type": "object",
                                "properties": {
                                  "isEnabled": {
                                    "type": "boolean",
                                    "example": true,
                                    "default": true
                                  },
                                  "cooldown": {
                                    "type": "integer",
                                    "example": 300
                                  },
                                  "down": {
                                    "type": "object",
                                    "description": "Auto Scaling scale down operations.\n",
                                    "properties": {
                                      "evaluationPeriods": {
                                        "type": "integer",
                                        "example": 5
                                      },
                                      "maxScaleDownPercentage": {
                                        "type": "integer",
                                        "description": "The maximum % of nodes that will be scaled down at once out of the total amount of potential nodes to scale down.\nexample: if 10 nodes can be scaled down, only 5 will be given 50% in this parameter.\nthe other 50% will be scaled down in the next autoscaling iteration.\n",
                                        "example": 70
                                      },
                                      "headroom": {
                                        "type": "object",
                                        "description": "Spare resource capacity management enabling fast assignment of Pods without waiting for new resources to launch.\n",
                                        "properties": {
                                          "cpuPerUnit": {
                                            "type": "integer",
                                            "description": "Optionally configure the number of CPUs to allocate per headroom unit. CPUs are denoted in CPU units, where 1024 units = 1 vCPU.\n",
                                            "example": 2048
                                          },
                                          "memoryPerUnit": {
                                            "type": "integer",
                                            "description": "Optionally configure the amount of memory (MiB) to allocate per headroom unit.\n",
                                            "example": 3
                                          },
                                          "numOfUnits": {
                                            "type": "integer",
                                            "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n",
                                            "example": 2
                                          },
                                          "gpuPerUnit": {
                                            "type": "integer",
                                            "example": 2
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "labels": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string",
                                          "example": "group, kops.k8s.io/instancegroup"
                                        },
                                        "value": {
                                          "type": "string",
                                          "example": "microservices"
                                        }
                                      }
                                    }
                                  },
                                  "isAutoConfig": {
                                    "type": "boolean",
                                    "example": false,
                                    "default": false
                                  }
                                }
                              }
                            }
                          },
                          "nomad": {
                            "type": "object",
                            "properties": {
                              "masterHost": {
                                "type": "string",
                                "example": "https://master.host.com"
                              },
                              "masterPort": {
                                "type": "integer",
                                "example": 443
                              },
                              "autoScale": {
                                "type": "object",
                                "properties": {
                                  "isEnabled": {
                                    "type": "boolean",
                                    "description": "Enable the Autoscaler.\n",
                                    "example": true
                                  },
                                  "cooldown": {
                                    "type": "integer",
                                    "description": "Cooldown period between scaling actions. Value should be cooldown period in seconds, greater than 180\n",
                                    "example": 180
                                  },
                                  "down": {
                                    "type": "object",
                                    "description": "Auto Scaling scale down operations.\n",
                                    "properties": {
                                      "evaluationPeriods": {
                                        "type": "integer",
                                        "example": 3
                                      }
                                    }
                                  },
                                  "headroom": {
                                    "type": "object",
                                    "description": "Spare resource capacity management enabling fast assignment of Pods without waiting for new resources to launch.\n",
                                    "properties": {
                                      "cpuPerUnit": {
                                        "type": "integer",
                                        "description": "Optionally configure the number of CPUs to allocate per headroom unit. CPUs are denoted in CPU units, where 1024 units = 1 vCPU.\n",
                                        "example": 2048
                                      },
                                      "memoryPerUnit": {
                                        "type": "integer",
                                        "description": "Optionally configure the amount of memory (MiB) to allocate per headroom unit.\n",
                                        "example": 3
                                      },
                                      "numOfUnits": {
                                        "type": "integer",
                                        "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n",
                                        "example": 2
                                      }
                                    }
                                  },
                                  "constraints": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string",
                                          "example": "${node.class}"
                                        },
                                        "value": {
                                          "type": "string",
                                          "example": "value"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "aclToken": {
                                "type": "string",
                                "example": 123
                              },
                              "tlsConfig": {
                                "type": "object",
                                "description": "Configuration object for TLS integration. (optional)\n",
                                "properties": {
                                  "tlsEnabled": {
                                    "type": "boolean",
                                    "description": "When true, all communication to the master is with TLS. (required)\n",
                                    "example": true
                                  },
                                  "privateKey": {
                                    "type": "string",
                                    "description": "A generated client private key. (required)\n",
                                    "example": "PRIVATE KEY CERTIFICATE STR"
                                  },
                                  "certificate": {
                                    "type": "string",
                                    "description": "The certificates chain, first the client certificate then the ca certificate. (required)\n",
                                    "example": "PUBLIC KEY CERTIFICATE STR"
                                  }
                                }
                              }
                            }
                          },
                          "route53": {
                            "type": "object",
                            "description": "Route53 integration object.\n",
                            "properties": {
                              "domains": {
                                "type": "array",
                                "description": "Route53 domain configurations.\n",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "hostedZoneId": {
                                      "type": "string",
                                      "description": "The Route53 Hosted Zone ID for the registered domain.\n",
                                      "example": "Z3UFMBCGJMYLUT"
                                    },
                                    "spotinstAccountId": {
                                      "type": "string",
                                      "description": "The Spot account ID that is linked to the AWS account that holds the Route53 hosted Zone ID.\nThe default is the user Spot account provided as a URL parameter.\n",
                                      "example": "act-1234abcd"
                                    },
                                    "recordSetType": {
                                      "type": "string",
                                      "description": "Set the type of recordSet to update.\nValid values:\n* \"a\" - means register and de-register of instances done by IP address (IPv4).\nWhen it is \"a\" you should also specify usePublicIp.\n* \"cname\" - register and de-register of instances done by CNAME. When it is \"cname\", you should also specify usePublicDns.\n",
                                      "enum": [
                                        "a",
                                        "cname"
                                      ],
                                      "example": "a",
                                      "default": "a"
                                    },
                                    "recordSets": {
                                      "type": "array",
                                      "description": "List of record sets.\n",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name of the recordSet.\n",
                                            "example": "testcname.spot.io."
                                          },
                                          "usePublicIp": {
                                            "type": "boolean",
                                            "description": "Defines whether to use public or private IP. Relevant only when recordSetType=a.\n",
                                            "example": true,
                                            "default": false
                                          },
                                          "usePublicDns": {
                                            "type": "boolean",
                                            "description": "Defines whether to use a public DNS or private DNS in the instance registration process.\nRelevant only when recordSetType=cname.\n* False=Create a new weighted CNAME recordset with same name and the instance Private DNS.\n* True=instances should be registered with public DNS.\n",
                                            "example": true,
                                            "default": false
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "dockerSwarm": {
                            "$ref": "#/paths/~1aws~1ec2~1group/post/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/thirdPartiesIntegration/properties/dockerSwarm"
                          },
                          "jenkins": {
                            "$ref": "#/paths/~1aws~1ec2~1group/post/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/thirdPartiesIntegration/properties/jenkins"
                          }
                        }
                      },
                      "logging": {
                        "type": "object",
                        "title": "Logging configuration",
                        "properties": {
                          "export": {
                            "type": "object",
                            "title": "Logging Export Configuration.",
                            "properties": {
                              "s3": {
                                "type": "object",
                                "title": "Logging S3 Export configuration.",
                                "description": "Exports Elastigroup logs to the S3 bucket and subdir configured on the S3 [data integration](/#operation/DataIntegrationCreate) given.\nEach file contains logs of 3 minutes where each log is separated by a new line and saved as a JSON.\nThe file formats are `subdir/accountId_groupId_groupName_startTime.log`.\nIf no subdir was configured, the files will be saved in the root of the bucket.\n",
                                "required": [
                                  "id"
                                ],
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The identifier of The S3 data integration to export the logs to.",
                                    "example": "di-123"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "createdAt": {
                        "type": "string",
                        "readOnly": true,
                        "title": "Creation Time Indicator",
                        "description": "Creation Time Indicator",
                        "example": "2020-10-01T05:23:59.302Z"
                      },
                      "updatedAt": {
                        "type": "string",
                        "readOnly": true,
                        "title": "Update Time Indicator",
                        "description": "Update Time Indicator",
                        "example": "2020-10-01T05:23:59.302Z"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1aws~1ec2~1group/post/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Elastigroup",
        "description": "Delete an Elastigroup AWS\n",
        "operationId": "elastigroupAwsDelete",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Elastigroup Delete",
                    "properties": {
                      "statefulDeallocation": {
                        "type": "object",
                        "title": "Stateful deallocation options",
                        "properties": {
                          "shouldDeleteImages": {
                            "type": "boolean",
                            "default": false,
                            "example": false,
                            "description": "For stateful groups, removes persistent images\n"
                          },
                          "shouldDeleteNetworkInterfaces": {
                            "type": "boolean",
                            "default": true,
                            "example": true,
                            "description": "For stateful groups, removes network interfaces\n"
                          },
                          "shouldDeleteVolumes": {
                            "type": "boolean",
                            "default": false,
                            "example": false,
                            "description": "For stateful groups, removes persistent volumes\n"
                          },
                          "shouldDeleteSnapshots": {
                            "type": "boolean",
                            "default": false,
                            "example": false,
                            "description": "For stateful groups, removes snapshots\n"
                          }
                        }
                      },
                      "beanstalk": {
                        "type": "object",
                        "title": "Beanstalk Dellocation Options",
                        "properties": {
                          "rollbackToAsg": {
                            "type": "boolean",
                            "example": true,
                            "default": true,
                            "description": "For groups with Beanstalk integration, roll back the attached ASG to the state prior to integration.\n"
                          }
                        }
                      },
                      "amiBackup": {
                        "type": "object",
                        "title": "AMI Dellocation Options",
                        "properties": {
                          "shouldDeleteImages": {
                            "type": "boolean",
                            "example": false,
                            "default": false,
                            "description": "Mark if images collected during AMI Auto Backup should be deleted during group deletion\n"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Delete Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "3b750eff-3940-46b3-a309-aa2b415272fd",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-98765",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "DELETE",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-06-20T11:35:01.745Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Elastigroup",
        "description": "Describe a specific Elastigroup JSON\n",
        "operationId": "elastigroupAwsListElastigroup",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123456789",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "List Group Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "67582d0c-108b-4ef7-9fdc-d39678a30844",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-1234567",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-01-07T07:30:58.622Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "object",
                                    "title": "spotinst:aws:ec2:group",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "title": "ID",
                                        "example": "sig-1234567"
                                      },
                                      "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "example": "EG"
                                      },
                                      "description": {
                                        "type": "string",
                                        "title": "Validation",
                                        "example": "validation"
                                      },
                                      "capacity": {
                                        "type": "object",
                                        "title": "Capacity",
                                        "properties": {
                                          "minimum": {
                                            "type": "integer",
                                            "title": "Min Capacity Amount",
                                            "example": 1
                                          },
                                          "maximum": {
                                            "type": "integer",
                                            "title": "Max Capacity Amount",
                                            "example": 1
                                          },
                                          "target": {
                                            "type": "integer",
                                            "title": "Target Amount",
                                            "example": 1
                                          },
                                          "unit": {
                                            "type": "string",
                                            "title": "Unit",
                                            "example": "instance"
                                          }
                                        }
                                      },
                                      "strategy": {
                                        "type": "object",
                                        "title": "Strategy",
                                        "properties": {
                                          "risk": {
                                            "type": "integer",
                                            "title": "Risk",
                                            "example": 100
                                          },
                                          "onDemandCount": {
                                            "type": "integer",
                                            "title": "On Demand Count",
                                            "example": null
                                          },
                                          "availabilityVsCost": {
                                            "type": "string",
                                            "title": "Availability VS Cost",
                                            "example": "balanced"
                                          },
                                          "lifetimePeriod": {
                                            "type": "string",
                                            "title": "Life Time Period",
                                            "example": "days"
                                          },
                                          "fallbackToOd": {
                                            "type": "boolean",
                                            "title": "Fallback To On-Demand",
                                            "example": true
                                          },
                                          "persistence": {
                                            "type": "object",
                                            "title": "Fallback To On-Demand"
                                          },
                                          "revertToSpot": {
                                            "type": "object",
                                            "title": "Revert To Spot",
                                            "properties": {
                                              "performAt": {
                                                "type": "string",
                                                "title": "Perform At",
                                                "example": "always"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "compute": {
                                        "type": "object",
                                        "title": "Compute",
                                        "properties": {
                                          "instanceTypes": {
                                            "type": "object",
                                            "title": "Insatnce Types",
                                            "properties": {
                                              "ondemand": {
                                                "type": "string",
                                                "title": "On Demand",
                                                "example": "c3.4xlarge"
                                              },
                                              "spot": {
                                                "type": "string",
                                                "title": "On Demand",
                                                "example": [
                                                  "c3.2xlarge",
                                                  "c4.2xlarge"
                                                ]
                                              }
                                            }
                                          },
                                          "availabilityZones": {
                                            "type": "object",
                                            "title": "Availability Zones",
                                            "properties": {
                                              "name": {
                                                "type": "string",
                                                "title": "Name",
                                                "example": "eu-west-1b"
                                              },
                                              "subnetIds": {
                                                "type": "string",
                                                "title": "SubnetIds",
                                                "example": [
                                                  "eu-west-1b"
                                                ]
                                              }
                                            }
                                          },
                                          "product": {
                                            "type": "object",
                                            "title": "Product",
                                            "example": "Linux/UNIX (Amazon VPC)"
                                          },
                                          "launchSpecification": {
                                            "type": "object",
                                            "title": "Virtual Node Group",
                                            "properties": {
                                              "loadBalancerNames": {
                                                "type": "string",
                                                "title": "Load Balancer Names",
                                                "example": null
                                              },
                                              "loadBalancersConfig": {
                                                "type": "object",
                                                "title": "Load Balancers Config",
                                                "properties": {
                                                  "loadBalancers": {
                                                    "type": "string",
                                                    "title": "Load Balancer Names",
                                                    "example": null
                                                  }
                                                }
                                              },
                                              "healthCheckGracePeriod": {
                                                "type": "integer",
                                                "title": "Health Check Grace Period",
                                                "example": 300
                                              },
                                              "securityGroupIds": {
                                                "type": "string",
                                                "title": "Security Groups IDs",
                                                "example": [
                                                  "sg-1234567"
                                                ]
                                              },
                                              "monitoring": {
                                                "type": "boolean",
                                                "title": "Monitoring",
                                                "example": false
                                              },
                                              "ebsOptimized": {
                                                "type": "boolean",
                                                "title": "EBS Optimized",
                                                "example": false
                                              },
                                              "imageId": {
                                                "type": "boolean",
                                                "title": "Image ID",
                                                "example": "ami-1234567"
                                              },
                                              "iamRole": {
                                                "type": "object",
                                                "title": "IAM Role",
                                                "properties": {
                                                  "name": {
                                                    "type": "string",
                                                    "title": "Name",
                                                    "example": null
                                                  },
                                                  "arn": {
                                                    "type": "string",
                                                    "title": "ARN",
                                                    "example": "arn:aws:iam::1234356789:instance-profile/Loader"
                                                  }
                                                }
                                              },
                                              "keyPair": {
                                                "type": "string",
                                                "title": "Key Pair",
                                                "example": "PA"
                                              },
                                              "userData": {
                                                "type": "string",
                                                "title": "User Data",
                                                "example": "sldkfoisnfgodng"
                                              },
                                              "shutdownScript": {
                                                "type": "string",
                                                "title": "Shut Down Script",
                                                "example": null
                                              },
                                              "tags": {
                                                "type": "object",
                                                "title": "Tags",
                                                "properties": {
                                                  "tagKey": {
                                                    "type": "string",
                                                    "title": "Tag Key",
                                                    "example": "Env"
                                                  },
                                                  "tagValue": {
                                                    "type": "string",
                                                    "title": "Tag Value",
                                                    "example": "TEST"
                                                  }
                                                }
                                              },
                                              "tenancy": {
                                                "type": "string",
                                                "title": "Tenancy",
                                                "example": "default"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "scaling": {
                                        "type": "object",
                                        "title": "Scaling"
                                      },
                                      "scheduling": {
                                        "type": "object",
                                        "title": "Scheduling",
                                        "properties": {
                                          "tasks": {
                                            "type": "array",
                                            "title": "Tasks",
                                            "items": {
                                              "anyOf": [
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "frequency": {
                                                      "type": "boolean",
                                                      "title": "Frequency",
                                                      "example": "hourly"
                                                    },
                                                    "taskType": {
                                                      "type": "string",
                                                      "title": "Task Type",
                                                      "example": "backup_ami"
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "isEnabled": {
                                                      "type": "boolean",
                                                      "title": "Is Enabled",
                                                      "example": true
                                                    },
                                                    "taskType": {
                                                      "type": "boolean",
                                                      "title": "Task Type",
                                                      "example": "scale"
                                                    },
                                                    "cronExpression": {
                                                      "type": "string",
                                                      "title": "Cron Expression",
                                                      "example": "55 19 * * 0-4"
                                                    },
                                                    "scaleTargetCapacity": {
                                                      "type": "integer",
                                                      "title": "Scale Target Capacity",
                                                      "example": 1
                                                    },
                                                    "scaleMinCapacity": {
                                                      "type": "integer",
                                                      "title": "Scale Min Capacity",
                                                      "example": 1
                                                    },
                                                    "scaleMaxCapacity": {
                                                      "type": "integer",
                                                      "title": "Scale Max Capacity",
                                                      "example": 1
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "groupId": {
                                                      "type": "string",
                                                      "title": "Group Id",
                                                      "example": "sig-12345"
                                                    },
                                                    "eventType": {
                                                      "type": "string",
                                                      "title": "Event Type",
                                                      "example": "Scale"
                                                    },
                                                    "createdAt": {
                                                      "type": "string",
                                                      "title": "Created At",
                                                      "example": "2016-01-21T16:51:09.000+0000"
                                                    },
                                                    "subEvents": {
                                                      "type": "object",
                                                      "title": "Sub Event",
                                                      "properties": {
                                                        "type": {
                                                          "type": "string",
                                                          "title": "Type",
                                                          "example": "scaleUp"
                                                        },
                                                        "terminatedSpots": {
                                                          "type": "string",
                                                          "example": [
                                                            {
                                                              "spotInstanceRequestId": "sir-029404xk"
                                                            },
                                                            {
                                                              "instanceId": "i-7fb4facc"
                                                            }
                                                          ]
                                                        },
                                                        "terminatedInstances": {
                                                          "type": "array",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "thirdPartiesIntegration": {
                                        "type": "object",
                                        "title": "Third Parties Integration"
                                      },
                                      "createdAt": {
                                        "type": "string",
                                        "title": "Created At",
                                        "example": "2015-10-23T09:00:00.000Z"
                                      },
                                      "updatedAt": {
                                        "type": "string",
                                        "title": "Updated At",
                                        "example": "2018-08-01T14:11:39.000Z"
                                      }
                                    }
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/statefulInstance": {
      "get": {
        "summary": "List Stateful Instances",
        "description": "List all stateful instances associated with the Elastigroup\n",
        "operationId": "listStatefulInstances",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "groupId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "AWS Elastigroup ID\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "ssi-046b119c",
                                    "description": "ssi-046b119c\n"
                                  },
                                  "instanceId": {
                                    "type": "string",
                                    "example": "i-08878aad7f35d20f5",
                                    "description": "i-08878aad7f35d20f5\n"
                                  },
                                  "privateIp": {
                                    "type": "string",
                                    "example": "172.31.30.122",
                                    "description": "172.31.30.122\n"
                                  },
                                  "imageId": {
                                    "type": "string",
                                    "example": "ami-082b5a644766e0e6f",
                                    "description": "ami-082b5a644766e0e6f\n"
                                  },
                                  "state": {
                                    "type": "string",
                                    "example": "ACTIVE",
                                    "enum": [
                                      "ACTIVE",
                                      "PAUSE",
                                      "PAUSING",
                                      "PAUSED",
                                      "RESUME",
                                      "RESUMING",
                                      "RECYCLE",
                                      "RECYCLING",
                                      "DEALLOCATE",
                                      "DEALLOCATING",
                                      "DEALLOCATED",
                                      "ERROR"
                                    ],
                                    "description": "Possible values: <ul>ACTIVE The sateful instance is running.</li> <li>PAUSE Initiating a Pause action.</li> <li>PAUSING Pause in progress.</li> <li>PAUSED Stateful instance is Paused.</li> <li>RESUME Initiating a Resume action.</li> <li>RESUMING Resume in progress.</li> <li>RECYCLE Initiating a Recycle process.</li> <li>RECYCLING Recycle in progress.</li> <li>DEALLOCATE Initiating a Deallocate process.</li> <li>DEALLOCATING Deallocation in progress.</li> <li>DEALLOCATED Stateful instance is Deallocated.</li> <li>ERROR Error state.</ul>\n"
                                  },
                                  "devices": {
                                    "type": "array",
                                    "items": {
                                      "properties": {
                                        "deviceName": {
                                          "type": "string",
                                          "example": "/dev/xvda",
                                          "description": "/dev/xvda\n"
                                        },
                                        "volumeId": {
                                          "type": "string",
                                          "example": "vol-0bb1c83fb203ad686",
                                          "description": "vol-0bb1c83fb203ad686\n"
                                        },
                                        "snapshotId": {
                                          "type": "string",
                                          "example": "snap-0a2803e5e45d63c3a",
                                          "description": "snap-0a2803e5e45d63c3a\n"
                                        }
                                      }
                                    }
                                  },
                                  "launchedAt": {
                                    "type": "string",
                                    "example": "2019-12-10T08:01:43.000Z",
                                    "description": "2019-12-10T08:01:43.000Z\n"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "example": "2019-12-10T08:02:16.000Z",
                                    "description": "2019-12-10T08:02:16.000Z\n"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/statefulInstance/{statefulInstanceId}/pause": {
      "put": {
        "summary": "Pause Stateful Instance",
        "description": "Pause a stateful instance\n",
        "operationId": "pauseStatefulInstance",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D~1statefulInstance/get/parameters/1"
          },
          {
            "in": "path",
            "name": "statefulInstanceId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "ssi-227a0005",
            "description": "Stateful instance ID\n"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/statefulInstance/{statefulInstanceId}/resume": {
      "put": {
        "summary": "Resume Stateful Instance",
        "description": "Resume a stateful instance\n",
        "operationId": "resumeStatefulInstance",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D~1statefulInstance/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D~1statefulInstance~1%7BstatefulInstanceId%7D~1pause/put/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/statefulInstance/{statefulInstanceId}/recycle": {
      "put": {
        "summary": "Recycle Stateful Instance",
        "description": "Recycle a stateful instance AWS\n",
        "operationId": "elastigroupAwsRecycleStatefulInstance",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D~1statefulInstance/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D~1statefulInstance~1%7BstatefulInstanceId%7D~1pause/put/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/statefulInstance/{statefulInstanceId}/deallocate": {
      "put": {
        "summary": "De-allocate Stateful Instance",
        "description": "De-allocate a stateful instance – delete all the resources associated with the instance (network interface, snapshots, volumes)\n",
        "operationId": "elastigroupAwsDeAllocateStatefulInstance",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D~1statefulInstance/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D~1statefulInstance~1%7BstatefulInstanceId%7D~1pause/put/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/statefulInstance/{statefulInstanceId}/volume/{volumeId}": {
      "delete": {
        "summary": "Delete Volume in a Stateful Instance",
        "description": "Delete a Volume that is part of a paused stateful instance\n",
        "operationId": "deleteVolumeStatefulInstance",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D~1statefulInstance/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D~1statefulInstance~1%7BstatefulInstanceId%7D~1pause/put/parameters/2"
          },
          {
            "in": "path",
            "name": "volumeId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "vol-0faa4b2957a3d59c8",
            "description": "Volume ID\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "3b750eff-3940-46b3-a309-aa2b415272fd",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-98765/statefulInstance/ssi-0d29fe12/volume/vol-0faa4b2957a3d59c8",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "DELETE",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2021-11-03T11:02:55.608Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/statefulMigrationGroup": {
      "post": {
        "summary": "Import Stateful Instance",
        "description": "Create a new Stateful Elastigroup – this Elastigroup will have the same configuration and state of the imported instance.\n",
        "operationId": "importStatefulInstance",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "statefulMigrationGroup"
                    ],
                    "properties": {
                      "statefulMigrationGroup": {
                        "type": "object",
                        "required": [
                          "shouldKeepPrivateIp",
                          "originalInstanceId",
                          "name"
                        ],
                        "properties": {
                          "originalInstanceId": {
                            "type": "string",
                            "example": "i-123c53d9f152a1234",
                            "description": "The originating Instance ID. This instance will be imported along with its State.\n"
                          },
                          "shouldKeepPrivateIp": {
                            "type": "boolean",
                            "example": "false",
                            "description": "Setting this value to true will maintain the initial instance private IP. This will also require that the original instance be terminated in the import process incurring maintenance time. Note: This value must be false if you would like to configure availability zones and subnet ids.\n"
                          },
                          "shouldTerminateInstance": {
                            "type": "boolean",
                            "description": "Decide if the instance termination should be automatic or manual. True = automatic termination. False = manual termination.\n",
                            "example": true
                          },
                          "name": {
                            "type": "string",
                            "example": "MyNewElastigroup",
                            "description": "Specify the new Elastigroup name.\n"
                          },
                          "product": {
                            "type": "string",
                            "example": "Linux/UNIX (Amazon VPC)",
                            "description": "Operation system type. Possible values: Linux/UNIX | SUSE | Linux Windows | Linux/UNIX (Amazon VPC) | SUSE Linux (Amazon VPC) | Windows (Amazon VPC).\n"
                          },
                          "spotInstanceTypes": {
                            "type": "array",
                            "description": "An Array holding the types of instances to be used in the Elastigroup.\n",
                            "items": {
                              "type": "string",
                              "example": "m3.large"
                            }
                          },
                          "region": {
                            "type": "string",
                            "example": "us-west-2",
                            "description": "Specify the AWS Region the instance is running in and the new Elastigroup will be created in.\n"
                          },
                          "availabilityZones": {
                            "type": "array",
                            "description": "An Array holding an object of availabilityZones, this configures the availability zones the group may launch instances in. If this is not passed, the availability zone configuration is taken from the imported instance. Note: This field must be null if statefulMigrationGroup.shouldKeepPrivateIp is true, and must have a minimum of one availability zone.\n",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "example": "us-west-2b",
                                  "description": "This is the name of the Availability Zone, must be a valid availability zone name.\n"
                                },
                                "subnetIds": {
                                  "type": "array",
                                  "description": "This is the ids of the subnets, if this is not defined, then the default subnet for the availability zone is used.\n                Note: This field must be a valid subnet id, this field may be null.\n",
                                  "items": {
                                    "type": "string",
                                    "example": "subnet-12345678"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "smg-7f041234"
                                  },
                                  "groupId": {
                                    "type": "string",
                                    "example": "sig-1ed12345"
                                  },
                                  "state": {
                                    "type": "string",
                                    "example": "MIGRATE_START"
                                  },
                                  "data": {
                                    "type": "object",
                                    "properties": {
                                      "originalInstanceId": {
                                        "type": "string",
                                        "example": "i-0a9c53d9f15212345"
                                      },
                                      "shouldKeepPrivateIp": {
                                        "type": "boolean",
                                        "example": false
                                      },
                                      "shouldTerminateInstance": {
                                        "type": "boolean",
                                        "example": true
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:ec2:statefulMigrationGroup"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/statefulMigrationGroup/{statefulMigrationGroupId}": {
      "get": {
        "summary": "Get Stateful Import Status",
        "description": "Get the current status of the import process. Possible values are: <ul> <li>MIGRATE_PREPARE_AWS_INSTANCE</li> <li>MIGRATE_CREATE_IMAGE</li> <li>MIGRATE_AWAIT_FOR_IMAGE</li> <li>MIGRATE_AWAIT_USER_ACTION</li> <li>MIGRATE_TERMINATE_INSTANCE</li> <li>MIGRATE_AWAIT_INSTANCE_TERMINATION</li> <li>MIGRATE_UPDATE_GROUP</li> <li>MIGRATE_LAUNCH_INSTANCE</li> <li>MIGRATE_AWAIT_INSTANCE_RUNNING</li> <li>MIGRATE_RESUME_STATEFUL_INSTANCE</li> <li>MIGRATE_AWAIT_STATEFUL_INSTANCE_RUNNING</li> <li>MIGRATE_CANCEL</li> <li>MIGRATE_FINISH</li> <li>MIGRATE_ERROR</li>\n",
        "operationId": "getStatefulImportStatus",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "statefulMigrationGroupId",
            "schema": {
              "type": "string"
            },
            "example": "smg-7f041234",
            "required": true,
            "description": "The Process ID you want to query\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "statefulMigrationId": {
                                    "type": "string",
                                    "description": "smg-07791234\n"
                                  },
                                  "groupId": {
                                    "type": "string",
                                    "description": "sig-cc6b1234\n"
                                  },
                                  "instanceId": {
                                    "type": "string",
                                    "description": "i-05ab1b1c2b95a1234\n"
                                  },
                                  "state": {
                                    "type": "string",
                                    "description": "MIGRATE_START\n"
                                  },
                                  "stateDescription": {
                                    "type": "string",
                                    "description": "Creating an image from the instance, Instance Id: i-05ab1b1c2b95a1234\n"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Stateful Import Status",
        "description": "Cancel the ongoing stateful import\n",
        "operationId": "deleteStatefulImportStatus",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "statefulMigrationGroupId",
            "schema": {
              "type": "string"
            },
            "example": "smg-7f041234",
            "required": true,
            "description": "The Process ID you want to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "smg-07791234\n"
                                  },
                                  "groupId": {
                                    "type": "string",
                                    "description": "sig-cc6b1234\n"
                                  },
                                  "state": {
                                    "type": "string",
                                    "description": "MIGRATE_CANCEL\n"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/statefulMigrationGroup/{statefulMigrationGroupId}/userAction": {
      "post": {
        "summary": "Terminate Stateful Instance During Import Process",
        "description": "Manually terminate the source stateful instance during an stateful instance import.\n",
        "operationId": "elastigroupAwsTerminateStatefulInstanceDuringImportProcess",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "statefulMigrationGroupId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The Process ID you want to terminate\n"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "userAction": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "terminate",
                            "description": "Valid values: \"terminate\"\n"
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "userAction": {
                        "type": "object"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "smg-63d3c336"
                                  },
                                  "groupId": {
                                    "type": "string",
                                    "example": "sig-de019081"
                                  },
                                  "state": {
                                    "type": "string",
                                    "example": "MIGRATE_TERMINATE_INSTANCE"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/instance/{instanceId}/lock": {
      "post": {
        "summary": "Instance Lock",
        "description": "Set termination protection for specific instance\n",
        "operationId": "awsElastigroupInstanceLock",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "example": "i-123456",
            "description": "AWS Instance ID\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "ttlInMinutes",
            "example": "23",
            "description": "Specify a TTL (in minutes) for this lock, meaning, for how long the protection will be valid for.\n",
            "schema": {
              "type": "integer"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Lock Instances Responce",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "ff3e1e5b-91b8-42fa-8267-b988efc7f662",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/instance/i-123456/lock",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2015-06-29T13:01:55.060Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/instance/{instanceId}/unlock": {
      "post": {
        "summary": "Instance Unlock",
        "description": "Remove the termination protection from specific instance\n",
        "operationId": "awsElastigroupInstanceUnlock",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1instance~1%7BinstanceId%7D~1lock/post/parameters/0"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Unlock Instances Responce",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "ff3e1e5b-91b8-42fa-8267-b988efc7f662",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/instance/i-123456/unlock",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2015-06-29T13:01:55.060Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/emr/mrScaler": {
      "get": {
        "summary": "List All Scalers",
        "description": "List all MR Scalers and their configuration.",
        "operationId": "elastigroupAwsEmrListAll",
        "tags": [
          "Elastigroup AWS EMR Scaler"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "allOf": [
                                  {
                                    "$ref": "#/paths/~1aws~1emr~1mrScaler/post/requestBody/content/application~1json/schema/allOf/0"
                                  },
                                  {
                                    "type": "object",
                                    "title": "createdAt & updatedAt object",
                                    "properties": {
                                      "createdAt": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2018-10-10T10:50:29.000+0000"
                                      },
                                      "updatedAt": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2018-11-01T10:50:29.000+0000"
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:emr:mrScaler"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "summary": "Create Scaler",
        "description": "Create a new EMR cluster.",
        "operationId": "elastigroupAwsEmrCreate",
        "tags": [
          "Elastigroup AWS EMR Scaler"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "MRScaler object Wrapper",
                    "required": [
                      "mrScaler"
                    ],
                    "properties": {
                      "mrScaler": {
                        "required": [
                          "name",
                          "region",
                          "strategy"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "MRScaler name",
                            "example": "my MRScaler"
                          },
                          "description": {
                            "type": "string",
                            "description": "description for the MRScaler",
                            "example": "this is an MRScaler created with Spot"
                          },
                          "region": {
                            "type": "string",
                            "description": "The region of the source cluster",
                            "example": "us-west-2"
                          },
                          "strategy": {
                            "type": "object",
                            "title": "Strategy Object",
                            "description": "The strategy for creating the group. At least one of `wrapping`, `cloning`, or `new` is required.\n",
                            "properties": {
                              "wrapping": {
                                "type": "object",
                                "description": "Required unless either of `strategy.cloning` or `strategy.new` is specified. In wrap mode, MRScaler will manage an existing cluster and will scale up/down cluster task groups only. MRScaler will manage only instance groups that were created by Spot.\n",
                                "properties": {
                                  "sourceClusterId": {
                                    "type": "string",
                                    "example": "c-1234"
                                  }
                                }
                              },
                              "new": {
                                "type": "object",
                                "description": "Required unless `strategy.wrapping` or `strategy.cloning` is specified. In new mode, MRScaler will create a new cluster with the parameters specified in the request.\n",
                                "properties": {
                                  "releaseLabel": {
                                    "type": "string",
                                    "example": "emr-5.17.0"
                                  },
                                  "numberOfRetries": {
                                    "type": "integer",
                                    "example": 5
                                  }
                                }
                              },
                              "cloning": {
                                "type": "object",
                                "description": "Required unless either of `strategy.wrapping` or `strategy.new` is specified. In clone mode, MRScaler will create a new cluster that will be copied from the origin cluster. MRScaler will manage the entire cluster (the origin cluster will not be affected)\n",
                                "properties": {
                                  "originClusterId": {
                                    "type": "string",
                                    "description": "The ID of the cluster to clone",
                                    "example": "j-38EE27G2QY02I"
                                  },
                                  "includeSteps": {
                                    "type": "boolean",
                                    "description": "Include cloning of steps from the original cluster",
                                    "example": false
                                  },
                                  "numberOfRetries": {
                                    "type": "integer",
                                    "description": "number of times to retry if provisioning timeout is exceeded",
                                    "example": 5
                                  }
                                }
                              },
                              "provisioningTimeout": {
                                "type": "object",
                                "description": "EMR clusters occasionally get stuck in provisioning status due to unhealthy clusters, slowness or other issues. In such cases, a timeout can be used to automatically terminate the cluster after the defined period of time.\n",
                                "properties": {
                                  "timeout": {
                                    "type": "integer",
                                    "description": "Time (minutes) after which the cluster is automatically terminated if it's still in provisioning status.\n",
                                    "example": 15
                                  },
                                  "timeoutAction": {
                                    "type": "string",
                                    "enum": [
                                      "terminate",
                                      "terminateAndRetry"
                                    ],
                                    "description": "Desired action if the timeout is exceeded. Currently `terminate` and `terminateAndRetry` are supported.\n",
                                    "example": "terminate"
                                  }
                                }
                              }
                            }
                          },
                          "compute": {
                            "type": "object",
                            "title": "Compute Object",
                            "description": "describes the compute resources for the MR scaler",
                            "properties": {
                              "ebsRootVolumeSize": {
                                "type": "integer",
                                "description": "The EBS root volume size in GB",
                                "example": 4
                              },
                              "availabilityZones": {
                                "type": "array",
                                "description": "Array of availability zone objects",
                                "items": {
                                  "type": "object",
                                  "title": "AZ Object",
                                  "description": "Availability Zone object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "AZ name - **required in clone or new strategy only**\n",
                                      "example": "us-west-2a"
                                    },
                                    "subnetId": {
                                      "type": "string",
                                      "description": "EC2/VPC subnet ID - **required in clone or new strategy only**\n",
                                      "example": "subnet-3b5b3601"
                                    }
                                  }
                                }
                              },
                              "bootstrapActions": {
                                "type": "object",
                                "title": "BootstrapActions Object",
                                "description": "Describe bootstrap actions. For more information please see: [Advanced - Using Bootstrap And Configuration Files](https://docs.spot.io/elastigroup/tools-integrations/elastic-mapreduce/advanced-import-use-bootstrap-and-configuration-files)\n",
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "title": "Configurations object",
                                    "required": [
                                      "file"
                                    ],
                                    "properties": {
                                      "file": {
                                        "type": "object",
                                        "description": "Bootstraps file for the group",
                                        "properties": {
                                          "bucket": {
                                            "type": "string",
                                            "description": "The S3 bucket name",
                                            "example": "emr-test"
                                          },
                                          "key": {
                                            "type": "string",
                                            "description": "The S3 Bucket key",
                                            "example": "MyFile.json"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Json Configuration Object",
                                    "required": [
                                      "jsonConfiguration"
                                    ],
                                    "properties": {
                                      "jsonConfiguration": {
                                        "type": "array",
                                        "description": "Bootstraps configuration for the group",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "scriptBootstrapAction"
                                          ],
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "The name of bootstrap action"
                                            },
                                            "scriptBootstrapAction": {
                                              "required": [
                                                "path"
                                              ],
                                              "type": "object",
                                              "description": "The script run by the bootstrap action.",
                                              "properties": {
                                                "path": {
                                                  "type": "string",
                                                  "description": "The S3 bucket name",
                                                  "example": "emr-test"
                                                },
                                                "args": {
                                                  "type": "array",
                                                  "description": "A list of command line arguments to pass to the bootstrap action script.",
                                                  "items": {
                                                    "type": "string",
                                                    "example": "instance.isMaster=true"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              "steps": {
                                "type": "object",
                                "title": "Steps Object",
                                "description": "Describe emr steps. For more information please see: [Advanced - Using Bootstrap And Configuration Files](https://docs.spot.io/elastigroup/tools-integrations/elastic-mapreduce/advanced-import-use-bootstrap-and-configuration-files)\n",
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "title": "Configurations object",
                                    "required": [
                                      "file"
                                    ],
                                    "properties": {
                                      "file": {
                                        "type": "object",
                                        "description": "Steps file for the group",
                                        "properties": {
                                          "bucket": {
                                            "type": "string",
                                            "description": "The S3 bucket name",
                                            "example": "emr-test"
                                          },
                                          "key": {
                                            "type": "string",
                                            "description": "The S3 Bucket key",
                                            "example": "MyFile.json"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Json Configuration Object",
                                    "required": [
                                      "jsonConfiguration"
                                    ],
                                    "properties": {
                                      "jsonConfiguration": {
                                        "type": "array",
                                        "description": "Steps configuration for the group",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "stepConfig"
                                          ],
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "The name of configured step",
                                              "example": "stepName"
                                            },
                                            "actionOnFailure": {
                                              "type": "string",
                                              "description": "Valid values \"TERMINATE_JOB_FLOW\", \"TERMINATE_CLUSTER\", \"CANCEL_AND_WAIT\", \"CONTINUE\"",
                                              "example": "CONTINUE"
                                            },
                                            "stepConfig": {
                                              "required": [
                                                "jar"
                                              ],
                                              "type": "object",
                                              "description": "The JAR file used for the step.",
                                              "properties": {
                                                "args": {
                                                  "type": "array",
                                                  "description": "A list of command line arguments passed to the JAR file's main function when executed.",
                                                  "example": "-input",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "jar": {
                                                  "type": "string",
                                                  "description": "A path to a JAR file run during the step.",
                                                  "example": "emr-test"
                                                },
                                                "mainClass": {
                                                  "type": "string",
                                                  "description": "The name of the main class in the specified Java file.",
                                                  "example": "mainClass"
                                                },
                                                "properties": {
                                                  "type": "array",
                                                  "description": "A list of Java properties that are set when the step runs.",
                                                  "items": {
                                                    "type": "object",
                                                    "required": [
                                                      "key",
                                                      "value"
                                                    ],
                                                    "properties": {
                                                      "key": {
                                                        "type": "string",
                                                        "description": "The unique identifier of a key-value pair.",
                                                        "example": "key"
                                                      },
                                                      "value": {
                                                        "type": "string",
                                                        "description": "The value part of the identified key.",
                                                        "example": "value"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              "instanceGroups": {
                                "type": "array",
                                "description": "Array of instance groups for this MR scaler",
                                "items": {
                                  "type": "object",
                                  "title": "InstanceGroup Object",
                                  "properties": {
                                    "masterGroup": {
                                      "type": "object",
                                      "title": "Master Group Object",
                                      "required": [
                                        "lifeCycle"
                                      ],
                                      "properties": {
                                        "instanceTypes": {
                                          "$ref": "#/paths/~1aws~1emr~1mrScaler/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/0/properties/mrScaler/properties/compute/properties/instanceGroups/items/properties/coreGroup/properties/instanceTypes"
                                        },
                                        "target": {
                                          "type": "integer",
                                          "description": "Number of instances in the master group - **required in clone or new strategy only**",
                                          "example": 1
                                        },
                                        "lifeCycle": {
                                          "$ref": "#/paths/~1aws~1emr~1mrScaler/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/0/properties/mrScaler/properties/compute/properties/instanceGroups/items/properties/coreGroup/properties/lifeCycle",
                                          "example": "ON_DEMAND"
                                        },
                                        "configurations": {
                                          "oneOf": [
                                            {
                                              "$ref": "#/paths/~1aws~1emr~1mrScalerOperator/post/requestBody/content/application~1json/schema/allOf/0/properties/mrScaler/properties/compute/properties/configurations/oneOf/0"
                                            },
                                            {
                                              "$ref": "#/paths/~1aws~1emr~1mrScalerOperator/post/requestBody/content/application~1json/schema/allOf/0/properties/mrScaler/properties/compute/properties/configurations/oneOf/1"
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    "coreGroup": {
                                      "type": "object",
                                      "title": "Core Group Object",
                                      "properties": {
                                        "instanceTypes": {
                                          "type": "array",
                                          "title": "Instance Types Array",
                                          "description": "Instance types to choose from for the group - **required in clone or new strategy only**",
                                          "items": {
                                            "type": "string"
                                          },
                                          "example": [
                                            "m3.xlarge",
                                            "m4.large",
                                            "m4.xlarge",
                                            "m4.2xlarge"
                                          ]
                                        },
                                        "capacity": {
                                          "type": "object",
                                          "title": "Capacity Object",
                                          "description": "Capacity specifications for the group: minimum, maximum, and target compute resources\n",
                                          "properties": {
                                            "minimum": {
                                              "type": "integer",
                                              "description": "Minimum number of instances in group",
                                              "example": 1
                                            },
                                            "target": {
                                              "type": "integer",
                                              "description": "Desired number of instances in group",
                                              "example": 5
                                            },
                                            "maximum": {
                                              "type": "integer",
                                              "description": "Maximum number of instances in group",
                                              "example": 10
                                            },
                                            "unit": {
                                              "type": "string",
                                              "description": "Unit of \"instance\" for the number of instances or unit of \"weight\" for the number of vCPU",
                                              "example": "instance"
                                            }
                                          }
                                        },
                                        "lifeCycle": {
                                          "example": "SPOT",
                                          "description": "**required** only with `clone` or `new` strategy\n",
                                          "type": "string",
                                          "title": "LifeCycle Enum",
                                          "enum": [
                                            "SPOT",
                                            "ON_DEMAND"
                                          ]
                                        },
                                        "ebsConfiguration": {
                                          "type": "object",
                                          "title": "EBS Configuration Object",
                                          "description": "Information about the EBS configurations that will be attached to each EC2 instance in the group.\n",
                                          "required": [
                                            "ebsBlockDeviceConfigs",
                                            "ebsOptimized"
                                          ],
                                          "properties": {
                                            "ebsBlockDeviceConfigs": {
                                              "type": "array",
                                              "description": "An array of Amazon EBS volume specifications attached to a cluster instance.",
                                              "items": {
                                                "type": "object",
                                                "title": "Block Device Config Object",
                                                "description": "Amazon EBS volume specification attached to a cluster instance.",
                                                "required": [
                                                  "volumeSpecification",
                                                  "volumesPerInstance"
                                                ],
                                                "properties": {
                                                  "volumeSpecification": {
                                                    "type": "object",
                                                    "title": "Volume Specification Object",
                                                    "description": "EBS volume specifications such as volume type, IOPS, and size (GiB) that will be requested for the EBS volume attached to an EC2 instance in the cluster - required if `ebsConfiguration` is defined.\n",
                                                    "properties": {
                                                      "volumeType": {
                                                        "type": "string",
                                                        "description": "The volume type. Volume types supported are `gp2`, `io1`, and `standard` - required if `ebsConfiguration` is defined\n",
                                                        "enum": [
                                                          "gp2",
                                                          "io1",
                                                          "standard"
                                                        ],
                                                        "example": "io1"
                                                      },
                                                      "dynamicVolumeSize": {
                                                        "type": "object",
                                                        "title": "Dynamic Volume Size Object",
                                                        "required": [
                                                          "baseSize",
                                                          "resource",
                                                          "sizePerResourceUnit"
                                                        ],
                                                        "description": "Set dynamic volume size properties. **When using this object, you cannot use sizeInGB**. You must use one or the other.\n",
                                                        "properties": {
                                                          "baseSize": {
                                                            "type": "integer",
                                                            "description": "Initial size for volume.",
                                                            "example": 50
                                                          },
                                                          "resource": {
                                                            "type": "string",
                                                            "description": "Valid values: \"CPU\"\n",
                                                            "enum": [
                                                              "CPU"
                                                            ],
                                                            "example": "CPU"
                                                          },
                                                          "sizePerResourceUnit": {
                                                            "type": "integer",
                                                            "description": "Additional size per resource unit (in GB). Example: if baseSize=50, and sizePerResourceUnit=20, and an instance with 2 CPU is launched - its disk size will be of size 90GB\n",
                                                            "example": 20
                                                          }
                                                        }
                                                      },
                                                      "sizeInGB": {
                                                        "type": "integer",
                                                        "description": "The volume size, in gigabytes (GiB). This can be a number from 1 - 1024. **If the volume type is EBS-optimized, the minimum value is 10** - required if `ebsConfiguration` is defined\n",
                                                        "example": 8
                                                      },
                                                      "iops": {
                                                        "type": "integer",
                                                        "description": "The number of I/O operations per second (IOPS) that the volume supports.",
                                                        "example": 200
                                                      }
                                                    }
                                                  },
                                                  "volumesPerInstance": {
                                                    "type": "integer",
                                                    "description": "Number of EBS volumes with a specific volume configuration that will be associated with every instance in the instance group - required if `ebsConfiguration` is defined.\n",
                                                    "example": 1
                                                  }
                                                }
                                              }
                                            },
                                            "ebsOptimized": {
                                              "type": "boolean",
                                              "description": "Indicates whether an Amazon EBS volume is EBS-optimized.",
                                              "example": true
                                            }
                                          }
                                        },
                                        "configurations": {
                                          "oneOf": [
                                            {
                                              "$ref": "#/paths/~1aws~1emr~1mrScalerOperator/post/requestBody/content/application~1json/schema/allOf/0/properties/mrScaler/properties/compute/properties/configurations/oneOf/0"
                                            },
                                            {
                                              "$ref": "#/paths/~1aws~1emr~1mrScalerOperator/post/requestBody/content/application~1json/schema/allOf/0/properties/mrScaler/properties/compute/properties/configurations/oneOf/1"
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    "taskGroup": {
                                      "type": "object",
                                      "title": "Task Group Object",
                                      "properties": {
                                        "instanceTypes": {
                                          "$ref": "#/paths/~1aws~1emr~1mrScaler/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/0/properties/mrScaler/properties/compute/properties/instanceGroups/items/properties/coreGroup/properties/instanceTypes"
                                        },
                                        "capacity": {
                                          "$ref": "#/paths/~1aws~1emr~1mrScaler/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/0/properties/mrScaler/properties/compute/properties/instanceGroups/items/properties/coreGroup/properties/capacity"
                                        },
                                        "lifeCycle": {
                                          "$ref": "#/paths/~1aws~1emr~1mrScaler/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/0/properties/mrScaler/properties/compute/properties/instanceGroups/items/properties/coreGroup/properties/lifeCycle",
                                          "example": "SPOT",
                                          "description": "**required** only with `clone` or `new` strategy\n"
                                        },
                                        "ebsConfiguration": {
                                          "$ref": "#/paths/~1aws~1emr~1mrScaler/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/0/properties/mrScaler/properties/compute/properties/instanceGroups/items/properties/coreGroup/properties/ebsConfiguration"
                                        },
                                        "configurations": {
                                          "oneOf": [
                                            {
                                              "$ref": "#/paths/~1aws~1emr~1mrScalerOperator/post/requestBody/content/application~1json/schema/allOf/0/properties/mrScaler/properties/compute/properties/configurations/oneOf/0"
                                            },
                                            {
                                              "$ref": "#/paths/~1aws~1emr~1mrScalerOperator/post/requestBody/content/application~1json/schema/allOf/0/properties/mrScaler/properties/compute/properties/configurations/oneOf/1"
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "instanceWeights": {
                                "type": "array",
                                "description": "An array of custom-weight settings",
                                "items": {
                                  "type": "object",
                                  "title": "Instance Weight Object",
                                  "description": "Settings for a single custom weight",
                                  "required": [
                                    "instanceType",
                                    "weightedCapacity"
                                  ],
                                  "properties": {
                                    "instanceType": {
                                      "type": "string",
                                      "description": "The instance type to set weight for\n",
                                      "example": "m4.large"
                                    },
                                    "weightedCapacity": {
                                      "type": "integer",
                                      "description": "Weight for the chosen instance type.\n",
                                      "example": 3
                                    }
                                  }
                                }
                              },
                              "emrManagedMasterSecurityGroup": {
                                "type": "string",
                                "description": "EMR Managed Security group that will be set to the master instance group",
                                "example": "sg-123456789"
                              },
                              "emrManagedSlaveSecurityGroup": {
                                "type": "string",
                                "description": "EMR Managed Security group that will be set to the slave instance group",
                                "example": "sg-123456789"
                              },
                              "additionalMasterSecurityGroups": {
                                "type": "array",
                                "description": "A list of additional Amazon EC2 security group IDs for the master node.",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "sg-123456789"
                                ]
                              },
                              "additionalSlaveSecurityGroups": {
                                "type": "array",
                                "description": "A list of additional Amazon EC2 security group IDs for the core and task nodes.",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "sg-123456789"
                                ]
                              },
                              "serviceAccessSecurityGroup": {
                                "type": "string",
                                "description": "The identifier of the Amazon EC2 security group for the Amazon EMR service to access clusters in VPC private subnets\n",
                                "example": "EMR_DefaultRole"
                              },
                              "customAmiId": {
                                "type": "string",
                                "description": "The ID of a custom Amazon EBS-backed Linux AMI if the cluster uses a custom AMI.",
                                "example": "ami-123456789"
                              },
                              "repoUpgradeOnBoot": {
                                "type": "string",
                                "description": "**Applies only when CustomAmiID is used**. Specifies the type of updates that are applied from the Amazon Linux AMI package repositories when an instance boots using the AMI.\n",
                                "enum": [
                                  "SECURITY",
                                  "NONE"
                                ],
                                "example": "SECURITY"
                              },
                              "tags": {
                                "type": "array",
                                "description": "array of key:value pairs of tags\n",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "tagKey": {
                                      "type": "string",
                                      "description": "The tag's key",
                                      "example": "Creator"
                                    },
                                    "tagValue": {
                                      "type": "string",
                                      "description": "The tag's value",
                                      "example": "someUser"
                                    }
                                  }
                                }
                              },
                              "ec2KeyName": {
                                "type": "string",
                                "description": "The name of an Amazon EC2 key-pair that can be used to `SSH` to the master node.\n",
                                "example": "myEC2KeyName"
                              },
                              "applications": {
                                "type": "array",
                                "description": "A case-insensitive array of applications for Amazon EMR to install and configure when launching the cluster.\n",
                                "items": {
                                  "type": "object",
                                  "title": "Application Object",
                                  "description": "Application for Amazon EMR to install and configure when launching the cluster",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Application name",
                                      "example": "Hue"
                                    },
                                    "args": {
                                      "type": "array",
                                      "description": "Application arguments",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "version": {
                                      "type": "string",
                                      "description": "Application version",
                                      "example": "1.0"
                                    }
                                  }
                                }
                              },
                              "configurations": {
                                "oneOf": [
                                  {
                                    "type": "array",
                                    "title": "Json Configuration Object",
                                    "required": [
                                      "jsonConfiguration"
                                    ],
                                    "description": "EMR cluster configuration in JSON format. You can use `jsonConfiguration` or `file`, but not both. Can be used in `masterGroup`, `coreGroup`, and `taskGroup`.\n",
                                    "items": {
                                      "title": "jsonConfiguration",
                                      "type": "object",
                                      "properties": {
                                        "classification": {
                                          "type": "string",
                                          "description": "The grouping within a configuration.",
                                          "example": "mapred-site"
                                        },
                                        "properties": {
                                          "type": "object",
                                          "description": "Within a configuration classification, a set of properties that represent the settings that you want to change in the configuration file. Duplicates not allowed.\n",
                                          "example": {
                                            "mapred.tasktracker.map.tasks.maximum": 2
                                          }
                                        },
                                        "configurations": {
                                          "type": "array",
                                          "description": "Array of objects with any keys. This can include additional levels (i.e., nested) of classification, properties, and configurations.\n",
                                          "items": {
                                            "type": "object",
                                            "title": "Nested Configuration Object",
                                            "properties": {
                                              "classification": {
                                                "type": "string",
                                                "description": "The grouping within a configuration.",
                                                "example": "hadoop-env"
                                              },
                                              "properties": {
                                                "type": "object",
                                                "description": "Within a configuration classification, a set of properties that represent the settings that you want to change in the configuration file. Duplicates not allowed.\n",
                                                "example": {
                                                  "HADOOP_DATANODE_HEAPSIZE": 2048,
                                                  "HADOOP_NAMENODE_OPTS": "-XX:GCTimeRatio=19"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Configurations object",
                                    "required": [
                                      "file"
                                    ],
                                    "properties": {
                                      "file": {
                                        "type": "object",
                                        "description": "Configurations file for the group",
                                        "properties": {
                                          "bucket": {
                                            "type": "string",
                                            "description": "S3 bucket name of the configurations file for the instance group",
                                            "example": "spot-labs"
                                          },
                                          "key": {
                                            "type": "string",
                                            "description": "S3 key name of the configurations file for the instance group",
                                            "example": "emr_configurations.json"
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          },
                          "cluster": {
                            "type": "object",
                            "title": "EMR Cluster Object",
                            "description": "**Allowed only when the `new` strategy is chosen.**\n",
                            "properties": {
                              "terminationProtected": {
                                "type": "boolean",
                                "description": "Specifies whether the Amazon EC2 instances in the cluster are protected from termination by API calls, user intervention, or in the event of a job-flow error\n",
                                "example": false
                              },
                              "keepJobFlowAliveWhenNoSteps": {
                                "type": "boolean",
                                "description": "Specifies whether the cluster should remain available after completing all steps",
                                "example": true
                              },
                              "logUri": {
                                "type": "string",
                                "description": "The path to the Amazon S3 location where logs for this cluster are stored.",
                                "example": "s3://job-status"
                              },
                              "additionalInfo": {
                                "type": "string",
                                "description": "This is meta information about third-party applications that third-party vendors use for testing purposes.\n",
                                "example": "{'test':'more information'}"
                              },
                              "jobFlowRole": {
                                "type": "string",
                                "description": "The IAM role that was specified when the job flow was launched. The EC2 instances of the job flow assume this role.\n",
                                "example": "EMR_EC2_DefaultRole"
                              },
                              "serviceRole": {
                                "type": "string",
                                "description": "The IAM role that will be assumed by the Amazon EMR service to access AWS resources on your behalf\n",
                                "example": "someIAMRole"
                              },
                              "securityConfiguration": {
                                "type": "string",
                                "description": "The name of the security configuration applied to the cluster",
                                "example": "testConfig"
                              }
                            }
                          },
                          "scheduling": {
                            "type": "object",
                            "title": "Scheduling Object",
                            "description": "Schedule tasks to execute on the Elastigroup.",
                            "properties": {
                              "tasks": {
                                "type": "array",
                                "description": "An array of scheduled tasks.",
                                "items": {
                                  "type": "object",
                                  "title": "Task Object",
                                  "description": "A scheduled task",
                                  "properties": {
                                    "isEnabled": {
                                      "type": "boolean",
                                      "description": "Enable/Disable the specified scheduling task.",
                                      "example": true,
                                      "default": true
                                    },
                                    "instanceGroupType": {
                                      "type": "string",
                                      "description": "Select the EMR instance groups to execute the scheduled task on. Valid values: `task`\n",
                                      "example": "task",
                                      "enum": [
                                        "task"
                                      ]
                                    },
                                    "taskType": {
                                      "type": "string",
                                      "description": "The type of task to be scheduled. Valid values: `setCapacity`\n",
                                      "example": "setCapacity",
                                      "enum": [
                                        "setCapacity"
                                      ]
                                    },
                                    "cronExpression": {
                                      "type": "string",
                                      "description": "A valid Cron expression",
                                      "example": "* 8 * 10 *"
                                    },
                                    "targetCapacity": {
                                      "type": "integer",
                                      "description": "Set a new target capacity for the Elastigroup.",
                                      "example": 2
                                    },
                                    "minCapacity": {
                                      "type": "integer",
                                      "description": "Set a new minimum capacity for the Elastigroup.",
                                      "example": 2
                                    },
                                    "maxCapacity": {
                                      "type": "integer",
                                      "description": "Set a new maximum capacity for the Elastigroup.",
                                      "example": 2
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "scaling": {
                            "type": "object",
                            "title": "Scaling Object",
                            "description": "Set scaling polices.",
                            "properties": {
                              "up": {
                                "type": "array",
                                "title": "Scaling Up Object",
                                "description": "A scale-up policy",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "policyName": {
                                      "type": "string",
                                      "description": "The Scaling policy name",
                                      "example": "myScaleUpPolicyName"
                                    },
                                    "metricName": {
                                      "type": "string",
                                      "description": "The name of the metric",
                                      "default": "AppsPending",
                                      "example": "AppsPending"
                                    },
                                    "unit": {
                                      "type": "string",
                                      "description": "The unit for the alarm's associated metric.",
                                      "example": "count",
                                      "enum": [
                                        "seconds",
                                        "microseconds",
                                        "milliseconds",
                                        "bytes",
                                        "kilobytes",
                                        "megabytes",
                                        "gigabytes",
                                        "terabytes",
                                        "bits",
                                        "kilobits",
                                        "megabits",
                                        "gigabits",
                                        "terabits",
                                        "percent",
                                        "count",
                                        "bytes/second",
                                        "kilobytes/second",
                                        "megabytes/second",
                                        "gigabytes/second",
                                        "terabytes/second",
                                        "bits/second",
                                        "kilobits/second",
                                        "megabits/second",
                                        "gigabits/second",
                                        "terabits/second",
                                        "count/second",
                                        "none"
                                      ]
                                    },
                                    "threshold": {
                                      "type": "integer",
                                      "description": "The value against which the specified statistic is compared.",
                                      "example": 100
                                    },
                                    "action": {
                                      "type": "object",
                                      "title": "Scaling up Action Object",
                                      "description": "The action to take when scale up is needed.",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "description": "The type of the action to take when scale up is needed. Valid Values: `adjustment` | `updateCapacity` | `setMinTarget`\n",
                                          "enum": [
                                            "adjustment",
                                            "updateCapacity",
                                            "setMinTarget"
                                          ],
                                          "example": "adjustment"
                                        },
                                        "minTargetCapacity": {
                                          "type": "integer",
                                          "description": "Required if using `setMinTarget` as action type. A number specifying the target capacity needed.\n",
                                          "example": 1
                                        },
                                        "adjustment": {
                                          "type": "integer",
                                          "description": "Required if using `adjustment` as action type. The number associated with the specified adjustment type.\n",
                                          "example": 2
                                        },
                                        "target": {
                                          "type": "integer",
                                          "description": "Required if using `updateCapacity` as action type and neither `minimum` nor `maximum` are defined. The desired number of instances.\n",
                                          "example": 2
                                        },
                                        "minimum": {
                                          "type": "integer",
                                          "description": "Required if using `updateCapacity` as action type and neither `target` nor `maximum` are defined. The lower limit number of instances that you can scale down to.\n",
                                          "example": 1
                                        },
                                        "maximum": {
                                          "type": "integer",
                                          "description": "Required if using `updateCapacity` as action type and neither `target` nor `minimum` defined. The upper limit number of instances that you can scale up to.\n",
                                          "example": 5
                                        }
                                      }
                                    },
                                    "adjustment": {
                                      "type": "integer",
                                      "description": "**Cannot be used if using `action` or `minTargetCapacity`**. The number associated with the specified adjustment type.\n",
                                      "example": 2
                                    },
                                    "period": {
                                      "type": "integer",
                                      "description": "The period in seconds over which the statistic is applied.",
                                      "example": 300
                                    },
                                    "evaluationPeriods": {
                                      "type": "integer",
                                      "description": "The number of periods over which data is compared to the specified threshold",
                                      "example": 1
                                    },
                                    "dimensions": {
                                      "type": "array",
                                      "description": "The dimensions for the alarm's associated metric.",
                                      "items": {
                                        "type": "object",
                                        "description": "The dimension for the alarm's associated metric.",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "the dimension name",
                                            "example": "JobFlowId"
                                          }
                                        }
                                      }
                                    },
                                    "operator": {
                                      "type": "string",
                                      "description": "The operator to use in order to determine if the scaling policy is applicable. Valid values: `gt` | `gte` | `lt` | `lte`\n",
                                      "enum": [
                                        "gte",
                                        "lte",
                                        "lt",
                                        "gt"
                                      ],
                                      "example": "gte"
                                    },
                                    "statistic": {
                                      "type": "string",
                                      "description": "The metric statistics to return.  Valid Values: `average`, `sum`, `sampleCount`, `maximum`, `minimum`\n",
                                      "enum": [
                                        "average",
                                        "sum",
                                        "sampleCount",
                                        "maximum",
                                        "minimum"
                                      ]
                                    },
                                    "namespace": {
                                      "type": "string",
                                      "description": "The namespace for the alarm's associated metric.",
                                      "default": "AWS/ElasticMapReduce",
                                      "example": "AWS/ElasticMapReduce"
                                    }
                                  }
                                }
                              },
                              "down": {
                                "type": "array",
                                "title": "Scaling Down Object",
                                "description": "A scale-down policy",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "policyName": {
                                      "type": "string",
                                      "description": "The Scaling policy name",
                                      "example": "myScaleDownPolicyName"
                                    },
                                    "metricName": {
                                      "type": "string",
                                      "description": "The name of the metric",
                                      "default": "AppsPending",
                                      "example": "AppsPending"
                                    },
                                    "unit": {
                                      "type": "string",
                                      "description": "The unit for the alarm's associated metric.",
                                      "example": "count",
                                      "enum": [
                                        "seconds",
                                        "microseconds",
                                        "milliseconds",
                                        "bytes",
                                        "kilobytes",
                                        "megabytes",
                                        "gigabytes",
                                        "terabytes",
                                        "bits",
                                        "kilobits",
                                        "megabits",
                                        "gigabits",
                                        "terabits",
                                        "percent",
                                        "count",
                                        "bytes/second",
                                        "kilobytes/second",
                                        "megabytes/second",
                                        "gigabytes/second",
                                        "terabytes/second",
                                        "bits/second",
                                        "kilobits/second",
                                        "megabits/second",
                                        "gigabits/second",
                                        "terabits/second",
                                        "count/second",
                                        "none"
                                      ]
                                    },
                                    "threshold": {
                                      "type": "integer",
                                      "description": "The value against which the specified statistic is compared.",
                                      "example": 100
                                    },
                                    "action": {
                                      "type": "object",
                                      "title": "Scaling Down Action Object",
                                      "description": "The action to take when scale down is needed.",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "description": "The type of the action to take when scale down is needed. Valid Values: `adjustment` | `updateCapacity` | `setMaxTarget`\n",
                                          "enum": [
                                            "adjustment",
                                            "updateCapacity",
                                            "setMaxTarget"
                                          ],
                                          "example": "adjustment"
                                        },
                                        "maxTargetCapacity": {
                                          "type": "integer",
                                          "description": "Required if using `setMaxTarget` as action type. A number specifying the target capacity needed.\n",
                                          "example": 1
                                        },
                                        "adjustment": {
                                          "type": "integer",
                                          "description": "Required if using `adjustment` as action type. The number associated with the specified adjustment type.\n",
                                          "example": 2
                                        },
                                        "target": {
                                          "type": "integer",
                                          "description": "Required if using `updateCapacity` as action type and neither `minimum` nor `maximum` are defined. The desired number of instances.\n",
                                          "example": 2
                                        },
                                        "minimum": {
                                          "type": "integer",
                                          "description": "Required if using `updateCapacity` as action type and neither `target` nor `maximum` are defined. The lower limit number of instances that you can scale down to.\n",
                                          "example": 1
                                        },
                                        "maximum": {
                                          "type": "integer",
                                          "description": "Required if using `updateCapacity` as action type and neither `target` nor `minimum` defined. The upper limit number of instances that you can scale up to.\n",
                                          "example": 5
                                        }
                                      }
                                    },
                                    "adjustment": {
                                      "type": "integer",
                                      "description": "**Cannot be used if using `action` or `maxTargetCapacity`**. The number associated with the specified adjustment type.\n",
                                      "example": 2
                                    },
                                    "period": {
                                      "type": "integer",
                                      "description": "The period in seconds over which the statistic is applied.",
                                      "example": 300
                                    },
                                    "evaluationPeriods": {
                                      "type": "integer",
                                      "description": "The number of periods over which data is compared to the specified threshold",
                                      "example": 1
                                    },
                                    "dimensions": {
                                      "type": "array",
                                      "description": "The dimensions for the alarm's associated metric.",
                                      "items": {
                                        "type": "object",
                                        "description": "The dimension for the alarm's associated metric.",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "the dimension name",
                                            "example": "JobFlowId"
                                          }
                                        }
                                      }
                                    },
                                    "operator": {
                                      "type": "string",
                                      "description": "The operator to use in order to determine if the scaling policy is applicable. Valid values: `gt` | `gte` | `lt` | `lte`\n",
                                      "enum": [
                                        "gte",
                                        "lte",
                                        "lt",
                                        "gt"
                                      ],
                                      "example": "lte"
                                    },
                                    "statistic": {
                                      "type": "string",
                                      "description": "The metric statistics to return.  Valid Values: `average`, `sum`, `sampleCount`, `maximum`, `minimum`\n",
                                      "enum": [
                                        "average",
                                        "sum",
                                        "sampleCount",
                                        "maximum",
                                        "minimum"
                                      ]
                                    },
                                    "namespace": {
                                      "type": "string",
                                      "description": "The namespace for the alarm's associated metric.",
                                      "default": "AWS/ElasticMapReduce",
                                      "example": "AWS/ElasticMapReduce"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "terminationPolicies": {
                            "type": "array",
                            "description": "Termination policies for EMR clusters based on CloudWatch Metrics.\n",
                            "items": {
                              "type": "object",
                              "title": "Termination Policy Object",
                              "description": "A termination policy for EMR clusters based on CloudWatch Metrics.",
                              "properties": {
                                "statements": {
                                  "type": "array",
                                  "description": "Array of termination statements to execute",
                                  "items": {
                                    "type": "object",
                                    "title": "Termination Statement Object",
                                    "description": "A termination statement to execute",
                                    "required": [
                                      "namespace",
                                      "metricName",
                                      "threshold"
                                    ],
                                    "properties": {
                                      "namespace": {
                                        "type": "string",
                                        "description": "**Must be `AWS/ElasticMapReduce`\"\n",
                                        "example": "AWS/ElasticMapReduce"
                                      },
                                      "metricName": {
                                        "type": "string",
                                        "description": "The name of the metric in CloudWatch which the statement will be based on.",
                                        "example": "AppsRunning"
                                      },
                                      "statistic": {
                                        "type": "string",
                                        "description": "The aggregation method of the given metric",
                                        "enum": [
                                          "average",
                                          "sum",
                                          "sampleCount",
                                          "maximum",
                                          "minimum"
                                        ],
                                        "default": "sum"
                                      },
                                      "unit": {
                                        "type": "string",
                                        "description": "The unit for a given metric.",
                                        "example": "count",
                                        "enum": [
                                          "seconds",
                                          "microseconds",
                                          "milliseconds",
                                          "bytes",
                                          "kilobytes",
                                          "megabytes",
                                          "gigabytes",
                                          "terabytes",
                                          "bits",
                                          "kilobits",
                                          "megabits",
                                          "gigabits",
                                          "terabits",
                                          "percent",
                                          "count",
                                          "bytes/second",
                                          "kilobytes/second",
                                          "megabytes/second",
                                          "gigabytes/second",
                                          "terabytes/second",
                                          "bits/second",
                                          "kilobits/second",
                                          "megabits/second",
                                          "gigabits/second",
                                          "terabits/second",
                                          "count/second",
                                          "none"
                                        ],
                                        "default": "count"
                                      },
                                      "threshold": {
                                        "type": "number",
                                        "format": "double",
                                        "description": "The value that the specified statistic is compared to.",
                                        "example": 2
                                      },
                                      "period": {
                                        "type": "integer",
                                        "description": "The period in seconds over which the statistic is applied.",
                                        "example": 300
                                      },
                                      "evaluationPeriods": {
                                        "type": "integer",
                                        "description": "The number of periods over which data is compared to the specified threshold",
                                        "example": 1
                                      },
                                      "operator": {
                                        "type": "string",
                                        "description": "The operator to use in order to determine if the scaling policy is applicable. Valid values: `gt` | `gte` | `lt` | `lte`\n",
                                        "enum": [
                                          "gte",
                                          "lte",
                                          "lt",
                                          "gt"
                                        ],
                                        "example": "gte",
                                        "default": "gte"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1aws~1emr~1mrScaler/post/requestBody/content/application~1json/schema/allOf/0"
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:emr:mrScaler"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/emr/mrScalerOperator": {
      "post": {
        "summary": "Create Scaler Operator",
        "description": "mrScaler – required will have the same configuration as in createMrScaler with one exception:\nwe will only work with strategy of “new”, no “clone”/”warp” will be allowed.\n",
        "operationId": "elastigroupAwsEmrOperatorCreate",
        "tags": [
          "Elastigroup AWS EMR Scaler"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "MRScaler object Wrapper",
                    "required": [
                      "mrScaler"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "GuyEmrOperatorTest"
                      },
                      "mrScaler": {
                        "required": [
                          "name",
                          "region",
                          "strategy"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "MRScaler name",
                            "example": "my MRScaler"
                          },
                          "description": {
                            "type": "string",
                            "description": "description for the MRScaler",
                            "example": "this is an MRScaler created with Spot"
                          },
                          "region": {
                            "type": "string",
                            "description": "The region of the source cluster",
                            "example": "us-west-2"
                          },
                          "strategy": {
                            "$ref": "#/paths/~1aws~1emr~1mrScaler/post/requestBody/content/application~1json/schema/allOf/0/properties/mrScaler/properties/strategy"
                          },
                          "compute": {
                            "$ref": "#/paths/~1aws~1emr~1mrScaler/post/requestBody/content/application~1json/schema/allOf/0/properties/mrScaler/properties/compute"
                          },
                          "cluster": {
                            "$ref": "#/paths/~1aws~1emr~1mrScaler/post/requestBody/content/application~1json/schema/allOf/0/properties/mrScaler/properties/cluster"
                          },
                          "scheduling": {
                            "$ref": "#/paths/~1aws~1emr~1mrScaler/post/requestBody/content/application~1json/schema/allOf/0/properties/mrScaler/properties/scheduling"
                          },
                          "scaling": {
                            "$ref": "#/paths/~1aws~1emr~1mrScaler/post/requestBody/content/application~1json/schema/allOf/0/properties/mrScaler/properties/scaling"
                          },
                          "terminationPolicies": {
                            "type": "array",
                            "description": "Termination policies for EMR clusters based on CloudWatch Metrics.\n",
                            "items": {
                              "$ref": "#/paths/~1aws~1emr~1mrScaler/post/requestBody/content/application~1json/schema/allOf/0/properties/mrScaler/properties/terminationPolicies/items"
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1aws~1emr~1mrScaler/post/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/emr/mrScaler/{mrScalerId}": {
      "get": {
        "summary": "Get Scaler",
        "description": "Get a description of a specific MR Scaler and its configuration.",
        "operationId": "elastigroupAwsEmrListScaler",
        "tags": [
          "Elastigroup AWS EMR Scaler"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "mrScalerId",
            "required": true,
            "description": "The MRScaler ID\n",
            "schema": {
              "type": "string"
            },
            "example": "simrs-12223"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1aws~1emr~1mrScaler/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Scaler",
        "description": "Update an MR Scaler. Partial updating is supported.",
        "operationId": "elastigroupAwsEmrUpdateScaler",
        "tags": [
          "Elastigroup AWS EMR Scaler"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1emr~1mrScaler~1%7BmrScalerId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "description": "An EMR Scaler Object",
                    "properties": {
                      "mrScaler": {
                        "type": "object",
                        "description": "MR Scaler Object - Update Task Capacity",
                        "properties": {
                          "compute": {
                            "type": "object",
                            "properties": {
                              "instanceGroups": {
                                "type": "object",
                                "properties": {
                                  "taskGroup": {
                                    "type": "object",
                                    "properties": {
                                      "capacity": {
                                        "type": "object",
                                        "properties": {
                                          "maximum": {
                                            "type": "integer",
                                            "example": 0
                                          },
                                          "target": {
                                            "type": "integer",
                                            "example": 0
                                          },
                                          "minimum": {
                                            "type": "integer",
                                            "example": 0
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "description": "An EMR Scaler Object",
                    "properties": {
                      "mrScaler": {
                        "type": "object",
                        "description": "MR Scaler Object - Update Dynamic Volume Size in EBS Configuration",
                        "properties": {
                          "compute": {
                            "type": "object",
                            "properties": {
                              "instanceGroups": {
                                "type": "object",
                                "properties": {
                                  "taskGroup": {
                                    "type": "object",
                                    "properties": {
                                      "ebsConfiguration": {
                                        "type": "object",
                                        "properties": {
                                          "ebsBlockDeviceConfigs": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "volumeSpecification": {
                                                  "type": "object",
                                                  "properties": {
                                                    "dynamicVolumeSize": {
                                                      "type": "object",
                                                      "properties": {
                                                        "baseSize": {
                                                          "type": "integer",
                                                          "example": 30
                                                        },
                                                        "resource": {
                                                          "type": "string",
                                                          "example": "CPU"
                                                        },
                                                        "sizePerResourceUnit": {
                                                          "type": "integer",
                                                          "example": 15
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1aws~1emr~1mrScaler/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Scaler",
        "description": "Delete an MR Scaler",
        "operationId": "elastigroupAwsEmrDeleteMrsScaler",
        "tags": [
          "Elastigroup AWS EMR Scaler"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1emr~1mrScaler~1%7BmrScalerId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/emr/mrScaler/{mrScalerId}/instance": {
      "get": {
        "summary": "List Instances",
        "description": "Get a list of all instances and instances groups in the cluster",
        "operationId": "elastigroupAwsEmrListInstances",
        "tags": [
          "Elastigroup AWS EMR Scaler"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1emr~1mrScaler~1%7BmrScalerId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "EMR Scaler Instance Object",
                                "description": "An instance in the cluster",
                                "properties": {
                                  "instanceId": {
                                    "type": "string",
                                    "description": "The instance ID",
                                    "example": "i-asdfjk3989"
                                  },
                                  "instanceGroupId": {
                                    "type": "string",
                                    "example": "ig-asdfjl2",
                                    "description": "The instance group ID"
                                  },
                                  "instanceGroupRole": {
                                    "type": "string",
                                    "example": "MASTER",
                                    "description": "The instance group role"
                                  },
                                  "instanceType": {
                                    "type": "string",
                                    "example": "m1.medium",
                                    "description": "The instance type"
                                  },
                                  "availabilityZone": {
                                    "type": "string",
                                    "example": "us-east-1a",
                                    "description": "The availability zone for the instance"
                                  },
                                  "status": {
                                    "type": "string",
                                    "example": "Running",
                                    "description": "The instance status"
                                  },
                                  "updatedAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2015-08-02T09:11:16.356Z",
                                    "description": "The last date-time this item was updated"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:emr:mrScaler:instance"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/emr/mrScaler/{mrScalerId}/scale/up": {
      "put": {
        "summary": "Scale Up",
        "description": "Scale up MR Scaler instances",
        "operationId": "elastigroupAwsEmrScaleUp",
        "tags": [
          "Elastigroup AWS EMR Scaler"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1emr~1mrScaler~1%7BmrScalerId%7D/get/parameters/1"
          },
          {
            "in": "query",
            "name": "adjustment",
            "schema": {
              "type": "integer",
              "example": 3
            },
            "description": "Number of instances to add to the MR Scaler",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "An EMR Scale Up Object",
                                "description": "An EMR Scale Up Object",
                                "properties": {
                                  "modifiedInstanceGroups": {
                                    "type": "array",
                                    "description": "The groups modified by this change",
                                    "items": {
                                      "type": "string"
                                    },
                                    "example": [
                                      "ig-2470IUVXLJ652S",
                                      "ig-9870IUVXMYYW9"
                                    ]
                                  },
                                  "newInstanceGroups": {
                                    "type": "array",
                                    "description": "Newly launched instances due to this change",
                                    "items": {
                                      "type": "string"
                                    },
                                    "example": [
                                      "ig-0570LPWAZXBSR3"
                                    ]
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:emr:mrScaler:scale"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/emr/mrScaler/{mrScalerId}/scale/down": {
      "put": {
        "summary": "Scale Down",
        "description": "Scale down MR Scaler instances",
        "operationId": "elastigroupAwsEmrScaleDown",
        "tags": [
          "Elastigroup AWS EMR Scaler"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1emr~1mrScaler~1%7BmrScalerId%7D/get/parameters/1"
          },
          {
            "in": "query",
            "name": "adjustment",
            "description": "Number of instances to remove from the MR Scaler",
            "schema": {
              "type": "integer",
              "example": 3
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "An EMR Scale Down Object",
                                "description": "An EMR Scale Down Object",
                                "properties": {
                                  "modifiedInstanceGroups": {
                                    "type": "array",
                                    "description": "The groups modified by this change",
                                    "items": {
                                      "type": "string"
                                    },
                                    "example": [
                                      "ig-2470IUVXLJ652S",
                                      "ig-9870IUVXMYYW9"
                                    ]
                                  },
                                  "victimInstances": {
                                    "type": "array",
                                    "description": "Terminated instances due to this change",
                                    "items": {
                                      "type": "string"
                                    },
                                    "example": [
                                      "ig-0570LPWAZXBSR3"
                                    ]
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:emr:mrScaler:scale"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/emr/mrScaler/{mrScalerId}/cluster": {
      "get": {
        "summary": "List Scalers",
        "description": "Get MR Scaler cluster",
        "operationId": "elastigroupAwsEmrListMrScalerClusters",
        "tags": [
          "Elastigroup AWS EMR Scaler"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1emr~1mrScaler~1%7BmrScalerId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "MR Scaler Cluster Object",
                                "description": "An MR Scaler cluster",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The cluster's ID",
                                    "example": "j-3N7WPI3R0D1R7"
                                  },
                                  "availabilityZone": {
                                    "type": "string",
                                    "description": "The cluster's AZ",
                                    "example": "us-east-1a"
                                  },
                                  "state": {
                                    "type": "string",
                                    "description": "The cluster's state",
                                    "example": "terminated"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The date-time this cluster was created",
                                    "example": "2015-08-02T09:11:16.356Z"
                                  },
                                  "updatedAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The date-time this cluster was last updated",
                                    "example": "2015-08-02T10:11:16.356Z"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:emr:mrScaler:cluster"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/emr/mrScaler/{mrScalerId}/costs": {
      "get": {
        "summary": "Get Scaler Costs",
        "description": "Get financial information on the MR Scaler, including running time, costs, and savings",
        "operationId": "elastigroupAwsEmrListMrScalerCosts",
        "tags": [
          "Elastigroup AWS EMR Scaler"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1aws~1emr~1mrScaler~1%7BmrScalerId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "MR Scaler Costs Object",
                                "description": "MR Scaler Costs Object",
                                "properties": {
                                  "running": {
                                    "type": "object",
                                    "description": "Info about the running duration of this MR Scaler",
                                    "properties": {
                                      "value": {
                                        "type": "number",
                                        "format": "float",
                                        "description": "The duration this object has been running, denominated in `unit`\n",
                                        "example": 294.3
                                      },
                                      "unit": {
                                        "type": "string",
                                        "example": "hours",
                                        "description": "Unit of denomination\n"
                                      }
                                    }
                                  },
                                  "savings": {
                                    "type": "object",
                                    "description": "Info about the savings accrued on this MR Scaler",
                                    "properties": {
                                      "value": {
                                        "type": "number",
                                        "format": "float",
                                        "description": "The savings accrued during the running duration\n",
                                        "example": 60.5263
                                      },
                                      "unit": {
                                        "type": "string",
                                        "example": "percentage",
                                        "description": "Unit of denomination\n"
                                      }
                                    }
                                  },
                                  "costs": {
                                    "type": "object",
                                    "description": "Info on the costs of running this MR Scaler",
                                    "properties": {
                                      "actual": {
                                        "type": "number",
                                        "format": "float",
                                        "description": "The costs during the running duration\n",
                                        "example": 8.829
                                      },
                                      "potential": {
                                        "type": "number",
                                        "format": "float",
                                        "description": "The costs that would have been incurred if this MR Scaler wasn't running on Spot\n",
                                        "example": 22.3668
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:emr:mrScaler:costs"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/status": {
      "get": {
        "summary": "Get Elastigroup Status",
        "description": "Describes the current status of a specific Elastigroup – entailing information regarding running instance and their status\n",
        "operationId": "elastigroupAwsStatus",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123456789",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "e593ff58-067d-4340-92f9-8b1c0bad70d7",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-12345678/status",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-06-20T11:35:01.745Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "object",
                                    "title": "Instance Status",
                                    "properties": {
                                      "spotInstanceRequestId": {
                                        "type": "string",
                                        "title": "Spot Instance Request ID",
                                        "example": "sir-3thgagpn"
                                      },
                                      "instanceId": {
                                        "type": "string",
                                        "title": "Instance ID",
                                        "example": "i-0cc289f12538e4758"
                                      },
                                      "instanceType": {
                                        "type": "string",
                                        "title": "Instance Type",
                                        "example": "t2.micro"
                                      },
                                      "product": {
                                        "type": "string",
                                        "title": "Operating System",
                                        "example": "Linux/UNIX"
                                      },
                                      "groupId": {
                                        "type": "string",
                                        "title": "Group ID",
                                        "example": "sig-12345678"
                                      },
                                      "availabilityZone": {
                                        "type": "string",
                                        "title": "AWS Availability Zone",
                                        "example": "us-west-2a"
                                      },
                                      "privateIp": {
                                        "type": "string",
                                        "title": "Private IP",
                                        "example": "172.31.28.210"
                                      },
                                      "createdAt": {
                                        "type": "string",
                                        "title": "Creation Date & Time",
                                        "example": "2018-06-25T11:49:00.000Z"
                                      },
                                      "publicIp": {
                                        "type": "string",
                                        "title": "Public IP",
                                        "example": "10.10.10.10"
                                      },
                                      "status": {
                                        "type": "string",
                                        "title": "Status",
                                        "example": "fulfilled"
                                      },
                                      "lockStatus": {
                                        "type": "string",
                                        "title": "Lock Status",
                                        "example": "locked",
                                        "enum": [
                                          "locked",
                                          "unlocked"
                                        ]
                                      },
                                      "protectedUntil": {
                                        "type": "string",
                                        "title": "Protected Until",
                                        "example": "2021-12-29T11:23:02.714Z"
                                      }
                                    }
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 2,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/events": {
      "get": {
        "summary": "Activity Events",
        "description": "Get historical data on events that happened in a specific Elastigroup like update, scaling activities, creation of new instances, etc.\n",
        "operationId": "elastigroupAwsActivityEvents",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "fromDate",
            "example": "2016-10-01",
            "description": "Starting date to fetch the events from\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123456789",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-12345/events?fromDate=2016-10-01",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2016-01-21T17:12:51.451Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "anyOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "groupId": {
                                            "type": "string",
                                            "title": "Group Id",
                                            "example": "sig-12345"
                                          },
                                          "eventType": {
                                            "type": "string",
                                            "title": "Event Type",
                                            "example": "Update"
                                          },
                                          "createdAt": {
                                            "type": "string",
                                            "title": "Created At",
                                            "example": "2016-01-21T17:10:04.000+0000"
                                          },
                                          "subEvents": {
                                            "type": "object",
                                            "title": "Sub Event",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "title": "Type",
                                                "example": "scaleUp"
                                              },
                                              "newSpots": {
                                                "type": "string",
                                                "example": [
                                                  {
                                                    "spotInstanceRequestId": "sir-0294dbzt"
                                                  },
                                                  {
                                                    "spotInstanceRequestId": "sir-02940b7h"
                                                  },
                                                  {
                                                    "spotInstanceRequestId": "sir-028z1age"
                                                  },
                                                  {
                                                    "spotInstanceRequestId": "sir-028z456e"
                                                  },
                                                  {
                                                    "spotInstanceRequestId": "sir-028wg6gr"
                                                  },
                                                  {
                                                    "spotInstanceRequestId": "sir-0294a9v5"
                                                  }
                                                ]
                                              },
                                              "newInstances": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "groupId": {
                                            "type": "string",
                                            "title": "Group Id",
                                            "example": "sig-12345"
                                          },
                                          "eventType": {
                                            "type": "string",
                                            "title": "Event Type",
                                            "example": "Update"
                                          },
                                          "createdAt": {
                                            "type": "string",
                                            "title": "Created At",
                                            "example": "2016-01-21T17:10:04.000+0000"
                                          },
                                          "subEvents": {
                                            "type": "object",
                                            "title": "Sub Event",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "title": "Type",
                                                "example": "scaleUp"
                                              },
                                              "newSpots": {
                                                "type": "string",
                                                "example": [
                                                  {
                                                    "spotInstanceRequestId": "sir-0294dbzt"
                                                  },
                                                  {
                                                    "spotInstanceRequestId": "sir-02940b7h"
                                                  },
                                                  {
                                                    "spotInstanceRequestId": "sir-028z1age"
                                                  },
                                                  {
                                                    "spotInstanceRequestId": "sir-028z456e"
                                                  },
                                                  {
                                                    "spotInstanceRequestId": "sir-028wg6gr"
                                                  },
                                                  {
                                                    "spotInstanceRequestId": "sir-0294a9v5"
                                                  }
                                                ]
                                              },
                                              "newInstances": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "groupId": {
                                            "type": "string",
                                            "title": "Group Id",
                                            "example": "sig-12345"
                                          },
                                          "eventType": {
                                            "type": "string",
                                            "title": "Event Type",
                                            "example": "Update"
                                          },
                                          "createdAt": {
                                            "type": "string",
                                            "title": "Created At",
                                            "example": "2016-01-21T17:10:04.000+0000"
                                          },
                                          "subEvents": {
                                            "type": "object",
                                            "title": "Sub Event",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "title": "Type",
                                                "example": "scaleUp"
                                              },
                                              "newSpots": {
                                                "type": "string",
                                                "example": [
                                                  {
                                                    "spotInstanceRequestId": "sir-0294dbzt"
                                                  },
                                                  {
                                                    "spotInstanceRequestId": "sir-02940b7h"
                                                  },
                                                  {
                                                    "spotInstanceRequestId": "sir-028z1age"
                                                  },
                                                  {
                                                    "spotInstanceRequestId": "sir-028z456e"
                                                  },
                                                  {
                                                    "spotInstanceRequestId": "sir-028wg6gr"
                                                  },
                                                  {
                                                    "spotInstanceRequestId": "sir-0294a9v5"
                                                  }
                                                ]
                                              },
                                              "newInstances": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "groupId": {
                                            "type": "string",
                                            "title": "Group Id",
                                            "example": "sig-12345"
                                          },
                                          "eventType": {
                                            "type": "string",
                                            "title": "Event Type",
                                            "example": "Update"
                                          },
                                          "createdAt": {
                                            "type": "string",
                                            "title": "Created At",
                                            "example": "2016-01-21T17:10:04.000+0000"
                                          },
                                          "subEvents": {
                                            "type": "object",
                                            "title": "Sub Event",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "title": "Type",
                                                "example": "scaleUp"
                                              },
                                              "newSpots": {
                                                "type": "string",
                                                "example": [
                                                  {
                                                    "spotInstanceRequestId": "sir-0294dbzt"
                                                  },
                                                  {
                                                    "spotInstanceRequestId": "sir-02940b7h"
                                                  },
                                                  {
                                                    "spotInstanceRequestId": "sir-028z1age"
                                                  },
                                                  {
                                                    "spotInstanceRequestId": "sir-028z456e"
                                                  },
                                                  {
                                                    "spotInstanceRequestId": "sir-028wg6gr"
                                                  },
                                                  {
                                                    "spotInstanceRequestId": "sir-0294a9v5"
                                                  }
                                                ]
                                              },
                                              "newInstances": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "example": [
                                    {
                                      "groupId": "sig-12345",
                                      "eventType": "Update",
                                      "createdAt": "2016-01-21T17:10:04.000+0000",
                                      "subEvents": {
                                        "type": "scaleUp",
                                        "newSpots": [
                                          {
                                            "spotInstanceRequestId": "sir-0294dbzt"
                                          },
                                          {
                                            "spotInstanceRequestId": "sir-02940b7h"
                                          },
                                          {
                                            "spotInstanceRequestId": "sir-028z1age"
                                          },
                                          {
                                            "spotInstanceRequestId": "sir-028z456e"
                                          },
                                          {
                                            "spotInstanceRequestId": "sir-028wg6gr"
                                          },
                                          {
                                            "spotInstanceRequestId": "sir-0294a9v5"
                                          }
                                        ]
                                      },
                                      "newInstances": [
                                        "string"
                                      ]
                                    },
                                    {
                                      "groupId": "sig-12345",
                                      "eventType": "Update",
                                      "createdAt": "2016-01-21T17:10:04.000+0000",
                                      "subEvents": {
                                        "type": "scaleUp",
                                        "newSpots": [
                                          {
                                            "spotInstanceRequestId": "sir-0294dbzt"
                                          },
                                          {
                                            "spotInstanceRequestId": "sir-02940b7h"
                                          },
                                          {
                                            "spotInstanceRequestId": "sir-028z1age"
                                          },
                                          {
                                            "spotInstanceRequestId": "sir-028z456e"
                                          },
                                          {
                                            "spotInstanceRequestId": "sir-028wg6gr"
                                          },
                                          {
                                            "spotInstanceRequestId": "sir-0294a9v5"
                                          }
                                        ]
                                      },
                                      "newInstances": [
                                        "string"
                                      ]
                                    },
                                    {
                                      "groupId": "sig-12345",
                                      "eventType": "Update",
                                      "createdAt": "2016-01-21T17:10:04.000+0000",
                                      "subEvents": {
                                        "type": "scaleUp",
                                        "newSpots": [
                                          {
                                            "spotInstanceRequestId": "sir-0294dbzt"
                                          },
                                          {
                                            "spotInstanceRequestId": "sir-02940b7h"
                                          },
                                          {
                                            "spotInstanceRequestId": "sir-028z1age"
                                          },
                                          {
                                            "spotInstanceRequestId": "sir-028z456e"
                                          },
                                          {
                                            "spotInstanceRequestId": "sir-028wg6gr"
                                          },
                                          {
                                            "spotInstanceRequestId": "sir-0294a9v5"
                                          }
                                        ]
                                      },
                                      "newInstances": [
                                        "string"
                                      ]
                                    },
                                    {
                                      "groupId": "sig-12345",
                                      "eventType": "Update",
                                      "createdAt": "2016-01-21T17:10:04.000+0000",
                                      "subEvents": {
                                        "type": "scaleUp",
                                        "newSpots": [
                                          {
                                            "spotInstanceRequestId": "sir-0294dbzt"
                                          },
                                          {
                                            "spotInstanceRequestId": "sir-02940b7h"
                                          },
                                          {
                                            "spotInstanceRequestId": "sir-028z1age"
                                          },
                                          {
                                            "spotInstanceRequestId": "sir-028z456e"
                                          },
                                          {
                                            "spotInstanceRequestId": "sir-028wg6gr"
                                          },
                                          {
                                            "spotInstanceRequestId": "sir-0294a9v5"
                                          }
                                        ]
                                      },
                                      "newInstances": [
                                        "string"
                                      ]
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/logs": {
      "get": {
        "summary": "Get Elastilog",
        "description": "You can fetch a group's (Elastigroup/Ocean/Stateful Node) elastilog via the Spot API, in order to be able to consume elastilog from various tools used for log storing and analyzing. Logs have retention of 3 months back, so minimal fromDate should be up to 3 months back at runtime.\n",
        "operationId": "elastigroupAwsGetLogs",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "fromDate",
            "example": "1540036800000",
            "description": "Epoch number that represents the date from which to collect the log (millisecond format)\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "toDate",
            "example": "1542715200000",
            "description": "Epoch number that represents the date until which log is collected (millisecond format)\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "severity",
            "example": "ALL",
            "description": "Severity of log entries to extract. Valid Values: ALL, INFO,DEBUG,WARN. Default: ALL\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "resourceId",
            "example": "i-12345678",
            "description": "Filter extracted log entries for a specific resource id. Default: Null\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "example": "i-12345678",
            "description": "Maximum number of lines to extract in a response. Max value allowed - 1000. Default: 500\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-123456/logs",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group:log",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "object",
                                    "example": [
                                      {
                                        "message": "ECS Max Capacity. ECS Autoscaler - Cannot scale up since group has reached maximum capacity",
                                        "severity": "WARN",
                                        "createdAt": "2018-11-19T14:38:34.000Z"
                                      },
                                      {
                                        "message": "Group sig-e0a2bd7c successfully created.",
                                        "severity": "INFO",
                                        "createdAt": "2018-11-19T14:34:15.000Z"
                                      }
                                    ]
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 2,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/capacity": {
      "put": {
        "summary": "Update Capacity",
        "description": "Update the capacity of an Elastigroup",
        "operationId": "elastigroupAwsUpdateCapacity",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "spotinst:aws:ec2:group:capacity",
                    "properties": {
                      "capacity": {
                        "type": "object",
                        "title": "Capacity",
                        "properties": {
                          "minimum": {
                            "type": "integer",
                            "example": 1,
                            "default": 0,
                            "description": "Number that indicates minimum instance amount\n"
                          },
                          "maximum": {
                            "type": "integer",
                            "example": 10,
                            "default": 0,
                            "description": "Number that indicates minimum instance amount\n"
                          },
                          "target": {
                            "type": "integer",
                            "example": 2,
                            "default": 0,
                            "description": "Number that indicates amount of desired instances\n"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "3ab3fdf7-3af3-46db-9e63-b88cfdac058c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-b255ac/capacity?accountId=act-567c21",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "PUT",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-08-20T15:31:12.730Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group:capacity",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D~1capacity/put/requestBody/content/application~1json/schema/allOf/0"
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/scale/up": {
      "put": {
        "summary": "Scale Up",
        "description": "Add instances to your Elastigroup",
        "operationId": "elastigroupAwsScaleUp",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "adjustment",
            "example": "1",
            "description": "The number of instances to add to the Elastigroup\n",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "b57207d0-3ab1-4170-8122-a3db9ac92093",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-abcd1234/scale/up?adjustment=2",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "PUT",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2017-10-04T08:56:38.071Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:scale",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "object",
                                    "title": "spotinst:aws:ec2:scale",
                                    "properties": {
                                      "newSpotRequests": {
                                        "type": "array",
                                        "items": {
                                          "type": "object"
                                        },
                                        "description": "New Spot Requests",
                                        "example": [
                                          {
                                            "spotInstanceRequestId": "sir-45sr8c7n",
                                            "instanceId": "i-12345abcde12345",
                                            "availabilityZone": "us-west-2a",
                                            "instanceType": "m3.medium"
                                          },
                                          {
                                            "spotInstanceRequestId": "sir-pzb8a2an",
                                            "instanceId": "i-abcde12345abcde",
                                            "availabilityZone": "us-west-2a",
                                            "instanceType": "m3.medium"
                                          }
                                        ]
                                      },
                                      "newInstances": {
                                        "type": "string",
                                        "description": "New Instances",
                                        "example": null
                                      }
                                    }
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/scale/down": {
      "put": {
        "summary": "Scale Down",
        "description": "Remove instances from your Elastigroup. Note - Scale Advanced expression Remove instances from your Elastigroup",
        "operationId": "elastigroupAwsScaleDown",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "adjustment",
            "example": "1",
            "description": "The number of instances to add to the Elastigroup\n",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "ff3e1e5b-91b8-42fa-8267-b988efc7f662",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-12345/scale/down?adjustment=1",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "PUT",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "time": {
                                  "type": "string",
                                  "example": "2015-06-29T13:01:55.060Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:scale",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "object",
                                    "title": "spotinst:aws:ec2:scale",
                                    "properties": {
                                      "victimSpotRequests": {
                                        "type": "array",
                                        "description": "Victim Spot Requests",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "spotInstanceRequestId": {
                                              "type": "string",
                                              "description": "Spot Instance Request ID",
                                              "example": "sir-02447qg2"
                                            },
                                            "instanceId": {
                                              "type": "string",
                                              "description": "Instance ID",
                                              "example": "i-933esr1"
                                            }
                                          }
                                        }
                                      },
                                      "victimInstances": {
                                        "type": "array",
                                        "description": "Victim Instances",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "instanceId": {
                                              "type": "string",
                                              "description": "Instance ID",
                                              "example": "i-02447t22"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/scale/suspendPolicy": {
      "post": {
        "summary": "Suspend Scaling Policies",
        "description": "Suspend processes inside your Elastigroup",
        "operationId": "elastigroupAwsSuspendScalingPolicies",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "policyName",
            "example": "Example Policy Name",
            "description": "Policy Name of scaling policy to suspend\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "suspension": {
                        "type": "object",
                        "title": "Suspension",
                        "properties": {
                          "ttlInMinutes": {
                            "type": "integer",
                            "example": 10,
                            "description": "Set TTL in minutes. min value: 1 (one minute). max value: 10080 (one week)\n"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Suspend Scaling Policies Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "0bb5db74-2457-4a34-b8f3-174e6bf5578e",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-12345/scale/suspendPolicy?accountId=act-1234567&policyName=myscalingpolicyname",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2016-06-19T08:41:57.516Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:suspension",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "object",
                                    "title": "spotinst:aws:ec2:suspension",
                                    "properties": {
                                      "groupId": {
                                        "type": "string",
                                        "title": "Group ID",
                                        "example": "sig-12345"
                                      },
                                      "policyName": {
                                        "type": "string",
                                        "title": "Policy Name",
                                        "example": "myscalingpolicyname"
                                      },
                                      "state": {
                                        "type": "string",
                                        "title": "State",
                                        "example": "suspended"
                                      },
                                      "expiresAt": {
                                        "type": "string",
                                        "title": "Expires At",
                                        "example": "2016-06-19T08:51:00:00Z"
                                      }
                                    }
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/suspension": {
      "post": {
        "summary": "Suspend Processes",
        "description": "Suspend processes inside your Elastigroup",
        "operationId": "elastigroupAwsSuspend",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "title": "Processes",
                    "properties": {
                      "processes": {
                        "type": "array",
                        "description": "The names of the processes that will be suspended. Valid values are: AUTO_SCALE, AUTO_HEALING, OUT_OF_STRATEGY, PREVENTIVE_REPLACEMENT, REVERT_PREFERRED, SCHEDULING\n",
                        "items": {
                          "type": "string",
                          "example": [
                            "AUTO_SCALE",
                            "OUT_OF_STRATEGY",
                            "PREVENTIVE_REPLACEMENT"
                          ]
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "title": "Suspensions",
                    "properties": {
                      "suspensions": {
                        "type": "array",
                        "description": "A list of processes to suspend",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the process that will be suspended. Valid values are: AUTO_SCALE, AUTO_HEALING, OUT_OF_STRATEGY, PREVENTIVE_REPLACEMENT, REVERT_PREFERRED, SCHEDULING\n"
                            },
                            "ttlInMinutes": {
                              "type": "integer",
                              "description": "This is the TTL, time to live, of the suspension in minutes. The default value is null, which denotes that the suspension is indefinite until specifically deleted\n"
                            }
                          }
                        },
                        "example": [
                          {
                            "name": "AUTO_SCALE"
                          },
                          {
                            "name": "OUT_OF_STRATEGY",
                            "ttlInMinutes": 30
                          },
                          {
                            "name": "PREVENTIVE_REPLACEMENT",
                            "ttlInMinutes\"": 120
                          },
                          {
                            "name": "REVERT_PREFERRED"
                          },
                          {
                            "name": "SCHEDULING"
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Suspend Processes  Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "0bb5db74-2457-4a34-b8f3-174e6bf5578e",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-12345/suspension",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2016-06-19T08:41:57.516Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:suspension",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "groupId": {
                                        "type": "string",
                                        "description": "Elastigroup ID",
                                        "example": "sig-12345"
                                      },
                                      "processes": {
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "example": [
                                            "AUTO_SCALE"
                                          ]
                                        }
                                      },
                                      "suspensions": {
                                        "type": "array",
                                        "description": "Suspensions",
                                        "items": {
                                          "type": "object",
                                          "example": [
                                            {
                                              "name": "AUTO_SCALE",
                                              "expiresAt": null
                                            },
                                            {
                                              "name": "OUT_OF_STRATEGY",
                                              "expiresAt": "2018-10-03T07:23:24.000+0000"
                                            },
                                            {
                                              "name": "PREVENTIVE_REPLACEMENT",
                                              "expiresAt": "2018-10-03T09:03:24.000+0000"
                                            },
                                            {
                                              "name": "REVERT_PREFERRED",
                                              "expiresAt": null
                                            },
                                            {
                                              "name": "SCHEDULING",
                                              "expiresAt": null
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 4,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Suspended Processes",
        "description": "List all active Suspended processes for specific Elastigroup",
        "operationId": "elastigroupAwsListSuspended",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123456789",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "List Suspended Processes  Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "67582d0c-108b-4ef7-9fdc-d39678a30844",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-12345/suspension",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-01-07T07:30:58.622Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:suspension",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "groupId": {
                                        "type": "string",
                                        "example": "sig-12345",
                                        "description": "Elastigroup ID"
                                      },
                                      "processes": {
                                        "type": "string",
                                        "description": "Processes",
                                        "example": [
                                          "AUTO_SCALE"
                                        ]
                                      }
                                    }
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Remove Suspended Processes",
        "description": "Remove active suspension from Elastigroup",
        "operationId": "elastigroupAwsRemoveSuspended",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123456789",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "processes": {
                        "type": "array",
                        "title": "Processes",
                        "description": "The list of processes to remove from suspension. Valid values are: AUTO_SCALE, AUTO_HEALING, OUT_OF_STRATEGY, PREVENTIVE_REPLACEMENT, REVERT_PREFERRED, SCHEDULING\n",
                        "items": {
                          "type": "string",
                          "example": [
                            "AUTO_SCALE"
                          ]
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Remove Suspended Processes  Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "848f3db7-b731-4b1b-9227-253a545e90eb",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-12345/suspension",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "DELETE",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-06-21T11:54:12.513Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:suspension",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "object",
                                    "title": "Metadata Options Update",
                                    "description": "Request - Example 6 - Update Metadata Options",
                                    "properties": {
                                      "group": {
                                        "type": "object",
                                        "title": "AWS Elastigroup",
                                        "properties": {
                                          "compute": {
                                            "type": "object",
                                            "title": "Compute Attribute",
                                            "properties": {
                                              "launchSpecification": {
                                                "type": "object",
                                                "title": "Virtual Node Group Attribute",
                                                "properties": {
                                                  "metadataOptions": {
                                                    "type": "object",
                                                    "title": "Metadata Options Attribute",
                                                    "properties": {
                                                      "httpTokens": {
                                                        "type": "string",
                                                        "example": "optional",
                                                        "description": "Http Token\n"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 0,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/scale/suspensions": {
      "get": {
        "summary": "List Suspended Scaling Policies",
        "description": "Suspended scaling policies inside your Elastigroup",
        "operationId": "elastigroupAwsListSuspendScalingPolicies",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123456789",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "List Suspended Scaling Policies  Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "0bb5db74-2457-4a34-b8f3-174e6bf5578e",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-12345/scale/suspensions?accountId=act-1234567",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2016-06-19T08:41:57.516Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:suspension",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "scalePolicySuspensions": {
                                        "type": "object",
                                        "example": [
                                          {
                                            "groupId": "sig-12345",
                                            "policyName": "test",
                                            "state": "suspended"
                                          },
                                          {
                                            "groupId": "sig-12345",
                                            "policyName": "down Scaling Policy 1",
                                            "state": "suspended"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 2,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/scale/resumePolicy": {
      "post": {
        "summary": "Remove Suspended Scaling Policies",
        "description": "Resume suspended scaling policies inside your Elastigroup",
        "operationId": "elastigroupAwsResumeScalingPolicies",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123456789",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "policyName",
            "example": "policy_1",
            "description": "Name of the suspended scaling policy to remove from suspension\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "848f3db7-b731-4b1b-9227-253a545e90eb",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-12345/scale/resumePolicy?policyName=myscalingpolicyname",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-06-21T11:54:12.513Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:suspension",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 0,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/potentialSavings": {
      "get": {
        "summary": "Potential Savings",
        "description": "Describe Potential Savings for AWS resources like - ASG (Auto-scaling groups), Beanstalk, ELB, ECS, EMR and tagged instances. The response will provide Potential monthly savings in USD",
        "operationId": "elastigroupAwsPotentialSavings",
        "tags": [
          "Insights Service"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123456789",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Potential Savings Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-12345/suspension",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:cs:aws:potentialSavings",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "array",
                                    "title": "spotinst:cs:aws:potentialSavings",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "resourceType": {
                                          "type": "string",
                                          "example": "Auto Scaling Group"
                                        },
                                        "name": {
                                          "type": "string",
                                          "example": "Prod_ASG"
                                        },
                                        "region": {
                                          "type": "string",
                                          "example": "us-west-1"
                                        },
                                        "instances": {
                                          "type": "integer",
                                          "example": 5
                                        },
                                        "instanceTypes": {
                                          "type": "string",
                                          "example": [
                                            "c4.4xlarge"
                                          ]
                                        },
                                        "potentialSavings": {
                                          "type": "integer",
                                          "example": 2700
                                        }
                                      }
                                    }
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/instancePotentialSavings": {
      "get": {
        "summary": "Instances Potential Savings",
        "description": "Describe potential savings for the listed instances. You can provide multiple instance IDs separated by a comma. The response will provide potential monthly savings in USD.",
        "operationId": "elastigroupAwsInstancesPotentialSavings",
        "tags": [
          "Insights Service"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "region",
            "example": "us-east-1",
            "description": "The AWS Region\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "instanceIds",
            "example": "i-1234567",
            "description": "The instance ID\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Instances Potential Savings Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "ff3e1e5b-91b8-42fa-8267-b988efc7f662",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/instancePotentialSavings?instanceIds=i-08674ba9a6ddb73f4%2Ci-0973dc7a755d34894®ion=us-west-2",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2015-06-29T13:01:55.060Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:cs:aws:potentialSavings",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "object",
                                    "title": "spotinst:cs:aws:potentialSavings",
                                    "properties": {
                                      "newSpotRequests": {
                                        "type": "array",
                                        "items": {
                                          "type": "object"
                                        },
                                        "description": "New Spot Requests",
                                        "example": [
                                          {
                                            "resourceType": "EC2Instance",
                                            "name": "i-12345abcde12345",
                                            "instances": 1,
                                            "instanceTypes": [
                                              "t2.medium"
                                            ],
                                            "potentialSavings": 28
                                          },
                                          {
                                            "resourceType": "EC2Instance",
                                            "name": "i-0973dc7a755d34894",
                                            "instances": 1,
                                            "instanceTypes": [
                                              "m4.large"
                                            ],
                                            "potentialSavings": 60
                                          }
                                        ]
                                      }
                                    }
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 2,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/costs": {
      "get": {
        "summary": "Get Costs per Account",
        "description": "Retrieve costs up to one year back per specified account over a specified time period.",
        "operationId": "awsCostsPerAccount",
        "tags": [
          "Insights Service"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123456789",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "fromDate",
            "example": "2018-06-20",
            "description": "Date can be either in ISO-8601 date format (yyyy-mm-dd) or in Unix Timestamp format (e.g. 1494751821472).\n*Minimum from date can be one year ago.\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "toDate",
            "example": "2018-11-20",
            "description": "Date can be either in ISO-8601 date format (yyyy-mm-dd) or in Unix Timestamp format (e.g. 1494751821472).\n*Data is shown until the past day (Does not include today's costs)\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "aggregationPeriod",
            "example": "daily",
            "description": "Optional. The time period over which data is aggregated. Can only be \"daily\". For example, the figures in each data set are per day\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Costs Per Account Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "67582d0c-108b-4ef7-9fdc-d39678a30844",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/costs",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-01-07T07:30:58.622Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:costs",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "array",
                                    "title": "spotinst:aws:ec2:group",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "timestamp": {
                                          "type": "string",
                                          "example": "2020-03-06T00:00:00.000Z",
                                          "description": "Time"
                                        },
                                        "spot": {
                                          "type": "object",
                                          "properties": {
                                            "runningHours": {
                                              "type": "number",
                                              "format": "float",
                                              "example": 1470.8
                                            },
                                            "actualCosts": {
                                              "type": "number",
                                              "format": "float",
                                              "example": 107.3
                                            },
                                            "potentialCosts": {
                                              "type": "number",
                                              "format": "float",
                                              "example": 378.41
                                            },
                                            "savingsPercentage": {
                                              "type": "number",
                                              "format": "float",
                                              "example": 71.64
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/costs": {
      "get": {
        "summary": "Get Costs per Elastigroup",
        "description": "Get financial information on a specific Elastigroup",
        "operationId": "awsCostsPerElastigroup",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "fromDate",
            "example": "2018-06-20",
            "description": "Data values following either a date format (YYYY-MM-DDTHH:mm:ss.SSSZ ; 2016-01-10T00:00:00.000Z) or Unix seconds Timestamp (1494751821)\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "toDate",
            "example": "2018-11-20",
            "description": "Data values following either a date format (YYYY-MM-DDTHH:mm:ss.SSSZ ; 2016-01-10T00:00:00.000Z) or Unix seconds Timestamp (1494751821)\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "aggregationPeriod",
            "example": "daily",
            "description": "Optional. The time period over which data is aggregated. Can only be \"daily\". For example, the figures in each data set are per day\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Costs Per Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-48d79900/costs?fromDate=2018-03-06&toDate=2019-02-27",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2016-01-21T17:12:51.451Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group:stats",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "array",
                                    "title": "spotinst:aws:ec2:group:stats",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "running": {
                                          "type": "object",
                                          "title": "Running",
                                          "properties": {
                                            "value": {
                                              "type": "string",
                                              "example": 0,
                                              "description": "Value\n"
                                            },
                                            "unit": {
                                              "type": "string",
                                              "example": "hours",
                                              "description": "Unit\n"
                                            }
                                          }
                                        },
                                        "savings": {
                                          "type": "object",
                                          "title": "Running",
                                          "properties": {
                                            "value": {
                                              "type": "integer",
                                              "example": 0
                                            },
                                            "unit": {
                                              "type": "string",
                                              "example": "percentage"
                                            }
                                          }
                                        },
                                        "costs": {
                                          "type": "object",
                                          "title": "Running",
                                          "properties": {
                                            "actual": {
                                              "type": "integer",
                                              "example": 0
                                            },
                                            "potential": {
                                              "type": "integer",
                                              "example": 0
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/costs/detailed": {
      "get": {
        "summary": "Detailed Cost",
        "description": "Get detailed financial information on a specific Elastigroup",
        "operationId": "elastigroupAwsDetailedCosts",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "fromDate",
            "example": "2018-06-20",
            "description": "Data values following either a date format (YYYY-MM-DDTHH:mm:ss.SSSZ ; 2016-01-10T00:00:00.000Z) or Unix seconds Timestamp (1494751821)\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "toDate",
            "example": "2018-11-20",
            "description": "Data values following either a date format (YYYY-MM-DDTHH:mm:ss.SSSZ ; 2016-01-10T00:00:00.000Z) or Unix seconds Timestamp (1494751821)\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Detailed Cost Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-12345/costs/detailed",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2016-01-21T17:12:51.451Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "anyOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "groupId": {
                                            "type": "string",
                                            "title": "Group Id",
                                            "example": "sig-12345"
                                          },
                                          "instanceId": {
                                            "type": "string",
                                            "title": "Instance ID",
                                            "example": "i-326129e1"
                                          },
                                          "spotInstanceRequestId": {
                                            "type": "string",
                                            "title": "Spot Instance Request ID",
                                            "example": null
                                          },
                                          "instanceType": {
                                            "type": "string",
                                            "title": "Instance Type",
                                            "example": "m3.medium"
                                          },
                                          "availabilityZone": {
                                            "type": "string",
                                            "title": "Availability Zone",
                                            "example": "us-east-1a"
                                          },
                                          "running": {
                                            "type": "object",
                                            "properties": {
                                              "value": {
                                                "type": "integer",
                                                "title": "Value",
                                                "example": 4
                                              },
                                              "unit": {
                                                "type": "string",
                                                "title": "Unit",
                                                "example": "hours"
                                              }
                                            }
                                          },
                                          "savings": {
                                            "type": "object",
                                            "properties": {
                                              "value": {
                                                "type": "integer",
                                                "title": "Value",
                                                "example": 4
                                              },
                                              "unit": {
                                                "type": "string",
                                                "title": "Unit",
                                                "example": "percentage"
                                              }
                                            }
                                          },
                                          "costs": {
                                            "type": "object",
                                            "properties": {
                                              "actual": {
                                                "type": "number",
                                                "format": "float",
                                                "title": "Actual",
                                                "example": 0.268
                                              },
                                              "potential": {
                                                "type": "number",
                                                "format": "float",
                                                "title": "Potential",
                                                "example": 0.268
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "groupId": {
                                            "type": "string",
                                            "title": "Group Id",
                                            "example": "sig-d56b9e37v"
                                          },
                                          "instanceId": {
                                            "type": "string",
                                            "title": "Instance ID",
                                            "example": "i-326129e1"
                                          },
                                          "spotInstanceRequestId": {
                                            "type": "string",
                                            "title": "Spot Instance Request ID",
                                            "example": "sir-02epa938"
                                          },
                                          "instanceType": {
                                            "type": "string",
                                            "title": "Instance Type",
                                            "example": "m3.large"
                                          },
                                          "availabilityZone": {
                                            "type": "string",
                                            "title": "Availability Zone",
                                            "example": "us-east-1a"
                                          },
                                          "running": {
                                            "type": "object",
                                            "properties": {
                                              "value": {
                                                "type": "integer",
                                                "title": "Value",
                                                "example": 4
                                              },
                                              "unit": {
                                                "type": "string",
                                                "title": "Unit",
                                                "example": "hours"
                                              }
                                            }
                                          },
                                          "savings": {
                                            "type": "object",
                                            "properties": {
                                              "value": {
                                                "type": "number",
                                                "format": "float",
                                                "title": "Value",
                                                "example": 89.3233
                                              },
                                              "unit": {
                                                "type": "string",
                                                "title": "Unit",
                                                "example": "percentage"
                                              }
                                            }
                                          },
                                          "costs": {
                                            "type": "object",
                                            "properties": {
                                              "actual": {
                                                "type": "number",
                                                "format": "float",
                                                "title": "Actual",
                                                "example": 0.0568
                                              },
                                              "potential": {
                                                "type": "number",
                                                "format": "float",
                                                "title": "Potential",
                                                "example": 0.532
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/instance/{instanceId}": {
      "get": {
        "summary": "Instance Status",
        "description": "Get the current instance status Possible status values - Active and Terminating",
        "operationId": "awsInstanceStatus",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "example": "i-123456",
            "description": "The instance ID you want to query\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Instance Status Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "ff3e1e5b-91b8-42fa-8267-b988efc7f662",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/instance/i-123456",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2015-06-29T13:01:55.060Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:instance",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "object",
                                    "title": "spotinst:aws:ec2:instance",
                                    "properties": {
                                      "instanceId": {
                                        "type": "string",
                                        "title": "Instance ID",
                                        "example": "i-326129e1"
                                      },
                                      "lifeCycleState": {
                                        "type": "string",
                                        "title": "Lifecycle State",
                                        "example": "ACTIVE"
                                      }
                                    }
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/instance/import": {
      "post": {
        "summary": "Import EC2 Instance",
        "description": "Import an EC2 instance into a new Elastigroup\n",
        "operationId": "elastigroupAwsImportInstance",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "region",
            "example": "us-east-2",
            "description": "The AWS region to create the new Elastigroup in\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "instanceId",
            "example": "i-008a13360040aa88e",
            "description": "Enter the AWS instance Id of the instance to import\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "group": {
                        "type": "object",
                        "title": "Group",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "EG_Name",
                            "description": "The name of the new Elastigroup\n"
                          },
                          "spotInstanceTypes": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Optionally provide a list of spot instance types to improve spot market availability for the Elastigroup. Overrides the imported instance type.\n",
                            "example": [
                              "m3.large",
                              "c3.large"
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Import EC2 Instance Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "ff3e1e5b-91b8-42fa-8267-b988efc7f662",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "string",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2015-06-29T13:01:55.060Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "title": "object",
                                    "type": "object"
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/amiBackup": {
      "post": {
        "summary": "AMI Backup",
        "description": "Get status of a specific deployment",
        "operationId": "elastigroupAwsAmiBackup",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "AMI Backup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-61236h9d/amiBackup",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2016-01-21T17:12:51.451Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group:amiBackup",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  },
                                  "description": "Array of data objects\n",
                                  "example": true
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/instanceHealthiness": {
      "get": {
        "summary": "Instance Healthiness",
        "description": "Get a list of instances with health status. In case a shutdown script is configured for the group, it will also retrieve the Spot Agent health status.",
        "operationId": "elastigroupAwsInstanceHealthiness",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Instance Healthiness Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "ff3e1e5b-91b8-42fa-8267-b988efc7f662",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-1b656b92/instanceHealthiness",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2015-06-29T13:01:55.060Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group:instanceHealthiness",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "object",
                                    "title": "Instance Healthiness",
                                    "properties": {
                                      "instanceId": {
                                        "type": "string",
                                        "description": "Instance ID",
                                        "example": "i-07593cd9173cd9667"
                                      },
                                      "spotRequestId": {
                                        "type": "string",
                                        "description": "Spot Request ID",
                                        "example": "sir-xjag9yqp"
                                      },
                                      "groupId": {
                                        "type": "string",
                                        "description": "Group ID",
                                        "example": "sig-1b656b92"
                                      },
                                      "availabilityZone": {
                                        "type": "string",
                                        "description": "Availability Zone",
                                        "example": "us-west-2b"
                                      },
                                      "lifeCycle": {
                                        "type": "string",
                                        "description": "Life Cycle",
                                        "example": "SPOT"
                                      },
                                      "healthStatus": {
                                        "type": "string",
                                        "description": "Health Status",
                                        "enum": [
                                          "HEALTHY",
                                          "UNHEALTHY",
                                          "INSUFFICIENT_DATA",
                                          "UNKNOWN"
                                        ],
                                        "example": "HEALTHY"
                                      },
                                      "agentHealth": {
                                        "type": "object",
                                        "title": "Spot Agent Health",
                                        "properties": {
                                          "status": {
                                            "type": "string",
                                            "enum": [
                                              "HEALTHY",
                                              "UNHEALTHY",
                                              "UNKNOWN"
                                            ],
                                            "description": "Spot Agent health status",
                                            "example": "HEALTHY"
                                          },
                                          "lastChecked": {
                                            "type": "string",
                                            "description": "The last time Spot received a health signal from the instance",
                                            "example": "2021-12-15T14:43:46.000Z"
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/detachInstances": {
      "put": {
        "summary": "Detach Instance",
        "description": "Detach instances from your Elastigroup",
        "operationId": "elastigroupAwsDetachInstance",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "instancesToDetach": {
                        "type": "object",
                        "title": "Instances to be detached",
                        "description": "Instances to be detached",
                        "example": [
                          "i-123456",
                          "i-456798"
                        ]
                      },
                      "shouldTerminateInstances": {
                        "type": "boolean",
                        "title": "Termination criteria",
                        "description": "Should Terminate Instances Criteria",
                        "example": true
                      },
                      "shouldDecrementTargetCapacity": {
                        "type": "boolean",
                        "title": "Decrement target capacity criteria",
                        "description": "Should Decrement Target Capacity Criteria",
                        "example": false
                      },
                      "drainingTimeout": {
                        "type": "integer",
                        "title": "Time",
                        "description": "Draining Timeout",
                        "example": 300
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detach Instance Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "0bb5db74-2457-4a34-b8f3-174e6bf5578e",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-12345/detachInstances",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "PUT",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2016-06-19T08:41:57.516Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:detachInstances",
                                  "description": "The data type of each item in the response\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/autoScalingGroup/import": {
      "post": {
        "summary": "Import ASG",
        "description": "Create a new Elastigroup – this Elastigroup will have the same configuration of the imported Autoscaling group",
        "operationId": "elastigroupAwsImportAsg",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "autoScalingGroupName",
            "example": "MyASG",
            "description": "The ASG name\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "region",
            "example": "us-east-1",
            "description": "The AWS region for the ASG\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-12345",
            "description": "Your account ID in Spot\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "dryRun",
            "example": true,
            "description": "When `dryRun` is set to `true`, the API call will return the Elastigroup configuration without actually performing any action\n",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "group": {
                        "type": "object",
                        "title": "Group",
                        "properties": {
                          "product": {
                            "type": "string",
                            "title": "Product (OS)",
                            "example": "Linux/UNIX",
                            "description": "Operation system type. Possible values: Linux/UNIX | SUSE | Linux Windows | Linux/UNIX (Amazon VPC) | SUSE Linux (Amazon VPC) | Windows (Amazon VPC)\n"
                          },
                          "spotInstanceTypes": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "title": "Product (OS)",
                            "example": [
                              "c3.large",
                              "m4.large"
                            ],
                            "description": "An Array holding the types of instances to be used in the Elastigroup\n"
                          },
                          "name": {
                            "type": "string",
                            "title": "Name",
                            "example": "My Group",
                            "description": "The name of the Elastigroup to be created\n"
                          },
                          "availabilityVsCost": {
                            "type": "string",
                            "enum": [
                              "costOriented",
                              "availabilityOriented",
                              "balanced",
                              "cheapest",
                              "equalAzDistribution"
                            ],
                            "default": "balanced",
                            "description": "How Elastigroup determines which instances to add and replace.\n(please read this article before using [Equal AZ Instance Distribution](https://docs.spot.io/elastigroup-for-aws/concepts/general-concepts/equal-az-distribution))\n"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Import ASG Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "ff3e1e5b-91b8-42fa-8267-b988efc7f662",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/autoScalingGroup/import?region=us-west-2&TESTING_ASG",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2015-06-29T13:01:55.060Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "object",
                                    "title": "spotinst:aws:ec2:group",
                                    "required": [
                                      "group"
                                    ],
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "title": "ID",
                                        "example": "sig-e2927aac"
                                      },
                                      "name": {
                                        "type": "string",
                                        "title": "name",
                                        "example": "TESTING_ASG"
                                      },
                                      "description": {
                                        "type": "string",
                                        "title": "name",
                                        "example": "Imported from auto scaling group TESTING_ASG"
                                      },
                                      "capacity": {
                                        "type": "object",
                                        "properties": {
                                          "target": {
                                            "type": "integer",
                                            "example": 1
                                          },
                                          "minimum": {
                                            "type": "integer",
                                            "example": 0
                                          },
                                          "maximum": {
                                            "type": "integer",
                                            "example": 5
                                          },
                                          "unit": {
                                            "type": "integer",
                                            "example": "instance"
                                          }
                                        }
                                      },
                                      "strategy": {
                                        "type": "object",
                                        "properties": {
                                          "risk": {
                                            "type": "integer",
                                            "example": 100
                                          },
                                          "drainingTimeout": {
                                            "type": "integer",
                                            "example": 0
                                          }
                                        }
                                      },
                                      "compute": {
                                        "type": "object",
                                        "properties": {
                                          "instanceTypes": {
                                            "type": "object",
                                            "properties": {
                                              "ondemand": {
                                                "type": "string",
                                                "example": "m3.medium"
                                              },
                                              "spot": {
                                                "type": "string",
                                                "example": [
                                                  "c3.large"
                                                ]
                                              }
                                            }
                                          },
                                          "availabilityZones": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "example": "us-west-2b"
                                                },
                                                "subnetIds": {
                                                  "type": "string",
                                                  "example": "subnet-2e967065"
                                                }
                                              }
                                            }
                                          },
                                          "product": {
                                            "type": "string",
                                            "example": "Linux/UNIX"
                                          },
                                          "launchSpecification": {
                                            "type": "object",
                                            "properties": {
                                              "loadBalancersConfig": {
                                                "type": "object",
                                                "properties": {
                                                  "loadBalancers": {
                                                    "type": "object",
                                                    "properties": {
                                                      "name": {
                                                        "type": "string",
                                                        "title": "Name",
                                                        "example": "TESTING_ASG"
                                                      },
                                                      "type": {
                                                        "type": "string",
                                                        "title": "Type",
                                                        "example": "CLASSIC"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "healthCheckType": {
                                                "type": "string",
                                                "title": "Health Check Type",
                                                "example": "EC2"
                                              },
                                              "healthCheckGracePeriod": {
                                                "type": "integer",
                                                "title": "Health Check Grace Period",
                                                "example": 600
                                              },
                                              "securityGroupIds": {
                                                "type": "string",
                                                "title": "Security Group IDs",
                                                "example": [
                                                  "sg-451f8b3a"
                                                ]
                                              },
                                              "monitoring": {
                                                "type": "boolean",
                                                "title": "Monitoring",
                                                "example": false
                                              },
                                              "imageId": {
                                                "type": "string",
                                                "title": "Image ID",
                                                "example": "ami-485eef30"
                                              },
                                              "ebsOptimized": {
                                                "type": "boolean",
                                                "title": "EBS Optomozed",
                                                "example": true
                                              },
                                              "blockDeviceMappings": {
                                                "type": "array",
                                                "title": "Block Device Mappings",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "deviceName": {
                                                      "type": "string",
                                                      "title": "device Name",
                                                      "example": "/dev/sda1"
                                                    },
                                                    "ebs": {
                                                      "type": "object",
                                                      "properties": {
                                                        "deleteOnTermination": {
                                                          "type": "boolean",
                                                          "title": "Delete On Termination",
                                                          "example": true
                                                        },
                                                        "volumeSize": {
                                                          "type": "integer",
                                                          "title": "Volume Size",
                                                          "example": 30
                                                        },
                                                        "volumeType": {
                                                          "type": "string",
                                                          "title": "Volume Type",
                                                          "example": "gp2"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "scaling": {
                                        "type": "object"
                                      },
                                      "createdAt": {
                                        "type": "string",
                                        "example": "2020-10-01T05:23:59.302Z"
                                      },
                                      "updatedAt": {
                                        "type": "string",
                                        "example": "2020-10-01T05:23:59.302Z"
                                      }
                                    }
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/spotType": {
      "get": {
        "summary": "Instance Type By Region",
        "description": "Get the available spot instances types available in a specific region\n",
        "operationId": "awsElastigroupGetInstanceTypeByRegion",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "region",
            "example": "us-east-2",
            "description": "The AWS region\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Instance Type By Region Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "67582d0c-108b-4ef7-9fdc-d39678a30844",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/spotType?region=us-west-2",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-01-07T07:30:58.622Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:spot:type",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "object",
                                    "title": "spotinst:aws:ec2:spot:type",
                                    "example": [
                                      {
                                        "instanceType": "hi1.4xlarge"
                                      },
                                      {
                                        "instanceType": "r5d.4xlarge"
                                      },
                                      {
                                        "instanceType": "r5ad.12xlarge"
                                      },
                                      {
                                        "instanceType": "r4.4xlarge"
                                      },
                                      {
                                        "instanceType": "m1.xlarge"
                                      },
                                      {
                                        "instanceType": "a1.4xlarge"
                                      },
                                      {
                                        "instanceType": "m5a.4xlarge"
                                      },
                                      {
                                        "instanceType": "m3.large"
                                      },
                                      {
                                        "instanceType": "x1e.4xlarge"
                                      },
                                      {
                                        "instanceType": "m5d.4xlarge"
                                      },
                                      {
                                        "instanceType": "m5a.24xlarge"
                                      },
                                      {
                                        "instanceType": "m5a.large"
                                      },
                                      {
                                        "instanceType": "r5d.8xlarge"
                                      },
                                      {
                                        "instanceType": "m3.medium"
                                      },
                                      {
                                        "instanceType": "p2.xlarge"
                                      },
                                      {
                                        "instanceType": "m4.large"
                                      },
                                      {
                                        "instanceType": "m5.24xlarge"
                                      },
                                      {
                                        "instanceType": "r5a.4xlarge"
                                      },
                                      {
                                        "instanceType": "c5.large"
                                      },
                                      {
                                        "instanceType": "m5ad.xlarge"
                                      },
                                      {
                                        "instanceType": "m5d.large"
                                      },
                                      {
                                        "instanceType": "r5d.12xlarge"
                                      },
                                      {
                                        "instanceType": "r5a.2xlarge"
                                      },
                                      {
                                        "instanceType": "m3.2xlarge"
                                      },
                                      {
                                        "instanceType": "t3a.large"
                                      },
                                      {
                                        "instanceType": "t2.medium"
                                      },
                                      {
                                        "instanceType": "i3.2xlarge"
                                      },
                                      {
                                        "instanceType": "p3.2xlarge"
                                      },
                                      {
                                        "instanceType": "cc2.8xlarge"
                                      },
                                      {
                                        "instanceType": "i3.xlarge"
                                      },
                                      {
                                        "instanceType": "r3.2xlarge"
                                      },
                                      {
                                        "instanceType": "i3.8xlarge"
                                      },
                                      {
                                        "instanceType": "c4.8xlarge"
                                      },
                                      {
                                        "instanceType": "r5.metal"
                                      },
                                      {
                                        "instanceType": "m4.10xlarge"
                                      },
                                      {
                                        "instanceType": "m1.large"
                                      },
                                      {
                                        "instanceType": "r5d.2xlarge"
                                      },
                                      {
                                        "instanceType": "t1.micro"
                                      },
                                      {
                                        "instanceType": "i2.4xlarge"
                                      },
                                      {
                                        "instanceType": "r5a.24xlarge"
                                      },
                                      {
                                        "instanceType": "z1d.2xlarge"
                                      },
                                      {
                                        "instanceType": "r5.xlarge"
                                      },
                                      {
                                        "instanceType": "m5ad.large"
                                      },
                                      {
                                        "instanceType": "h1.4xlarge"
                                      },
                                      {
                                        "instanceType": "m5d.12xlarge"
                                      },
                                      {
                                        "instanceType": "c5.2xlarge"
                                      },
                                      {
                                        "instanceType": "x1e.8xlarge"
                                      },
                                      {
                                        "instanceType": "d2.8xlarge"
                                      },
                                      {
                                        "instanceType": "r5.8xlarge"
                                      },
                                      {
                                        "instanceType": "c3.large"
                                      },
                                      {
                                        "instanceType": "r4.xlarge"
                                      },
                                      {
                                        "instanceType": "m5ad.24xlarge"
                                      },
                                      {
                                        "instanceType": "t3a.xlarge"
                                      },
                                      {
                                        "instanceType": "d2.4xlarge"
                                      },
                                      {
                                        "instanceType": "c5.24xlarge"
                                      },
                                      {
                                        "instanceType": "c5.metal"
                                      },
                                      {
                                        "instanceType": "c1.medium"
                                      },
                                      {
                                        "instanceType": "m1.medium"
                                      },
                                      {
                                        "instanceType": "g3.8xlarge"
                                      },
                                      {
                                        "instanceType": "r4.2xlarge"
                                      },
                                      {
                                        "instanceType": "i3en.6xlarge"
                                      },
                                      {
                                        "instanceType": "t3.small"
                                      },
                                      {
                                        "instanceType": "i3en.large"
                                      },
                                      {
                                        "instanceType": "i3en.24xlarge"
                                      },
                                      {
                                        "instanceType": "t2.xlarge"
                                      },
                                      {
                                        "instanceType": "t3a.medium"
                                      },
                                      {
                                        "instanceType": "m4.16xlarge"
                                      },
                                      {
                                        "instanceType": "x1.32xlarge"
                                      },
                                      {
                                        "instanceType": "r5a.12xlarge"
                                      },
                                      {
                                        "instanceType": "c5d.4xlarge"
                                      },
                                      {
                                        "instanceType": "i3en.12xlarge"
                                      },
                                      {
                                        "instanceType": "c5d.large"
                                      },
                                      {
                                        "instanceType": "g3.16xlarge"
                                      },
                                      {
                                        "instanceType": "c3.2xlarge"
                                      },
                                      {
                                        "instanceType": "x1e.2xlarge"
                                      },
                                      {
                                        "instanceType": "a1.2xlarge"
                                      },
                                      {
                                        "instanceType": "r5ad.xlarge"
                                      },
                                      {
                                        "instanceType": "m5a.xlarge"
                                      },
                                      {
                                        "instanceType": "t2.large"
                                      },
                                      {
                                        "instanceType": "r5ad.large"
                                      },
                                      {
                                        "instanceType": "i3.metal"
                                      },
                                      {
                                        "instanceType": "t3.nano"
                                      },
                                      {
                                        "instanceType": "r5ad.2xlarge"
                                      },
                                      {
                                        "instanceType": "f1.16xlarge"
                                      },
                                      {
                                        "instanceType": "h1.8xlarge"
                                      },
                                      {
                                        "instanceType": "m5.12xlarge"
                                      },
                                      {
                                        "instanceType": "a1.medium"
                                      },
                                      {
                                        "instanceType": "i3en.3xlarge"
                                      },
                                      {
                                        "instanceType": "m5d.8xlarge"
                                      }
                                    ]
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 322,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/instanceTypeRecommendation": {
      "post": {
        "summary": "Suggested Instance Type",
        "description": "Get suggested instance types by required resources.\nNote that request must include region, and at least one of the following values - baselineInstanceType, requiredVCpu, requiredMemoryGib",
        "operationId": "elastigroupAwsSuggestedInstanceType",
        "tags": [
          "Insights Service"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "spotinst:aws:ec2:instanceTypeRecommendation",
                    "properties": {
                      "requirements": {
                        "type": "object",
                        "title": "AWS Elastigroup",
                        "properties": {
                          "region": {
                            "type": "string",
                            "description": "Set valid AWS region",
                            "example": "us-east-1"
                          },
                          "baselineInstanceType": {
                            "type": "string",
                            "description": "Set valid AWS instance type as baseline",
                            "example": "m5.large"
                          },
                          "requiredVCpu": {
                            "type": "object",
                            "description": "Set required CPU resources by min / max",
                            "properties": {
                              "minimum": {
                                "type": "integer",
                                "description": "Minimum amount of VCpu",
                                "example": 2
                              },
                              "maximum": {
                                "type": "integer",
                                "description": "Maximum amount of VCpu",
                                "example": 4
                              }
                            }
                          },
                          "requiredMemoryGib": {
                            "type": "object",
                            "description": "Set required Memory (in Gib) resources by min / max",
                            "properties": {
                              "minimum": {
                                "type": "integer",
                                "description": "Minimum amount of Gib",
                                "example": 16
                              },
                              "maximum": {
                                "type": "integer",
                                "description": "Maximum amount of Gib",
                                "example": 64
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Suggested Instance Type Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "0bb5db74-2457-4a34-b8f3-174e6bf5578e",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/instanceTypeRecommendation",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2016-06-19T08:41:57.516Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:instanceTypeRecommendation",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "object",
                                    "example": [
                                      {
                                        "instanceType": "m4.large"
                                      },
                                      {
                                        "instanceType": "m5.large"
                                      }
                                    ]
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 2,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/instance/interruption": {
      "post": {
        "summary": "Simulate an Instance Interruption",
        "description": "The simulate instance interruption API is used for simulating a spot interruption in AWS, so that customers can verify specific applicative behaviors in case an interruption takes place. Once the interruption api is called, instances posted in the API body will be terminated in AWS, thus mocking a spot interruption.",
        "operationId": "elastigroupAwsInstanceInterruption",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "instancesToInterrupt": {
                        "type": "array",
                        "description": "A list of group's instance ids to interrupt\n",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "i-123456",
                          "i-9876543"
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Simulate An Instance Interruption",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "ff3e1e5b-91b8-42fa-8267-b988efc7f662",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/instance/interruption?accountId=act-4fb595c6",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2015-06-29T13:01:55.060Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/instance/signal": {
      "post": {
        "summary": "Create Instance Signal",
        "description": "The instance signal API is used for notifying Spot about the instance state, so Spot can act accordingly. Supported signals are - INSTANCE_READY – Whenever this signal is sent, Spot will register the instance to the ELB INSTANCE_READY_TO_SHUTDOWN – Whenever this signal is sent, Spot will terminate the instance after it was marked for termination. Important - You need to define the expected signals for your Elastigroup in the group configuration.",
        "operationId": "elastigroupAwsCreateInstanceSignal",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "instanceId": {
                        "type": "string",
                        "example": "i-123456",
                        "description": "The instance ID the signal refers to."
                      },
                      "signal": {
                        "type": "string",
                        "example": "INSTANCE_READY",
                        "description": "The specific signal you want to trigger. Valid Values - INSTANCE_READY, INSTANCE_READY_TO_SHUTDOWN"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create Instance Signal Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "67582d0c-108b-4ef7-9fdc-d39678a30844",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/instance/signal",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-01-07T07:30:58.622Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    },
                                    "kind": {
                                      "type": "string",
                                      "example": "spotinst:aws:ec2:instance:signal",
                                      "description": "The data type of each item in the response\n"
                                    },
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "instanceId": {
                                          "type": "string",
                                          "example": "i-0c8bc7fd0e8cd6c8d",
                                          "description": "The instance ID the signal refers to.\n"
                                        },
                                        "instanceLaunchedAt": {
                                          "type": "string",
                                          "example": "2023-04-30T12:20:14.000Z",
                                          "description": "The time the instance was launched (returned only for signals of type INSTANCE_READY).\n"
                                        },
                                        "instanceDetachedAt": {
                                          "type": "string",
                                          "example": "2023-04-30T12:20:14.000Z",
                                          "description": "The time the instance was detached (returned only for signals of type INSTANCE_READY_TO_SHUTDOWN).\n"
                                        },
                                        "type": {
                                          "type": "string",
                                          "example": "INSTANCE_READY",
                                          "description": "The type of signal sent in the request.\n"
                                        },
                                        "signalExpiresAt": {
                                          "type": "string",
                                          "example": "2023-04-30T12:21:14.000Z",
                                          "description": "The time at which the signal expires.\n"
                                        },
                                        "message": {
                                          "type": "string",
                                          "example": "This instance crossed the signal timeout limit at Sun Apr 30 12:21:14 UTC 2023",
                                          "description": "An optional message that may contain additional information.\n"
                                        }
                                      }
                                    },
                                    "count": {
                                      "type": "integer",
                                      "example": 1
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/instance/{instanceId}/standby/enter": {
      "post": {
        "summary": "Instance Standby",
        "description": "Instance Standby enables you to put an instance in Standby state , update or troubleshoot the instance, and then return the instance to service. Instances that are on standby are still part of the Elastigroup, but they don't get application traffic.\nWhenever instance is standby state -\nIt will be de-registered from all the ELBs / ALBs in the Elastigroup It won't be affected from Scale down activities in the Elastigroup The instance health won't be checked, and it won't be replaced When the instance exits the Standby state -\nThe instance will be register back to all the ELBs / ALBs that are defined in the Elastigroup It will be considered and affected from all the Elastigroup activities (helth checks, scaling, etc.)",
        "operationId": "elastigroupAwsInstanceStandBy",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "example": "i-123456",
            "description": "The instance ID you want to put in standby state\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Instance Standby Responce",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "ff3e1e5b-91b8-42fa-8267-b988efc7f662",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/instance/i-123456/standby/enter",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2015-06-29T13:01:55.060Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/instance/{instanceId}/standby/exit": {
      "post": {
        "summary": "Exit Instance Standby",
        "description": "Exit standby by mode",
        "operationId": "elastigroupAwsInstanceExitStandBy",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "example": "i-123456",
            "description": "The instance ID you want to put in standby state\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Exit Instance Standby Responce",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "ff3e1e5b-91b8-42fa-8267-b988efc7f662",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/instance/i-123456/standby/exit",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2015-06-29T13:01:55.060Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/roll": {
      "get": {
        "summary": "Group's Deployments Status",
        "description": "Get list of all the deployments of a specific Elastigroup and their status",
        "operationId": "elastigroupAwsDeploymentsStatus",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "example": "5",
            "description": "Limits results\n",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "sort",
            "example": "createdAt:ASC",
            "description": "Field to sort by the results Default: createdAt:DESC\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Group's Deployments Status Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-12345/roll?limit=5&sort=createdAt%3ADESC",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2016-01-21T17:12:51.451Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group:roll",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "anyOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "title": "ID",
                                            "example": "sbgd-781c6212"
                                          },
                                          "status": {
                                            "type": "string",
                                            "title": "Status",
                                            "example": "starting"
                                          },
                                          "progress": {
                                            "type": "object",
                                            "properties": {
                                              "unit": {
                                                "type": "string",
                                                "title": "Unit",
                                                "example": "percent"
                                              },
                                              "value": {
                                                "type": "integer",
                                                "title": "Value",
                                                "example": 0
                                              }
                                            }
                                          },
                                          "currentBatch": {
                                            "type": "integer",
                                            "title": "Current Batch",
                                            "example": 1
                                          },
                                          "numOfBatches": {
                                            "type": "integer",
                                            "title": "Number of Batches",
                                            "example": 4
                                          },
                                          "gracePeriod": {
                                            "type": "integer",
                                            "title": "Grace Period",
                                            "example": 900
                                          },
                                          "blueInstances": {
                                            "type": "integer",
                                            "title": "Blue Instances",
                                            "example": 4
                                          },
                                          "greenInstances": {
                                            "type": "integer",
                                            "title": "Green Instances",
                                            "example": 1
                                          },
                                          "createdAt": {
                                            "type": "string",
                                            "title": "Created At",
                                            "example": "2018-03-27T19:50:12.000+0000"
                                          },
                                          "updatedAt": {
                                            "type": "string",
                                            "title": "Updated At",
                                            "example": "2018-03-27T19:50:16.000+0000"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "title": "spotinst:aws:ec2:group:roll",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "title": "ID",
                                            "example": "sbgd-3f127ed0"
                                          },
                                          "status": {
                                            "type": "string",
                                            "title": "Status",
                                            "example": "starting"
                                          },
                                          "progress": {
                                            "type": "object",
                                            "properties": {
                                              "unit": {
                                                "type": "string",
                                                "title": "Unit",
                                                "example": "percent"
                                              },
                                              "value": {
                                                "type": "integer",
                                                "title": "Value",
                                                "example": 0
                                              }
                                            }
                                          },
                                          "currentBatch": {
                                            "type": "integer",
                                            "title": "Current Batch",
                                            "example": 1
                                          },
                                          "numOfBatches": {
                                            "type": "integer",
                                            "title": "Number of Batches",
                                            "example": 4
                                          },
                                          "gracePeriod": {
                                            "type": "integer",
                                            "title": "Grace Period",
                                            "example": 900
                                          },
                                          "blueInstances": {
                                            "type": "integer",
                                            "title": "Blue Instances",
                                            "example": 4
                                          },
                                          "greenInstances": {
                                            "type": "integer",
                                            "title": "Green Instances",
                                            "example": 1
                                          },
                                          "createdAt": {
                                            "type": "string",
                                            "title": "Created At",
                                            "example": "2018-03-27T19:46:22.000+0000"
                                          },
                                          "updatedAt": {
                                            "type": "string",
                                            "title": "Updated At",
                                            "example": "2018-03-27T19:46:35.000+0000"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "title": "ID",
                                            "example": "sbgd-3ee19606"
                                          },
                                          "status": {
                                            "type": "string",
                                            "title": "Status",
                                            "example": "stopped"
                                          },
                                          "progress": {
                                            "type": "object",
                                            "properties": {
                                              "unit": {
                                                "type": "string",
                                                "title": "Unit",
                                                "example": "percent"
                                              },
                                              "value": {
                                                "type": "integer",
                                                "title": "Value",
                                                "example": 0
                                              }
                                            }
                                          },
                                          "currentBatch": {
                                            "type": "integer",
                                            "title": "Current Batch",
                                            "example": 1
                                          },
                                          "numOfBatches": {
                                            "type": "integer",
                                            "title": "Number of Batches",
                                            "example": 4
                                          },
                                          "gracePeriod": {
                                            "type": "integer",
                                            "title": "Grace Period",
                                            "example": 900
                                          },
                                          "blueInstances": {
                                            "type": "integer",
                                            "title": "Blue Instances",
                                            "example": 4
                                          },
                                          "greenInstances": {
                                            "type": "integer",
                                            "title": "Green Instances",
                                            "example": 1
                                          },
                                          "createdAt": {
                                            "type": "string",
                                            "title": "Created At",
                                            "example": "2018-03-27T19:35:41.000+0000"
                                          },
                                          "updatedAt": {
                                            "type": "string",
                                            "title": "Updated At",
                                            "example": "2018-03-27T19:39:18.000+0000"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "title": "ID",
                                            "example": "sbgd-cc4c44e2"
                                          },
                                          "status": {
                                            "type": "string",
                                            "title": "Status",
                                            "example": "finished"
                                          },
                                          "progress": {
                                            "type": "object",
                                            "properties": {
                                              "unit": {
                                                "type": "string",
                                                "title": "Unit",
                                                "example": "percent"
                                              },
                                              "value": {
                                                "type": "integer",
                                                "title": "Value",
                                                "example": 100
                                              }
                                            }
                                          },
                                          "currentBatch": {
                                            "type": "integer",
                                            "title": "Current Batch",
                                            "example": 1
                                          },
                                          "numOfBatches": {
                                            "type": "integer",
                                            "title": "Number of Batches",
                                            "example": 4
                                          },
                                          "gracePeriod": {
                                            "type": "integer",
                                            "title": "Grace Period",
                                            "example": 900
                                          },
                                          "blueInstances": {
                                            "type": "integer",
                                            "title": "Blue Instances",
                                            "example": 4
                                          },
                                          "greenInstances": {
                                            "type": "integer",
                                            "title": "Green Instances",
                                            "example": 1
                                          },
                                          "createdAt": {
                                            "type": "string",
                                            "title": "Created At",
                                            "example": "2018-03-26T19:22:45.000+0000"
                                          },
                                          "updatedAt": {
                                            "type": "string",
                                            "title": "Updated At",
                                            "example": "2018-03-26T19:26:17.000+0000"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "example": [
                                    {
                                      "id": "sbgd-781c6212",
                                      "status": "starting",
                                      "progress": {
                                        "unit": "percent",
                                        "value": 0
                                      },
                                      "currentBatch": "1,",
                                      "numOfBatches": 4,
                                      "gracePeriod": 900,
                                      "blueInstances": 4,
                                      "greenInstances": 1,
                                      "createdAt": "2018-03-27T19:50:12.000+0000",
                                      "updatedAt": "2018-03-27T19:50:16.000+0000"
                                    },
                                    {
                                      "id": "sbgd-3ee19606",
                                      "status": "stopped",
                                      "progress": {
                                        "unit": "percent",
                                        "value": 0
                                      },
                                      "currentBatch": "1,",
                                      "numOfBatches": 4,
                                      "gracePeriod": 900,
                                      "blueInstances": 4,
                                      "greenInstances": 1,
                                      "createdAt": "2018-03-27T19:35:41.000+0000",
                                      "updatedAt": "2018-03-27T19:39:18.000+0000"
                                    },
                                    {
                                      "id": "sbgd-cc4c44e2",
                                      "status": "finished",
                                      "progress": {
                                        "unit": "percent",
                                        "value": 100
                                      },
                                      "currentBatch": "1,",
                                      "numOfBatches": 4,
                                      "gracePeriod": 900,
                                      "blueInstances": 4,
                                      "greenInstances": 1,
                                      "createdAt": "2018-03-26T19:22:45.000+0000",
                                      "updatedAt": "2018-03-26T19:26:17.000+0000"
                                    },
                                    {
                                      "id": "sbgd-3f127ed0",
                                      "status": "starting",
                                      "progress": {
                                        "unit": "percent",
                                        "value": 0
                                      },
                                      "currentBatch": "1,",
                                      "numOfBatches": 4,
                                      "gracePeriod": 900,
                                      "blueInstances": 4,
                                      "greenInstances": 1,
                                      "createdAt": "2018-03-27T19:46:22.000+0000",
                                      "updatedAt": "2018-03-27T19:46:35.000+0000"
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Start Deployment",
        "description": "Deploy your Elastigroup (triggers Blue/Green Deployment that replaces the existing instances in the Elastigroup)",
        "operationId": "elastigroupAwsDeploy",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "batchSizePercentage",
                      "gracePeriod"
                    ],
                    "properties": {
                      "batchSizePercentage": {
                        "type": "integer",
                        "example": 20,
                        "description": "Indicates (in percentage) the batch size of the deployment (meaning, how many instances to replace in each batch)\n"
                      },
                      "gracePeriod": {
                        "type": "integer",
                        "example": 300,
                        "description": "Indicates (in seconds) the timeout to wait until instance become healthy based on the healthCheckType\n"
                      },
                      "healthCheckType": {
                        "type": "string",
                        "example": "EC2",
                        "description": "Define a health check type.\\\nIf no value is set the roll will use the group’s auto-healing health check.\n",
                        "enum": [
                          "ELB",
                          "ECS_CLUSTER_INSTANCE",
                          "TARGET_GROUP",
                          "OPSWORKS",
                          "NOMAD_NODE",
                          "HCS",
                          "EC2",
                          "NONE"
                        ]
                      },
                      "drainingTimeout": {
                        "type": "integer",
                        "default": 120,
                        "example": 60,
                        "description": "Indicates (in seconds) the timeout to drain the instances. Override the group value.\n",
                        "minimum": 0
                      },
                      "strategy": {
                        "description": "The roll strategy\n",
                        "properties": {
                          "action": {
                            "type": "string",
                            "default": "REPLACE_SERVER",
                            "example": "REPLACE_SERVER",
                            "description": "The roll action to perform.\n",
                            "enum": [
                              "REPLACE_SERVER",
                              "RESTART_SERVER"
                            ]
                          },
                          "batchMinHealthyPercentage": {
                            "type": "integer",
                            "default": 50,
                            "example": 25,
                            "description": "Indicates the threshold of minimum healthy instances in single batch.\\\nIf the amount of healthy instances in single batch is under the threshold, the deployment will fail.\\\nIn case of null as value, the default value in the backend will be 50%.\\\nValue of param should represent the number in percentage (%) of the batch.\n",
                            "minimum": 0,
                            "maximum": 100
                          },
                          "onFailure": {
                            "type": "object",
                            "required": [
                              "actionType"
                            ],
                            "description": "Set detach options to the deployment\n",
                            "properties": {
                              "actionType": {
                                "type": "string",
                                "example": "DETACH_NEW",
                                "description": "Sets the action that will take place.\n",
                                "enum": [
                                  "DETACH_OLD",
                                  "DETACH_NEW"
                                ]
                              },
                              "shouldHandleAllBatches": {
                                "type": "boolean",
                                "default": false,
                                "example": true,
                                "description": "Indicator if the action should apply to all batches of the deployment or only the latest batch\n"
                              },
                              "drainingTimeout": {
                                "type": "integer",
                                "default": "The Elastigroups draining time out",
                                "example": 120,
                                "description": "Indicates (in seconds) the timeout to drain the instances\n"
                              },
                              "shouldDecrementTargetCapacity": {
                                "type": "boolean",
                                "default": true,
                                "example": true,
                                "description": "Decrementing the group target capacity after detaching the instances\n"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Deploy Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-12345/roll?accountId=act-123456",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "PUT",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2016-01-21T17:12:51.451Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group:roll",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "title": "ID",
                                        "example": "sbgd-3ee19606"
                                      },
                                      "status": {
                                        "type": "string",
                                        "title": "Status",
                                        "example": "STARTING"
                                      },
                                      "currentBatch": {
                                        "type": "integer",
                                        "title": "Status",
                                        "example": 1
                                      },
                                      "numOfBatches": {
                                        "type": "integer",
                                        "title": "Status",
                                        "example": 1
                                      },
                                      "progress": {
                                        "type": "object",
                                        "properties": {
                                          "unit": {
                                            "type": "string",
                                            "title": "Unit",
                                            "example": "percent"
                                          },
                                          "value": {
                                            "type": "integer",
                                            "title": "Value",
                                            "example": 0
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/roll/{rollId}": {
      "put": {
        "summary": "Stop Deployment",
        "description": "Stop an existing deployment",
        "operationId": "elastigroupAwsStopDeployment",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "path",
            "name": "rollId",
            "example": "sbgd-9876",
            "description": "The deployment ID you want to stop\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "roll": {
                        "type": "object",
                        "title": "Role",
                        "properties": {
                          "status": {
                            "type": "string",
                            "title": "Status",
                            "example": "STOPPED",
                            "description": "Set the status of the group to `STOPPED\"\n"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Stop Deployment Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "ff3e1e5b-91b8-42fa-8267-b988efc7f662",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-12345/roll/sbgd-dfb956b4",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "PUT",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2015-06-29T13:01:55.060Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group:roll",
                                  "description": "The data type of each item in the response\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/roll/{rollId}/status": {
      "get": {
        "summary": "Deployment Status",
        "description": "Get status of a specific deployment",
        "operationId": "elastigroupAwsDeployStatus",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "path",
            "name": "rollId",
            "example": "sbgd-9876",
            "description": "The deployment ID you want to query\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Deploy Status Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-d8489594/deployment/sbgd-3e158755/status?spotinstAccountId=act-d48178ad",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2016-01-21T17:12:51.451Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group:roll:status",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "object",
                                    "title": "spotinst:aws:ec2:group:roll:status",
                                    "properties": {
                                      "progress": {
                                        "type": "object",
                                        "properties": {
                                          "unit": {
                                            "type": "string",
                                            "title": "Unit",
                                            "example": "percent"
                                          },
                                          "value": {
                                            "type": "integer",
                                            "title": "Value",
                                            "example": 50
                                          }
                                        }
                                      },
                                      "numberOfBatches": {
                                        "type": "integer",
                                        "title": "Number Of Batches",
                                        "example": 2
                                      },
                                      "currentBatch": {
                                        "type": "integer",
                                        "title": "Current Batch",
                                        "example": 1
                                      },
                                      "gracePeriod": {
                                        "type": "integer",
                                        "title": "Grace Period",
                                        "example": 600
                                      },
                                      "strategyAction": {
                                        "type": "string",
                                        "title": "Strategy Action",
                                        "example": "REPLACE_SERVER"
                                      },
                                      "healthCheck": {
                                        "type": "string",
                                        "title": "Strategy Action",
                                        "example": "NONE"
                                      },
                                      "instances": {
                                        "type": "array",
                                        "items": {
                                          "anyOf": [
                                            {
                                              "type": "object",
                                              "properties": {
                                                "blue": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "instanceId": {
                                                        "type": "string",
                                                        "example": "i-0b3f1234567890ae5"
                                                      },
                                                      "lifeCycle": {
                                                        "type": "string",
                                                        "example": "spot"
                                                      },
                                                      "batchNum": {
                                                        "type": "integer",
                                                        "example": 1
                                                      },
                                                      "status": {
                                                        "type": "string",
                                                        "example": "RUNNING"
                                                      }
                                                    }
                                                  }
                                                },
                                                "green": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "instanceId": {
                                                        "type": "string",
                                                        "example": "i-0b3f1234567890dd5"
                                                      },
                                                      "lifeCycle": {
                                                        "type": "string",
                                                        "example": "spot"
                                                      },
                                                      "batchNum": {
                                                        "type": "integer",
                                                        "example": 1
                                                      },
                                                      "status": {
                                                        "type": "string",
                                                        "example": "RUNNING"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "blue": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "instanceId": {
                                                        "type": "string",
                                                        "example": "i-0b3f1234567890aa6"
                                                      },
                                                      "lifeCycle": {
                                                        "type": "string",
                                                        "example": "spot"
                                                      },
                                                      "batchNum": {
                                                        "type": "integer",
                                                        "example": 2
                                                      },
                                                      "status": {
                                                        "type": "string",
                                                        "example": "DETACHED"
                                                      }
                                                    }
                                                  }
                                                },
                                                "green": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "instanceId": {
                                                        "type": "string",
                                                        "example": "i-0b3f1234567890dq3"
                                                      },
                                                      "lifeCycle": {
                                                        "type": "string",
                                                        "example": "spot"
                                                      },
                                                      "batchNum": {
                                                        "type": "integer",
                                                        "example": 2
                                                      },
                                                      "status": {
                                                        "type": "string",
                                                        "example": "RUNNING"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/roll/{rollId}/action": {
      "post": {
        "summary": "Deployment Actions",
        "description": "Apply a Detach action to a deployment",
        "operationId": "elastigroupAwsDeployment",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "path",
            "name": "rollId",
            "example": "sbgd-9876",
            "description": "The deployment ID to call the action on\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "spotinst:aws:ec2:group:roll:action",
                    "properties": {
                      "actionType": {
                        "type": "string",
                        "title": "Type of action",
                        "description": "Sets the action that will take place, Accepted values are: DETACH_OLD, DETACH_NEW\n",
                        "example": "DETACH_NEW"
                      },
                      "shouldHandleAllBatches": {
                        "type": "boolean",
                        "title": "Should Hnadle All Batches Criteria",
                        "example": true,
                        "default": false,
                        "description": "Indicator if the action should apply to all batches of the deployment or only the latest batch\n"
                      },
                      "drainingTimeout": {
                        "type": "integer",
                        "title": "Draining timeout criteria",
                        "description": "Indicates (in seconds) the timeout to wait until instance are detached\n",
                        "example": 200
                      },
                      "shouldDecrementTargetCapacity": {
                        "type": "boolean",
                        "title": "Should Decrement Target Capacity criteria",
                        "example": true,
                        "default": true
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Deployment Actions Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-1b656b92/roll/sbgd-aafb7671/action",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2016-01-21T17:12:51.451Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group:roll:action",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "groupId": {
                                        "type": "string",
                                        "description": "Group ID",
                                        "example": "sig-1b656b92"
                                      },
                                      "rollId": {
                                        "type": "string",
                                        "description": "Roll ID",
                                        "example": "sbgd-aafb7671"
                                      },
                                      "actionType": {
                                        "type": "string",
                                        "description": "Roll ID",
                                        "example": "DETACH_NEW"
                                      },
                                      "detachedInstances": {
                                        "type": "string",
                                        "example": [
                                          "i-0b6974ad592f8d9ba"
                                        ]
                                      }
                                    }
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/costs": {
      "get": {
        "summary": "Get Costs Per Account",
        "description": "Get costs per time filter.\n",
        "operationId": "azureCostsPerAccount",
        "tags": [
          "Elastigroup Azure Scale Set VMs"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123456789",
            "description": "The ID of the account associated with your token.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "fromDate",
            "required": true,
            "description": "Get items on or after this date (ISO 8601 or Unix timestamp)\n",
            "schema": {
              "type": "string"
            },
            "example": "2020-09-01 or fromDate=1598918400000"
          },
          {
            "in": "query",
            "name": "toDate",
            "required": true,
            "description": "Get items on or before this date (ISO 8601 or Unix timestamp)",
            "schema": {
              "type": "string"
            },
            "example": "2020-09-01 or fromDate=1598918400000"
          }
        ],
        "responses": {
          "200": {
            "description": "Costs Per Account Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "67582d0c-108b-4ef7-9fdc-d39678a30844"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/azure/costs"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-01-07T07:30:58.622Z"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:azure:costs"
                                },
                                "items": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "title": "spotinst:azure:costs",
                                    "properties": {
                                      "lowPriority": {
                                        "type": "object",
                                        "properties": {
                                          "runningHours": {
                                            "type": "number",
                                            "format": "number",
                                            "example": 1470.8
                                          },
                                          "actualCosts": {
                                            "type": "number",
                                            "format": "number",
                                            "example": 107.3
                                          },
                                          "potentialCosts": {
                                            "type": "number",
                                            "format": "number",
                                            "example": 378.41
                                          },
                                          "savingsPercentage": {
                                            "type": "number",
                                            "format": "number",
                                            "example": 71.64
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/{groupId}": {
      "put": {
        "summary": "Update Elastigroup",
        "description": "Update an Azure Elastigroup cluster.\n",
        "operationId": "elastigroupAzureSpotVmsUpdate",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "groupId",
            "example": "sig-123123",
            "description": "Elastigroup's ID\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Update Elasitgroup Azure Spot VMs - Request Available fields",
                    "required": [
                      "group"
                    ],
                    "properties": {
                      "group": {
                        "type": "object",
                        "title": "Azure Elastigroup",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "spotinst-group",
                            "description": "Azure Elastigroup Name\n"
                          },
                          "description": {
                            "type": "string",
                            "example": "This is my example elastigroup",
                            "description": "Describe your Azure Elastigroup\n"
                          },
                          "capacity": {
                            "$ref": "#/paths/~1azure~1compute~1group~1%7BgroupId%7D~1capacity/put/requestBody/content/application~1json/schema/allOf/0/properties/capacity"
                          },
                          "strategy": {
                            "type": "object",
                            "title": "Elastigroup Strategy",
                            "description": "Strategy for Elastigroup.\n",
                            "properties": {
                              "spotPercentage": {
                                "type": "integer",
                                "example": 50,
                                "default": 100,
                                "description": "Percentage of Spot-VMs to maintain.\\\nRequired if odCount isn't specified.\n"
                              },
                              "onDemandCount": {
                                "type": "integer",
                                "description": "Percentage of Spot-VMs to maintain.\\\nRequired if spotPercentage isn't specified.\n",
                                "writeOnly": true
                              },
                              "drainingTimeout": {
                                "type": "integer",
                                "example": 30,
                                "default": 120,
                                "description": "Time (in seconds) to allow the VM be drained from incoming TCP connections and detached from MLB before terminating it during a scale down operation.\n"
                              },
                              "fallbackToOd": {
                                "type": "boolean",
                                "description": "In case of no spots available, Elastigroup will launch an On-demand instance instead\n",
                                "example": true
                              },
                              "revertToSpot": {
                                "description": "Hold settings for strategy correction - replacing On-Demand for Spot VMs\n",
                                "type": "object",
                                "properties": {
                                  "performAt": {
                                    "type": "string",
                                    "description": "Settings for maintenance strategy.\n",
                                    "enum": [
                                      "timeWindow",
                                      "never",
                                      "always"
                                    ],
                                    "example": "timeWindow",
                                    "default": "always"
                                  }
                                }
                              },
                              "optimizationWindows": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "valid format: \"ddd:hh:mm-ddd:hh:mm (day:hour(0-23):minute(0-59))\", not empty if revertToSpot.performAt = timeWindow\n",
                                "example": [
                                  "Mon:03:00-Wed:02:30"
                                ]
                              },
                              "signals": {
                                "type": "array",
                                "description": "The signals defined for this group.\n",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "description": "The type of the signal defined for the group.\n",
                                      "enum": [
                                        "vmReady",
                                        "vmReadyToShutdown"
                                      ],
                                      "example": "vmReady"
                                    },
                                    "timeout": {
                                      "type": "integer",
                                      "description": "The timeout in seconds to hold the vm until a signal is sent.\\\nIf no signal is sent the vm will be replaced (vmReady) or we will terminate the vm (vmReadyToShutdown) after the timeout.\n",
                                      "example": 180,
                                      "default": 1800,
                                      "minimum": 60,
                                      "maximum": 1800
                                    }
                                  }
                                }
                              },
                              "availabilityVsCost": {
                                "title": "Elastigroup Availability VS Cost",
                                "description": "Set the desired preference for the Spot market VM selection. (100-  Availability, 0- cost)\n",
                                "type": "integer",
                                "example": 100
                              },
                              "capacityReservation": {
                                "type": "object",
                                "description": "On-demand Capacity Reservation group enables you to reserve Compute capacity in an Azure region or an Availability Zone for any duration of time.\n[CRG can only be created on the Azure end.](https://learn.microsoft.com/en-us/azure/virtual-machines/capacity-reservation-create)\n",
                                "required": [
                                  "shouldUtilize",
                                  "utilizationStrategy"
                                ],
                                "properties": {
                                  "shouldUtilize": {
                                    "type": "boolean",
                                    "description": "Determines whether capacity reservations should be utilized.\n",
                                    "example": true
                                  },
                                  "utilizationStrategy": {
                                    "type": "string",
                                    "description": "The priority requested for using CRG. This value will determine if CRG is used ahead of spot VMs or On-demand VMs.\n* utilizeOverOD- If picked, we will use CRG only in case On-demand should be launched.\n* utilizeOverSpot-  CRG will be preferred over Spot. Only after CRG is fully used, spot VMs can be used.\n",
                                    "enum": [
                                      "utilizeOverSpot",
                                      "utilizeOverOD"
                                    ],
                                    "example": "utilizeOverSpot"
                                  },
                                  "capacityReservationGroups": {
                                    "type": "array",
                                    "description": "List of the desired CRGs to use under the associated Azure subscription.\nWhen null we will utilize any available reservation that matches the Virtual Node Group.\n",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "resourceGroupName"
                                      ],
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the CRG.\n",
                                          "example": "capacityReservationGroupName"
                                        },
                                        "resourceGroupName": {
                                          "type": "string",
                                          "description": "Azure resource group name\n",
                                          "example": "resourceGroupName"
                                        },
                                        "shouldPrioritize": {
                                          "type": "boolean",
                                          "description": "The desired CRG to utilize ahead of other CRGs in the subscription.\n",
                                          "example": true
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "scaling": {
                            "type": "object",
                            "title": "Elastigroup Scaling",
                            "description": "Scaling Policies for Elastigroup.\n",
                            "properties": {
                              "up": {
                                "type": "array",
                                "description": "Defines scaling up policy.\n",
                                "items": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "policyName": {
                                          "type": "string",
                                          "description": "Name of scaling policy.\n",
                                          "example": "cpuScale"
                                        },
                                        "metricName": {
                                          "type": "string",
                                          "description": "Metric to monitor by Azure metric display name\n",
                                          "example": "Percentage CPU"
                                        },
                                        "statistic": {
                                          "type": "string",
                                          "description": "Statistic by which to evaluate the selected metric.\n",
                                          "example": "average",
                                          "enum": [
                                            "average",
                                            "total",
                                            "minimum",
                                            "maximum",
                                            "count"
                                          ]
                                        },
                                        "unit": {
                                          "type": "string",
                                          "description": "Unit to measure to evaluate the selected metric\n",
                                          "enum": [
                                            "percent",
                                            "seconds",
                                            "microseconds",
                                            "milliseconds",
                                            "bytes",
                                            "kilobytes",
                                            "megabytes",
                                            "gigabytes",
                                            "terabytes",
                                            "bits",
                                            "kilobits",
                                            "megabits",
                                            "gigabits",
                                            "terabits",
                                            "count",
                                            "bytes/second",
                                            "kilobytes/second",
                                            "megabytes/second",
                                            "gigabytes/second",
                                            "terabytes/second",
                                            "bits/second",
                                            "kilobits/second",
                                            "megabits/second",
                                            "gigabits/second",
                                            "terabits/second",
                                            "count/second",
                                            "none"
                                          ]
                                        },
                                        "threshold": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "The value at which the scaling action is triggered.\n",
                                          "example": 0.75
                                        },
                                        "namespace": {
                                          "type": "string",
                                          "description": "Should be one of the namespaces:\n* Microsoft.AnalysisServices/servers\n* Microsoft.ApiManagement/service\n* Microsoft.Automation/automationAccounts\n* Microsoft.Batch/batchAccounts\n* Microsoft.Cache/redis\n* Microsoft.Compute\n* Microsoft.CognitiveServices/accounts\n* Microsoft.ContainerInstance/containerGroups\n* Microsoft.ContainerService/managedClusters\n* Microsoft.CustomerInsights/hubs\n* Microsoft.DataFactory/datafactories\n* Microsoft.DataFactory/factories\n* Microsoft.DataLakeAnalytics/accounts\n* Microsoft.DataLakeStore/accounts\n* Microsoft.DBforMariaDB/servers\n* Microsoft.DBforMySQL/servers\n* Microsoft.DBforPostgreSQL/servers\n* Microsoft.Devices/IotHubs\n* Microsoft.Devices/provisioningServices\n* Microsoft.DocumentDB/databaseAccounts\n* Microsoft.EventGrid/topics\n* Microsoft.EventGrid/eventSubscriptions\n* Microsoft.EventGrid/extensionTopics\n* Microsoft.EventHub/namespaces\n* Microsoft.EventHub/clusters\n* Microsoft.HDInsight/clusters\n* Microsoft.Insights/AutoscaleSettings\n* Microsoft.Insights/Components\n* Microsoft.KeyVault/vaults\n* Microsoft.Kusto/Clusters\n* Microsoft.LocationBasedServices/accounts\n* Microsoft.Logic/workflows\n* Microsoft.NetApp/netAppAccounts/capacityPools/Volumes\n* Microsoft.NetApp/netAppAccounts/capacityPools\n* Microsoft.Network/networkInterfaces\n* Microsoft.Network/loadBalancers\n* Microsoft.Network/dnszones\n* Microsoft.Network/publicIPAddresses\n* Microsoft.Network/applicationGateways\n* Microsoft.Network/virtualNetworkGateways\n* Microsoft.Network/expressRouteCircuits\n* Microsoft.Network/expressRouteCircuits/peerings\n* Microsoft.Network/connections\n* Microsoft.Network/trafficManagerProfiles\n* Microsoft.Network/networkWatchers/connectionMonitors\n* Microsoft.Network/frontdoors\n* Microsoft.NotificationHubs/Namespaces/NotificationHubs\n* Microsoft.OperationalInsights/workspaces\n* Microsoft.PowerBIDedicated/capacities\n* Microsoft.Relay/namespaces\n* Microsoft.Search/searchServices\n* Microsoft.ServiceBus/namespaces\n* Microsoft.SignalRService/SignalR\n* Microsoft.Sql/servers/databases\n* Microsoft.Sql/servers/elasticPools\n* Microsoft.Sql/managedInstances\n* Microsoft.Storage/storageAccounts\n* Microsoft.Storage/storageAccounts/blobServices\n* Microsoft.Storage/storageAccounts/fileServices\n* Microsoft.Storage/storageAccounts/queueServices\n* Microsoft.Storage/storageAccounts/tableServices\n* Microsoft.StreamAnalytics/streamingjobs\n* Microsoft.TimeSeriesInsights/environments\n* Microsoft.TimeSeriesInsights/environments/eventsources\n* Microsoft.Web/serverfarms\n* Microsoft.Web/sites (excluding functions)\n* Microsoft.Web/sites (functions)\n* Microsoft.Web/sites/slots\n* Microsoft.Web/hostingEnvironments/multiRolePools\n* Microsoft.Web/hostingEnvironments/workerPools\n",
                                          "example": "Microsoft.Network/applicationGateways"
                                        },
                                        "period": {
                                          "type": "integer",
                                          "description": "Amount of time (seconds) for which the threshold must be met in order to trigger the scaling action.\n",
                                          "enum": [
                                            60,
                                            300,
                                            900,
                                            1800,
                                            3600,
                                            7200
                                          ],
                                          "example": 60
                                        },
                                        "evaluationPeriods": {
                                          "type": "integer",
                                          "description": "Number of consecutive periods in which the threshold must be met in order to trigger the scaling action.\n",
                                          "minimum": 1,
                                          "example": 3
                                        },
                                        "cooldown": {
                                          "type": "integer",
                                          "description": "Time (seconds) to wait after a scaling action before resuming monitoring.\\\nmultiple of 60.\n",
                                          "minimum": 0,
                                          "example": 300
                                        },
                                        "dimensions": {
                                          "type": "array",
                                          "description": "Required if scaling.up.namespace is different from \"Microsoft.Compute\".\\\n2 dimensions are required.\n",
                                          "items": {
                                            "allOf": [
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "name": {
                                                    "type": "string",
                                                    "example": "resourceName"
                                                  },
                                                  "value": {
                                                    "type": "string",
                                                    "example": "testApplicationGateway"
                                                  }
                                                }
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "name": {
                                                    "type": "string",
                                                    "example": "resourceGroupName"
                                                  },
                                                  "value": {
                                                    "type": "string",
                                                    "example": "testResourceGroup"
                                                  }
                                                }
                                              }
                                            ]
                                          },
                                          "example": [
                                            {
                                              "name": "resourceName",
                                              "value": "testApplicationGateway"
                                            },
                                            {
                                              "name": "resourceGroupName",
                                              "value": "testResourceGroup"
                                            }
                                          ]
                                        },
                                        "operator": {
                                          "type": "string",
                                          "description": "The operator used to evaluate the threshold against the current metric value.\\\nValid Values:\n* \"gt\" (Greater Than)\n* \"gte\" (Greater Than or Equal)\n* \"lt\" (Less Than)\n* \"lte\" (Less Than or Equal)\n",
                                          "example": "gte",
                                          "enum": [
                                            "gt",
                                            "gte",
                                            "lt",
                                            "lte"
                                          ]
                                        },
                                        "action": {
                                          "type": "object",
                                          "description": "Scaling action to take when the policy is triggered.\n",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "Type of scaling action to take when the scaling policy is triggered.\n",
                                              "enum": [
                                                "adjustment",
                                                "updateCapacity"
                                              ],
                                              "example": "adjustment"
                                            },
                                            "adjustment": {
                                              "type": "string",
                                              "description": "Value to which the action type will be adjusted.\\\nRequired if using \"adjustment\" action type.\n",
                                              "example": "2"
                                            },
                                            "target": {
                                              "type": "integer",
                                              "description": "Value to update the group target capacity to.\\\nRequired if using “updateCapacity” as action type\\\nand “minimum” and “maximum” are undefined.\n"
                                            },
                                            "minimum": {
                                              "type": "integer",
                                              "description": "Value to update the group mimimum capacity to.\\\nRequired if using “updateCapacity” as action type\\\nand “target” and“maximum” are undefined.\n"
                                            },
                                            "maximum": {
                                              "type": "integer",
                                              "description": "Value to update the group mimimum capacity to.\\\nRequired if using “updateCapacity” as action type\\\nand “target” and “minimum” are undefined.\n"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "allOf": [
                                        {
                                          "$ref": "#/paths/~1azure~1compute~1group~1%7BgroupId%7D/put/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/scaling/properties/up/items/allOf/0"
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "policyName": {
                                              "example": "cpuScaleUp"
                                            },
                                            "threshold": {
                                              "example": 0.75
                                            },
                                            "operator": {
                                              "example": "gte"
                                            },
                                            "action": {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "example": "adjustment",
                                                  "enum": [
                                                    "adjustment",
                                                    "updateCapacity"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  ]
                                }
                              },
                              "down": {
                                "type": "array",
                                "description": "Defines scaling down policy.\n",
                                "items": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1azure~1compute~1group~1%7BgroupId%7D/put/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/scaling/properties/up/items/allOf/0"
                                    },
                                    {
                                      "type": "object",
                                      "allOf": [
                                        {
                                          "$ref": "#/paths/~1azure~1compute~1group~1%7BgroupId%7D/put/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/scaling/properties/up/items/allOf/0"
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "policyName": {
                                              "type": "string",
                                              "example": "cpuScaleDown"
                                            },
                                            "threshold": {
                                              "type": "number",
                                              "example": 0.25
                                            },
                                            "operator": {
                                              "type": "string",
                                              "example": "lte"
                                            },
                                            "action": {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "example": "adjustment",
                                                  "enum": [
                                                    "adjustment",
                                                    "updateCapacity"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "compute": {
                            "type": "object",
                            "title": "Elastigroup Compute Update",
                            "description": "Compute settings for Elastigroup.\n",
                            "properties": {
                              "vmSizes": {
                                "type": "object",
                                "description": "amount of time to be unhealthy before a replacement is triggered\n",
                                "properties": {
                                  "odSizes": {
                                    "type": "array",
                                    "description": "Available On-Demand sizes.\n",
                                    "items": {
                                      "type": "string",
                                      "example": "standard_a1_v1"
                                    }
                                  },
                                  "spotSizes": {
                                    "type": "array",
                                    "description": "Available Spot-VM sizes.\n",
                                    "items": {
                                      "type": "string",
                                      "example": "standard_a2_v2"
                                    }
                                  },
                                  "preferredSpotSizes": {
                                    "type": "array",
                                    "description": "Prioritize Spot VM sizes when launching Spot VMs for the group.\n<a style=color:red>Must be a sublist of compute.vmSizes.spotSizes. </a>\n",
                                    "items": {
                                      "type": "string",
                                      "example": "standard_a2_v2"
                                    }
                                  }
                                }
                              },
                              "launchSpecification": {
                                "type": "object",
                                "properties": {
                                  "vmNamePrefix": {
                                    "type": "string",
                                    "description": "Set a VM name prefix to be used for all launched VMs and the VM resources.\n* The prefix value should comply with the following limitations: \n  *  A maximal length of 25 characters.\n  * The prefix can’t contain spaces, control characters, or these characters: ~ ! @ # $ % ^ & * ( ) = + _ [ ] { } | ; : . ' \" , < > / ?\n  * The VM prefix can't end with a hyphen.\n",
                                    "example": "prefix"
                                  },
                                  "customData": {
                                    "type": "string",
                                    "format": "byte",
                                    "description": "This value will hold the YML in base64 and will be added to the virtual machine.\n",
                                    "example": ""
                                  },
                                  "userData": {
                                    "type": "string",
                                    "description": "Define a set of scripts or other metadata that's inserted to an Azure virtual machine at provision time. (Base64 encoded)\n",
                                    "example": "IyEvYmluL2Jhc2gKZWNobyAidGVzdCI"
                                  },
                                  "image": {
                                    "title": "Image",
                                    "description": "Image of VM. An image is a template for creating new VMs. Choose from Azure image catalogue (marketplace) or use a custom image or chosen from shared gallery image.",
                                    "type": "object",
                                    "properties": {
                                      "marketplace": {
                                        "title": "Marketplace",
                                        "type": "object",
                                        "description": "Select an image from Azure's Marketplace image catalogue. Cannot be used with `custom` or `gallery`. <a style=color:red;>Required if custom or gallery image are not specified.</a>",
                                        "properties": {
                                          "publisher": {
                                            "title": "Publisher",
                                            "description": "Image publisher.  <a style=color:red;>Required if marketplace image is specified.</a>",
                                            "type": "string",
                                            "example": "OpenLogic"
                                          },
                                          "offer": {
                                            "title": "Offer",
                                            "description": "Name of image to use.  <a style=color:red;>Required if marketplace image is specified.</a>",
                                            "type": "string",
                                            "example": "CentOS"
                                          },
                                          "sku": {
                                            "title": "Stock Keeping Unit",
                                            "description": "Image's Stock Keeping Unit, which is the specific version of the image.  <a style=color:red;>Required if marketplace image is specified.</a>",
                                            "type": "string",
                                            "example": "7.3"
                                          },
                                          "version": {
                                            "title": "Version",
                                            "description": "Image's version. if version not provided we use 'latest'",
                                            "type": "string",
                                            "example": "7.3-1611",
                                            "default": "latest"
                                          }
                                        }
                                      },
                                      "custom": {
                                        "title": "Custom",
                                        "type": "object",
                                        "description": "Custom image to launch Elastigroup with. Cannot be used with `marketplace` or `gallery`. <a style=color:red;>Required if marketplace or gallery image are not specified.</a>",
                                        "properties": {
                                          "resourceGroupName": {
                                            "title": "Resource Group Name",
                                            "description": "Name of Resource Group for custom image.  <a style=color:red;>Required if custom image is specified.</a>",
                                            "type": "string",
                                            "example": "spotinst-azure"
                                          },
                                          "name": {
                                            "title": "Image Name",
                                            "description": "Name of the custom image.  <a style=color:red;>Required if custom image is specified.</a>",
                                            "type": "string",
                                            "example": "custom-image-name"
                                          }
                                        }
                                      },
                                      "gallery": {
                                        "title": "Gallery",
                                        "type": "object",
                                        "description": "Gallery image to launch Elastigroup with. Cannot be used with `marketplace` or `custom`. <a style=color:red;>Required if marketplace or custom image are not specified.</a>",
                                        "properties": {
                                          "resourceGroupName": {
                                            "title": "Resource Group Name",
                                            "description": "Name of Resource Group for custom image.  <a style=color:red;>Required if gallery image is specified.</a>",
                                            "type": "string",
                                            "example": "spotinst-azure"
                                          },
                                          "galleryName": {
                                            "title": "Gallery Name",
                                            "description": "Name of the gallery.  <a style=color:red;>Required if gallery image is specified.</a>",
                                            "type": "string",
                                            "example": "gallery-name"
                                          },
                                          "imageName": {
                                            "title": "Image Name",
                                            "description": "Name of the gallery image.  <a style=color:red;>Required if gallery image is specified.</a>",
                                            "type": "string",
                                            "example": "gallery-image-name"
                                          },
                                          "version": {
                                            "title": "Version",
                                            "description": "Image's version. Can be in the format x.x.x or 'latest'. <a style=color:red;>Required if gallery image is specified.</a>",
                                            "type": "string",
                                            "example": "0.0.1"
                                          },
                                          "spotAccountId": {
                                            "title": "Spot Account ID",
                                            "description": "The Spot account ID that connected to the Azure subscription to which the gallery belongs. Relevant only in case of cross-subscription shared galleries. [Read more](https://docs.spot.io/elastigroup/features-azure/shared-image-galleries) about cross-subscription shared galleries in Elastigroup.",
                                            "type": "string",
                                            "example": "act-123456789"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "network": {
                                    "title": "Network",
                                    "description": "Define the Virtual Network and Subnet for your Elastigroup.",
                                    "type": "object",
                                    "required": [
                                      "resourceGroupName",
                                      "virtualNetworkName",
                                      "networkInterfaces"
                                    ],
                                    "properties": {
                                      "resourceGroupName": {
                                        "title": "Resource Group Name",
                                        "description": "Vnet Resource Group Name",
                                        "type": "string",
                                        "example": "subnetResourceGroup"
                                      },
                                      "virtualNetworkName": {
                                        "title": "Virtual Network Name",
                                        "description": "Virtual Network",
                                        "type": "string",
                                        "example": "vname"
                                      },
                                      "networkInterfaces": {
                                        "title": "Virtual Network Name",
                                        "description": "Virtual Network",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "isPrimary",
                                            "subnetName"
                                          ],
                                          "properties": {
                                            "isPrimary": {
                                              "title": "Is Primary Criteria",
                                              "description": "Defines whether the network interface is primary or not.",
                                              "type": "boolean",
                                              "example": true
                                            },
                                            "subnetName": {
                                              "title": "Subnet Name",
                                              "description": "Subnet name",
                                              "type": "string",
                                              "example": "testSubnet"
                                            },
                                            "assignPublicIp": {
                                              "title": "Assign Public IP",
                                              "description": "Assign public IP",
                                              "type": "boolean",
                                              "example": true
                                            },
                                            "publicIpSku": {
                                              "title": "Type of Public Ip",
                                              "description": "Required if assignPublicIp=true values=[STANDARD/BASIC]",
                                              "type": "string",
                                              "example": "STANDARD"
                                            },
                                            "securityGroup": {
                                              "title": "Security Group",
                                              "description": "Security Group",
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "title": "Name",
                                                  "description": "Requires valid security group name. Required if security group is specified.",
                                                  "type": "string",
                                                  "example": "test"
                                                },
                                                "resourceGroupName": {
                                                  "title": "Resource Group Name",
                                                  "description": "Requires valid resource group name. Required if security group is specified.",
                                                  "type": "string",
                                                  "example": "test"
                                                }
                                              }
                                            },
                                            "publicIps": {
                                              "description": "Defined a pool of Public Ips (from Azure), that will be associated to the network interface. We will associate one public ip per instance until the pool is exhausted, in which case, we will create a new one.",
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "resourceGroupName",
                                                  "name"
                                                ],
                                                "properties": {
                                                  "resourceGroupName": {
                                                    "description": "The resource group of the public ip.",
                                                    "type": "string",
                                                    "example": "resourceGroup"
                                                  },
                                                  "name": {
                                                    "description": "The name of the public ip.",
                                                    "type": "string",
                                                    "example": "name"
                                                  }
                                                }
                                              }
                                            },
                                            "enableIPForwarding": {
                                              "title": "Enable IP Forwarding",
                                              "description": "Enable IP Forwarding",
                                              "type": "boolean",
                                              "example": true
                                            },
                                            "additionalIpConfigurations": {
                                              "title": "Additional IP Configurations",
                                              "description": "Additional configuration of network interface",
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "name": {
                                                    "title": "Name",
                                                    "description": "Required if additionalConfiguration has been specified.",
                                                    "type": "string",
                                                    "example": "test"
                                                  },
                                                  "privateIpAddressVersion": {
                                                    "title": "Private IP Address Version",
                                                    "description": "Possible values:\n+ IPv4\n+ IPv6",
                                                    "default": "IPv4"
                                                  }
                                                }
                                              }
                                            },
                                            "applicationSecurityGroups": {
                                              "description": "List of Application Security Groups that will be associated to the primary ip configration of the network interface.",
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "resourceGroupName",
                                                  "name"
                                                ],
                                                "properties": {
                                                  "resourceGroupName": {
                                                    "description": "The resource group of the Application Security Group.",
                                                    "type": "string",
                                                    "example": "AsgResourceGroup"
                                                  },
                                                  "name": {
                                                    "description": "The name of the Application Security group",
                                                    "type": "string",
                                                    "example": "AsgName"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "login": {
                                    "type": "object",
                                    "description": "Set admin access for accessing your VMs. Password/SSH is required for Linux. <a style=color:red;>Required null if specialized image is set.</a>",
                                    "properties": {
                                      "userName": {
                                        "type": "string",
                                        "description": "user name for admin access to VMs.\\\nLogin can be set:\n* for windows: compute.launchSpecification.login.password\n* for linux: compute.launchSpecification.login.sshPublicKey\n\nJust user name, without pwd or SSH key\n",
                                        "example": "spotinst"
                                      },
                                      "sshPublicKey": {
                                        "type": "string",
                                        "description": "SSH for admin access to Linux VMs.\\\nOptional for Linux.\n",
                                        "example": "ssh-rsa"
                                      },
                                      "password": {
                                        "type": "string",
                                        "writeOnly": true,
                                        "description": "Password for admin access to Windows VMs.\\\nRequired for Windows.\n"
                                      }
                                    }
                                  },
                                  "loadBalancersConfig": {
                                    "type": "object",
                                    "description": "Configure a Load Balancer.\n",
                                    "properties": {
                                      "loadBalancers": {
                                        "type": "array",
                                        "description": "Add a load balancer. For Azure Gateway, each Backend Pool is a separate load balancer.\n",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "The type of load balancer.\n",
                                              "enum": [
                                                "loadBalancer",
                                                "applicationGateway"
                                              ],
                                              "example": "loadBalancer"
                                            },
                                            "resourceGroupName": {
                                              "type": "string",
                                              "description": "The Resource Group name of the Load Balancer.\n",
                                              "example": "testResourceGroup"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the Application Gateway/Load Balancer\n",
                                              "example": "testLoadBalancer"
                                            },
                                            "sku": {
                                              "type": "string",
                                              "description": "*if type is LoadBalancer then possible values are “Standard/Basic”;\n*if ApplicationGateway then possible values are “Standard_Large”,“Standard_Medium”,“Standard_Small”,“Standard_v2”,“WAF_Large”,“WAF_Medium”,“WAF_v2\"\n",
                                              "example": "Standard"
                                            },
                                            "backendPoolNames": {
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              },
                                              "description": "Name of the Backend Pool to register the Elastigroup VMs to. Each Backend Pool is a separate load balancer.\\\nRequired if Type is APPLICATION_GATEWAY.\n",
                                              "example": [
                                                "testBackendPool1",
                                                "testBackendPool2"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "managedServiceIdentities": {
                                    "type": "array",
                                    "writeOnly": true,
                                    "description": "Add a user-assigned managed identity to the VMs in the cluster.\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "name of the managed identity\n",
                                          "example": "mySI2"
                                        },
                                        "resourceGroupName": {
                                          "type": "string",
                                          "description": "The Resource Group that the user-assigned managed identity resides in.\n",
                                          "example": "myResourceGroup"
                                        }
                                      }
                                    }
                                  },
                                  "shutdownScript": {
                                    "type": "string",
                                    "format": "byte",
                                    "writeOnly": true,
                                    "example": "IyEvdXNyL2Jpbi9lbnYgYmFzaAoiR29vZGJ5ZSBvbGQgaW5zdGFuY2Ui",
                                    "description": "shutdown script for the group. Value should be passed as a string encoded at Base64 only\n"
                                  },
                                  "tags": {
                                    "type": "array",
                                    "description": "Key-Value pairs for VMs in the Elastigroup.\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "tagKey": {
                                          "type": "string",
                                          "description": "Tag Key for Vms in Elastigroup.\n",
                                          "example": "env"
                                        },
                                        "tagValue": {
                                          "type": "string",
                                          "description": "Tag Value for VMs in Elastigroup.\n",
                                          "example": "staging"
                                        }
                                      }
                                    }
                                  },
                                  "extensions": {
                                    "type": "array",
                                    "description": "List of objects for azure extensions\n",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "type",
                                        "publisher",
                                        "apiVersion",
                                        "minorVersionAutoUpgrade"
                                      ],
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "Required on compute.launchSpecification.extensions object\n",
                                          "example": "extensionName"
                                        },
                                        "type": {
                                          "type": "string",
                                          "description": "Required on compute.launchSpecification.extensions object\n",
                                          "example": "customScript"
                                        },
                                        "publisher": {
                                          "type": "string",
                                          "description": "Required on compute.launchSpecification.extensions object\n",
                                          "example": "Microsoft.Azure.Extensions"
                                        },
                                        "apiVersion": {
                                          "type": "string",
                                          "description": "The API version of the extension. Required if extension specified.\n",
                                          "example": "2.0"
                                        },
                                        "minorVersionAutoUpgrade": {
                                          "type": "boolean",
                                          "description": "Required on compute.launchSpecification.extensions object\n",
                                          "example": true
                                        },
                                        "publicSettings": {
                                          "type": "object",
                                          "description": "Object for public settings\n"
                                        },
                                        "protectedSettings": {
                                          "type": "object",
                                          "description": "Object for protected settings\n"
                                        },
                                        "enableAutomaticUpgrade": {
                                          "title": "enable automatic upgrade",
                                          "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available.\n",
                                          "type": "boolean",
                                          "example": false
                                        },
                                        "protectedSettingsFromKeyVault": {
                                          "title": "Protected Settings from key vault",
                                          "description": "The extensions protected settings that are passed by reference, and consumed from key vault.\n",
                                          "type": "object",
                                          "required": [
                                            "sourceVault",
                                            "secretUrl"
                                          ],
                                          "properties": {
                                            "sourceVault": {
                                              "title": "sourceVault",
                                              "type": "string",
                                              "description": "The relative URL of the Key Vault containing the secret.\n",
                                              "example": "/subscriptions/1234-1234-1234/resourceGroups/rg_test/providers/Microsoft.KeyVault/vaults/testKeyVault"
                                            },
                                            "secretUrl": {
                                              "title": "secretUrl",
                                              "type": "string",
                                              "description": "The URL referencing a secret in a Key Vault.\n",
                                              "example": "https://testKeyVault.vault.azure.net/secrets/SecretTest/123456"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "dataDisks": {
                                    "type": "array",
                                    "description": "list of data disks to be attached to the vms in the group.\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "sizeGB": {
                                          "type": "integer",
                                          "description": "The size of the data disk in GB, Required if dataDisks is specified.\n",
                                          "minimum": 1,
                                          "maximum": 1023,
                                          "example": 1
                                        },
                                        "lun": {
                                          "type": "integer",
                                          "description": "The lun of the data disk, Required if dataDisks is specified.\n",
                                          "example": 1
                                        },
                                        "type": {
                                          "type": "string",
                                          "description": "The type of the data disk\n",
                                          "enum": [
                                            "Standard_LRS",
                                            "Premium_LRS",
                                            "StandardSSD_LRS",
                                            "StandardSSD_ZRS",
                                            "Premium_ZRS"
                                          ],
                                          "example": "Standard_LRS"
                                        }
                                      }
                                    }
                                  },
                                  "osDisk": {
                                    "type": "object",
                                    "description": "Specify OS disk specification other than default.\n",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "The type of the OS disk.\n",
                                        "enum": [
                                          "Standard_LRS",
                                          "Premium_LRS",
                                          "StandardSSD_LRS",
                                          "StandardSSD_ZRS",
                                          "Premium_ZRS"
                                        ],
                                        "example": "Standard_LRS"
                                      },
                                      "sizeGB": {
                                        "type": "integer",
                                        "description": "The size of the data disk in GB, Required if dataDisks is specified.\n",
                                        "minimum": 1,
                                        "maximum": 1023,
                                        "example": 30
                                      }
                                    }
                                  },
                                  "bootDiagnostics": {
                                    "type": "object",
                                    "description": "Will enable boot diagnostics in Azure when a new VM is launched",
                                    "required": [
                                      "isEnabled",
                                      "type"
                                    ],
                                    "properties": {
                                      "isEnabled": {
                                        "type": "boolean",
                                        "description": "Allows you to enable and disable the configuration of boot diagnostics at launch"
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "Defines the type of storage on VM launch  in Azure.",
                                        "enum": [
                                          "managed",
                                          "unmanaged"
                                        ]
                                      },
                                      "storageUri": {
                                        "type": "string",
                                        "description": "The storage URI that is used if type is unmanaged. The storage URI must follow the blob storage URI format (\"https://<blobstoragename>.blob.core.windows.net/\"). StorageUri is required if the type is unmanaged. StorageUri must be ‘null’ in case the boot diagnostics type is managed"
                                      }
                                    },
                                    "example": {
                                      "isEnabled": true,
                                      "type": "unmanaged",
                                      "storageUri": "https://example.blob.core.windows.net/"
                                    }
                                  },
                                  "secrets": {
                                    "title": "secrets",
                                    "type": "array",
                                    "description": "Set of certificates that should be installed the VM\n",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "sourceVault",
                                        "vaultCertificates"
                                      ],
                                      "properties": {
                                        "sourceVault": {
                                          "type": "object",
                                          "description": "The key vault reference, contains the required certificates\n",
                                          "required": [
                                            "resourceGroupName",
                                            "name"
                                          ],
                                          "properties": {
                                            "resourceGroupName": {
                                              "type": "string",
                                              "description": "The resource group name of the key vault\n"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "The name of the key vault\n"
                                            }
                                          }
                                        },
                                        "vaultCertificates": {
                                          "type": "array",
                                          "description": "The required certificate references\n",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "certificateUrl",
                                              "certificateStore"
                                            ],
                                            "properties": {
                                              "certificateUrl": {
                                                "type": "string",
                                                "description": "The URL of the certificate under the key vault\n"
                                              },
                                              "certificateStore": {
                                                "type": "string",
                                                "description": "The certificate store directory the VM. The directory is created in the LocalMachine account.\n* This field is required only when using windows OS type\n* This field must be ‘null’ when the OS type is Linux\n"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "security": {
                                    "type": "object",
                                    "description": "Specifies the Security related profile settings for the virtual machine.\n",
                                    "properties": {
                                      "securityType": {
                                        "type": "string",
                                        "description": "Security type refers to the different security features of a virtual machine.\nSecurity features like Trusted launch virtual machines help to improve the security of Azure generation 2 virtual machines.\n",
                                        "enum": [
                                          "Standard",
                                          "TrustedLaunch"
                                        ],
                                        "example": "TrustedLaunch"
                                      },
                                      "secureBootEnabled": {
                                        "type": "boolean",
                                        "description": "Specifies whether secure boot should be enabled on the virtual machine.\n",
                                        "example": true
                                      },
                                      "vTpmEnabled": {
                                        "type": "boolean",
                                        "description": "Specifies whether vTPM should be enabled on the virtual machine.\n",
                                        "example": true
                                      }
                                    }
                                  },
                                  "proximityPlacementGroups": {
                                    "type": "array",
                                    "description": "Defines the proximity placement group in which the VM will be launched.",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "resourceGroupName"
                                      ],
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the proximity placement group.",
                                          "example": "testPPG"
                                        },
                                        "resourceGroupName": {
                                          "type": "string",
                                          "description": "The resource group name of the proximity placement group.",
                                          "example": "testResourceGroup"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "zones": {
                                "type": "array",
                                "description": "List of Azure Availability Zones in the defined region; If not defined, Virtual machines will be launched regionally.",
                                "items": {
                                  "enum": [
                                    "1",
                                    "2",
                                    "3"
                                  ],
                                  "type": "string",
                                  "example": "1"
                                }
                              },
                              "preferredZones": {
                                "type": "array",
                                "description": "The AZs to prioritize when launching VMs. If no markets are available in the Preferred AZs, VMs are launched in the non-preferred AZs.\n<a style=color:red>Must be a sublist of compute.zones. </a>\n",
                                "items": {
                                  "enum": [
                                    "1",
                                    "2",
                                    "3"
                                  ],
                                  "type": "string",
                                  "example": "1"
                                }
                              }
                            }
                          },
                          "health": {
                            "type": "object",
                            "title": "Elastigroup Health",
                            "description": "Set health check and auto-healing of unhealthy VMs.\n",
                            "properties": {
                              "healthCheckTypes": {
                                "description": "Health check types to use in order to validate VM health.\n",
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "vmState",
                                    "applicationGateway"
                                  ]
                                },
                                "example": [
                                  "vmState"
                                ]
                              },
                              "gracePeriod": {
                                "type": "integer",
                                "description": "The amount of time (in seconds) after a new VM has launched before terminating the old VM.\n",
                                "example": 120
                              },
                              "autoHealing": {
                                "type": "boolean",
                                "example": true,
                                "description": "Enable auto-healing of unhealthy VMs.\n"
                              },
                              "unhealthyDuration": {
                                "type": "integer",
                                "description": "Amount of time (in seconds) for the VM to remain unhealthy before a replacement is triggered.\n",
                                "example": 360
                              }
                            }
                          },
                          "scheduling": {
                            "type": "object",
                            "title": "Stateless Group Scheduling",
                            "description": "Define cron-based scheduled tasks.\n",
                            "properties": {
                              "tasks": {
                                "type": "array",
                                "description": "A list of scheduling tasks.\nNote: The type of each task defines the behavior of the cron execution.\n",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "title": "Scaling Scheduled Task",
                                      "description": "This is a scheduled task that will allow to change the group's capacty. If the target\nis changed, then VMs will either be scaled up or down.\nNote: At least one of the following must be configured: [scaleTargetCapacity, scaleMaxCapacity, scaleMinCapacity]\n",
                                      "required": [
                                        "type",
                                        "isEnabled",
                                        "cronExpression"
                                      ],
                                      "properties": {
                                        "isEnabled": {
                                          "type": "string",
                                          "description": "A list of scheduling tasks.\n"
                                        },
                                        "cronExpression": {
                                          "type": "string",
                                          "description": "A valid cron expression.\nThe cron is running in UTC time zone and is in Unix cron format of Cron Expression Validator Script.\n",
                                          "example": "0 1 * * *"
                                        },
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "scale"
                                          ],
                                          "description": "Define cron-based scheduled tasks.\n"
                                        },
                                        "scaleTargetCapacity": {
                                          "type": "integer",
                                          "description": "This will set the defined target group capacity when the scheduling task is triggered.\n",
                                          "minimum": 0
                                        },
                                        "scaleMaxCapacity": {
                                          "type": "integer",
                                          "description": "This will set the defined maximum group capacity when the scheduling task is triggered.\n",
                                          "minimum": 0
                                        },
                                        "scaleMinCapacity": {
                                          "type": "integer",
                                          "description": "This will set the defined maximum group capacity when the scheduling task is triggered.\n",
                                          "minimum": 0
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "title": "Scale Up Scheduled Task",
                                      "description": "This is a scheduled task that will allow to add VMs to the group's target capacity by a specific count.\n",
                                      "required": [
                                        "adjustment",
                                        "type",
                                        "isEnabled",
                                        "cronExpression"
                                      ],
                                      "properties": {
                                        "isEnabled": {
                                          "type": "string",
                                          "description": "A list of scheduling tasks.\n"
                                        },
                                        "cronExpression": {
                                          "type": "string",
                                          "description": "A valid cron expression.\nThe cron is running in UTC time zone and is in Unix cron format of Cron Expression Validator Script.\n",
                                          "example": "0 1 * * *"
                                        },
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "scaleUp"
                                          ],
                                          "description": "Defines the type of the scheduled task.\n"
                                        },
                                        "adjustment": {
                                          "type": "integer",
                                          "description": "This will increase the target capacity by the defined amount when the scheduling task is triggered.\n",
                                          "minimum": 1,
                                          "example": 1
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "title": "Scale Down Scheduled Task",
                                      "description": "This is a scheduled task that will allow to remove VMs from the group's target capacity by a specific count.\n",
                                      "required": [
                                        "adjustment",
                                        "type",
                                        "isEnabled",
                                        "cronExpression"
                                      ],
                                      "properties": {
                                        "isEnabled": {
                                          "type": "string",
                                          "description": "A list of scheduling tasks.\n"
                                        },
                                        "cronExpression": {
                                          "type": "string",
                                          "description": "A valid cron expression.\nThe cron is running in UTC time zone and is in Unix cron format of Cron Expression Validator Script.\n",
                                          "example": "0 1 * * *"
                                        },
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "scaleDown"
                                          ],
                                          "description": "Defines the type of the scheduled task.\n"
                                        },
                                        "adjustment": {
                                          "type": "integer",
                                          "description": "This will decrease the target capacity by the defined amount when the scheduling task is triggered.\n",
                                          "minimum": 1,
                                          "example": 1
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "title": "Scale Up Percentage Scheduled Task",
                                      "description": "This is a scheduled task that will allow to add VMs to the group's target capacity by a percentage of the group's current target.\n",
                                      "required": [
                                        "type",
                                        "isEnabled",
                                        "cronExpression",
                                        "adjustmentPercentage"
                                      ],
                                      "properties": {
                                        "isEnabled": {
                                          "type": "string",
                                          "description": "A list of scheduling tasks.\n"
                                        },
                                        "cronExpression": {
                                          "type": "string",
                                          "description": "A valid cron expression.\nThe cron is running in UTC time zone and is in Unix cron format of Cron Expression Validator Script.\n",
                                          "example": "0 1 * * *"
                                        },
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "scaleUpPercentage"
                                          ],
                                          "description": "Defines the type of the scheduled task.\n"
                                        },
                                        "adjustmentPercentage": {
                                          "type": "integer",
                                          "description": "This will increase the target capacity by the defined percentage value when the scheduling task is triggered.\nThis will set the target capacity by the defined percentage of the current target when the scheduling task triggers.\n",
                                          "minimum": 1,
                                          "maximum": 100
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "title": "Scale Down Percentage Scheduled Task",
                                      "description": "This is a scheduled task that will allow to remove VMs from the group's target capacity by a percentage of the group's current target.\n",
                                      "required": [
                                        "adjustmentPercentage",
                                        "type",
                                        "isEnabled",
                                        "cronExpression"
                                      ],
                                      "properties": {
                                        "isEnabled": {
                                          "type": "string",
                                          "description": "A list of scheduling tasks.\n"
                                        },
                                        "cronExpression": {
                                          "type": "string",
                                          "description": "A valid cron expression.\nThe cron is running in UTC time zone and is in Unix cron format of Cron Expression Validator Script.\n",
                                          "example": "0 1 * * *"
                                        },
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "percentageScaleDown"
                                          ],
                                          "description": "Defines the type of the scheduled task.\n"
                                        },
                                        "adjustmentPercentage": {
                                          "type": "integer",
                                          "description": "This will decrease the target capacity by the defined percentage value when the scheduling task is triggered.\n",
                                          "minimum": 1,
                                          "maximum": 100
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "title": "Deployment Scheduled Task",
                                      "description": "This is a scheduled task that will allow the deployment of an Elastigroup.\n",
                                      "required": [
                                        "batchSizePercentage",
                                        "gracePeriod",
                                        "type",
                                        "isEnabled",
                                        "cronExpression"
                                      ],
                                      "properties": {
                                        "isEnabled": {
                                          "type": "string",
                                          "description": "A list of scheduling tasks.\n"
                                        },
                                        "cronExpression": {
                                          "type": "string",
                                          "description": "A valid cron expression.\nThe cron is running in UTC time zone and is in Unix cron format of Cron Expression Validator Script.\n",
                                          "example": "0 1 * * *"
                                        },
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "deployment"
                                          ],
                                          "description": "Defines the type of the scheduled task.\n"
                                        },
                                        "batchSizePercentage": {
                                          "type": "integer",
                                          "description": "Indicates the timeout (in seconds) to wait until the VM becomes healthy, based on the healthCheckType.\n",
                                          "minimum": 1,
                                          "maximum": 100
                                        },
                                        "gracePeriod": {
                                          "type": "integer",
                                          "description": "Indicates (in seconds) the timeout to wait until instance become healthy based on the healthCheckType.\n",
                                          "minimum": 1
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2018-10-10T10:50:29.000+0000"
                          },
                          "updatedAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2018-11-01T10:50:29.000+0000"
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "group": {
                        "type": "object"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/group/sig-12345"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1azure~1compute~1group/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:compute:group"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get Elastigroup",
        "description": "List an Elastigroup cluster.\n",
        "operationId": "elastigroupAzureSpotVmsGetGroup",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/group/sig-12345"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1azure~1compute~1group/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:compute:group"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Elastigroup",
        "description": "Delete an Elastigroup cluster.\n",
        "operationId": "elastigroupAzureSpotVmsDelete",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/group/sig-12345"
                            },
                            "method": {
                              "example": "DELETE"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/{groupId}/capacity": {
      "put": {
        "summary": "Update Capacity",
        "description": "Update the capacity of an Elastigroup",
        "operationId": "elastigroupAzureSpotUpdateCapacity",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Elastigroup Capacity",
                    "description": "Capacity of Elastigroup.\n",
                    "properties": {
                      "capacity": {
                        "type": "object",
                        "title": "Capacity",
                        "description": "Capacity of Elastigroup.\n",
                        "properties": {
                          "target": {
                            "type": "integer",
                            "description": "Desired number of VMs for Elastigroup to maintain.\n",
                            "example": 8,
                            "minimum": 0
                          },
                          "minimum": {
                            "type": "integer",
                            "example": 2,
                            "description": "Minimum number of VMs.\n",
                            "minimum": 0
                          },
                          "maximum": {
                            "type": "integer",
                            "example": 10,
                            "description": "Maximum number of VMs.\n",
                            "minimum": 0
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "items": {
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/paths/~1azure~1compute~1group~1%7BgroupId%7D~1capacity/put/requestBody/content/application~1json/schema/allOf/0"
                                  }
                                },
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:azure:compute:group:capacity"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group": {
      "post": {
        "summary": "Create Elastigroup",
        "description": "Create a new Elastigroup cluster.",
        "operationId": "elastigroupAzureSpotVmsCreate",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Create Elastigroup Azure Spot VMs Body",
                    "required": [
                      "group",
                      "name",
                      "region",
                      "capacity",
                      "strategy",
                      "compute"
                    ],
                    "properties": {
                      "group": {
                        "type": "object",
                        "required": [
                          "name",
                          "region",
                          "capacity",
                          "resourceGroupName",
                          "strategy",
                          "compute"
                        ],
                        "title": "Azure Elastigroup",
                        "description": "Azure Elastigroup Configuration",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "sig-123456789",
                            "readOnly": true,
                            "description": "Azure Elastigroup ID\n"
                          },
                          "name": {
                            "type": "string",
                            "example": "spotinst-group",
                            "description": "Azure Elastigroup Name\n"
                          },
                          "description": {
                            "type": "string",
                            "example": "This is my example elastigroup",
                            "description": "Describe your Azure Elastigroup\n"
                          },
                          "region": {
                            "type": "string",
                            "example": "eastus",
                            "description": "Valid Azure region the Elastigroup is managed in\n"
                          },
                          "resourceGroupName": {
                            "type": "string",
                            "example": "spotinst-azure",
                            "description": "The Azure resource group to associate the Elastigroup with\n"
                          },
                          "capacity": {
                            "type": "object",
                            "description": "Capacity of Elastigroup",
                            "required": [
                              "target",
                              "minimum",
                              "maximum"
                            ],
                            "properties": {
                              "target": {
                                "type": "integer",
                                "example": 8,
                                "description": "Current scale the Elastigroup will conform to"
                              },
                              "minimum": {
                                "type": "integer",
                                "example": 2,
                                "description": "The Elastigroup will not set a target below this value\n"
                              },
                              "maximum": {
                                "type": "integer",
                                "example": 10,
                                "description": "The Elastigroup will not set a target greater than this value\n"
                              }
                            }
                          },
                          "scaling": {
                            "type": "object",
                            "description": "Scaling Policies for Elastigroup. Set as many policies as needed to maximize the Elastigroup’s efficiency.",
                            "title": "Azure Scaling",
                            "properties": {
                              "up": {
                                "type": "object",
                                "title": "Scale Up Policies",
                                "description": "Provide the ability to accommodate increased workloads.",
                                "required": [
                                  "policyName",
                                  "metricName",
                                  "statistic",
                                  "threshold",
                                  "period",
                                  "evaluationPeriods",
                                  "cooldown",
                                  "action",
                                  "operator",
                                  "namespace"
                                ],
                                "properties": {
                                  "policyName": {
                                    "title": "Policy Name",
                                    "description": "Name of scaling policy",
                                    "type": "string",
                                    "example": "cpuScale"
                                  },
                                  "metricName": {
                                    "title": "Metric Name",
                                    "description": "Metric to monitor by Azure metric display name",
                                    "type": "string",
                                    "example": "Percentage CPU"
                                  },
                                  "statistic": {
                                    "title": "Statistics",
                                    "description": "Statistic by which to evaluate the selected metric.",
                                    "type": "string",
                                    "example": "average",
                                    "enum": [
                                      "average",
                                      "sampleCount",
                                      "sum",
                                      "minimum",
                                      "maximum"
                                    ]
                                  },
                                  "unit": {
                                    "title": "Unit",
                                    "description": "Unit to measure to evaluate the selected metric:  Valid Values:\n+ Count\n+ Bytes\n+ Percent\n+ CountPerSecond\n+ Milliseconds\n+ BytesPerSecond\n+ Seconds",
                                    "type": "string",
                                    "example": "Count"
                                  },
                                  "threshold": {
                                    "title": "Threshold",
                                    "description": "The value at which the scaling action is triggered.",
                                    "type": "number",
                                    "format": "float",
                                    "example": 0.75
                                  },
                                  "period": {
                                    "title": "Period",
                                    "description": "Amount of time (seconds) for which the threshold must be met in order to trigger the scaling action.",
                                    "type": "integer",
                                    "example": 60
                                  },
                                  "evaluationPeriods": {
                                    "title": "Evaluation Periods",
                                    "description": "Amount of time (seconds) for which the threshold must be met in order to trigger the scaling action.",
                                    "type": "integer",
                                    "example": 3
                                  },
                                  "cooldown": {
                                    "title": "Cooldown",
                                    "description": "Time (seconds) to wait after a scaling action before resuming monitoring.",
                                    "type": "integer",
                                    "example": 300
                                  },
                                  "namespace": {
                                    "title": "namespace",
                                    "description": "Select one of the next namespaces presented in Azure configurator - https://docs.microsoft.com/en-us/azure/templates/",
                                    "type": "string",
                                    "example": "Microsoft.Network/applicationGateways",
                                    "default": "Microsoft.Compute"
                                  },
                                  "operator": {
                                    "title": "Operator",
                                    "description": "The operator used to evaluate the threshold against the current metric value.\n+ gt (Greater Than)\n+ gte (Greater Than or Equal)\n+ lt (Less Than)\n+ lte (Less Than or Equal) ",
                                    "type": "string",
                                    "example": "gte",
                                    "enum": [
                                      "gt",
                                      "gte",
                                      "lt",
                                      "lte"
                                    ]
                                  },
                                  "dimenstions": {
                                    "title": "Dimenstions",
                                    "description": "Required if scaling.up.namespace is different from 'Microsoft.Compute'. 2 dimensions are required, example: “dimensions”:  [  {  “key” : “resourceGroupName”,  “value” : “testResourceGroup”  }  {  “key” : “resourceName”,  “value” : “testApplicationGateway”  }  ]",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "title": "Key",
                                          "description": "Azure resource group for the scaling.down.dimensions. Required if using namespace different from \"Microsoft.Compute\".",
                                          "type": "string",
                                          "example": "resourceGroupName"
                                        },
                                        "value": {
                                          "title": "Value",
                                          "description": "Azure resource the scaling.down.dimensions. Required if using namespace different from \"Microsoft.Compute\".",
                                          "type": "string",
                                          "example": "TestAppGateway"
                                        }
                                      }
                                    }
                                  },
                                  "action": {
                                    "title": "Action",
                                    "description": "Scaling action to take when the policy is triggered.",
                                    "type": "object",
                                    "required": [
                                      "type"
                                    ],
                                    "properties": {
                                      "type": {
                                        "title": "Type",
                                        "description": "Type of scaling action to take when the scaling policy is triggered. </br> Valid Values:\n+ adjustment\n+ setMinTarget<\n+ updateCapacity\n+ percentageAdjustment",
                                        "type": "string",
                                        "example": "adjustment"
                                      },
                                      "adjustment": {
                                        "title": "Adjustment",
                                        "description": "Value to which the action type will be adjusted. Required if using the next action types:\n+ numeric\n+ percentageAdjustment",
                                        "type": "string",
                                        "example": "2"
                                      },
                                      "target": {
                                        "title": "Target",
                                        "description": "Value to update the group target capacity to. Also you must indicate “minimum” and “maximum” amounts. Required if selected as action type:\n+ updateCapacity",
                                        "type": "integer",
                                        "example": 23
                                      },
                                      "minimum": {
                                        "title": "Target",
                                        "description": "Value to update the group minimum capacity to. Also you must indicate “target” and “maximum” amounts. Required if selected as action type:\n+ updateCapacity",
                                        "type": "integer",
                                        "example": 20
                                      },
                                      "maximum": {
                                        "title": "Target",
                                        "description": "Value to update the group mimimum capacity to. Also you must indicate “target” and “minimum” amounts. Required if selected as action type: + updateCapacity",
                                        "type": "integer",
                                        "example": 25
                                      }
                                    }
                                  }
                                }
                              },
                              "down": {
                                "type": "object",
                                "title": "Scale Down Policies",
                                "description": "Provide the ability to scale down to maximize cost efficiency.",
                                "required": [
                                  "policyName",
                                  "metricName",
                                  "statistic",
                                  "threshold",
                                  "period",
                                  "evaluationPeriods",
                                  "cooldown",
                                  "action",
                                  "operator",
                                  "namespace"
                                ],
                                "properties": {
                                  "policyName": {
                                    "title": "Policy Name",
                                    "description": "Name of scaling policy",
                                    "type": "string",
                                    "example": "cpuScale"
                                  },
                                  "metricName": {
                                    "title": "Metric Name",
                                    "description": "Metric to monitor by Azure metric display name",
                                    "type": "string",
                                    "example": "Percentage CPU"
                                  },
                                  "statistic": {
                                    "title": "Statistics",
                                    "description": "Statistic by which to evaluate the selected metric.",
                                    "type": "string",
                                    "example": "average",
                                    "enum": [
                                      "average",
                                      "sampleCount",
                                      "sum",
                                      "minimum",
                                      "maximum"
                                    ]
                                  },
                                  "unit": {
                                    "title": "Unit",
                                    "description": "Unit to measure to evaluate the selected metric:  Valid Values:\n+ Count\n+ Bytes\n+ Percent<\n+ CountPerSecond\n+ Milliseconds\n+ BytesPerSecond\n+ Seconds",
                                    "type": "string",
                                    "example": "Count"
                                  },
                                  "threshold": {
                                    "title": "Threshold",
                                    "description": "The value at which the scaling action is triggered.",
                                    "type": "number",
                                    "format": "float",
                                    "example": 0.75
                                  },
                                  "period": {
                                    "title": "Period",
                                    "description": "Amount of time (seconds) for which the threshold must be met in order to trigger the scaling action.",
                                    "type": "integer",
                                    "example": 60
                                  },
                                  "evaluationPeriods": {
                                    "title": "Evaluation Periods",
                                    "description": "Number of consecutive periods in which the threshold must be met in order to trigger the scaling action.",
                                    "type": "integer",
                                    "example": 3
                                  },
                                  "cooldown": {
                                    "title": "Cooldown",
                                    "description": "Time (seconds) to wait after a scaling action before resuming monitoring.",
                                    "type": "integer",
                                    "example": 300
                                  },
                                  "namespace": {
                                    "title": "Namespace",
                                    "description": "Select one of the next namespaces presented in Azure configurator - https://docs.microsoft.com/en-us/azure/templates/",
                                    "type": "string",
                                    "example": "Microsoft.Network/applicationGateways"
                                  },
                                  "operator": {
                                    "title": "Operator",
                                    "description": "The operator used to evaluate the threshold against the current metric value.\n+ gt (Greater Than)\n+ gte (Greater Than or Equal)\n+ lt (Less Than)\n+ lte (Less Than or Equal) ",
                                    "type": "string",
                                    "default": "lte",
                                    "example": "gte",
                                    "enum": [
                                      "gt",
                                      "gte",
                                      "lt",
                                      "lte"
                                    ]
                                  },
                                  "dimenstions": {
                                    "title": "Dimenstions",
                                    "description": "Required if scaling.up.namespace is different from 'Microsoft.Compute'. 2 dimensions are required, example: “dimensions”:  [  {  “key” : “resourceGroupName”,  “value” : “testResourceGroup”  }  {  “key” : “resourceName”,  “value” : “testApplicationGateway”  }  ]",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "title": "Key",
                                          "description": "Azure resource group for the scaling.down.dimensions. Required if using namespace different from \"Microsoft.Compute\".",
                                          "type": "string",
                                          "example": "resourceGroupName"
                                        },
                                        "value": {
                                          "title": "Value",
                                          "description": "Azure resource the scaling.down.dimensions. Required if using namespace different from \"Microsoft.Compute\".",
                                          "type": "string",
                                          "example": "TestAppGateway"
                                        }
                                      }
                                    }
                                  },
                                  "action": {
                                    "title": "Action",
                                    "description": "Scaling action to take when the policy is triggered.",
                                    "type": "object",
                                    "required": [
                                      "type",
                                      "adjustment",
                                      "target",
                                      "minimum",
                                      "maximum"
                                    ],
                                    "properties": {
                                      "type": {
                                        "title": "Type",
                                        "description": "Type of scaling action to take when the scaling policy is triggered. </br> Valid Values:\n+ adjustment\n+ setMaxTarget\n+ updateCapacity\n+ percentageAdjustment",
                                        "type": "string",
                                        "example": "adjustment"
                                      },
                                      "target": {
                                        "type": "integer",
                                        "title": "Target",
                                        "description": "Desired number of instances. Also you must indicate “minimum” and “maximum” amounts. Required if selected as action type:\n+ updateCapacity",
                                        "example": 1
                                      },
                                      "minimum": {
                                        "type": "integer",
                                        "title": "Minimum",
                                        "description": "Lower limit of instances that you can scale down to. Also you must indicate “target” and “maximum” amounts. Required if selected as action type:\n+ updateCapacity",
                                        "example": 1
                                      },
                                      "maximum": {
                                        "type": "integer",
                                        "title": "Maximum",
                                        "description": "Upper limit of instances that you can scale down to. Also you must indicate “minimum” and “target” amounts. Required if selected as action type:\n+ updateCapacity",
                                        "example": 1
                                      },
                                      "adjustment": {
                                        "title": "Adjustment",
                                        "description": "Value to which the action type will be adjusted. Required if using the next action types:\n+ numeric\n+ percentageAdjustment",
                                        "type": "string",
                                        "example": "2"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "strategy": {
                            "type": "object",
                            "title": "Scaling Strategy",
                            "properties": {
                              "spotPercentage": {
                                "title": "Spot Percentage",
                                "description": "Percentage of Spot-VMs to maintain.  <a style=color:red>Required if odCount isn't specified.</a>",
                                "type": "integer",
                                "default": 100,
                                "example": 100
                              },
                              "onDemandCount": {
                                "title": "On Demand Count",
                                "type": "integer",
                                "description": "Number of On-Demand VMs to maintain.  <a style=color:red>Required if spotPercentage isn't specified.</a>",
                                "example": 3
                              },
                              "drainingTimeout": {
                                "title": "Draining Timeout",
                                "type": "integer",
                                "description": "Time (seconds) to allow the VM be drained from incoming TCP connections and detached from MLB before terminating it during a scale down operation.",
                                "default": 120
                              },
                              "revertToSpot": {
                                "title": "Revert To Spot",
                                "type": "object",
                                "description": "Hold settings for strategy correction - replacing On-Demand for Spot VMs",
                                "properties": {
                                  "performAt": {
                                    "title": "Perform At",
                                    "type": "string",
                                    "description": "Settings for maintenance strategy - possible values:\n+ timeWindow\n+ never\n+ always",
                                    "default": "always"
                                  }
                                }
                              },
                              "optimizationWindows": {
                                "title": "Optimization Windows",
                                "description": "Valid format:\n+ ddd:hh:mm-ddd:hh:mm (day:hour(0-23):minute(0-59))\n+ not empty if revertToSpot.performAt = timeWindow",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "signals": {
                                "title": "Signals",
                                "description": "The signals defined for this group.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "timeout": {
                                      "title": "Timeout",
                                      "description": "The timeout in seconds to hold the vm until a signal is sent. If no signal is sent the vm will be replaced (vmReady) or we will terminate the vm (vmReadyToShutdown) after the timeout. (Maximum is 1800 seconds, Minimum is 60 seconds)",
                                      "default": 30,
                                      "type": "integer",
                                      "example": 50
                                    },
                                    "type": {
                                      "title": "Type",
                                      "description": "The type of the signal defined for the group. Valid Values: vmReady, vmReadyToShutdown",
                                      "type": "string",
                                      "example": "vmReady"
                                    }
                                  }
                                }
                              },
                              "availabilityVsCost": {
                                "title": "Elastigroup Availability VS Cost",
                                "description": "Set the desired preference for the Spot market VM selection. (100-  Availability, 0- cost)\n",
                                "type": "integer",
                                "example": 100
                              },
                              "capacityReservation": {
                                "type": "object",
                                "description": "On-demand Capacity Reservation group enables you to reserve Compute capacity in an Azure region or an Availability Zone for any duration of time.\n[CRG can only be created on the Azure end.](https://learn.microsoft.com/en-us/azure/virtual-machines/capacity-reservation-create)\n",
                                "required": [
                                  "shouldUtilize",
                                  "utilizationStrategy"
                                ],
                                "properties": {
                                  "shouldUtilize": {
                                    "type": "boolean",
                                    "description": "Determines whether capacity reservations should be utilized.\n",
                                    "example": true
                                  },
                                  "utilizationStrategy": {
                                    "type": "string",
                                    "description": "The priority requested for using CRG. This value will determine if CRG is used ahead of spot VMs or On-demand VMs.\n* utilizeOverOD- If picked, we will use CRG only in case On-demand should be launched.\n* utilizeOverSpot- CRG will be preferred over Spot. Only after CRG is fully used, spot VMs can be used.\n",
                                    "enum": [
                                      "utilizeOverSpot",
                                      "utilizeOverOD"
                                    ],
                                    "example": "utilizeOverSpot"
                                  },
                                  "capacityReservationGroups": {
                                    "type": "array",
                                    "description": "List of the desired CRGs to use under the associated Azure subscription.\nWhen null we will utilize any available reservation that matches the Virtual Node Group.\n",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "resourceGroupName"
                                      ],
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the CRG.\n",
                                          "example": "capacityReservationGroupName"
                                        },
                                        "resourceGroupName": {
                                          "type": "string",
                                          "description": "Azure resource group name\n",
                                          "example": "resourceGroupName"
                                        },
                                        "shouldPrioritize": {
                                          "type": "boolean",
                                          "description": "The desired CRG to utilize ahead of other CRGs in the subscription.\n",
                                          "example": true
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "health": {
                            "title": "Health",
                            "description": "Set health check and auto-healing of unhealthy VMs.\n",
                            "type": "object",
                            "properties": {
                              "autoHealing": {
                                "title": "Auto Healing",
                                "description": "Enable auto-healing of unhealthy VMs.\n",
                                "type": "boolean",
                                "example": false
                              },
                              "healthCheckTypes": {
                                "title": "Health Check Types",
                                "description": "Health check types to use in order to validate VM health.\n",
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "vmState",
                                    "applicationGateway"
                                  ]
                                },
                                "example": [
                                  "vmState"
                                ]
                              },
                              "gracePeriod": {
                                "title": "Grace Period",
                                "description": "The amount of time (in seconds) after a new VM has launched before terminating the old VM.\n",
                                "type": "integer",
                                "example": 300
                              },
                              "unhealthyDuration": {
                                "title": "Unhealthy Duration",
                                "description": "Amount of time (in seconds) for the VM to remain unhealthy before a replacement is triggered.\n",
                                "type": "integer",
                                "example": 360
                              }
                            }
                          },
                          "compute": {
                            "title": "Compute",
                            "description": "Elastigroup's Compute Configurtion",
                            "type": "object",
                            "required": [
                              "vmSizes",
                              "os",
                              "launchSpecification"
                            ],
                            "properties": {
                              "vmSizes": {
                                "title": "VM Sizes",
                                "description": "Sizes of On-Demand and Low-Priority VMs.",
                                "type": "object",
                                "required": [
                                  "odSizes",
                                  "spotSizes"
                                ],
                                "properties": {
                                  "odSizes": {
                                    "title": "OD Sizes",
                                    "type": "array",
                                    "description": "Array of string (s) with Available On-Demand sizes (pls chose items that correspond to your location or zone) https://docs.microsoft.com/uk-ua/azure/virtual-machines/sizes:",
                                    "items": {
                                      "type": "string",
                                      "example": "standard_b1s"
                                    }
                                  },
                                  "spotSizes": {
                                    "title": "Spot Sizes",
                                    "description": "Available Spot-VM sizes. Find the list in Azure https://docs.microsoft.com/en-us/azure/virtual-machines/spot-vms?toc=/azure/virtual-machines/linux/toc.json&bc=/azure/virtual-machines/linux/breadcrumb/toc.json",
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "example": "standard_a1_v2"
                                    }
                                  },
                                  "preferredSpotSizes": {
                                    "type": "array",
                                    "description": "Prioritize Spot VM sizes when launching Spot VMs for the group.\n<a style=color:red>Must be a sublist of compute.vmSizes.spotSizes. </a>\n",
                                    "items": {
                                      "type": "string",
                                      "example": "standard_a2_v2"
                                    }
                                  }
                                }
                              },
                              "os": {
                                "type": "string",
                                "example": "Linux",
                                "enum": [
                                  "Linux",
                                  "Windows"
                                ]
                              },
                              "launchSpecification": {
                                "title": "Virtual Node Group",
                                "description": "Virtual Node Group Configuration",
                                "type": "object",
                                "required": [
                                  "image",
                                  "network",
                                  "subnetName"
                                ],
                                "properties": {
                                  "image": {
                                    "title": "Image",
                                    "description": "Image of VM. An image is a template for creating new VMs. Choose from Azure image catalogue (marketplace) or use a custom image or chosen from shared gallery image.",
                                    "type": "object",
                                    "properties": {
                                      "marketplace": {
                                        "title": "Marketplace",
                                        "type": "object",
                                        "description": "Select an image from Azure's Marketplace image catalogue. Cannot be used with `custom` or `gallery`. <a style=color:red;>Required if custom or gallery image are not specified.</a>",
                                        "properties": {
                                          "publisher": {
                                            "title": "Publisher",
                                            "description": "Image publisher.  <a style=color:red;>Required if marketplace image is specified.</a>",
                                            "type": "string",
                                            "example": "OpenLogic"
                                          },
                                          "offer": {
                                            "title": "Offer",
                                            "description": "Name of image to use.  <a style=color:red;>Required if marketplace image is specified.</a>",
                                            "type": "string",
                                            "example": "CentOS"
                                          },
                                          "sku": {
                                            "title": "Stock Keeping Unit",
                                            "description": "Image's Stock Keeping Unit, which is the specific version of the image.  <a style=color:red;>Required if marketplace image is specified.</a>",
                                            "type": "string",
                                            "example": "7.3"
                                          },
                                          "version": {
                                            "title": "Version",
                                            "description": "Image's version. if version not provided we use 'latest'",
                                            "type": "string",
                                            "example": "7.3-1611",
                                            "default": "latest"
                                          }
                                        }
                                      },
                                      "custom": {
                                        "title": "Custom",
                                        "type": "object",
                                        "description": "Custom image to launch Elastigroup with. Cannot be used with `marketplace` or `gallery`. <a style=color:red;>Required if marketplace or gallery image are not specified.</a>",
                                        "properties": {
                                          "resourceGroupName": {
                                            "title": "Resource Group Name",
                                            "description": "Name of Resource Group for custom image.  <a style=color:red;>Required if custom image is specified.</a>",
                                            "type": "string",
                                            "example": "spotinst-azure"
                                          },
                                          "name": {
                                            "title": "Image Name",
                                            "description": "Name of the custom image.  <a style=color:red;>Required if custom image is specified.</a>",
                                            "type": "string",
                                            "example": "custom-image-name"
                                          }
                                        }
                                      },
                                      "gallery": {
                                        "title": "Gallery",
                                        "type": "object",
                                        "description": "Gallery image to launch Elastigroup with. Cannot be used with `marketplace` or `custom`. <a style=color:red;>Required if marketplace or custom image are not specified.</a>",
                                        "properties": {
                                          "resourceGroupName": {
                                            "title": "Resource Group Name",
                                            "description": "Name of Resource Group for custom image.  <a style=color:red;>Required if gallery image is specified.</a>",
                                            "type": "string",
                                            "example": "spotinst-azure"
                                          },
                                          "galleryName": {
                                            "title": "Gallery Name",
                                            "description": "Name of the gallery.  <a style=color:red;>Required if gallery image is specified.</a>",
                                            "type": "string",
                                            "example": "gallery-name"
                                          },
                                          "imageName": {
                                            "title": "Image Name",
                                            "description": "Name of the gallery image.  <a style=color:red;>Required if gallery image is specified.</a>",
                                            "type": "string",
                                            "example": "gallery-image-name"
                                          },
                                          "version": {
                                            "title": "Version",
                                            "description": "Image's version. Can be in the format x.x.x or 'latest'. <a style=color:red;>Required if gallery image is specified.</a>",
                                            "type": "string",
                                            "example": "0.0.1"
                                          },
                                          "spotAccountId": {
                                            "title": "Spot Account ID",
                                            "description": "The Spot account ID that connected to the Azure subscription to which the gallery belongs. Relevant only in case of cross-subscription shared galleries. [Read more](https://docs.spot.io/elastigroup/features-azure/shared-image-galleries) about cross-subscription shared galleries in Elastigroup.",
                                            "type": "string",
                                            "example": "act-123456789"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "loadBalancersConfig": {
                                    "title": "Load Balancer Configuration",
                                    "description": "Configure a Load Balancer",
                                    "type": "object",
                                    "properties": {
                                      "loadBalancers": {
                                        "type": "array",
                                        "description": "Add a load balancer. For Azure Gateway, each Backend Pool is a separate load balancer.\n",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "The type of load balancer.\n",
                                              "enum": [
                                                "loadBalancer",
                                                "applicationGateway"
                                              ],
                                              "example": "loadBalancer"
                                            },
                                            "resourceGroupName": {
                                              "type": "string",
                                              "description": "The Resource Group name of the Load Balancer.\n",
                                              "example": "testResourceGroup"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the Application Gateway/Load Balancer\n",
                                              "example": "testLoadBalancer"
                                            },
                                            "sku": {
                                              "type": "string",
                                              "description": "* if type is LoadBalancer then possible values are:\n * “Standard\"\n * Basic”\n* if ApplicationGateway then possible values are:\n * “Standard_Large”\n * “Standard_Medium”\n * “Standard_Small”\n * “Standard_v2\n * “WAF_Large”\n * “WAF_Medium\"\n * “WAF_v2\"\n",
                                              "example": "Standard"
                                            },
                                            "backendPoolNames": {
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              },
                                              "description": "Name of the Backend Pool to register the Elastigroup VMs to.\\\nEach Backend Pool is a separate load balancer.\\\nRequired if Type is APPLICATION_GATEWAY.\n",
                                              "example": [
                                                "testBackendPool1",
                                                "testBackendPool2"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "managedServiceIdentities": {
                                    "title": "Managed Service Identities",
                                    "description": "Add a user-assigned managed identity to the VMs in the cluster.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "resourceGroupName": {
                                          "title": "Resource Group Name",
                                          "description": "The Resource Group that the user-assigned managed identity resides in.",
                                          "type": "string",
                                          "example": "Resourse Group 1"
                                        },
                                        "name": {
                                          "title": "Name",
                                          "description": "Name of the managed identity",
                                          "type": "string",
                                          "example": "Test"
                                        }
                                      }
                                    }
                                  },
                                  "shutdownScript": {
                                    "title": "Shutdown Script",
                                    "description": "Shutdown script for the group. Value should be passed as a string encoded at Base64 only",
                                    "type": "string",
                                    "example": "IyEvYmluL2Jhc2gKZWNobyAidGVzdCI="
                                  },
                                  "tags": {
                                    "title": "Tags",
                                    "description": "Key-Value pairs for VMs in the Elastigroup.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "tagKey": {
                                          "title": "Tag Key",
                                          "description": "Tag Key for Vms in Elastigroup.",
                                          "type": "string",
                                          "example": "env"
                                        },
                                        "tagValue": {
                                          "title": "Tag Value",
                                          "description": "Tag Value for VMs in Elastigroup.",
                                          "type": "string",
                                          "example": "staging"
                                        }
                                      }
                                    }
                                  },
                                  "network": {
                                    "title": "Network",
                                    "description": "Define the Virtual Network and Subnet for your Elastigroup.",
                                    "type": "object",
                                    "required": [
                                      "resourceGroupName",
                                      "virtualNetworkName",
                                      "networkInterfaces"
                                    ],
                                    "properties": {
                                      "resourceGroupName": {
                                        "title": "Resource Group Name",
                                        "description": "Vnet Resource Group Name",
                                        "type": "string",
                                        "example": "subnetResourceGroup"
                                      },
                                      "virtualNetworkName": {
                                        "title": "Virtual Network Name",
                                        "description": "Virtual Network",
                                        "type": "string",
                                        "example": "vname"
                                      },
                                      "networkInterfaces": {
                                        "title": "Virtual Network Name",
                                        "description": "Virtual Network",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "isPrimary",
                                            "subnetName"
                                          ],
                                          "properties": {
                                            "isPrimary": {
                                              "title": "Is Primary Criteria",
                                              "description": "Defines whether the network interface is primary or not.",
                                              "type": "boolean",
                                              "example": true
                                            },
                                            "subnetName": {
                                              "title": "Subnet Name",
                                              "description": "Subnet name",
                                              "type": "string",
                                              "example": "testSubnet"
                                            },
                                            "assignPublicIp": {
                                              "title": "Assign Public IP",
                                              "description": "Assign public IP",
                                              "type": "boolean",
                                              "example": true
                                            },
                                            "publicIpSku": {
                                              "title": "Public Ip SKU",
                                              "description": "Required if assignPublicIp=true values=[STANDARD/BASIC]",
                                              "type": "string",
                                              "example": "STANDARD"
                                            },
                                            "securityGroup": {
                                              "title": "Security Group",
                                              "description": "Security Group",
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "title": "Name",
                                                  "description": "Requires valid security group name. Required if security group is specified.",
                                                  "type": "string",
                                                  "example": "test"
                                                },
                                                "resourceGroupName": {
                                                  "title": "Resource Group Name",
                                                  "description": "Requires valid resource group name. Required if security group is specified.",
                                                  "type": "string",
                                                  "example": "test"
                                                }
                                              }
                                            },
                                            "publicIps": {
                                              "description": "Defined a pool of Public Ips (from Azure), that will be associated to the network interface. We will associate one public ip per instance until the pool is exhausted, in which case, we will create a new one.",
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "resourceGroupName",
                                                  "name"
                                                ],
                                                "properties": {
                                                  "resourceGroupName": {
                                                    "description": "The resource group of the public ip.",
                                                    "type": "string",
                                                    "example": "resourceGroup"
                                                  },
                                                  "name": {
                                                    "description": "The name of the public ip.",
                                                    "type": "string",
                                                    "example": "name"
                                                  }
                                                }
                                              }
                                            },
                                            "enableIPForwarding": {
                                              "title": "Enable IP Forwarding",
                                              "description": "Enable IP Forwarding",
                                              "type": "boolean",
                                              "example": true
                                            },
                                            "additionalIpConfigurations": {
                                              "title": "Additional IP Configurations",
                                              "description": "Additional configuration of network interface",
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "name": {
                                                    "title": "Name",
                                                    "description": "Required if additionalConfiguration has been specified.",
                                                    "type": "string",
                                                    "example": "test"
                                                  },
                                                  "privateIpAddressVersion": {
                                                    "title": "Private IP Address Version",
                                                    "description": "Possible values:\n+ IPv4\n+ IPv6",
                                                    "default": "IPv4"
                                                  }
                                                }
                                              }
                                            },
                                            "privateIpAddresses": {
                                              "type": "array",
                                              "description": "A list with unique items that every item is a valid IP",
                                              "items": {
                                                "type": "string",
                                                "example": [
                                                  "172.232.5.3",
                                                  "172.23.5.4",
                                                  "172.23.5.7",
                                                  "172.23.5.8",
                                                  "172.23.5.9",
                                                  "172.23.5.10"
                                                ]
                                              }
                                            },
                                            "applicationSecurityGroups": {
                                              "description": "List of Application Security Groups that will be associated to the primary ip configration of the network interface.",
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "resourceGroupName",
                                                  "name"
                                                ],
                                                "properties": {
                                                  "resourceGroupName": {
                                                    "description": "The resource group of the Application Security Group.",
                                                    "type": "string",
                                                    "example": "AsgResourceGroup"
                                                  },
                                                  "name": {
                                                    "description": "The name of the Application Security group",
                                                    "type": "string",
                                                    "example": "AsgName"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "extensions": {
                                    "title": "Extensions",
                                    "description": "List of objects for Azure extensions\n",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "minorVersionAutoUpgrade",
                                        "name",
                                        "publisher",
                                        "type"
                                      ],
                                      "properties": {
                                        "name": {
                                          "title": "name",
                                          "description": "Required on compute.launchSpecification.extensions object.\n",
                                          "type": "string",
                                          "example": "k8s-agentpool1-38611891-vmss-computeAksLinuxBilling"
                                        },
                                        "protectedSettings": {
                                          "title": "Protected Settings",
                                          "description": "Object for protected settings.\n",
                                          "type": "object"
                                        },
                                        "enableAutomaticUpgrade": {
                                          "title": "enable automatic upgrade",
                                          "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available.\n",
                                          "type": "boolean",
                                          "example": false
                                        },
                                        "protectedSettingsFromKeyVault": {
                                          "title": "Protected Settings from key vault",
                                          "description": "The extensions protected settings that are passed by reference, and consumed from key vault.\n",
                                          "type": "object",
                                          "required": [
                                            "sourceVault",
                                            "secretUrl"
                                          ],
                                          "properties": {
                                            "sourceVault": {
                                              "title": "sourceVault",
                                              "type": "string",
                                              "description": "The relative URL of the Key Vault containing the secret.\n",
                                              "example": "/subscriptions/1234-1234-1234/resourceGroups/rg_test/providers/Microsoft.KeyVault/vaults/testKeyVault"
                                            },
                                            "secretUrl": {
                                              "title": "secretUrl",
                                              "type": "string",
                                              "description": "The URL referencing a secret in a Key Vault.\n",
                                              "example": "https://testKeyVault.vault.azure.net/secrets/SecretTest/123456"
                                            }
                                          }
                                        },
                                        "publicSettings": {
                                          "title": "Public Settings",
                                          "description": "Public Settings.\n",
                                          "type": "object"
                                        },
                                        "publisher": {
                                          "title": "Publisher",
                                          "description": "Required on compute.launchSpecification.extensions object.\n",
                                          "type": "string",
                                          "example": "Microsoft.AKS"
                                        },
                                        "type": {
                                          "title": "Type",
                                          "description": "Required on compute.launchSpecification.extensions object.\n",
                                          "type": "string",
                                          "example": "Compute.AKS-Engine.Linux.Billing"
                                        },
                                        "apiVersion": {
                                          "title": "API Version",
                                          "description": "The API version of the extension. Required if extension specified.\n",
                                          "type": "string",
                                          "example": 1
                                        },
                                        "minorVersionAutoUpgrade": {
                                          "title": "minorVersionAutoUpgrade",
                                          "description": "Enable minor version upgrades of the extension. Required if extension specified.\n",
                                          "type": "boolean",
                                          "example": true
                                        }
                                      }
                                    }
                                  },
                                  "dataDisks": {
                                    "title": "Data Disks",
                                    "description": "List of data disks to be attached to the vms in the group.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "title": "Type",
                                          "description": "The type of the data disk. Required if dataDisks is specified. Possible values:\n+ Standard_LRS\n+ Premium_LRS\n+ StandardSSD_LRS\n+ StandardSSD_ZRS\n+ Premium_ZRS",
                                          "type": "string",
                                          "example": "Standard_LRS"
                                        },
                                        "lun": {
                                          "title": "Lun",
                                          "description": "The lun of the data disk, Required if dataDisks is specified.",
                                          "type": "integer",
                                          "example": 6
                                        },
                                        "sizeGB": {
                                          "title": "Size GB",
                                          "description": "The size of the data disk in GB, Required if dataDisks is specified. Minimum value: 1 Maximum value: 1023",
                                          "type": "integer",
                                          "example": 10
                                        }
                                      }
                                    }
                                  },
                                  "osDisk": {
                                    "title": "OS Disk",
                                    "description": "Specify OS disk specification other than default.",
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "title": "Type",
                                        "description": "The type of the OS disk. Required if dataDisks is specified. Possible values:\n+ Standard_LRS\n+ Premium_LRS\n+ StandardSSD_LRS\n+ StandardSSD_ZRS\n+ Premium_ZRS",
                                        "type": "string",
                                        "example": "Standard_LRS"
                                      },
                                      "size": {
                                        "title": "Size",
                                        "description": "The size of the OS disk in GB, Required if dataDisks is specified. Minimum value: 1 Maximum value: 1023",
                                        "type": "integer",
                                        "example": 6
                                      }
                                    }
                                  },
                                  "vmNamePrefix": {
                                    "type": "string",
                                    "description": "Set a VM name prefix to be used for all launched VMs and the VM resources.\n* The prefix value should comply with the following limitations: \n  *  A maximal length of 25 characters.\n  * The prefix can’t contain spaces, control characters, or these characters: ~ ! @ # $ % ^ & * ( ) = + _ [ ] { } | ; : . ' \" , < > / ?\n  * The VM prefix can't end with a hyphen.\n",
                                    "example": "prefix"
                                  },
                                  "customData": {
                                    "title": "Custom Data",
                                    "description": "This value will hold the YML in base64 and will be added to the scaleSets",
                                    "type": "string",
                                    "example": "IyEvYmluL2Jhc2gKZWNobyAidGVzdCI="
                                  },
                                  "userData": {
                                    "type": "string",
                                    "description": "Define a set of scripts or other metadata that's inserted to an Azure virtual machine at provision time. (Base64 encoded)\n",
                                    "example": "IyEvYmluL2Jhc2gKZWNobyAidGVzdCI"
                                  },
                                  "login": {
                                    "title": "Login",
                                    "description": "Set admin access for accessing your VMs. <a style=color:red;>Required if custom, marketplace or generalized gallery image are specified. If specialized image is set, Login should not be defined</a>",
                                    "type": "object",
                                    "required": [
                                      "userName"
                                    ],
                                    "properties": {
                                      "userName": {
                                        "title": "User Name",
                                        "description": "User name for admin access to VMs. + for windows: compute.launchSpecification.login.password + for linux: compute.launchSpecification.login.sshPublicKey",
                                        "type": "string",
                                        "example": "spotinst"
                                      },
                                      "sshPublicKey": {
                                        "title": "SSH Public Key",
                                        "description": "SSH for admin access to Linux VMs.  <a style = color:red>Required for Linux.  Can not exist simultaneously with 'password'</a>",
                                        "type": "string"
                                      },
                                      "password": {
                                        "title": "Password",
                                        "description": "Password for admin access to Windows VMs.  <a style = color:red>Required for Windows. Can not exist simultaneously with 'sshPublicKey'</a>",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "bootDiagnostics": {
                                    "type": "object",
                                    "description": "Will enable boot diagnostics in Azure when a new VM is launched",
                                    "required": [
                                      "isEnabled",
                                      "type"
                                    ],
                                    "properties": {
                                      "isEnabled": {
                                        "type": "boolean",
                                        "description": "Allows you to enable and disable the configuration of boot diagnostics at launch"
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "Defines the type of storage on VM launch  in Azure.",
                                        "enum": [
                                          "managed",
                                          "unmanaged"
                                        ]
                                      },
                                      "storageUri": {
                                        "type": "string",
                                        "description": "The storage URI that is used if type is unmanaged. The storage URI must follow the blob storage URI format (\"https://<blobstoragename>.blob.core.windows.net/\"). StorageUri is required if the type is unmanaged. StorageUri must be ‘null’ in case the boot diagnostics type is managed"
                                      }
                                    },
                                    "example": {
                                      "isEnabled": true,
                                      "type": "unmanaged",
                                      "storageUri": "https://example.blob.core.windows.net/"
                                    }
                                  },
                                  "secrets": {
                                    "title": "secrets",
                                    "type": "array",
                                    "description": "Set of certificates that should be installed the VM\n",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "sourceVault",
                                        "vaultCertificates"
                                      ],
                                      "properties": {
                                        "sourceVault": {
                                          "type": "object",
                                          "description": "The key vault reference, contains the required certificates\n",
                                          "required": [
                                            "resourceGroupName",
                                            "name"
                                          ],
                                          "properties": {
                                            "resourceGroupName": {
                                              "type": "string",
                                              "description": "The resource group name of the key vault\n"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "The name of the key vault\n"
                                            }
                                          }
                                        },
                                        "vaultCertificates": {
                                          "type": "array",
                                          "description": "The required certificate references\n",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "certificateUrl",
                                              "certificateStore"
                                            ],
                                            "properties": {
                                              "certificateUrl": {
                                                "type": "string",
                                                "description": "The URL of the certificate under the key vault\n"
                                              },
                                              "certificateStore": {
                                                "type": "string",
                                                "description": "The certificate store directory the VM. The directory is created in the LocalMachine account.\n* This field is required only when using windows OS type\n* This field must be ‘null’ when the OS type is Linux\n"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "security": {
                                    "type": "object",
                                    "description": "Specifies the Security related profile settings for the virtual machine.\n",
                                    "properties": {
                                      "securityType": {
                                        "type": "string",
                                        "description": "Security type refers to the different security features of a virtual machine.\nSecurity features like Trusted launch virtual machines help to improve the security of Azure generation 2 virtual machines.\n",
                                        "enum": [
                                          "Standard",
                                          "TrustedLaunch"
                                        ],
                                        "example": "TrustedLaunch"
                                      },
                                      "secureBootEnabled": {
                                        "type": "boolean",
                                        "description": "Specifies whether secure boot should be enabled on the virtual machine.\n",
                                        "example": true
                                      },
                                      "vTpmEnabled": {
                                        "type": "boolean",
                                        "description": "Specifies whether vTPM should be enabled on the virtual machine.\n",
                                        "example": true
                                      }
                                    }
                                  },
                                  "proximityPlacementGroups": {
                                    "type": "array",
                                    "description": "Defines the proximity placement group in which the VM will be launched.",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "resourceGroupName"
                                      ],
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the proximity placement group.",
                                          "example": "testPPG"
                                        },
                                        "resourceGroupName": {
                                          "type": "string",
                                          "description": "The resource group name of the proximity placement group.",
                                          "example": "testResourceGroup"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "zones": {
                                "type": "array",
                                "description": "List of Azure Availability Zones in the defined region; If not defined, Virtual machines will be launched regionally.",
                                "items": {
                                  "enum": [
                                    "1",
                                    "2",
                                    "3"
                                  ],
                                  "type": "string",
                                  "example": "1"
                                }
                              },
                              "preferredZones": {
                                "type": "array",
                                "description": "The AZs to prioritize when launching VMs. If no markets are available in the Preferred AZs, VMs are launched in the non-preferred AZs.\n<a style=color:red>Must be a sublist of compute.zones.</a>\n",
                                "items": {
                                  "enum": [
                                    "1",
                                    "2",
                                    "3"
                                  ],
                                  "type": "string",
                                  "example": "1"
                                }
                              }
                            }
                          },
                          "scheduling": {
                            "description": "Define cron-based scheduled tasks.\n",
                            "properties": {
                              "tasks": {
                                "type": "array",
                                "description": "A list of scheduling tasks.\nNote: The type of each task defines the behavior of the cron execution.\n",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "title": "Scaling Scheduled Task",
                                      "description": "This is a scheduled task that will allow to change the group's capacty. If the target\nis changed, then VMs will either be scaled up or down.\nNote: At least one of the following must be configured: [scaleTargetCapacity, scaleMaxCapacity, scaleMinCapacity]\n",
                                      "required": [
                                        "type",
                                        "isEnabled",
                                        "cronExpression"
                                      ],
                                      "properties": {
                                        "isEnabled": {
                                          "type": "string",
                                          "description": "A list of scheduling tasks.\n"
                                        },
                                        "cronExpression": {
                                          "type": "string",
                                          "description": "A valid cron expression.\nThe cron is running in UTC time zone and is in Unix cron format of Cron Expression Validator Script.\n",
                                          "example": "0 1 * * *"
                                        },
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "scale"
                                          ],
                                          "description": "Define cron-based scheduled tasks.\n"
                                        },
                                        "scaleTargetCapacity": {
                                          "type": "integer",
                                          "description": "This will set the defined target group capacity when the scheduling task is triggered.\n",
                                          "minimum": 0
                                        },
                                        "scaleMaxCapacity": {
                                          "type": "integer",
                                          "description": "This will set the defined maximum group capacity when the scheduling task is triggered.\n",
                                          "minimum": 0
                                        },
                                        "scaleMinCapacity": {
                                          "type": "integer",
                                          "description": "This will set the defined maximum group capacity when the scheduling task is triggered.\n",
                                          "minimum": 0
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "title": "Scale Up Scheduled Task",
                                      "description": "This is a scheduled task that will allow to add VMs to the group's target capacity by a specific count.\n",
                                      "required": [
                                        "adjustment",
                                        "type",
                                        "isEnabled",
                                        "cronExpression"
                                      ],
                                      "properties": {
                                        "isEnabled": {
                                          "type": "string",
                                          "description": "A list of scheduling tasks.\n"
                                        },
                                        "cronExpression": {
                                          "type": "string",
                                          "description": "A valid cron expression.\nThe cron is running in UTC time zone and is in Unix cron format of Cron Expression Validator Script.\n",
                                          "example": "0 1 * * *"
                                        },
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "scaleUp"
                                          ],
                                          "description": "Defines the type of the scheduled task.\n"
                                        },
                                        "adjustment": {
                                          "type": "integer",
                                          "description": "This will increase the target capacity by the defined amount when the scheduling task is triggered.\n",
                                          "minimum": 1,
                                          "example": 1
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "title": "Scale Down Scheduled Task",
                                      "description": "This is a scheduled task that will allow to remove VMs from the group's target capacity by a specific count.\n",
                                      "required": [
                                        "adjustment",
                                        "type",
                                        "isEnabled",
                                        "cronExpression"
                                      ],
                                      "properties": {
                                        "isEnabled": {
                                          "type": "string",
                                          "description": "A list of scheduling tasks.\n"
                                        },
                                        "cronExpression": {
                                          "type": "string",
                                          "description": "A valid cron expression.\nThe cron is running in UTC time zone and is in Unix cron format of Cron Expression Validator Script.\n",
                                          "example": "0 1 * * *"
                                        },
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "scaleDown"
                                          ],
                                          "description": "Defines the type of the scheduled task.\n"
                                        },
                                        "adjustment": {
                                          "type": "integer",
                                          "description": "This will decrease the target capacity by the defined amount when the scheduling task is triggered.\n",
                                          "minimum": 1,
                                          "example": 1
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "title": "Scale Up Percentage Scheduled Task",
                                      "description": "This is a scheduled task that will allow to add VMs to the group's target capacity by a percentage of the group's current target.\n",
                                      "required": [
                                        "type",
                                        "isEnabled",
                                        "cronExpression",
                                        "adjustmentPercentage"
                                      ],
                                      "properties": {
                                        "isEnabled": {
                                          "type": "string",
                                          "description": "A list of scheduling tasks.\n"
                                        },
                                        "cronExpression": {
                                          "type": "string",
                                          "description": "A valid cron expression.\nThe cron is running in UTC time zone and is in Unix cron format of Cron Expression Validator Script.\n",
                                          "example": "0 1 * * *"
                                        },
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "scaleUpPercentage"
                                          ],
                                          "description": "Defines the type of the scheduled task.\n"
                                        },
                                        "adjustmentPercentage": {
                                          "type": "integer",
                                          "description": "This will increase the target capacity by the defined percentage value when the scheduling task is triggered.\nThis will set the target capacity by the defined percentage of the current target when the scheduling task triggers.\n",
                                          "minimum": 1,
                                          "maximum": 100
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "title": "Scale Down Percentage Scheduled Task",
                                      "description": "This is a scheduled task that will allow to remove VMs from the group's target capacity by a percentage of the group's current target.\n",
                                      "required": [
                                        "adjustmentPercentage",
                                        "type",
                                        "isEnabled",
                                        "cronExpression"
                                      ],
                                      "properties": {
                                        "isEnabled": {
                                          "type": "string",
                                          "description": "A list of scheduling tasks.\n"
                                        },
                                        "cronExpression": {
                                          "type": "string",
                                          "description": "A valid cron expression.\nThe cron is running in UTC time zone and is in Unix cron format of Cron Expression Validator Script.\n",
                                          "example": "0 1 * * *"
                                        },
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "percentageScaleDown"
                                          ],
                                          "description": "Defines the type of the scheduled task.\n"
                                        },
                                        "adjustmentPercentage": {
                                          "type": "integer",
                                          "description": "This will decrease the target capacity by the defined percentage value when the scheduling task is triggered.\n",
                                          "minimum": 1,
                                          "maximum": 100
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "title": "Deployment Scheduled Task",
                                      "description": "This is a scheduled task that will allow the deployment of an Elastigroup.\n",
                                      "required": [
                                        "batchSizePercentage",
                                        "gracePeriod",
                                        "type",
                                        "isEnabled",
                                        "cronExpression"
                                      ],
                                      "properties": {
                                        "isEnabled": {
                                          "type": "string",
                                          "description": "A list of scheduling tasks.\n"
                                        },
                                        "cronExpression": {
                                          "type": "string",
                                          "description": "A valid cron expression.\nThe cron is running in UTC time zone and is in Unix cron format of Cron Expression Validator Script.\n",
                                          "example": "0 1 * * *"
                                        },
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "deployment"
                                          ],
                                          "description": "Defines the type of the scheduled task.\n"
                                        },
                                        "batchSizePercentage": {
                                          "type": "integer",
                                          "description": "Indicates the timeout (in seconds) to wait until the VM becomes healthy, based on the healthCheckType.\n",
                                          "minimum": 1,
                                          "maximum": 100
                                        },
                                        "gracePeriod": {
                                          "type": "integer",
                                          "description": "Indicates (in seconds) the timeout to wait until instance become healthy based on the healthCheckType.\n",
                                          "minimum": 1
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/group"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1azure~1compute~1group/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:compute:group"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Elastigroups",
        "description": "List Elastigroup clusters.\n",
        "operationId": "elastigroupAzureSpotVmsListAll",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "name",
            "example": "TestGroup",
            "description": "Filters to find the Elastigroup via a specific name.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "region",
            "example": "eastus",
            "description": "Filters to find all the groups in a specific region.\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/group"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Elasitgroup Azure Spot VMs",
                                "required": [
                                  "name",
                                  "region",
                                  "resourceGroupName",
                                  "capacity",
                                  "strategy",
                                  "compute"
                                ],
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "sig-123456789",
                                    "readOnly": true,
                                    "description": "Azure Elastigroup ID\n"
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "spotinst-group",
                                    "description": "Azure Elastigroup Name\n"
                                  },
                                  "description": {
                                    "type": "string",
                                    "example": "This is my example elastigroup",
                                    "description": "Describe your Azure Elastigroup\n"
                                  },
                                  "region": {
                                    "type": "string",
                                    "example": "westus2",
                                    "description": "The Azure region your Elastigroup will be created in.\n"
                                  },
                                  "resourceGroupName": {
                                    "type": "string",
                                    "example": "spotinst-azure",
                                    "description": "Name of the Resource Group for Elastigroup.\n"
                                  },
                                  "capacity": {
                                    "$ref": "#/paths/~1azure~1compute~1group~1%7BgroupId%7D~1capacity/put/requestBody/content/application~1json/schema/allOf/0/properties/capacity"
                                  },
                                  "strategy": {
                                    "$ref": "#/paths/~1azure~1compute~1group~1%7BgroupId%7D/put/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/strategy"
                                  },
                                  "scaling": {
                                    "$ref": "#/paths/~1azure~1compute~1group~1%7BgroupId%7D/put/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/scaling"
                                  },
                                  "compute": {
                                    "type": "object",
                                    "title": "Elastigroup Compute",
                                    "description": "Compute settings for Elastigroup.\n",
                                    "required": [
                                      "vmSizes",
                                      "os",
                                      "launchSpecification"
                                    ],
                                    "properties": {
                                      "vmSizes": {
                                        "type": "object",
                                        "description": "amount of time to be unhealthy before a replacement is triggered\n",
                                        "properties": {
                                          "odSizes": {
                                            "type": "array",
                                            "description": "Available On-Demand sizes.\n",
                                            "items": {
                                              "type": "string",
                                              "example": "standard_a1_v1"
                                            }
                                          },
                                          "spotSizes": {
                                            "type": "array",
                                            "description": "Available Spot-VM sizes.\n",
                                            "items": {
                                              "type": "string",
                                              "example": "standard_a2_v2"
                                            }
                                          },
                                          "preferredSpotSizes": {
                                            "type": "array",
                                            "description": "Prioritize Spot VM sizes when launching Spot VMs for the group.\n<a style=color:red>Must be a sublist of compute.vmSizes.spotSizes. </a>\n",
                                            "items": {
                                              "type": "string",
                                              "example": "standard_a2_v2"
                                            }
                                          }
                                        }
                                      },
                                      "os": {
                                        "type": "string",
                                        "example": "Linux",
                                        "description": "Type of operating system.\n",
                                        "enum": [
                                          "Linux",
                                          "Windows"
                                        ]
                                      },
                                      "launchSpecification": {
                                        "type": "object",
                                        "properties": {
                                          "vmNamePrefix": {
                                            "type": "string",
                                            "description": "Set a VM name prefix to be used for all launched VMs and the VM resources.\n* The prefix value should comply with the following limitations: \n  *  A maximal length of 25 characters.\n  * The prefix can’t contain spaces, control characters, or these characters: ~ ! @ # $ % ^ & * ( ) = + _ [ ] { } | ; : . ' \" , < > / ?\n  * The VM prefix can't end with a hyphen.\n",
                                            "example": "prefix"
                                          },
                                          "security": {
                                            "type": "object",
                                            "description": "Specifies the Security related profile settings for the virtual machine.\n",
                                            "properties": {
                                              "securityType": {
                                                "type": "string",
                                                "description": "Security type refers to the different security features of a virtual machine.\nSecurity features like Trusted launch virtual machines help to improve the security of Azure generation 2 virtual machines.\n",
                                                "enum": [
                                                  "Standard",
                                                  "TrustedLaunch"
                                                ],
                                                "example": "TrustedLaunch"
                                              },
                                              "secureBootEnabled": {
                                                "type": "boolean",
                                                "description": "Specifies whether secure boot should be enabled on the virtual machine.\n",
                                                "example": true
                                              },
                                              "vTpmEnabled": {
                                                "type": "boolean",
                                                "description": "Specifies whether vTPM should be enabled on the virtual machine.\n",
                                                "example": true
                                              }
                                            }
                                          },
                                          "customData": {
                                            "type": "string",
                                            "format": "byte",
                                            "description": "This value will hold the YAML in base64 and will be executed upon VM launch.\n",
                                            "example": ""
                                          },
                                          "userData": {
                                            "type": "string",
                                            "description": "Define a set of scripts or other metadata that's inserted to an Azure virtual machine at provision time. (Base64 encoded)\n",
                                            "example": "IyEvYmluL2Jhc2gKZWNobyAidGVzdCI"
                                          },
                                          "image": {
                                            "type": "object",
                                            "description": "Image of VM. An image is a template for creating new VMs.\n",
                                            "properties": {
                                              "marketplace": {
                                                "type": "object",
                                                "description": "Select an image from Azure's Marketplace image catalogue\\\nRequired if custom image or gallery image are not specified.\n",
                                                "properties": {
                                                  "publisher": {
                                                    "type": "string",
                                                    "description": "Image publisher.\n",
                                                    "example": "OpenLogic"
                                                  },
                                                  "offer": {
                                                    "type": "string",
                                                    "description": "Name of image to use.\n",
                                                    "example": "CentOS"
                                                  },
                                                  "sku": {
                                                    "type": "string",
                                                    "description": "Image's Stock Keeping Unit, which is the specific version of the image.\n",
                                                    "example": "7.3"
                                                  },
                                                  "version": {
                                                    "type": "string",
                                                    "description": "Image's version. if version not provided we use \"latest\"\n",
                                                    "default": "lastest",
                                                    "example": "7.3-1611"
                                                  }
                                                }
                                              },
                                              "custom": {
                                                "type": "object",
                                                "description": "Custom image to launch Elastigroup with.\n",
                                                "properties": {
                                                  "resourceGroupName": {
                                                    "type": "string",
                                                    "description": "Name of Resource Group for custom image.\n",
                                                    "example": "spotinst-azure"
                                                  },
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the custom image.\n",
                                                    "example": "custom-image-name"
                                                  }
                                                }
                                              },
                                              "gallery": {
                                                "title": "Gallery",
                                                "type": "object",
                                                "description": "Gallery image to launch Elastigroup with. Required if custom image or marketplace image are not specified.\n",
                                                "properties": {
                                                  "resourceGroupName": {
                                                    "title": "Resource Group Name",
                                                    "description": "Name of Resource Group for custom image\n",
                                                    "type": "string",
                                                    "example": "spotinst-azure"
                                                  },
                                                  "galleryName": {
                                                    "title": "Gallery Name",
                                                    "description": "Name of the gallery.\n",
                                                    "type": "string",
                                                    "example": "gallery-name"
                                                  },
                                                  "imageName": {
                                                    "title": "Image Name",
                                                    "description": "Name of the gallery image.\n",
                                                    "type": "string",
                                                    "example": "gallery-image-name"
                                                  },
                                                  "version": {
                                                    "title": "Version",
                                                    "description": "Image's version. Can be in the format x.x.x or 'latest'.\n",
                                                    "type": "string",
                                                    "example": "0.0.1"
                                                  },
                                                  "spotAccountId": {
                                                    "title": "Spot Account ID",
                                                    "description": "The Spot account ID that connected to the Azure subscription to which the gallery belongs. Relevant only in case of cross-subscription shared galleries. [Read more](https://docs.spot.io/elastigroup/features-azure/shared-image-galleries) about cross-subscription shared galleries in Elastigroup.",
                                                    "type": "string",
                                                    "example": "act-123456789"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "network": {
                                            "title": "Network",
                                            "description": "Define the Virtual Network and Subnet for your Elastigroup.",
                                            "type": "object",
                                            "required": [
                                              "resourceGroupName",
                                              "virtualNetworkName",
                                              "networkInterfaces"
                                            ],
                                            "properties": {
                                              "resourceGroupName": {
                                                "title": "Resource Group Name",
                                                "description": "Vnet Resource Group Name",
                                                "type": "string",
                                                "example": "subnetResourceGroup"
                                              },
                                              "virtualNetworkName": {
                                                "title": "Virtual Network Name",
                                                "description": "Virtual Network",
                                                "type": "string",
                                                "example": "vname"
                                              },
                                              "networkInterfaces": {
                                                "title": "Virtual Network Name",
                                                "description": "Virtual Network",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "required": [
                                                    "isPrimary",
                                                    "subnetName"
                                                  ],
                                                  "properties": {
                                                    "isPrimary": {
                                                      "title": "Is Primary Criteria",
                                                      "description": "Defines whether the network interface is primary or not.",
                                                      "type": "boolean",
                                                      "example": true
                                                    },
                                                    "subnetName": {
                                                      "title": "Subnet Name",
                                                      "description": "Subnet name",
                                                      "type": "string",
                                                      "example": "testSubnet"
                                                    },
                                                    "assignPublicIp": {
                                                      "title": "Assign Public IP",
                                                      "description": "Assign public IP",
                                                      "type": "boolean",
                                                      "example": true
                                                    },
                                                    "publicIpSku": {
                                                      "title": "Type of Public Ip",
                                                      "description": "Required if assignPublicIp=true values=[STANDARD/BASIC]",
                                                      "type": "string",
                                                      "example": "STANDARD"
                                                    },
                                                    "securityGroup": {
                                                      "title": "Security Group",
                                                      "description": "Security Group",
                                                      "type": "object",
                                                      "properties": {
                                                        "name": {
                                                          "title": "Name",
                                                          "description": "Requires valid security group name. Required if security group is specified.",
                                                          "type": "string",
                                                          "example": "test"
                                                        },
                                                        "resourceGroupName": {
                                                          "title": "Resource Group Name",
                                                          "description": "Requires valid resource group name. Required if security group is specified.",
                                                          "type": "string",
                                                          "example": "test"
                                                        }
                                                      }
                                                    },
                                                    "publicIps": {
                                                      "description": "Defined a pool of Public Ips (from Azure), that will be associated to the network interface. We will associate one public ip per instance until the pool is exhausted, in which case, we will create a new one.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "required": [
                                                          "resourceGroupName",
                                                          "name"
                                                        ],
                                                        "properties": {
                                                          "resourceGroupName": {
                                                            "description": "The resource group of the public ip.",
                                                            "type": "string",
                                                            "example": "resourceGroup"
                                                          },
                                                          "name": {
                                                            "description": "The name of the public ip.",
                                                            "type": "string",
                                                            "example": "name"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "enableIPForwarding": {
                                                      "title": "Enable IP Forwarding",
                                                      "description": "Enable IP Forwarding",
                                                      "type": "boolean",
                                                      "example": true
                                                    },
                                                    "additionalIpConfigurations": {
                                                      "title": "Additional IP Configurations",
                                                      "description": "Additional configuration of network interface",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "name": {
                                                            "title": "Name",
                                                            "description": "Required if additionalConfiguration has been specified.",
                                                            "type": "string",
                                                            "example": "test"
                                                          },
                                                          "privateIpAddressVersion": {
                                                            "title": "Private IP Address Version",
                                                            "description": "Possible values:\n+ IPv4\n+ IPv6",
                                                            "default": "IPv4"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "privateIpAddresses": {
                                                      "type": "array",
                                                      "description": "A list with unique items that every item is a valid IP",
                                                      "items": {
                                                        "type": "string",
                                                        "example": [
                                                          "172.23.4.20"
                                                        ]
                                                      }
                                                    },
                                                    "applicationSecurityGroups": {
                                                      "description": "List of Application Security Groups that will be associated to the primary ip configration of the network interface.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "required": [
                                                          "resourceGroupName",
                                                          "name"
                                                        ],
                                                        "properties": {
                                                          "resourceGroupName": {
                                                            "description": "The resource group of the Application Security Group.",
                                                            "type": "string",
                                                            "example": "AsgResourceGroup"
                                                          },
                                                          "name": {
                                                            "description": "The name of the Application Security group",
                                                            "type": "string",
                                                            "example": "AsgName"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "login": {
                                            "type": "object",
                                            "description": "Set admin access for accessing your VMs. Password/SSH is required for Linux.\n",
                                            "properties": {
                                              "userName": {
                                                "type": "string",
                                                "description": "user name for admin access to VMs.\\\nLogin can be set:\n* for windows: compute.launchSpecification.login.password\n* for linux: compute.launchSpecification.login.sshPublicKey\n\nJust user name, without pwd or SSH key\n",
                                                "example": "spotinst"
                                              },
                                              "sshPublicKey": {
                                                "type": "string",
                                                "description": "SSH for admin access to Linux VMs.\\\nOptional for Linux.\n",
                                                "example": "ssh-rsa"
                                              },
                                              "password": {
                                                "type": "string",
                                                "writeOnly": true,
                                                "description": "Password for admin access to Windows VMs.\\\nRequired for Windows.\n"
                                              }
                                            }
                                          },
                                          "loadBalancersConfig": {
                                            "type": "object",
                                            "description": "Configure a Load Balancer.\n",
                                            "properties": {
                                              "loadBalancers": {
                                                "type": "array",
                                                "description": "Add a load balancer. For Azure Gateway, each Backend Pool is a separate load balancer.\n",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "description": "The type of load balancer.\n",
                                                      "enum": [
                                                        "loadBalancer",
                                                        "applicationGateway"
                                                      ],
                                                      "example": "loadBalancer"
                                                    },
                                                    "resourceGroupName": {
                                                      "type": "string",
                                                      "description": "The Resource Group name of the Load Balancer.\n",
                                                      "example": "testResourceGroup"
                                                    },
                                                    "name": {
                                                      "type": "string",
                                                      "description": "Name of the Application Gateway/Load Balancer\n",
                                                      "example": "testLoadBalancer"
                                                    },
                                                    "sku": {
                                                      "type": "string",
                                                      "description": "* if type is LoadBalancer then possible values are:\n * “Standard\"\n * Basic”\n* if ApplicationGateway then possible values are:\n * “Standard_Large”\n * “Standard_Medium”\n * “Standard_Small”\n * “Standard_v2\n * “WAF_Large”\n * “WAF_Medium\"\n * “WAF_v2\"\n",
                                                      "example": "Standard"
                                                    },
                                                    "backendPoolNames": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      },
                                                      "description": "Name of the Backend Pool to register the Elastigroup VMs to.\\\nEach Backend Pool is a separate load balancer.\\\nRequired if Type is APPLICATION_GATEWAY.\n",
                                                      "example": [
                                                        "testBackendPool1",
                                                        "testBackendPool2"
                                                      ]
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "managedServiceIdentities": {
                                            "type": "array",
                                            "writeOnly": true,
                                            "description": "Add a user-assigned managed identity to the VMs in the cluster.\n",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "description": "name of the managed identity\n",
                                                  "example": "mySI2"
                                                },
                                                "resourceGroupName": {
                                                  "type": "string",
                                                  "description": "The Resource Group that the user-assigned managed identity resides in.\n",
                                                  "example": "myResourceGroup"
                                                }
                                              }
                                            }
                                          },
                                          "shutdownScript": {
                                            "type": "string",
                                            "format": "byte",
                                            "writeOnly": true,
                                            "example": "IyEvdXNyL2Jpbi9lbnYgYmFzaAoiR29vZGJ5ZSBvbGQgaW5zdGFuY2Ui",
                                            "description": "shutdown script for the group. Value should be passed as a string encoded at Base64 only\n"
                                          },
                                          "tags": {
                                            "type": "array",
                                            "description": "Key-Value pairs for VMs in the Elastigroup.\n",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "tagKey": {
                                                  "type": "string",
                                                  "description": "Tag Key for Vms in Elastigroup.\n",
                                                  "example": "env"
                                                },
                                                "tagValue": {
                                                  "type": "string",
                                                  "description": "Tag Value for VMs in Elastigroup.\n",
                                                  "example": "staging"
                                                }
                                              }
                                            }
                                          },
                                          "extensions": {
                                            "type": "array",
                                            "description": "List of objects for azure extensions\n",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "name",
                                                "type",
                                                "publisher",
                                                "apiVersion",
                                                "minorVersionAutoUpgrade"
                                              ],
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "description": "Required on compute.launchSpecification.extensions object\n",
                                                  "example": "extensionName"
                                                },
                                                "type": {
                                                  "type": "string",
                                                  "description": "Required on compute.launchSpecification.extensions object\n",
                                                  "example": "customScript"
                                                },
                                                "publisher": {
                                                  "type": "string",
                                                  "description": "Required on compute.launchSpecification.extensions object\n",
                                                  "example": "Microsoft.Azure.Extensions"
                                                },
                                                "apiVersion": {
                                                  "type": "string",
                                                  "description": "The API version of the extension. Required if extension specified.\n",
                                                  "example": "2.0"
                                                },
                                                "minorVersionAutoUpgrade": {
                                                  "type": "boolean",
                                                  "description": "Required on compute.launchSpecification.extensions object\n",
                                                  "example": true
                                                },
                                                "publicSettings": {
                                                  "type": "object",
                                                  "description": "Object for public settings\n"
                                                },
                                                "protectedSettings": {
                                                  "type": "object",
                                                  "description": "Object for protected settings\n"
                                                },
                                                "enableAutomaticUpgrade": {
                                                  "title": "enable automatic upgrade",
                                                  "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available.\n",
                                                  "type": "boolean",
                                                  "example": false
                                                },
                                                "protectedSettingsFromKeyVault": {
                                                  "title": "Protected Settings from key vault",
                                                  "description": "The extensions protected settings that are passed by reference, and consumed from key vault.\n",
                                                  "type": "object",
                                                  "required": [
                                                    "sourceVault",
                                                    "secretUrl"
                                                  ],
                                                  "properties": {
                                                    "sourceVault": {
                                                      "title": "sourceVault",
                                                      "type": "string",
                                                      "description": "The relative URL of the Key Vault containing the secret.\n",
                                                      "example": "/subscriptions/1234-1234-1234/resourceGroups/rg_test/providers/Microsoft.KeyVault/vaults/testKeyVault"
                                                    },
                                                    "secretUrl": {
                                                      "title": "secretUrl",
                                                      "type": "string",
                                                      "description": "The URL referencing a secret in a Key Vault.\n",
                                                      "example": "https://testKeyVault.vault.azure.net/secrets/SecretTest/123456"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "dataDisks": {
                                            "type": "array",
                                            "description": "list of data disks to be attached to the vms in the group.\n",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "sizeGB": {
                                                  "type": "integer",
                                                  "description": "The size of the data disk in GB, Required if dataDisks is specified.\n",
                                                  "minimum": 1,
                                                  "maximum": 1023,
                                                  "example": 1
                                                },
                                                "lun": {
                                                  "type": "integer",
                                                  "description": "The lun of the data disk, Required if dataDisks is specified.\n",
                                                  "example": 1
                                                },
                                                "type": {
                                                  "type": "string",
                                                  "description": "The type of the data disk\n",
                                                  "enum": [
                                                    "Standard_LRS",
                                                    "Premium_LRS",
                                                    "StandardSSD_LRS",
                                                    "StandardSSD_ZRS",
                                                    "Premium_ZRS"
                                                  ],
                                                  "example": "Standard_LRS"
                                                }
                                              }
                                            }
                                          },
                                          "osDisk": {
                                            "type": "object",
                                            "description": "Specify OS disk specification other than default.\n",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "description": "The type of the OS disk.\n",
                                                "enum": [
                                                  "Standard_LRS",
                                                  "Premium_LRS",
                                                  "StandardSSD_LRS",
                                                  "StandardSSD_ZRS",
                                                  "Premium_ZRS"
                                                ],
                                                "example": "Standard_LRS"
                                              },
                                              "sizeGB": {
                                                "type": "integer",
                                                "description": "The size of the data disk in GB, Required if dataDisks is specified.\n",
                                                "minimum": 1,
                                                "maximum": 1023,
                                                "example": 30
                                              }
                                            }
                                          },
                                          "bootDiagnostics": {
                                            "type": "object",
                                            "description": "Will enable boot diagnostics in Azure when a new VM is launched",
                                            "required": [
                                              "isEnabled",
                                              "type"
                                            ],
                                            "properties": {
                                              "isEnabled": {
                                                "type": "boolean",
                                                "description": "Allows you to enable and disable the configuration of boot diagnostics at launch"
                                              },
                                              "type": {
                                                "type": "string",
                                                "description": "Defines the type of storage on VM launch  in Azure.",
                                                "enum": [
                                                  "managed",
                                                  "unmanaged"
                                                ]
                                              },
                                              "storageUri": {
                                                "type": "string",
                                                "description": "The storage URI that is used if type is unmanaged. The storage URI must follow the blob storage URI format (\"https://<blobstoragename>.blob.core.windows.net/\"). StorageUri is required if the type is unmanaged. StorageUri must be ‘null’ in case the boot diagnostics type is managed"
                                              }
                                            },
                                            "example": {
                                              "isEnabled": true,
                                              "type": "unmanaged",
                                              "storageUri": "https://example.blob.core.windows.net/"
                                            }
                                          },
                                          "secrets": {
                                            "title": "secrets",
                                            "type": "array",
                                            "description": "Set of certificates that should be installed the VM\n",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "sourceVault": {
                                                  "type": "object",
                                                  "description": "The key vault reference, contains the required certificates\n",
                                                  "required": [
                                                    "resourceGroupName",
                                                    "name"
                                                  ],
                                                  "properties": {
                                                    "resourceGroupName": {
                                                      "type": "string",
                                                      "description": "The resource group name of the key vault\n"
                                                    },
                                                    "name": {
                                                      "type": "string",
                                                      "description": "The name of the key vault\n"
                                                    }
                                                  }
                                                },
                                                "vaultCertificates": {
                                                  "type": "array",
                                                  "description": "The required certificate references\n",
                                                  "items": {
                                                    "type": "object",
                                                    "required": [
                                                      "certificateUrl",
                                                      "certificateStore"
                                                    ],
                                                    "properties": {
                                                      "certificateUrl": {
                                                        "type": "string",
                                                        "description": "The URL of the certificate under the key vault\n"
                                                      },
                                                      "certificateStore": {
                                                        "type": "string",
                                                        "description": "The certificate store directory the VM. The directory is created in the LocalMachine account.\n* This field is required only when using windows OS type\n* This field must be ‘null’ when the OS type is Linux\n"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "zones": {
                                        "type": "array",
                                        "description": "List of Azure Availability Zones in the defined region; If not defined, Virtual machines will be launched regionally.",
                                        "items": {
                                          "enum": [
                                            "1",
                                            "2",
                                            "3"
                                          ],
                                          "type": "string",
                                          "example": "1"
                                        }
                                      },
                                      "preferredZones": {
                                        "type": "array",
                                        "description": "The AZs to prioritize when launching VMs. If no markets are available in the Preferred AZs, VMs are launched in the non-preferred AZs.\n<a style=color:red>Must be a sublist of compute.zones.</a>\n",
                                        "items": {
                                          "enum": [
                                            "1",
                                            "2",
                                            "3"
                                          ],
                                          "type": "string",
                                          "example": "1"
                                        }
                                      }
                                    }
                                  },
                                  "health": {
                                    "$ref": "#/paths/~1azure~1compute~1group~1%7BgroupId%7D/put/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/health"
                                  },
                                  "scheduling": {
                                    "$ref": "#/paths/~1azure~1compute~1group~1%7BgroupId%7D/put/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/scheduling"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "readOnly": true,
                                    "format": "date-time",
                                    "example": "2018-10-10T10:50:29.000+0000"
                                  },
                                  "updatedAt": {
                                    "type": "string",
                                    "readOnly": true,
                                    "format": "date-time",
                                    "example": "2018-11-01T10:50:29.000+0000"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:compute:group"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/{groupId}/status": {
      "get": {
        "summary": "Get Elastigroup Status",
        "description": "Get status of Elastigroup cluster.",
        "operationId": "elastigroupAzureSpotVmsGetStatus",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "type": "string",
                                    "example": "ready",
                                    "enum": [
                                      "ready",
                                      "deploying",
                                      "replacing",
                                      "unsynced"
                                    ]
                                  },
                                  "vms": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "vmName": {
                                          "type": "string",
                                          "example": "vm-12345"
                                        },
                                        "region": {
                                          "type": "string",
                                          "example": "eastus"
                                        },
                                        "vmSize": {
                                          "type": "string",
                                          "example": "standard_a1_v2"
                                        },
                                        "lifeCycle": {
                                          "type": "string",
                                          "example": "spot"
                                        },
                                        "os": {
                                          "type": "string",
                                          "example": "Linux"
                                        },
                                        "privateIp": {
                                          "type": "integer",
                                          "example": "192.0.0.1"
                                        },
                                        "publicIp": {
                                          "type": "integer",
                                          "example": "183.123.67.79"
                                        },
                                        "provisioningState": {
                                          "type": "string",
                                          "example": "succeeded"
                                        },
                                        "powerState": {
                                          "type": "string",
                                          "example": "running"
                                        },
                                        "createdAt": {
                                          "type": "string",
                                          "example": "2020-06-18T12:02:49.000Z"
                                        }
                                      }
                                    }
                                  },
                                  "suspendedProcesses": {
                                    "type": "array",
                                    "items": {
                                      "anyOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "example": "autoHealing"
                                            },
                                            "expiresAt": {
                                              "type": "string",
                                              "example": "2020-11-10T18:43:52.000Z"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "example": "signalTimeout"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "example": "autoScale"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "example": "scaleDown"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "example": "syncStrategy"
                                            },
                                            "expiresAt": {
                                              "type": "string",
                                              "example": "2020-11-10T17:43:52.000Z"
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "example": [
                                      {
                                        "name": "autoHealing",
                                        "expiresAt": "2020-11-10T18:43:52.000Z"
                                      },
                                      {
                                        "name": "signalTimeout"
                                      },
                                      {
                                        "name": "autoScale"
                                      },
                                      {
                                        "name": "scaleDown"
                                      },
                                      {
                                        "name": "syncStrategy",
                                        "expiresAt": "2020-11-10T17:43:52.000Z"
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:compute:group:status"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/{groupId}/vmHealthiness": {
      "get": {
        "summary": "Vm Healthiness",
        "description": "Get a list of vms with health status.",
        "operationId": "elastigroupAzureVmHealthiness",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "groupId",
            "example": "sig-123123",
            "description": "Elastigroup's ID\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Vm Healthiness Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/group/sig-123123/vmHealthiness"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "vmName": {
                                    "type": "string",
                                    "description": "Vm Name",
                                    "example": "vm-123456789"
                                  },
                                  "lifeCycle": {
                                    "type": "string",
                                    "description": "Life Cycle",
                                    "enum": [
                                      "SPOT",
                                      "ON_DEMAND"
                                    ],
                                    "example": "SPOT"
                                  },
                                  "healthStatus": {
                                    "type": "string",
                                    "description": "Health Status",
                                    "enum": [
                                      "HEALTHY",
                                      "UNHEALTHY",
                                      "UNKNOWN"
                                    ],
                                    "example": "HEALTHY"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:compute:group:vmHealthiness"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/{groupId}/suspend": {
      "put": {
        "summary": "Suspend Group",
        "description": "Suspends the Group.\n",
        "operationId": "elastigroupAzureSpotVmsSuspend",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Create Elastigroup Azure Spot VMs Process Suspensions",
                    "required": [
                      "processes"
                    ],
                    "properties": {
                      "processes": {
                        "type": "array",
                        "description": "List of processes to create or update their suspensions\n",
                        "items": {
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Process name to create signal timeout\n",
                              "enum": [
                                "autoHealing",
                                "signalTimeout",
                                "autoScale",
                                "scaleDown",
                                "syncStrategy",
                                "preventiveReplacement"
                              ]
                            },
                            "ttlInMinutes": {
                              "type": "integer",
                              "minimum": 0,
                              "description": "The duration in minutes which the process is suspended for; \\\nif not provided, then it will remain suspended until resumed\n"
                            }
                          }
                        },
                        "example": [
                          {
                            "name": "autoHealing",
                            "ttlInMinute": 120
                          },
                          {
                            "name": "signalTimeout"
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Spot Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/group/sig-12345/suspend?accountId=act-123456789"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/{groupId}/resume": {
      "put": {
        "summary": "Resume Group",
        "description": "Resumes the Group.\n",
        "operationId": "elastigroupAzureSpotVmsResume",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Resume Elastigroup Azure Spot VMs processes",
                    "required": [
                      "processes"
                    ],
                    "properties": {
                      "processes": {
                        "type": "array",
                        "description": "List of processes to cancel their suspensions\n",
                        "items": {
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Process name to create signal timeout\n",
                              "enum": [
                                "autoHealing",
                                "signalTimeout",
                                "autoScale",
                                "scaleDown",
                                "syncStrategy",
                                "preventiveReplacement"
                              ]
                            }
                          }
                        },
                        "example": [
                          {
                            "name": "syncStrategy"
                          },
                          {
                            "name": "signalTimeout"
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Spot Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/group/sig-12345/resume?accountId=act-123456789"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/{groupId}/detachVms": {
      "put": {
        "summary": "Detach VMs",
        "description": "Scale down specific virtual machines in Elastigroup cluster.\n",
        "operationId": "elastigroupAzureSpotVmsDetachVms",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "vmsToDetach",
                  "shouldTerminateVms",
                  "shouldDecrementTargetCapacity"
                ],
                "type": "object",
                "properties": {
                  "vmsToDetach": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "vm-0fbd69f960db"
                    },
                    "description": "Array of virtual machine names to detach.\n"
                  },
                  "shouldTerminateVms": {
                    "type": "boolean",
                    "example": true,
                    "description": "Whether to terminate the VMs or not.\n"
                  },
                  "shouldDecrementTargetCapacity": {
                    "type": "boolean",
                    "example": true,
                    "description": "Prevent Elastigroup from scaling back to target capacity when virtual machines are detached.\n"
                  },
                  "shouldDeregisterVmFromLb": {
                    "type": "boolean",
                    "default": true,
                    "example": true,
                    "description": "Indicates whether to deregister the stateful node's VM from any type of load balancer. Will only be applied if the shouldTerminateVms is 'false'\n"
                  },
                  "drainingTimeout": {
                    "type": "string",
                    "example": 300,
                    "description": "The time in seconds to allow the virtual machine be be drained from incoming TCP connections and detached from MLB before terminating it.\n",
                    "default": 120
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "detachedVms": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "vmName": {
                                          "type": "string",
                                          "example": "vm-12345"
                                        },
                                        "region": {
                                          "type": "string",
                                          "example": "eastus"
                                        },
                                        "vmSize": {
                                          "type": "string",
                                          "example": "standard_a1_v2"
                                        },
                                        "lifeCycle": {
                                          "type": "string",
                                          "example": "spot"
                                        },
                                        "os": {
                                          "type": "string",
                                          "example": "Linux"
                                        },
                                        "privateIp": {
                                          "type": "integer",
                                          "example": "192.0.0.1"
                                        },
                                        "publicIp": {
                                          "type": "integer",
                                          "example": "183.123.67.79"
                                        },
                                        "provisioningState": {
                                          "type": "string",
                                          "example": "succeeded"
                                        },
                                        "powerState": {
                                          "type": "string",
                                          "example": "detached"
                                        },
                                        "createdAt": {
                                          "type": "string",
                                          "example": "2020-06-18T12:02:49.000Z"
                                        }
                                      }
                                    }
                                  },
                                  "newVms": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "vmName": {
                                          "type": "string",
                                          "example": "vm-56789"
                                        },
                                        "region": {
                                          "type": "string",
                                          "example": "eastus"
                                        },
                                        "vmSize": {
                                          "type": "string",
                                          "example": "standard_a1_v2"
                                        },
                                        "lifeCycle": {
                                          "type": "string",
                                          "example": "spot"
                                        },
                                        "os": {
                                          "type": "string",
                                          "example": "Linux"
                                        },
                                        "privateIp": {
                                          "type": "integer",
                                          "example": "192.0.0.1"
                                        },
                                        "publicIp": {
                                          "type": "integer",
                                          "example": "183.123.67.79"
                                        },
                                        "provisioningState": {
                                          "type": "string",
                                          "example": "succeeded"
                                        },
                                        "powerState": {
                                          "type": "string",
                                          "example": "running"
                                        },
                                        "createdAt": {
                                          "type": "string",
                                          "example": "2020-06-18T12:02:49.000Z"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:compute:group:detachVms"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/{groupId}/scale/down": {
      "put": {
        "summary": "Scale Down",
        "description": "Scale down virtual machines in Elastigroup cluster.\n",
        "operationId": "elastigroupAzureSpotVmsScaleDown",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "adjustment",
            "example": 5,
            "description": "Number of VMs to scale down\n",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1azure~1compute~1group~1%7BgroupId%7D~1status/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/{groupId}/scale/up": {
      "put": {
        "summary": "Scale Up",
        "description": "Scale up virtual machines in Elastigroup cluster.\n",
        "operationId": "elastigroupAzureSpotVmsScaleUp",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "adjustment",
            "example": 5,
            "description": "Number of VMs to scale up\n",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1azure~1compute~1group~1%7BgroupId%7D~1status/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/{groupId}/deployment": {
      "post": {
        "summary": "Start Deployment",
        "description": "Deploy the Elastigroup. This triggers a Blue/Green deployment that replaces the existing VMs in the Elastigroup.\n",
        "operationId": "elastigroupAzureSpotVmsCreateDeployment",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "deployment": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "readOnly": true,
                            "example": "sbgd-f331fb8e"
                          },
                          "groupId": {
                            "type": "string",
                            "readOnly": true,
                            "example": "sig-a7aa60cd"
                          },
                          "status": {
                            "type": "string",
                            "readOnly": true,
                            "example": "deploymentStart"
                          },
                          "currentBatch": {
                            "type": "integer",
                            "readOnly": true,
                            "example": 1
                          },
                          "numOfBatches": {
                            "type": "integer",
                            "readOnly": true,
                            "example": 2
                          },
                          "progress": {
                            "type": "object",
                            "readOnly": true,
                            "properties": {
                              "unit": {
                                "type": "string",
                                "example": "percentage"
                              },
                              "value": {
                                "type": "integer",
                                "example": 10
                              }
                            }
                          },
                          "updatedAt": {
                            "type": "string",
                            "readOnly": true,
                            "example": "2020-06-22T11:15:06.614Z"
                          },
                          "createdAt": {
                            "type": "string",
                            "readOnly": true,
                            "example": "2020-06-22T11:15:06.614Z"
                          },
                          "batchSizePercentage": {
                            "type": "integer",
                            "example": 50,
                            "writeOnly": true,
                            "description": "Indicates (in percentage) the batch size of the deployment (meaning, how many nodes to replace in each batch).\\\nCannot be null.\n",
                            "default": 25,
                            "minimum": 1,
                            "maximum": 100
                          },
                          "gracePeriod": {
                            "type": "integer",
                            "example": 300,
                            "writeOnly": true,
                            "description": "Indicates (in seconds) the timeout to wait until the node becomes healthy.\n",
                            "default": 600,
                            "minimum": 300
                          },
                          "batchMinHealthyPercentage": {
                            "type": "integer",
                            "example": 100,
                            "writeOnly": true,
                            "description": "Indicates the threshold of minimum healthy virtual machines in a single batch.\\\nIf the amount of healthy virtual machines in a single batch is under the threshold, the deployment will fail.\\\nThe value of the parameter should represent the number in percentage (%) of the batch.\n",
                            "default": 50,
                            "minimum": 1,
                            "maximum": 100
                          },
                          "drainingTimeout": {
                            "type": "integer",
                            "example": 120,
                            "writeOnly": true,
                            "description": "Indicates (in seconds) the timeout to drain the instances. Can be null.\\\nDefault - The Elastigroups draining time out or 120.\n",
                            "minimum": 0
                          },
                          "healthCheckTypes": {
                            "type": "array",
                            "description": "Define a health check type. Can be null.\\\nIf no value is set, the deployment will use the group's auto-healing health check.\n",
                            "writeOnly": true,
                            "items": {
                              "type": "string",
                              "enum": [
                                "vmState",
                                "applicationGateway"
                              ]
                            },
                            "example": [
                              "vmState"
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1azure~1compute~1group~1%7BgroupId%7D~1deployment/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get All Deployments",
        "description": "Get a list of all the deployments of a specific Elastigroup and the status of each one.\n",
        "operationId": "elastigroupAzureSpotVmsListGroupDeployment",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "LIMIT",
            "example": 14,
            "description": "Limits the number of deployments returned. Default: 5\n",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "SORT",
            "example": "createdAt:DESC",
            "description": "Field by which to sort the results. Default: createdAt:DESC\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1azure~1compute~1group~1%7BgroupId%7D~1deployment/post/requestBody/content/application~1json/schema/allOf/0/properties/deployment"
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:compute:group:deployment"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/{groupId}/deployment/{deploymentId}": {
      "get": {
        "summary": "Get Deployment",
        "description": "Get the status of a specific deployment.\n",
        "operationId": "elastigroupAzureSpotVmsDeploymentStatus",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "path",
            "name": "deploymentId",
            "example": "sbgd-9876",
            "description": "The deployment ID you want to query.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1azure~1compute~1group~1%7BgroupId%7D~1deployment/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/{groupId}/deployment/{deploymentId}/details": {
      "get": {
        "summary": "Get Deployment Status",
        "description": "Get the detailed status of a specific deployment. This includes status details per batch and other information.\n",
        "operationId": "elastigroupAzureSpotVmsDeploymentStatusDetails",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "path",
            "name": "deploymentId",
            "example": "sbgd-9876",
            "description": "The deployment ID you want to query.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "detailsOverview": {
                                    "type": "object",
                                    "properties": {
                                      "deploymentId": {
                                        "type": "string",
                                        "example": "sbgd-04c4658b"
                                      },
                                      "numberOfBatches": {
                                        "type": "integer",
                                        "example": 2
                                      },
                                      "currentBatch": {
                                        "type": "integer",
                                        "example": 2
                                      },
                                      "gracePeriod": {
                                        "type": "integer",
                                        "example": 2
                                      },
                                      "blueVms": {
                                        "type": "integer",
                                        "example": 2
                                      },
                                      "greenVms": {
                                        "type": "integer",
                                        "example": 1
                                      },
                                      "description": {
                                        "type": "string",
                                        "example": null
                                      },
                                      "errorMessage": {
                                        "type": "string",
                                        "example": null
                                      },
                                      "createdAt": {
                                        "type": "string",
                                        "example": "2020-06-18T05:33:18.000Z"
                                      },
                                      "healthCheck": {
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "example": "instanceState"
                                        }
                                      }
                                    }
                                  },
                                  "batches": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "batch": {
                                          "type": "integer",
                                          "example": 1
                                        },
                                        "blue": {
                                          "type": "object",
                                          "properties": {
                                            "vmName": {
                                              "type": "string",
                                              "example": "i-57ef3cf7a694"
                                            },
                                            "batchNum": {
                                              "type": "integer",
                                              "example": 1
                                            },
                                            "status": {
                                              "type": "string",
                                              "example": "detached"
                                            },
                                            "type": {
                                              "type": "string",
                                              "example": "old"
                                            },
                                            "updatedAt": {
                                              "type": "string",
                                              "example": "2020-06-18T11:16:58.000Z"
                                            }
                                          }
                                        },
                                        "green": {
                                          "type": "object",
                                          "properties": {
                                            "vmName": {
                                              "type": "string",
                                              "example": "i-f2a44ba41875"
                                            },
                                            "batchNum": {
                                              "type": "integer",
                                              "example": 1
                                            },
                                            "status": {
                                              "type": "string",
                                              "example": "detached"
                                            },
                                            "type": {
                                              "type": "string",
                                              "example": "old"
                                            },
                                            "updatedAt": {
                                              "type": "string",
                                              "example": "2020-06-18T11:16:58.000Z"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "events": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "type": "string",
                                          "example": "deploymentStart"
                                        },
                                        "eventType": {
                                          "type": "string",
                                          "example": "Batch 1 - Launching New instances"
                                        },
                                        "timestamp": {
                                          "type": "string",
                                          "example": "2020-06-18T05:33:18.000Z"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:compute:deployment:details"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/import/resourceGroup/{resourceGroupName}/scaleSet/{scaleSetName}": {
      "get": {
        "summary": "Import Group From Scale Set",
        "description": "Given a scale set, constructs a valid group configuration based on the scale set and returns it.",
        "operationId": "elastigroupAzureSpotVmsGetAScaleSet",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "example": "ExampleResourceGroup",
            "description": "Resource Group Name - Must be valid.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "scaleSetName",
            "example": "MyExampleScaleSetImport",
            "description": "Scale Set Name - Must be valid\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/group/import/resourceGroup/myResourceGroup/scaleSet/myScaleSet"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1azure~1compute~1group/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                              }
                            },
                            "kind": {
                              "example": "azure:compute:elastigroup:importScaleSet"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/import/resourceGroup/{resourceGroupName}/virtualMachine/{virtualMachineName}": {
      "get": {
        "summary": "Import Group From Virtual Machine",
        "description": "Given a virtual machine, constructs a valid group configuration based on the virtual machine and returns it.\n",
        "operationId": "elastigroupAzureSpotVmsImportFromVirtualMachine",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "required": true,
            "name": "resourceGroupName",
            "example": "ExampleResourceGroup",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "virtualMachineName",
            "example": "MyExampleVirtualMachineImport",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/group/import/resourceGroup/myResourceGroup/scaleSet/myScaleSet"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1azure~1compute~1group/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                              }
                            },
                            "kind": {
                              "example": "azure:compute:elastigroup:importVirtualMachine"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/import/resourceGroup/{resourceGroupName}/loadBalancer/{loadBalancerName}/backendPool/{backendPoolName}": {
      "get": {
        "summary": "Import Group From Load Balancer",
        "description": "Given a load balancer, constructs a valid group configuration and returns it.\n",
        "operationId": "elastigroupAzureSpotVmsImportFromLoadBalancer",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "example": "ExampleResourceGroup",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "loadBalancerName",
            "example": "MyExampleLoadBalancerImport",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "backendPoolName",
            "example": "MyExampleBackendPoolName",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/group/import/resourceGroup/myResourceGroup/loadBalancer/myLoadBalancer/backendPool/myBackendPool"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1azure~1compute~1group/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                              }
                            },
                            "kind": {
                              "example": "azure:compute:group:importLoadBalancer"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/import/resourceGroup/{resourceGroupName}/applicationGateway/{applicationGatewayName}/backendPool/{backendPoolName}": {
      "get": {
        "summary": "Import Group From Application Gateway",
        "description": "Given an application gateway, constructs a valid group configuration and returns it.\n",
        "operationId": "elastigroupAzureSpotVmsImportFromApplicationGateway",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "example": "ExampleResourceGroup",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "applicationGatewayName",
            "example": "MyExampleApplicationGatewayImport",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "backendPoolName",
            "example": "MyExampleBackendPoolName",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/group/import/resourceGroup/myResourceGroup/applicationGateway/myApplicationGateway/backendPool/myBackendPool"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1azure~1compute~1group/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                              }
                            },
                            "kind": {
                              "example": "azure:compute:group:importApplicationGateway"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/vm/signal": {
      "post": {
        "summary": "Create VM Signal",
        "description": "The VM signal API is used for notifying Spot about the VM state so that Spot can act accordingly. Supported signals are vmReady – Whenever this signal is sent, Spot will register the instance to the relevant Load Balancer and Application Gateway. vmReadyToShutdown – When this signal is received after a vm is detached; we will immediately terminate the vm. You must define the expected signals for your Elastigroup in the group configuration.",
        "operationId": "elastigroupAzureSpotVmsCreateVMSignal",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "vmName",
                      "signalType",
                      "resourceGroupName"
                    ],
                    "properties": {
                      "vmName": {
                        "type": "string",
                        "example": "vm-123456",
                        "description": "The virtual machine ID the signal refers to.\n"
                      },
                      "signalType": {
                        "type": "string",
                        "enum": [
                          "vmReady",
                          "vmReadyToShutdown"
                        ],
                        "example": "vmReady",
                        "description": "The specific signal you want to trigger.\n"
                      },
                      "resourceGroupName": {
                        "type": "string",
                        "example": "TestResourceGroup",
                        "description": "This is the resource group of the Elastigroup or Stateful Node.\n"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "description": "Original request properties.\n",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "e593ff58-067d-4340-92f9-8b1c0bad70d7",
                              "description": "Unique identifier associated with this request.\n"
                            },
                            "url": {
                              "type": "string",
                              "description": "The URL that was used for the request.\n"
                            },
                            "method": {
                              "type": "string",
                              "description": "The HTTP **METHOD** used for the request.\n"
                            },
                            "timestamp": {
                              "type": "string",
                              "example": "2018-06-20T11:35:01.745Z",
                              "description": "When the request was received by Spot.\n"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "description": "Response package that includes status, type, and any relevant data.\n",
                          "properties": {
                            "status": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "integer",
                                  "example": 200,
                                  "description": "HTTP status code assigned to this response.\n"
                                },
                                "message": {
                                  "type": "string",
                                  "example": "OK",
                                  "description": "HTTP status message for the respective status code.\n"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/{groupId}/vm/{vmName}/protection": {
      "post": {
        "summary": "Virtual Machine Protection",
        "description": "Protect virtual machines in Elastigroup cluster.\n",
        "operationId": "elastigroupAzureSpotVmsProtect",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "path",
            "name": "vmName",
            "example": "i-f2a44ba41875",
            "description": "The virtual machine name to protect.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "ttlInMinutes",
            "example": 180,
            "description": "Specify a TTL (in minutes) for this protection, meaning, for how long the protection will be valid for. (If null, infinite protection)\n",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Set protection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "integer",
                              "example": 200
                            },
                            "message": {
                              "type": "string",
                              "example": "OK"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Virtual Machine Remove Protection",
        "description": "Un-Protect virtual machines in Elastigroup cluster.\n",
        "operationId": "elastigroupAzureSpotVmsUnProtect",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "path",
            "name": "vmName",
            "example": "i-f2a44ba41875",
            "description": "The virtual machine name to remove protection.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Remove protection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "integer",
                              "example": 200
                            },
                            "message": {
                              "type": "string",
                              "example": "OK"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/{groupId}/logs": {
      "get": {
        "summary": "Get Elastilog",
        "description": "You can fetch a Elastigroup's Elastilog via the Spot API, in order to be able to consume elastilog from various tools used for log storing and analyzing. Logs have retention of 3 months back from today, so minimal fromDate should be up to 3 months back at runtime.",
        "operationId": "elastigroupAzureSpotVmsGetElastigroupLogEntries",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/2"
          },
          {
            "in": "query",
            "name": "SEVERITY",
            "example": "WARN",
            "description": "Severity of log entries to extract.\n",
            "schema": {
              "type": "string",
              "enum": [
                "DEBUG",
                "WARN",
                "INFO",
                "ALL",
                "ERROR"
              ]
            }
          },
          {
            "in": "query",
            "name": "RESOURCE_ID",
            "example": "vm-12345678",
            "description": "Filter log extracted entries related to a specific resource id Default: Null\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "example": 500,
            "description": "Maximum number of lines to extract in a response. Max value allowed - 1000. Default is 500, if got null.\n",
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Elastigroup Wrapper",
                                "properties": {
                                  "message": {
                                    "type": "string",
                                    "example": "Successfully detached [vm-b4ab9da435aa]"
                                  },
                                  "severity": {
                                    "type": "string",
                                    "example": "INFO"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "example": "2020-07-16T16:46:49.000Z"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:ec2:group:log"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/statefulNode": {
      "post": {
        "summary": "Create Stateful Node",
        "description": "Create a new stateful node.",
        "operationId": "azureStatefulNodeCreate",
        "tags": [
          "Elastigroup Azure Stateful"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Create Azure Stateful Node",
                    "properties": {
                      "statefulNode": {
                        "type": "object",
                        "title": "Azure Stateful Node",
                        "required": [
                          "name",
                          "region",
                          "resourceGroupName",
                          "strategy",
                          "persistence",
                          "compute"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "ssn-12345678",
                            "readOnly": true,
                            "description": "Stateful Node unique identifier.\n"
                          },
                          "name": {
                            "type": "string",
                            "example": "Spot Stateful Node",
                            "description": "Stateful Node Name.\n"
                          },
                          "region": {
                            "type": "string",
                            "example": "westus2",
                            "description": "The Azure region in which the Stateful Node will be launched.\n"
                          },
                          "resourceGroupName": {
                            "type": "string",
                            "example": "spotResourceGroup",
                            "description": "The Azure resource group in which the VM and all of the subsequent subresources will be launched.\n"
                          },
                          "description": {
                            "type": "string",
                            "example": "This is my example stateful node",
                            "description": "The description for the Stateful Node.\n"
                          },
                          "strategy": {
                            "type": "object",
                            "title": "Stateful Node Strategy",
                            "description": "The strategy to launch the underlying VM and Spot’s behavior for the Stateful Node.\n",
                            "required": [
                              "fallbackToOd"
                            ],
                            "properties": {
                              "preferredLifecycle": {
                                "type": "string",
                                "enum": [
                                  "od",
                                  "spot"
                                ],
                                "description": "The preferred life cycle to launch the VM.\n",
                                "example": "od",
                                "default": "spot"
                              },
                              "signals": {
                                "type": "array",
                                "description": "Signals that VMs are expected to send to the platform.\n",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "timeout"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "description": "The defined type of signal.\n",
                                      "enum": [
                                        "vmReady",
                                        "vmReadyToShutdown"
                                      ],
                                      "example": "vmReady"
                                    },
                                    "timeout": {
                                      "type": "integer",
                                      "description": "The timeout in seconds to hold the vm until a signal is sent.\n* If no signal is sent the vm will be replaced (vmReady) or we will terminate the VM (vmReadyToShutdown) after the timeout.\n",
                                      "default": 1800,
                                      "minimum": 1,
                                      "example": 180
                                    }
                                  }
                                }
                              },
                              "fallbackToOd": {
                                "type": "boolean",
                                "description": "In case of no spots available, Stateful Node will launch an On-demand instance instead.\n",
                                "example": true
                              },
                              "drainingTimeout": {
                                "type": "integer",
                                "description": "Time (in seconds) to allow the VM be drained from incoming TCP connections and detached from LB before terminating it.\n",
                                "default": 120,
                                "minimum": 1,
                                "example": 30
                              },
                              "revertToSpot": {
                                "description": "Hold settings for strategy correction - replacing On-Demand for Spot VMs\n",
                                "type": "object",
                                "required": [
                                  "performAt"
                                ],
                                "properties": {
                                  "performAt": {
                                    "type": "string",
                                    "enum": [
                                      "timeWindow",
                                      "never",
                                      "always"
                                    ],
                                    "description": "Defines the time in which to perform revert to spot.\ndefault: always\n",
                                    "example": "timeWindow"
                                  }
                                }
                              },
                              "optimizationWindows": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Defines the windows of which to revert to spot.\n* <a style=color:red>Requires the following format: \"ddd:hh:mm-ddd:hh:mm (day:hour(0-23):minute(0-59))\".</a>\n* <a style=color:red>Must be not empty if revertToSpot.performAt = timeWindow.</a>\n",
                                "example": [
                                  "Mon:03:00-Wed:02:30"
                                ]
                              },
                              "odWindows": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "* Define the time windows in which the underlying VM will be set as an on-demand lifecycle type.\n* During the entire time window, the rest of the strategy processes will be paused.\n* Switching between on-demand and Spot VM types at the enter/exit of the time window will trigger the recycling of the stateful node.\n* <a style=color:red>Requires the following format: \"ddd:hh:mm-ddd:hh:mm (day:hour(0-23):minute(0-59))\".</a>\n",
                                "example": [
                                  "Sun:23:00-Mon:02:30"
                                ]
                              },
                              "capacityReservation": {
                                "type": "object",
                                "description": "On-demand Capacity Reservation group enables you to reserve Compute capacity in an Azure region or an Availability Zone for any duration of time.\n[CRG can only be created on the Azure end.](https://learn.microsoft.com/en-us/azure/virtual-machines/capacity-reservation-create)\n",
                                "required": [
                                  "shouldUtilize",
                                  "utilizationStrategy"
                                ],
                                "properties": {
                                  "shouldUtilize": {
                                    "type": "boolean",
                                    "description": "Determines whether capacity reservations should be utilized.\n",
                                    "example": true
                                  },
                                  "utilizationStrategy": {
                                    "type": "string",
                                    "description": "The priority requested for using CRG. This value will determine if CRG is used ahead of spot VMs or On-demand VMs.\n* utilizeOverOD- If picked, we will use CRG only in case On demand should be launched.\n* utilizeOverSpot-  CRG will be preferred over Spot. Only after CRG is fully used, spot VMs can be used.\n",
                                    "enum": [
                                      "utilizeOverSpot",
                                      "utilizeOverOD"
                                    ],
                                    "example": "utilizeOverSpot"
                                  },
                                  "capacityReservationGroups": {
                                    "type": "array",
                                    "description": "List of the desired CRGs to use under the associated Azure subscription.\nWhen null we will utilize any available reservation that matches the Virtual Node Group.\n",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "resourceGroupName"
                                      ],
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the CRG.\n",
                                          "example": "capacityReservationGroupName"
                                        },
                                        "resourceGroupName": {
                                          "type": "string",
                                          "description": "Azure resource group name\n",
                                          "example": "resourceGroupName"
                                        },
                                        "shouldPrioritize": {
                                          "type": "boolean",
                                          "description": "The desired CRG to utilize ahead of other CRGs in the subscription.\n",
                                          "example": true
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "availabilityVsCost": {
                                "title": "Elastigroup Availability VS Cost",
                                "description": "Set the desired preference for the Spot market VM selection. (100-  Availability, 0- cost)\n",
                                "type": "integer",
                                "example": 100
                              }
                            }
                          },
                          "compute": {
                            "type": "object",
                            "title": "Stateful Node Compute",
                            "description": "Defines the computational parameters to use when launch the VM for the Stateful Node.\n",
                            "required": [
                              "os",
                              "vmSizes",
                              "launchSpecification"
                            ],
                            "properties": {
                              "os": {
                                "type": "string",
                                "enum": [
                                  "Linux",
                                  "Windows"
                                ],
                                "description": "Defines the type of the operating system.\n",
                                "example": "Linux"
                              },
                              "vmSizes": {
                                "type": "object",
                                "description": "Defines the VM sizes to use when launching VMs.\n",
                                "required": [
                                  "odSizes",
                                  "spotSizes"
                                ],
                                "properties": {
                                  "odSizes": {
                                    "type": "array",
                                    "description": "Defines the on-demand sizes to use when launching VMs.\n",
                                    "items": {
                                      "type": "string",
                                      "example": "standard_a1_v2"
                                    }
                                  },
                                  "spotSizes": {
                                    "type": "array",
                                    "description": "Defines the spot-VM sizes to use when launching VMs.\n",
                                    "items": {
                                      "type": "string",
                                      "example": "standard_a2_v2"
                                    }
                                  },
                                  "preferredSpotSizes": {
                                    "type": "array",
                                    "description": "Prioritize Spot VM sizes when launching Spot VMs.\n* <a style=color:red>If set, must be a sublist of compute.vmSizes.spotSizes. </a>\n",
                                    "items": {
                                      "type": "string",
                                      "example": "standard_a2_v2"
                                    }
                                  }
                                }
                              },
                              "zones": {
                                "type": "array",
                                "description": "List of Azure Availability Zones in the defined region.\n* If not defined, VMs will be launched regionally.\n",
                                "items": {
                                  "enum": [
                                    "1",
                                    "2",
                                    "3"
                                  ],
                                  "type": "string",
                                  "example": "1"
                                }
                              },
                              "preferredZone": {
                                "type": "string",
                                "description": "The AZ to prioritize when launching VMs.\n* If no markets are available in the Preferred AZ, VMs will be launched in the non-preferred AZs.\n* <a style=color:red>Must be one of the zones in compute.zones.</a>\n",
                                "enum": [
                                  "1",
                                  "2",
                                  "3"
                                ],
                                "example": "1"
                              },
                              "launchSpecification": {
                                "type": "object",
                                "description": "Defines the Virtual Node Group of the VM.",
                                "required": [
                                  "image",
                                  "network"
                                ],
                                "properties": {
                                  "image": {
                                    "type": "object",
                                    "description": "Defines the image with which the VM will be launched.\n* <a style=color:red>Must be only one initialized from the following (marketplace, custom, gallery).</a>\n* <a style=color:red>For import or update operations, image object cannot be defined when the compute.persistence.shouldPersistOsDisk = true.</a>\n* <a style=color:red>For import or update operations, image that contains data disk definitions cannot be defined when the compute.persistence.shouldPersistDataDisks = true.</a>\n",
                                    "properties": {
                                      "marketplace": {
                                        "type": "object",
                                        "description": "Select an image from Azure's Marketplace image catalogue.\n* <a style=color:red>Required if the custom image or gallery image are not specified.</a>\n",
                                        "required": [
                                          "publisher",
                                          "offer",
                                          "sku",
                                          "version"
                                        ],
                                        "properties": {
                                          "publisher": {
                                            "type": "string",
                                            "description": "Image publisher.\n",
                                            "example": "OpenLogic"
                                          },
                                          "offer": {
                                            "type": "string",
                                            "description": "Image offer.\n",
                                            "example": "CentOS"
                                          },
                                          "sku": {
                                            "type": "string",
                                            "description": "Image Stock Keeping Unit, which is the specific version of the image.\n",
                                            "example": "7.3"
                                          },
                                          "version": {
                                            "type": "string",
                                            "description": "Image's version. if version not provided we use \"latest\"\n",
                                            "default": "lastest",
                                            "example": "7.3-1611"
                                          }
                                        }
                                      },
                                      "custom": {
                                        "type": "object",
                                        "description": "Custom image definitions.\n* <a style=color:red>Required if marketplace image or gallery image are not specified.</a>\n",
                                        "required": [
                                          "resourceGroupName",
                                          "name"
                                        ],
                                        "properties": {
                                          "resourceGroupName": {
                                            "type": "string",
                                            "description": "The resource group name for custom image.\n",
                                            "example": "spotinst-azure"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the custom image.\n",
                                            "example": "custom-image-name"
                                          }
                                        }
                                      },
                                      "gallery": {
                                        "title": "Gallery",
                                        "type": "object",
                                        "description": "Gallery image definitions.\n* <a style=color:red>Required if custom image or marketplace image are not specified.</a>\n",
                                        "required": [
                                          "resourceGroupName",
                                          "galleryName",
                                          "imageName",
                                          "versionName"
                                        ],
                                        "properties": {
                                          "resourceGroupName": {
                                            "title": "Resource Group Name",
                                            "description": "The resource group name for gallery image.\n",
                                            "type": "string",
                                            "example": "spotinst-azure"
                                          },
                                          "galleryName": {
                                            "title": "Gallery Name",
                                            "description": "Name of the gallery.\n",
                                            "type": "string",
                                            "example": "gallery-name"
                                          },
                                          "imageName": {
                                            "title": "Image Name",
                                            "description": "Name of the gallery image.\n",
                                            "type": "string",
                                            "example": "gallery-image-name"
                                          },
                                          "versionName": {
                                            "title": "Version",
                                            "description": "Image's version. Can be in the format x.x.x or 'latest'.\n",
                                            "type": "string",
                                            "example": "0.0.1"
                                          },
                                          "spotAccountId": {
                                            "title": "Spot Account ID",
                                            "description": "The Spot account ID that connected to the Azure subscription to which the gallery belongs. Relevant only in case of cross-subscription shared galleries. [Read more](https://docs.spot.io/elastigroup/features-azure/shared-image-galleries) about cross-subscription shared galleries in Elastigroup.",
                                            "type": "string",
                                            "example": "act-123456789"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "vmName": {
                                    "type": "string",
                                    "description": "* Set a VM name that will be persisted throughout the entire node lifecycle.\n* The name value should comply with the following limitations: \n  *  A maximal length of 64 characters.\n  * The name can’t contain spaces, control characters, or these characters: ~ ! @ # $ % ^ & * ( ) = + _ [ ] { } | ; : . ' \" , < > / ?\n  *  A Windows VM name can't include a period or end with a hyphen.\n  * A Linux VM name can't end with a period or hyphen.\n",
                                    "example": "devVm1"
                                  },
                                  "vmNamePrefix": {
                                    "type": "string",
                                    "description": "* Set a VM name prefix to be used for all launched VMs and the VM resources.\n* The prefix value should comply with the following limitations: \n  *  A maximal length of 25 characters.\n  * The prefix can’t contain spaces, control characters, or these characters: ~ ! @ # $ % ^ & * ( ) = + _ [ ] { } | ; : . ' \" , < > / ?\n  * The VM prefix can't end with a hyphen.\n",
                                    "example": "prefix"
                                  },
                                  "customData": {
                                    "type": "string",
                                    "format": "byte",
                                    "description": "Defines the custom data (YAML encoded at Base64) that will be executed upon VM launch.\n* <a style=color:red>The customData object cannot be defined when the compute.launchSpecification.image is defined as specialized.</a>\n* <a style=color:red>For import or update operations, customData object cannot be defined when the compute.persistence.shouldPersistOsDisk = true.</a>\n",
                                    "example": ""
                                  },
                                  "userData": {
                                    "type": "string",
                                    "description": "Define a set of scripts or other metadata that's inserted to an Azure virtual machine at provision time. (Base64 encoded)\n",
                                    "example": "IyEvYmluL2Jhc2gKZWNobyAidGVzdCI"
                                  },
                                  "shutdownScript": {
                                    "type": "string",
                                    "format": "byte",
                                    "writeOnly": true,
                                    "example": "IyEvdXNyL2Jpbi9lbnYgYmFzaAoiR29vZGJ5ZSBvbGQgaW5zdGFuY2Ui",
                                    "description": "Defines the shutdown script (encoded at Base64) to execute once the VM is detached.\n* <a style=color:red>For import or update operations, shutdownScript object cannot be defined when the compute.persistence.shouldPersistOsDisk = true.</a>\n"
                                  },
                                  "network": {
                                    "title": "Network",
                                    "description": "Defines the network profile with which the VM will be launched.\n* <a style=color:red>For import or update operations, network object cannot be defined when the compute.persistence.shouldPersistNetwork = true.</a>\n",
                                    "type": "object",
                                    "required": [
                                      "resourceGroupName",
                                      "virtualNetworkName",
                                      "networkInterfaces"
                                    ],
                                    "properties": {
                                      "resourceGroupName": {
                                        "title": "Resource Group Name",
                                        "description": "Defines the resource group name of the virtual network with which the VM will be launched.",
                                        "type": "string",
                                        "example": "subnetResourceGroup"
                                      },
                                      "virtualNetworkName": {
                                        "title": "Virtual Network Name",
                                        "description": "Defines the name of the virtual network with which the VM will be launched.",
                                        "type": "string",
                                        "example": "vname"
                                      },
                                      "networkInterfaces": {
                                        "title": "Network Interfaces",
                                        "description": "Defines the network interfaces with which the VM will be launched.",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "isPrimary",
                                            "subnetName"
                                          ],
                                          "properties": {
                                            "isPrimary": {
                                              "title": "Is Primary Criteria",
                                              "description": "Defines whether the network interface is primary or not.\n* <a style=color:red>Must be true for only one of the items.</a>\n",
                                              "type": "boolean",
                                              "example": true
                                            },
                                            "subnetName": {
                                              "title": "Subnet Name",
                                              "description": "Defines the subnet to which the network interface will be connected.",
                                              "type": "string",
                                              "example": "testSubnet"
                                            },
                                            "assignPublicIp": {
                                              "title": "Assign Public IP",
                                              "description": "Defines if a Public IP should be assigned in this network interface.",
                                              "type": "boolean",
                                              "example": true
                                            },
                                            "publicIpSku": {
                                              "title": "Public Ip Sku",
                                              "description": "Defines the type of public IP to assign the VM.\n* <a style=color:red>Required if assignPublicIp=true.</a>\n",
                                              "type": "string",
                                              "enum": [
                                                "Standard",
                                                "Basic"
                                              ],
                                              "example": "Standard"
                                            },
                                            "networkSecurityGroup": {
                                              "title": "Network Security Group",
                                              "description": "Defines the network security group to which the network interface will be assigned.",
                                              "type": "object",
                                              "required": [
                                                "name",
                                                "resourceGroupName"
                                              ],
                                              "properties": {
                                                "name": {
                                                  "title": "Name",
                                                  "description": "Specify the name of the network security group to use in this network interface.",
                                                  "type": "string",
                                                  "example": "test"
                                                },
                                                "resourceGroupName": {
                                                  "title": "Resource Group Name",
                                                  "description": "Specify the resource group of the network security group.",
                                                  "type": "string",
                                                  "example": "test"
                                                }
                                              }
                                            },
                                            "enableIpForwarding": {
                                              "title": "Enable IP Forwarding",
                                              "description": "Enables IP forwarding on the network interface.",
                                              "type": "boolean",
                                              "example": true
                                            },
                                            "privateIpAddresses": {
                                              "type": "array",
                                              "description": "Specify the private IP pool in which the VMs will be launched.\n* A list of unique IP addresses.\n* If none of the IP addresses available then a dynamic IP is used.\n",
                                              "items": {
                                                "type": "string",
                                                "example": [
                                                  "172.23.4.20"
                                                ]
                                              }
                                            },
                                            "additionalIpConfigurations": {
                                              "title": "Additional IP Configurations",
                                              "description": "Defines a list of extra IPs to be dynamically allocated.",
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "privateIpAddressVersion",
                                                  "name"
                                                ],
                                                "properties": {
                                                  "name": {
                                                    "title": "Name",
                                                    "description": "Specify the name of the additional Ip Configuration.\n* <a style=color:red>Must be unique across additionalIpConfigurations.</a>\n",
                                                    "type": "string",
                                                    "example": "test"
                                                  },
                                                  "privateIpAddressVersion": {
                                                    "title": "Private IP Address Version",
                                                    "description": "Defines the version of the private IP address.",
                                                    "type": "string",
                                                    "enum": [
                                                      "IPv4",
                                                      "IPv6"
                                                    ],
                                                    "default": "IPv4",
                                                    "example": "IPv4"
                                                  }
                                                }
                                              }
                                            },
                                            "publicIps": {
                                              "description": "Specify the public IP pool in which the VMs will be launched.\n* A list of unique IP addresses.\n* If none of the IP addresses available then a dynamic IP is used.\n",
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "resourceGroupName",
                                                  "name"
                                                ],
                                                "properties": {
                                                  "resourceGroupName": {
                                                    "description": "Specify the resource group of the public IP.",
                                                    "type": "string",
                                                    "example": "resourceGroup"
                                                  },
                                                  "name": {
                                                    "description": "Specify the name of the public IP to which the VMs will be assigned.",
                                                    "type": "string",
                                                    "example": "name"
                                                  }
                                                }
                                              }
                                            },
                                            "applicationSecurityGroups": {
                                              "description": "Defines the Application Security Groups that will be associated to the primary IP configration of the network interface.",
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "resourceGroupName",
                                                  "name"
                                                ],
                                                "properties": {
                                                  "resourceGroupName": {
                                                    "description": "Specify the resource group of the Application Security Group.",
                                                    "type": "string",
                                                    "example": "AsgResourceGroup"
                                                  },
                                                  "name": {
                                                    "description": "Specify the name of the Application Security Group.",
                                                    "type": "string",
                                                    "example": "AsgName"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "login": {
                                    "type": "object",
                                    "description": "Specify the authentication details to be used for launching VMs.\n* <a style=color:red>For Linux: password/sshPublicKey is required.</a>\n* <a style=color:red>For Windows: password is required.</a>\n* <a style=color:red>The login object cannot be defined when the compute.launchSpecification.image is defined as specialized.</a>\n* <a style=color:red>For import or update operations, login object cannot be defined when the compute.persistence.shouldPersistOsDisk = true.</a>\n",
                                    "required": [
                                      "userName"
                                    ],
                                    "properties": {
                                      "userName": {
                                        "type": "string",
                                        "description": "Defines the admin user name for launching VMs.\n",
                                        "example": "spotinst"
                                      },
                                      "sshPublicKey": {
                                        "type": "string",
                                        "description": "Defines the SSH public key for admin access to Linux VMs.\n* Optional only for Linux.\n",
                                        "example": "ssh-rsa"
                                      },
                                      "password": {
                                        "type": "string",
                                        "writeOnly": true,
                                        "description": "Defines the password for admin access to Windows VMs.\n* <a style=color:red>Required for Windows.</a>\n"
                                      }
                                    }
                                  },
                                  "loadBalancersConfig": {
                                    "type": "object",
                                    "description": "Configure a Load Balancer.\n",
                                    "properties": {
                                      "loadBalancers": {
                                        "type": "array",
                                        "description": "Add a load balancer. For Azure Gateway, each Backend Pool is a separate load balancer.\n",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "resourceGroupName",
                                            "name",
                                            "backendPoolNames"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "The type of load balancer.\n",
                                              "enum": [
                                                "loadBalancer",
                                                "applicationGateway"
                                              ],
                                              "example": "loadBalancer"
                                            },
                                            "resourceGroupName": {
                                              "type": "string",
                                              "description": "The Resource Group name of the Load Balancer.\n",
                                              "example": "testResourceGroup"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the Application Gateway/Load Balancer\n",
                                              "example": "testLoadBalancer"
                                            },
                                            "loadBalancerSku": {
                                              "type": "string",
                                              "description": "* if type is LoadBalancer then possible values are:\n * “Standard\"\n * Basic”\n* if ApplicationGateway then possible values are:\n * “Standard_Large”\n * “Standard_Medium”\n * “Standard_Small”\n * “Standard_v2\n * “WAF_Large”\n * “WAF_Medium\"\n * “WAF_v2\"\n",
                                              "example": "Standard"
                                            },
                                            "backendPoolNames": {
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              },
                                              "description": "Name of the Backend Pool to register the Stateful Node VMs to.\\\nEach Backend Pool is a separate load balancer.\\\nRequired if Type is APPLICATION_GATEWAY.\n",
                                              "example": [
                                                "testBackendPool1",
                                                "testBackendPool2"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "tags": {
                                    "type": "array",
                                    "description": "Defines the tags (unique key-value pairs) to tag your resources.\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "tagKey": {
                                          "type": "string",
                                          "description": "Tag key for all resources.\n* Maximum length of 512 characters.\n",
                                          "example": "env"
                                        },
                                        "tagValue": {
                                          "type": "string",
                                          "description": "Tag value for all resources.\n* Maximum length of 512 characters.\n",
                                          "example": "staging"
                                        }
                                      }
                                    },
                                    "maximum": 44
                                  },
                                  "managedServiceIdentities": {
                                    "type": "array",
                                    "writeOnly": true,
                                    "description": "Defines a user-assigned managed identity to the launched VMs.\n",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "resourceGroupName"
                                      ],
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "Defines the name of the managed service identities.\n",
                                          "example": "mySI2"
                                        },
                                        "resourceGroupName": {
                                          "type": "string",
                                          "description": "Defines the resource group of the managed service identities.\n",
                                          "example": "myResourceGroup"
                                        }
                                      }
                                    }
                                  },
                                  "extensions": {
                                    "type": "array",
                                    "description": "A list of objects for Azure extensions.\n",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "type",
                                        "publisher",
                                        "apiVersion",
                                        "minorVersionAutoUpgrade"
                                      ],
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "Required on compute.launchSpecification.extensions object\n",
                                          "example": "extensionName"
                                        },
                                        "type": {
                                          "type": "string",
                                          "description": "Required on compute.launchSpecification.extensions object\n",
                                          "example": "customScript"
                                        },
                                        "publisher": {
                                          "type": "string",
                                          "description": "Required on compute.launchSpecification.extensions object\n",
                                          "example": "Microsoft.Azure.Extensions"
                                        },
                                        "apiVersion": {
                                          "type": "string",
                                          "description": "The API version of the extension. Required if extension specified.\n",
                                          "example": "2.0"
                                        },
                                        "minorVersionAutoUpgrade": {
                                          "type": "boolean",
                                          "description": "Required on compute.launchSpecification.extensions object\n",
                                          "example": true
                                        },
                                        "publicSettings": {
                                          "type": "object",
                                          "description": "Object for public settings\n"
                                        },
                                        "protectedSettings": {
                                          "type": "object",
                                          "description": "Object for protected settings\n"
                                        },
                                        "enableAutomaticUpgrade": {
                                          "title": "enable automatic upgrade",
                                          "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available.\n",
                                          "type": "boolean",
                                          "example": false
                                        },
                                        "protectedSettingsFromKeyVault": {
                                          "title": "Protected Settings from key vault",
                                          "description": "The extensions protected settings that are passed by reference, and consumed from key vault.\n",
                                          "type": "object",
                                          "required": [
                                            "sourceVault",
                                            "secretUrl"
                                          ],
                                          "properties": {
                                            "sourceVault": {
                                              "title": "sourceVault",
                                              "type": "string",
                                              "description": "The relative URL of the Key Vault containing the secret.\n",
                                              "example": "/subscriptions/1234-1234-1234/resourceGroups/rg_test/providers/Microsoft.KeyVault/vaults/testKeyVault"
                                            },
                                            "secretUrl": {
                                              "title": "secretUrl",
                                              "type": "string",
                                              "description": "The URL referencing a secret in a Key Vault.\n",
                                              "example": "https://testKeyVault.vault.azure.net/secrets/SecretTest/123456"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "dataDisks": {
                                    "type": "array",
                                    "description": "The definitions of data disks that will be created and attached to the stateful node's VM.\n",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "sizeGB",
                                        "lun",
                                        "type"
                                      ],
                                      "properties": {
                                        "sizeGB": {
                                          "type": "integer",
                                          "description": "The size of the data disk in GB, required if dataDisks is specified.\n",
                                          "minimum": 1,
                                          "maximum": 1023,
                                          "example": 1
                                        },
                                        "lun": {
                                          "type": "integer",
                                          "description": "The LUN of the data disk.\n",
                                          "example": 1
                                        },
                                        "type": {
                                          "type": "string",
                                          "description": "The type of the data disk.\n",
                                          "enum": [
                                            "Standard_LRS",
                                            "Premium_LRS",
                                            "StandardSSD_LRS",
                                            "UltraSSD_LRS",
                                            "StandardSSD_ZRS",
                                            "Premium_ZRS"
                                          ],
                                          "example": "Standard_LRS"
                                        },
                                        "caching": {
                                          "type": "string",
                                          "description": "Specifies the host caching requirements. With disk caching enabled, VMs can achieve higher levels of performance.\n* If not specified, the Azure default behavior will be applied.\n",
                                          "enum": [
                                            "None",
                                            "ReadOnly",
                                            "ReadWrite"
                                          ],
                                          "example": "ReadOnly"
                                        }
                                      }
                                    },
                                    "minimum": 0,
                                    "maximum": 4
                                  },
                                  "osDisk": {
                                    "type": "object",
                                    "description": "Specify OS disk specification other than default.\n",
                                    "required": [
                                      "type"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "The type of the OS disk.\n",
                                        "enum": [
                                          "Standard_LRS",
                                          "Premium_LRS",
                                          "StandardSSD_LRS",
                                          "StandardSSD_ZRS",
                                          "Premium_ZRS"
                                        ],
                                        "example": "Standard_LRS"
                                      },
                                      "sizeGB": {
                                        "type": "integer",
                                        "description": "The size of the data disk in GB.\n",
                                        "minimum": 1,
                                        "maximum": 1023,
                                        "example": 30
                                      },
                                      "caching": {
                                        "type": "string",
                                        "description": "Specifies the host caching requirements. With disk caching enabled, VMs can achieve higher levels of performance.\n* If not specified, the Azure default behavior will be applied.\n",
                                        "enum": [
                                          "None",
                                          "ReadOnly",
                                          "ReadWrite"
                                        ],
                                        "example": "ReadOnly"
                                      }
                                    }
                                  },
                                  "secrets": {
                                    "title": "secrets",
                                    "type": "array",
                                    "description": "Set of certificates that should be installed on the VM\n",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "sourceVault",
                                        "vaultCertificates"
                                      ],
                                      "properties": {
                                        "sourceVault": {
                                          "type": "object",
                                          "description": "The key vault reference, contains the required certificates\n",
                                          "required": [
                                            "resourceGroupName",
                                            "name"
                                          ],
                                          "properties": {
                                            "resourceGroupName": {
                                              "type": "string",
                                              "description": "The resource group name of the key vault\n"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "The name of the key vault\n"
                                            }
                                          }
                                        },
                                        "vaultCertificates": {
                                          "type": "array",
                                          "description": "The required certificate references\n",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "certificateUrl",
                                              "certificateStore"
                                            ],
                                            "properties": {
                                              "certificateUrl": {
                                                "type": "string",
                                                "description": "The URL of the certificate under the key vault\n"
                                              },
                                              "certificateStore": {
                                                "type": "string",
                                                "description": "The certificate store directory the VM. The directory is created in the LocalMachine account.\n* This field is required only when using windows OS type\n* This field must be ‘null’ when the OS type is Linux\n"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "bootDiagnostics": {
                                    "required": [
                                      "isEnabled",
                                      "type"
                                    ],
                                    "type": "object",
                                    "description": "Will enable boot diagnostics in Azure when a new VM is launched",
                                    "properties": {
                                      "isEnabled": {
                                        "type": "boolean",
                                        "description": "Allows you to enable and disable the configuration of boot diagnostics at launch",
                                        "example": true
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "Defines the storage type on VM launch  in Azure.",
                                        "enum": [
                                          "managed",
                                          "unmanaged"
                                        ],
                                        "example": "managed"
                                      },
                                      "storageUri": {
                                        "type": "string",
                                        "description": "The storage URI that is used if a type is unmanaged.\n* The storage URI must follow the blob storage URI format (\\\"https://<blobstoragename>.blob.core.windows.net/\\\").\n* StorageUri is required if the type is unmanaged.\n* StorageUri must be ‘null’ in case the boot diagnostics type is managed.\n",
                                        "example": "https://example.blob.core.windows.net/"
                                      }
                                    }
                                  },
                                  "licenseType": {
                                    "type": "string",
                                    "description": "Specify an existing Azure license type to use when launching new VMs.\n* Valid values for Windows OS: \"Windows_Server\", \"Windows_Client\"\n* Valid values for Linux OS: \"RHEL_BYOS\", \"SLES_BYOS\"\n",
                                    "example": "Windows_Client"
                                  },
                                  "security": {
                                    "type": "object",
                                    "description": "Specifies the Security related profile settings for the virtual machine.\n",
                                    "properties": {
                                      "securityType": {
                                        "type": "string",
                                        "description": "Security type refers to the different security features of a virtual machine.\nSecurity features like Trusted launch virtual machines help to improve the security of Azure generation 2 virtual machines.\n",
                                        "enum": [
                                          "Standard",
                                          "TrustedLaunch"
                                        ],
                                        "example": "TrustedLaunch"
                                      },
                                      "secureBootEnabled": {
                                        "type": "boolean",
                                        "description": "Specifies whether secure boot should be enabled on the virtual machine.\n",
                                        "example": true
                                      },
                                      "vTpmEnabled": {
                                        "type": "boolean",
                                        "description": "Specifies whether vTPM should be enabled on the virtual machine.\n",
                                        "example": true
                                      },
                                      "encryptionAtHost": {
                                        "type": "boolean",
                                        "description": "Enables the Host Encryption for the virtual machine. The Encryption at host will be disabled unless this property is set to true for the resource.\n",
                                        "example": true
                                      }
                                    }
                                  },
                                  "proximityPlacementGroups": {
                                    "type": "array",
                                    "description": "Defines the proximity placement group in which the VM will be launched.",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "resourceGroupName"
                                      ],
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the proximity placement group.",
                                          "example": "testPPG"
                                        },
                                        "resourceGroupName": {
                                          "type": "string",
                                          "description": "The resource group name of the proximity placement group.",
                                          "example": "testResourceGroup"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "persistence": {
                            "type": "object",
                            "title": "Stateful Node Persistence",
                            "description": "Defines the persistence of the Stateful Node.\n",
                            "required": [
                              "shouldPersistOsDisk",
                              "shouldPersistDataDisks",
                              "shouldPersistNetwork"
                            ],
                            "properties": {
                              "shouldPersistOsDisk": {
                                "type": "boolean",
                                "description": "Enables the OS disk persistency.\n",
                                "example": true
                              },
                              "osDiskPersistenceMode": {
                                "type": "string",
                                "enum": [
                                  "reattach",
                                  "onLaunch"
                                ],
                                "description": "Defines The way persistency is handled in case of os disk persistence.\n",
                                "example": "onLaunch"
                              },
                              "shouldPersistDataDisks": {
                                "type": "boolean",
                                "description": "Enables the data disk persistency.\n",
                                "example": true
                              },
                              "dataDisksPersistenceMode": {
                                "type": "string",
                                "enum": [
                                  "reattach",
                                  "onLaunch"
                                ],
                                "description": "Defines the way persistency is handled in case of data disks persistence.\n",
                                "example": "reattach"
                              },
                              "shouldPersistNetwork": {
                                "type": "boolean",
                                "description": "Enables the network persistency.\n",
                                "example": true
                              }
                            }
                          },
                          "scheduling": {
                            "type": "object",
                            "title": "Stateful Node Scheduling",
                            "description": "Scheduling settings for stateful node.\n",
                            "properties": {
                              "tasks": {
                                "type": "array",
                                "description": "List of scheduled tasks to excute for the stateful node's.\n",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "isEnabled",
                                    "type",
                                    "cronExpression"
                                  ],
                                  "properties": {
                                    "isEnabled": {
                                      "type": "boolean",
                                      "description": "Is scheduled task enabled for stateful node.\n",
                                      "example": true
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "The type of the scheduled task\n",
                                      "enum": [
                                        "pause",
                                        "resume",
                                        "recycle"
                                      ],
                                      "example": "recycle"
                                    },
                                    "cronExpression": {
                                      "type": "string",
                                      "description": "A expression which describes when to execute the scheduled task (UTC)\n",
                                      "example": "35 12 * * *"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "health": {
                            "type": "object",
                            "title": "Stateful Node Health",
                            "description": "Set health check and auto-healing of unhealthy VMs.\n",
                            "properties": {
                              "healthCheckTypes": {
                                "type": "array",
                                "description": "Health check types to use in order to validate VM health.\n",
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "vmState",
                                    "applicationGateway"
                                  ]
                                },
                                "example": [
                                  "vmState"
                                ]
                              },
                              "gracePeriod": {
                                "type": "integer",
                                "description": "The amount of time (in seconds) after a new VM has launched before terminating the old VM.\n",
                                "example": 120,
                                "minimum": 0
                              },
                              "autoHealing": {
                                "type": "boolean",
                                "example": true,
                                "description": "Enable auto-healing of unhealthy VMs.\n"
                              },
                              "unhealthyDuration": {
                                "type": "integer",
                                "description": "Amount of time (in seconds) for the VM to remain unhealthy before a replacement is triggered.\n",
                                "example": 360,
                                "minimum": 120
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2022-01-01T00:00:00.000+0000"
                          },
                          "updatedAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2022-01-01T00:00:00.000+0000"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create Stateful Node Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/statefulNode/ssn-12345678"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1azure~1compute~1statefulNode/post/requestBody/content/application~1json/schema/allOf/0/properties/statefulNode"
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:statefulNode"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get All Stateful Nodes",
        "description": "Get the configurations of all stateful nodes in a specific account.",
        "operationId": "azureStatefulNodeGetAll",
        "tags": [
          "Elastigroup Azure Stateful"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "name",
            "example": "MyStatefulGroup",
            "description": "Filters to find the stateful node via a specific name.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "region",
            "example": "eastus",
            "description": "Filters to find all the stateful nodes in a specific region.\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List Stateful Node Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/statefulNode"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1azure~1compute~1statefulNode/post/requestBody/content/application~1json/schema/allOf/0/properties/statefulNode"
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:statefulNode"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/statefulNode/{nodeId}": {
      "get": {
        "summary": "Get Stateful Node",
        "description": "Get the configuration of an existing stateful node.\n",
        "operationId": "azureStatefulNodeGet",
        "tags": [
          "Elastigroup Azure Stateful"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "nodeId",
            "example": "ssn-12345678",
            "description": "The ID of the stateful node.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get Stateful Node Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/statefulNode/ssn-12345678"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1azure~1compute~1statefulNode/post/requestBody/content/application~1json/schema/allOf/0/properties/statefulNode"
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:statefulNode"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Stateful Node",
        "description": "Update an existing stateful node.\n",
        "operationId": "azureStatefulNodeUpdate",
        "tags": [
          "Elastigroup Azure Stateful"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1azure~1compute~1statefulNode~1%7BnodeId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Update Azure Stateful Node",
                    "properties": {
                      "statefulNode": {
                        "type": "object",
                        "title": "Azure Stateful Node",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "ssn-12345678",
                            "readOnly": true,
                            "description": "Azure Stateful Node ID\n"
                          },
                          "name": {
                            "type": "string",
                            "example": "Spot Stateful Node",
                            "description": "Azure Stateful Node Name\n"
                          },
                          "region": {
                            "type": "string",
                            "example": "westus2",
                            "readOnly": true,
                            "description": "The Azure region your Stateful Node will be created in.\n"
                          },
                          "resourceGroupName": {
                            "type": "string",
                            "example": "spotResourceGroup",
                            "readOnly": true,
                            "description": "Name of the Resource Group for Stateful Node.\n"
                          },
                          "description": {
                            "type": "string",
                            "example": "This is my example stateful node",
                            "description": "Describe your Azure Stateful Node\n"
                          },
                          "strategy": {
                            "type": "object",
                            "title": "Stateful Node Strategy",
                            "description": "Strategy for Stateful Node.\n",
                            "required": [
                              "fallbackToOd"
                            ],
                            "properties": {
                              "preferredLifecycle": {
                                "type": "string",
                                "enum": [
                                  "od",
                                  "spot"
                                ],
                                "description": "The desired type of VM.\n",
                                "example": "od",
                                "default": "spot"
                              },
                              "signals": {
                                "type": "array",
                                "description": "The signals defined for the stateful node.\n",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "timeout"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "description": "The type of the signal defined for the stateful node.\n",
                                      "enum": [
                                        "vmReady",
                                        "vmReadyToShutdown"
                                      ],
                                      "example": "vmReady"
                                    },
                                    "timeout": {
                                      "type": "integer",
                                      "description": "The timeout in seconds to hold the vm until a signal is sent.\\\nIf no signal is sent the vm will be replaced (vmReady) or we will terminate the vm (vmReadyToShutdown) after the timeout.\n",
                                      "default": 1800,
                                      "minimum": 1,
                                      "example": 180
                                    }
                                  }
                                }
                              },
                              "fallbackToOd": {
                                "type": "boolean",
                                "description": "In case of no spots available, Stateful Node will launch an On-demand instance instead\n",
                                "example": true
                              },
                              "drainingTimeout": {
                                "type": "integer",
                                "description": "Time (in seconds) to allow the VM be drained from incoming TCP connections and detached from MLB before terminating it during a scale down operation.\n",
                                "default": 120,
                                "minimum": 1,
                                "example": 30
                              },
                              "revertToSpot": {
                                "description": "Hold settings for strategy correction - replacing On-Demand for Spot VMs\n",
                                "type": "object",
                                "required": [
                                  "performAt"
                                ],
                                "properties": {
                                  "performAt": {
                                    "type": "string",
                                    "enum": [
                                      "timeWindow",
                                      "never",
                                      "always"
                                    ],
                                    "description": "Settings for maintenance strategy.\ndefault: \"always\"\n",
                                    "example": "timeWindow"
                                  }
                                }
                              },
                              "optimizationWindows": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Defines the windows of which to revert to spot.\n* <a style=color:red>Requires the following format: \"ddd:hh:mm-ddd:hh:mm (day:hour(0-23):minute(0-59))\".</a>\n* <a style=color:red>Must be not empty if revertToSpot.performAt = timeWindow.</a>\n",
                                "example": [
                                  "Mon:03:00-Wed:02:30"
                                ]
                              },
                              "odWindows": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "* Define the time windows in which the underlying VM will be set as an on-demand lifecycle type.\n* During the entire time window, the rest of the strategy process will be paused.\n* Switching between on-demand and Spot VM types at the enter/exit of the time window will trigger the recycling of the stateful node.\n* <a style=color:red>Requires the following format: \"ddd:hh:mm-ddd:hh:mm (day:hour(0-23):minute(0-59))\".</a>\n",
                                "example": [
                                  "Sun:23:00-Mon:02:30"
                                ]
                              },
                              "capacityReservation": {
                                "type": "object",
                                "description": "On-demand Capacity Reservation group enables you to reserve Compute capacity in an Azure region or an Availability Zone for any duration of time.\n[CRG can only be created on the Azure end.](https://learn.microsoft.com/en-us/azure/virtual-machines/capacity-reservation-create)\n",
                                "required": [
                                  "shouldUtilize",
                                  "utilizationStrategy"
                                ],
                                "properties": {
                                  "shouldUtilize": {
                                    "type": "boolean",
                                    "description": "Determines whether capacity reservations should be utilized.\n",
                                    "example": true
                                  },
                                  "utilizationStrategy": {
                                    "type": "string",
                                    "description": "The priority requested for using CRG. This value will determine if CRG is used ahead of spot VMs or On-demand VMs.\n* utilizeOverOD- If picked, we will use CRG only in case On-demand should be launched.\n* utilizeOverSpot-  CRG will be preferred over Spot. Only after CRG is fully used, spot VMs can be used.\n",
                                    "enum": [
                                      "utilizeOverSpot",
                                      "utilizeOverOD"
                                    ],
                                    "example": "utilizeOverSpot"
                                  },
                                  "capacityReservationGroups": {
                                    "type": "array",
                                    "description": "List of the desired CRGs to use under the associated Azure subscription.\nWhen null we will utilize any available reservation that matches the Virtual Node Group.\n",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "resourceGroupName"
                                      ],
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the CRG.\n",
                                          "example": "capacityReservationGroupName"
                                        },
                                        "resourceGroupName": {
                                          "type": "string",
                                          "description": "Azure resource group name\n",
                                          "example": "resourceGroupName"
                                        },
                                        "shouldPrioritize": {
                                          "type": "boolean",
                                          "description": "The desired CRG to utilize ahead of other CRGs in the subscription.\n",
                                          "example": true
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "availabilityVsCost": {
                                "title": "Elastigroup Availability VS Cost",
                                "description": "Set the desired preference for the Spot market VM selection. (100-  Availability, 0- cost)\n",
                                "type": "integer",
                                "example": 100
                              }
                            }
                          },
                          "compute": {
                            "type": "object",
                            "title": "Stateful Node Compute",
                            "description": "Compute settings for Stateful Node\n",
                            "required": [
                              "os",
                              "vmSizes",
                              "launchSpecification"
                            ],
                            "properties": {
                              "os": {
                                "type": "string",
                                "enum": [
                                  "Linux",
                                  "Windows"
                                ],
                                "description": "Type of operating system.\n",
                                "example": "Linux"
                              },
                              "vmSizes": {
                                "type": "object",
                                "description": "Amount of time to be unhealthy before a replacement is triggered\n",
                                "required": [
                                  "odSizes",
                                  "spotSizes"
                                ],
                                "properties": {
                                  "odSizes": {
                                    "type": "array",
                                    "description": "Available On-Demand sizes.\n",
                                    "items": {
                                      "type": "string",
                                      "example": "standard_a1_v2"
                                    }
                                  },
                                  "spotSizes": {
                                    "type": "array",
                                    "description": "Available Spot-VM sizes.\n",
                                    "items": {
                                      "type": "string",
                                      "example": "standard_a2_v2"
                                    }
                                  },
                                  "preferredSpotSizes": {
                                    "type": "array",
                                    "description": "Prioritize Spot VM sizes when launching Spot VMs for the group.\n<a style=color:red>If set, must be a sublist of compute.vmSizes.spotSizes. </a>\n",
                                    "items": {
                                      "type": "string",
                                      "example": "standard_a2_v2"
                                    }
                                  }
                                }
                              },
                              "zones": {
                                "type": "array",
                                "description": "List of Azure Availability Zones in the defined region; If not defined, Virtual machines will be launched regionally.",
                                "items": {
                                  "enum": [
                                    "1",
                                    "2",
                                    "3"
                                  ],
                                  "type": "string",
                                  "example": "1"
                                }
                              },
                              "preferredZone": {
                                "type": "string",
                                "description": "The AZ to prioritize when launching VMs.\n* If no markets are available in the Preferred AZ, VMs will be launched in the non-preferred AZs.\n* <a style=color:red>Must be one of the zones in compute.zones.</a>\n",
                                "enum": [
                                  "1",
                                  "2",
                                  "3"
                                ],
                                "example": "1"
                              },
                              "launchSpecification": {
                                "type": "object",
                                "required": [
                                  "image",
                                  "network"
                                ],
                                "properties": {
                                  "image": {
                                    "type": "object",
                                    "description": "Image of VM. An image is a template for creating new VMs.\n",
                                    "properties": {
                                      "marketplace": {
                                        "type": "object",
                                        "description": "Select an image from Azure's Marketplace image catalogue\\\nRequired if custom image or gallery image are not specified.\n",
                                        "required": [
                                          "publisher",
                                          "offer",
                                          "sku",
                                          "version"
                                        ],
                                        "properties": {
                                          "publisher": {
                                            "type": "string",
                                            "description": "Image publisher.\n",
                                            "example": "OpenLogic"
                                          },
                                          "offer": {
                                            "type": "string",
                                            "description": "Name of image to use.\n",
                                            "example": "CentOS"
                                          },
                                          "sku": {
                                            "type": "string",
                                            "description": "Image's Stock Keeping Unit, which is the specific version of the image.\n",
                                            "example": "7.3"
                                          },
                                          "version": {
                                            "type": "string",
                                            "description": "Image's version. if version not provided we use \"latest\"\n",
                                            "default": "lastest",
                                            "example": "7.3-1611"
                                          }
                                        }
                                      },
                                      "custom": {
                                        "type": "object",
                                        "description": "Custom image to launch Stateful Node with.\n",
                                        "required": [
                                          "resourceGroupName",
                                          "name"
                                        ],
                                        "properties": {
                                          "resourceGroupName": {
                                            "type": "string",
                                            "description": "Name of Resource Group for custom image.\n",
                                            "example": "spotinst-azure"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "Name of the custom image.\n",
                                            "example": "custom-image-name"
                                          }
                                        }
                                      },
                                      "gallery": {
                                        "title": "Gallery",
                                        "type": "object",
                                        "description": "Gallery image to launch Stateful Node with. Required if custom image or marketplace image are not specified.\n",
                                        "required": [
                                          "resourceGroupName",
                                          "galleryName",
                                          "imageName",
                                          "versionName"
                                        ],
                                        "properties": {
                                          "resourceGroupName": {
                                            "title": "Resource Group Name",
                                            "description": "Name of Resource Group for custom image\n",
                                            "type": "string",
                                            "example": "spotinst-azure"
                                          },
                                          "galleryName": {
                                            "title": "Gallery Name",
                                            "description": "Name of the gallery.\n",
                                            "type": "string",
                                            "example": "gallery-name"
                                          },
                                          "imageName": {
                                            "title": "Image Name",
                                            "description": "Name of the gallery image.\n",
                                            "type": "string",
                                            "example": "gallery-image-name"
                                          },
                                          "versionName": {
                                            "title": "Version",
                                            "description": "Image's version. Can be in the format x.x.x or 'latest'.\n",
                                            "type": "string",
                                            "example": "0.0.1"
                                          },
                                          "spotAccountId": {
                                            "title": "Spot Account ID",
                                            "description": "The Spot account ID that connected to the Azure subscription to which the gallery belongs. Relevant only in case of cross-subscription shared galleries. [Read more](https://docs.spot.io/elastigroup/features-azure/shared-image-galleries) about cross-subscription shared galleries in Elastigroup.",
                                            "type": "string",
                                            "example": "act-123456789"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "vmName": {
                                    "type": "string",
                                    "description": "* Set a VM name that will be persisted throughout the entire node lifecycle.\n* The name value should comply with the following limitations: \n  *  A maximal length of 64 characters.\n  * The name can’t contain spaces, control characters, or these characters: ~ ! @ # $ % ^ & * ( ) = + _ [ ] { } | ; : . ' \" , < > / ?\n  *  A Windows VM name can't include a period or end with a hyphen.\n  * A Linux VM name can't end with a period or hyphen.\n",
                                    "example": "devVm1"
                                  },
                                  "vmNamePrefix": {
                                    "type": "string",
                                    "description": "* Set a VM name prefix to be used for all launched VMs and the VM resources.\n* The prefix value should comply with the following limitations: \n  *  A maximal length of 25 characters.\n  * The prefix can’t contain spaces, control characters, or these characters: ~ ! @ # $ % ^ & * ( ) = + _ [ ] { } | ; : . ' \" , < > / ?\n  * The VM prefix can't end with a hyphen.\n",
                                    "example": "prefix"
                                  },
                                  "customData": {
                                    "type": "string",
                                    "format": "byte",
                                    "description": "This value will hold the YML in base64 and will be added to the virtual machine.\n",
                                    "example": ""
                                  },
                                  "userData": {
                                    "type": "string",
                                    "description": "Define a set of scripts or other metadata that's inserted to an Azure virtual machine at provision time. (Base64 encoded)\n",
                                    "example": "IyEvYmluL2Jhc2gKZWNobyAidGVzdCI"
                                  },
                                  "shutdownScript": {
                                    "type": "string",
                                    "format": "byte",
                                    "writeOnly": true,
                                    "example": "IyEvdXNyL2Jpbi9lbnYgYmFzaAoiR29vZGJ5ZSBvbGQgaW5zdGFuY2Ui",
                                    "description": "Shutdown script for the stateful node. Value should be passed as a string encoded at Base64 only\n"
                                  },
                                  "network": {
                                    "title": "Network",
                                    "description": "Define the Virtual Network and Subnet for your Stateful Node.",
                                    "type": "object",
                                    "required": [
                                      "resourceGroupName",
                                      "virtualNetworkName",
                                      "networkInterfaces"
                                    ],
                                    "properties": {
                                      "resourceGroupName": {
                                        "title": "Resource Group Name",
                                        "description": "Vnet Resource Group Name",
                                        "type": "string",
                                        "example": "subnetResourceGroup"
                                      },
                                      "virtualNetworkName": {
                                        "title": "Virtual Network Name",
                                        "description": "Virtual Network",
                                        "type": "string",
                                        "example": "vname"
                                      },
                                      "networkInterfaces": {
                                        "title": "Network Interfaces",
                                        "description": "Network Interfaces",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "isPrimary",
                                            "subnetName"
                                          ],
                                          "properties": {
                                            "isPrimary": {
                                              "title": "Is Primary Criteria",
                                              "description": "Defines whether the network interface is primary or not.",
                                              "type": "boolean",
                                              "example": true
                                            },
                                            "subnetName": {
                                              "title": "Subnet Name",
                                              "description": "Subnet name",
                                              "type": "string",
                                              "example": "testSubnet"
                                            },
                                            "assignPublicIp": {
                                              "title": "Assign Public IP",
                                              "description": "Assign public IP",
                                              "type": "boolean",
                                              "example": true
                                            },
                                            "publicIpSku": {
                                              "title": "Public Ip Sku",
                                              "description": "Required if assignPublicIp=true values=[STANDARD/BASIC]",
                                              "type": "string",
                                              "example": "STANDARD"
                                            },
                                            "networkSecurityGroup": {
                                              "title": "Network Security Group",
                                              "description": "Network Security Group",
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "title": "Name",
                                                  "description": "Requires valid security group name. Required if security group is specified.",
                                                  "type": "string",
                                                  "example": "test"
                                                },
                                                "resourceGroupName": {
                                                  "title": "Resource Group Name",
                                                  "description": "Requires valid resource group name. Required if security group is specified.",
                                                  "type": "string",
                                                  "example": "test"
                                                }
                                              }
                                            },
                                            "enableIpForwarding": {
                                              "title": "Enable IP Forwarding",
                                              "description": "Enable IP Forwarding",
                                              "type": "boolean",
                                              "example": true
                                            },
                                            "privateIpAddresses": {
                                              "type": "array",
                                              "description": "A list with unique items that every item is a valid IP",
                                              "items": {
                                                "type": "string",
                                                "example": [
                                                  "172.23.4.20"
                                                ]
                                              }
                                            },
                                            "additionalIpConfigurations": {
                                              "title": "Additional IP Configurations",
                                              "description": "Additional configuration of network interface",
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "privateIpAddressVersion",
                                                  "name"
                                                ],
                                                "properties": {
                                                  "name": {
                                                    "title": "Name",
                                                    "description": "Required if additionalConfiguration has been specified.",
                                                    "type": "string",
                                                    "example": "test"
                                                  },
                                                  "privateIpAddressVersion": {
                                                    "title": "Private IP Address Version",
                                                    "description": "Version of the private IP address",
                                                    "type": "string",
                                                    "enum": [
                                                      "IPv4",
                                                      "IPv6"
                                                    ],
                                                    "default": "IPv4",
                                                    "example": "IPv4"
                                                  }
                                                }
                                              }
                                            },
                                            "publicIps": {
                                              "description": "Defined a pool of Public Ips (from Azure), that will be associated to the network interface. We will associate one public ip per instance until the pool is exhausted, in which case, we will create a new one.",
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "resourceGroupName",
                                                  "name"
                                                ],
                                                "properties": {
                                                  "resourceGroupName": {
                                                    "description": "The resource group of the public ip.",
                                                    "type": "string",
                                                    "example": "resourceGroup"
                                                  },
                                                  "name": {
                                                    "description": "The name of the public ip.",
                                                    "type": "string",
                                                    "example": "name"
                                                  }
                                                }
                                              }
                                            },
                                            "applicationSecurityGroups": {
                                              "description": "List of Application Security Groups that will be associated to the primary ip configration of the network interface.",
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "resourceGroupName",
                                                  "name"
                                                ],
                                                "properties": {
                                                  "resourceGroupName": {
                                                    "description": "The resource group of the Application Security Group.",
                                                    "type": "string",
                                                    "example": "AsgResourceGroup"
                                                  },
                                                  "name": {
                                                    "description": "The name of the Application Security group",
                                                    "type": "string",
                                                    "example": "AsgName"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "login": {
                                    "type": "object",
                                    "description": "Set admin access for accessing your VMs. Password/SSH is required for Linux.\n",
                                    "required": [
                                      "userName"
                                    ],
                                    "properties": {
                                      "userName": {
                                        "type": "string",
                                        "description": "user name for admin access to VMs.\\\nLogin can be set:\n* for windows: compute.launchSpecification.login.password\n* for linux: compute.launchSpecification.login.sshPublicKey\n\nJust user name, without pwd or SSH key\n",
                                        "example": "spotinst"
                                      },
                                      "sshPublicKey": {
                                        "type": "string",
                                        "description": "SSH for admin access to Linux VMs.\\\nOptional for Linux.\n",
                                        "example": "ssh-rsa"
                                      },
                                      "password": {
                                        "type": "string",
                                        "writeOnly": true,
                                        "description": "Password for admin access to Windows VMs.\\\nRequired for Windows.\n"
                                      }
                                    }
                                  },
                                  "loadBalancersConfig": {
                                    "type": "object",
                                    "description": "Configure a Load Balancer.\n",
                                    "properties": {
                                      "loadBalancers": {
                                        "type": "array",
                                        "description": "Add a load balancer. For Azure Gateway, each Backend Pool is a separate load balancer.\n",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "resourceGroupName",
                                            "name",
                                            "backendPoolNames"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "The type of load balancer.\n",
                                              "enum": [
                                                "loadBalancer",
                                                "applicationGateway"
                                              ],
                                              "example": "loadBalancer"
                                            },
                                            "resourceGroupName": {
                                              "type": "string",
                                              "description": "The Resource Group name of the Load Balancer.\n",
                                              "example": "testResourceGroup"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the Application Gateway/Load Balancer\n",
                                              "example": "testLoadBalancer"
                                            },
                                            "loadBalancerSku": {
                                              "type": "string",
                                              "description": "* if type is LoadBalancer then possible values are:\n * “Standard\"\n * Basic”\n* if ApplicationGateway then possible values are:\n * “Standard_Large”\n * “Standard_Medium”\n * “Standard_Small”\n * “Standard_v2\n * “WAF_Large”\n * “WAF_Medium\"\n * “WAF_v2\"\n",
                                              "example": "Standard"
                                            },
                                            "backendPoolNames": {
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              },
                                              "description": "Name of the Backend Pool to register the Stateful Node VMs to.\\\nEach Backend Pool is a separate load balancer.\\\nRequired if Type is APPLICATION_GATEWAY.\n",
                                              "example": [
                                                "testBackendPool1",
                                                "testBackendPool2"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "tags": {
                                    "type": "array",
                                    "description": "Unique Key-Value pairs for all Stateful Node Resources.\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "tagKey": {
                                          "type": "string",
                                          "description": "Tag Key for Stateful Node Resources.\n",
                                          "example": "env"
                                        },
                                        "tagValue": {
                                          "type": "string",
                                          "description": "Tag Value for Stateful Node Resources.\n",
                                          "example": "staging"
                                        }
                                      }
                                    },
                                    "maximum": 44
                                  },
                                  "managedServiceIdentities": {
                                    "type": "array",
                                    "writeOnly": true,
                                    "description": "Add a user-assigned managed identity to the Stateful Node's VM.\n",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "resourceGroupName"
                                      ],
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "name of the managed identity\n",
                                          "example": "mySI2"
                                        },
                                        "resourceGroupName": {
                                          "type": "string",
                                          "description": "The Resource Group that the user-assigned managed identity resides in.\n",
                                          "example": "myResourceGroup"
                                        }
                                      }
                                    }
                                  },
                                  "extensions": {
                                    "type": "array",
                                    "description": "List of objects for azure extensions\n",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "type",
                                        "publisher",
                                        "apiVersion",
                                        "minorVersionAutoUpgrade"
                                      ],
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "Required on compute.launchSpecification.extensions object\n",
                                          "example": "extensionName"
                                        },
                                        "type": {
                                          "type": "string",
                                          "description": "Required on compute.launchSpecification.extensions object\n",
                                          "example": "customScript"
                                        },
                                        "publisher": {
                                          "type": "string",
                                          "description": "Required on compute.launchSpecification.extensions object\n",
                                          "example": "Microsoft.Azure.Extensions"
                                        },
                                        "apiVersion": {
                                          "type": "string",
                                          "description": "The API version of the extension. Required if extension specified.\n",
                                          "example": "2.0"
                                        },
                                        "minorVersionAutoUpgrade": {
                                          "type": "boolean",
                                          "description": "Required on compute.launchSpecification.extensions object\n",
                                          "example": true
                                        },
                                        "publicSettings": {
                                          "type": "object",
                                          "description": "Object for public settings\n"
                                        },
                                        "protectedSettings": {
                                          "type": "object",
                                          "description": "Object for protected settings\n"
                                        },
                                        "enableAutomaticUpgrade": {
                                          "title": "enable automatic upgrade",
                                          "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available.\n",
                                          "type": "boolean",
                                          "example": false
                                        },
                                        "protectedSettingsFromKeyVault": {
                                          "title": "Protected Settings from key vault",
                                          "description": "The extensions protected settings that are passed by reference, and consumed from key vault.\n",
                                          "type": "object",
                                          "required": [
                                            "sourceVault",
                                            "secretUrl"
                                          ],
                                          "properties": {
                                            "sourceVault": {
                                              "title": "sourceVault",
                                              "type": "string",
                                              "description": "The relative URL of the Key Vault containing the secret.\n",
                                              "example": "/subscriptions/1234-1234-1234/resourceGroups/rg_test/providers/Microsoft.KeyVault/vaults/testKeyVault"
                                            },
                                            "secretUrl": {
                                              "title": "secretUrl",
                                              "type": "string",
                                              "description": "The URL referencing a secret in a Key Vault.\n",
                                              "example": "https://testKeyVault.vault.azure.net/secrets/SecretTest/123456"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "dataDisks": {
                                    "type": "array",
                                    "description": "list of data disks to be attached to the stateful node's vm.\n",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "sizeGB",
                                        "lun",
                                        "type"
                                      ],
                                      "properties": {
                                        "sizeGB": {
                                          "type": "integer",
                                          "description": "The size of the data disk in GB, Required if dataDisks is specified.\n",
                                          "minimum": 1,
                                          "maximum": 1023,
                                          "example": 1
                                        },
                                        "lun": {
                                          "type": "integer",
                                          "description": "The lun of the data disk.\n",
                                          "example": 1
                                        },
                                        "type": {
                                          "type": "string",
                                          "description": "The type of the data disk\n",
                                          "enum": [
                                            "Standard_LRS",
                                            "Premium_LRS",
                                            "StandardSSD_LRS",
                                            "UltraSSD_LRS",
                                            "StandardSSD_ZRS",
                                            "Premium_ZRS"
                                          ],
                                          "example": "Standard_LRS"
                                        },
                                        "caching": {
                                          "type": "string",
                                          "description": "Specifies the host caching requirements. With disk caching enabled, VMs can achieve higher levels of performance.\n* If not specified, the Azure default behavior will be applied.\n",
                                          "enum": [
                                            "None",
                                            "ReadOnly",
                                            "ReadWrite"
                                          ],
                                          "example": "ReadOnly"
                                        }
                                      }
                                    },
                                    "minimum": 0,
                                    "maximum": 4
                                  },
                                  "osDisk": {
                                    "type": "object",
                                    "description": "Specify OS disk specification other than default.\n",
                                    "required": [
                                      "type"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "The type of the OS disk.\n",
                                        "enum": [
                                          "Standard_LRS",
                                          "Premium_LRS",
                                          "StandardSSD_LRS",
                                          "StandardSSD_ZRS",
                                          "Premium_ZRS"
                                        ],
                                        "example": "Standard_LRS"
                                      },
                                      "sizeGB": {
                                        "type": "integer",
                                        "description": "The size of the data disk in GB.\n",
                                        "minimum": 1,
                                        "maximum": 1023,
                                        "example": 30
                                      },
                                      "caching": {
                                        "type": "string",
                                        "description": "Specifies the host caching requirements. With disk caching enabled, VMs can achieve higher levels of performance.\n* If not specified, the Azure default behavior will be applied.\n",
                                        "enum": [
                                          "None",
                                          "ReadOnly",
                                          "ReadWrite"
                                        ],
                                        "example": "ReadOnly"
                                      }
                                    }
                                  },
                                  "secrets": {
                                    "title": "secrets",
                                    "type": "array",
                                    "description": "Set of certificates that should be installed on the VM\n",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "sourceVault",
                                        "vaultCertificates"
                                      ],
                                      "properties": {
                                        "sourceVault": {
                                          "type": "object",
                                          "description": "The key vault reference, contains the required certificates\n",
                                          "required": [
                                            "resourceGroupName",
                                            "name"
                                          ],
                                          "properties": {
                                            "resourceGroupName": {
                                              "type": "string",
                                              "description": "The resource group name of the key vault\n"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "The name of the key vault\n"
                                            }
                                          }
                                        },
                                        "vaultCertificates": {
                                          "type": "array",
                                          "description": "The required certificate references\n",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "certificateUrl",
                                              "certificateStore"
                                            ],
                                            "properties": {
                                              "certificateUrl": {
                                                "type": "string",
                                                "description": "The URL of the certificate under the key vault\n"
                                              },
                                              "certificateStore": {
                                                "type": "string",
                                                "description": "The certificate store directory the VM. The directory is created in the LocalMachine account.\n* This field is required only when using windows OS type\n* This field must be ‘null’ when the OS type is Linux\n"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "bootDiagnostics": {
                                    "type": "object",
                                    "description": "Will enable boot diagnostics in Azure when a new VM is launched",
                                    "required": [
                                      "isEnabled",
                                      "type"
                                    ],
                                    "properties": {
                                      "isEnabled": {
                                        "type": "boolean",
                                        "description": "Allows you to enable and disable the configuration of boot diagnostics at launch",
                                        "example": true
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "Defines the type of storage on VM launch  in Azure.",
                                        "enum": [
                                          "managed",
                                          "unmanaged"
                                        ],
                                        "example": "managed"
                                      },
                                      "storageUri": {
                                        "type": "string",
                                        "description": "The storage URI that is used if type is unmanaged. The storage URI must follow the blob storage URI format (\"https://<blobstoragename>.blob.core.windows.net/\"). StorageUri is required if the type is unmanaged. StorageUri must be ‘null’ in case the boot diagnostics type is managed",
                                        "example": "https://example.blob.core.windows.net/"
                                      }
                                    }
                                  },
                                  "licenseType": {
                                    "type": "string",
                                    "description": "Specify an existing Azure license type to use when launching new VMs.\n* Valid values for Windows OS: \"Windows_Server\", \"Windows_Client\"\n* Valid values for Linux OS: \"RHEL_BYOS\", \"SLES_BYOS\"\n",
                                    "example": "Windows_Client"
                                  },
                                  "security": {
                                    "type": "object",
                                    "description": "Specifies the Security related profile settings for the virtual machine.\n",
                                    "properties": {
                                      "securityType": {
                                        "type": "string",
                                        "description": "Security type refers to the different security features of a virtual machine.\nSecurity features like Trusted launch virtual machines help to improve the security of Azure generation 2 virtual machines.\n",
                                        "enum": [
                                          "Standard",
                                          "TrustedLaunch"
                                        ],
                                        "example": "TrustedLaunch"
                                      },
                                      "secureBootEnabled": {
                                        "type": "boolean",
                                        "description": "Specifies whether secure boot should be enabled on the virtual machine.\n",
                                        "example": true
                                      },
                                      "vTpmEnabled": {
                                        "type": "boolean",
                                        "description": "Specifies whether vTPM should be enabled on the virtual machine.\n",
                                        "example": true
                                      },
                                      "encryptionAtHost": {
                                        "type": "boolean",
                                        "description": "Enables the Host Encryption for the virtual machine. The Encryption at host will be disabled unless this property is set to true for the resource.\n",
                                        "example": true
                                      }
                                    }
                                  },
                                  "proximityPlacementGroups": {
                                    "type": "array",
                                    "description": "Defines the proximity placement group in which the VM will be launched.",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "resourceGroupName"
                                      ],
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the proximity placement group.",
                                          "example": "testPPG"
                                        },
                                        "resourceGroupName": {
                                          "type": "string",
                                          "description": "The resource group name of the proximity placement group.",
                                          "example": "testResourceGroup"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "persistence": {
                            "type": "object",
                            "title": "Stateful Node Persistence",
                            "description": "Persistence settings for stateful node\n",
                            "properties": {
                              "shouldPersistOsDisk": {
                                "type": "boolean",
                                "description": "Should persist os disk.\n",
                                "example": true
                              },
                              "osDiskPersistenceMode": {
                                "type": "string",
                                "enum": [
                                  "reattach",
                                  "onLaunch"
                                ],
                                "description": "The way persistency is handled in case of os disk persistence.\n",
                                "example": "onLaunch"
                              },
                              "shouldPersistDataDisks": {
                                "type": "boolean",
                                "description": "Should persist data disks.\n",
                                "example": true
                              },
                              "dataDisksPersistenceMode": {
                                "type": "string",
                                "enum": [
                                  "reattach",
                                  "onLaunch"
                                ],
                                "description": "The way persistency is handled in case of data disks persistence.\n",
                                "example": "reattach"
                              },
                              "shouldPersistNetwork": {
                                "type": "boolean",
                                "description": "Should persist network.\n",
                                "example": true
                              }
                            }
                          },
                          "scheduling": {
                            "type": "object",
                            "title": "Stateful Node Scheduling",
                            "description": "Scheduling settings for stateful node\n",
                            "properties": {
                              "tasks": {
                                "type": "array",
                                "description": "List of scheduled tasks to excute for the stateful node's.\n",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "isEnabled",
                                    "type",
                                    "cronExpression"
                                  ],
                                  "properties": {
                                    "isEnabled": {
                                      "type": "boolean",
                                      "description": "Is scheduled task enabled for stateful node.\n",
                                      "example": true
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "The type of the scheduled task\n",
                                      "enum": [
                                        "pause",
                                        "resume",
                                        "recycle"
                                      ],
                                      "example": "recycle"
                                    },
                                    "cronExpression": {
                                      "type": "string",
                                      "description": "A expression which describes when to execute the scheduled task (UTC)\n",
                                      "example": "35 12 * * *"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "health": {
                            "type": "object",
                            "title": "Stateful Node Health",
                            "description": "Set health check and auto-healing of unhealthy VMs.\n",
                            "properties": {
                              "healthCheckTypes": {
                                "type": "array",
                                "description": "Health check types to use in order to validate VM health.\n",
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "vmState",
                                    "applicationGateway"
                                  ]
                                },
                                "example": [
                                  "vmState"
                                ]
                              },
                              "gracePeriod": {
                                "type": "integer",
                                "description": "The amount of time (in seconds) after a new VM has launched before terminating the old VM.\n",
                                "example": 120,
                                "minimum": 0
                              },
                              "autoHealing": {
                                "type": "boolean",
                                "example": true,
                                "description": "Enable auto-healing of unhealthy VMs.\n"
                              },
                              "unhealthyDuration": {
                                "type": "integer",
                                "description": "Amount of time (in seconds) for the VM to remain unhealthy before a replacement is triggered.\n",
                                "example": 360,
                                "minimum": 120
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2022-01-01T00:00:00.000+0000"
                          },
                          "updatedAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2022-01-01T00:00:00.000+0000"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Stateful Node Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/statefulNode/ssn-12345678"
                            },
                            "method": {
                              "example": "UPDATE"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1azure~1compute~1statefulNode/post/requestBody/content/application~1json/schema/allOf/0/properties/statefulNode"
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:statefulNode"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Stateful Node",
        "description": "Delete an existing stateful node from the account.\n",
        "operationId": "azureStatefulNodeDelete",
        "tags": [
          "Elastigroup Azure Stateful"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1azure~1compute~1statefulNode~1%7BnodeId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Delete Azure Stateful Node",
                    "properties": {
                      "deallocationConfig": {
                        "type": "object",
                        "title": "Delete Azure Stateful Node Configuration",
                        "required": [
                          "shouldTerminateVm"
                        ],
                        "properties": {
                          "shouldTerminateVm": {
                            "type": "boolean",
                            "description": "Indicates whether to delete the stateful node's VM.\n",
                            "example": true
                          },
                          "shouldDeregisterFromLb": {
                            "type": "boolean",
                            "default": true,
                            "description": "Indicates whether to deregister the stateful node's VM from any type of load balancer.\nCan be changed to false only when shouldTerminateVms is 'false'\n",
                            "example": true
                          },
                          "networkDeallocationConfig": {
                            "type": "object",
                            "title": "Network Deallocation Config",
                            "description": "Network Deallocation Configuration.\n",
                            "required": [
                              "shouldDeallocate"
                            ],
                            "properties": {
                              "shouldDeallocate": {
                                "type": "boolean",
                                "description": "Indicates whether to delete the stateful node's network resources.\n",
                                "example": true
                              },
                              "ttlInHours": {
                                "type": "integer",
                                "default": 96,
                                "description": "Hours to keep the resource alive before deletion.\n",
                                "example": 1,
                                "minimum": 0,
                                "maximum": 371
                              }
                            }
                          },
                          "diskDeallocationConfig": {
                            "type": "object",
                            "title": "Disk Deallocation Config",
                            "description": "Disk Deallocation Configuration.\n",
                            "required": [
                              "shouldDeallocate"
                            ],
                            "properties": {
                              "shouldDeallocate": {
                                "type": "boolean",
                                "description": "Indicates whether to delete the stateful node's disk resources.\n",
                                "example": true
                              },
                              "ttlInHours": {
                                "type": "integer",
                                "default": 96,
                                "description": "Hours to keep the resource alive before deletion.\n",
                                "example": 1,
                                "minimum": 0,
                                "maximum": 371
                              }
                            }
                          },
                          "snapshotDeallocationConfig": {
                            "type": "object",
                            "title": "Snapshot Deallocation Config",
                            "description": "Snapshot Deallocation Configuration.\n",
                            "required": [
                              "shouldDeallocate"
                            ],
                            "properties": {
                              "shouldDeallocate": {
                                "type": "boolean",
                                "description": "Indicates whether to delete the stateful node's snapshot resources.\n",
                                "example": true
                              },
                              "ttlInHours": {
                                "type": "integer",
                                "default": 96,
                                "description": "Hours to keep the resource alive before deletion.\n",
                                "example": 1,
                                "minimum": 0,
                                "maximum": 371
                              }
                            }
                          },
                          "publicIpDeallocationConfig": {
                            "type": "object",
                            "title": "Public IP Deallocation Config",
                            "description": "Public IP Deallocation Configuration.\n",
                            "required": [
                              "shouldDeallocate"
                            ],
                            "properties": {
                              "shouldDeallocate": {
                                "type": "boolean",
                                "description": "Indicates whether to delete the stateful node's public ip resources.\n",
                                "example": true
                              },
                              "ttlInHours": {
                                "type": "integer",
                                "description": "Hours to keep the resource alive before deletion.\n",
                                "example": 1,
                                "minimum": 0,
                                "maximum": 371,
                                "default": 96
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Delete Stateful Node Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/statefulNode/ssn-12345678"
                            },
                            "method": {
                              "example": "DELETE"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/statefulNode/{nodeId}/resources": {
      "get": {
        "summary": "Get Stateful Node Resources",
        "description": "Get the node's attached resources (storage and network interfaces).\n",
        "operationId": "azureStatefulNodeGetResources",
        "tags": [
          "Elastigroup Azure Stateful"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1azure~1compute~1statefulNode~1%7BnodeId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Get Stateful Node Resources Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/statefulNode/ssn-12345678/resources"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Stateful Node Resources",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "ssn-12345678",
                                    "description": "The Stateful Node ID.\n"
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "MyStatefulNode",
                                    "description": "The name of the disk.\n"
                                  },
                                  "resourceGroupName": {
                                    "type": "string",
                                    "example": "dataDiskResourceGroup",
                                    "description": "The resource group name of the stateful node.\n"
                                  },
                                  "network": {
                                    "type": "object",
                                    "title": "Stateful Node Network Resources",
                                    "description": "Stateful Node Network Resources.\n",
                                    "properties": {
                                      "virtualNetwork": {
                                        "type": "object",
                                        "title": "Stateful Node Virtual Network Resource",
                                        "description": "Stateful Node Virtual Network Resource.\n",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "MyVirtualNetwork",
                                            "description": "The name of the disk.\n"
                                          },
                                          "resourceGroupName": {
                                            "type": "string",
                                            "example": "virtualNetworkResourceGroup",
                                            "description": "The resource group name of the virtual network.\n"
                                          }
                                        }
                                      },
                                      "networkInterfaces": {
                                        "type": "array",
                                        "description": "Network Interfaces.\n",
                                        "items": {
                                          "type": "object",
                                          "title": "Stateful Node Network Instance Resources",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "example": "MyNetworkInterface",
                                              "description": "The name of the disk.\n"
                                            },
                                            "resourceGroupName": {
                                              "type": "string",
                                              "example": "networkInterfaceResourceGroup",
                                              "description": "The resource group name of the network interface.\n"
                                            },
                                            "isPrimary": {
                                              "type": "boolean",
                                              "example": true,
                                              "description": "Is the network interface primary.\n"
                                            },
                                            "networkSecurityGroup": {
                                              "type": "object",
                                              "title": "Stateful Node Network Security Group",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "example": "MyNetworkSecurityGroup",
                                                  "description": "The name of the disk.\n"
                                                },
                                                "resourceGroupName": {
                                                  "type": "string",
                                                  "example": "networkSecurityGroupResourceGroup",
                                                  "description": "The resource group name of the network interface.\n"
                                                }
                                              }
                                            },
                                            "ipConfigurations": {
                                              "type": "array",
                                              "description": "IP Configurations.\n",
                                              "items": {
                                                "type": "object",
                                                "title": "Stateful IP Configuration Resources",
                                                "properties": {
                                                  "name": {
                                                    "type": "string",
                                                    "example": "MyIPConfiguration",
                                                    "description": "The name of the disk.\n"
                                                  },
                                                  "isPrimary": {
                                                    "type": "boolean",
                                                    "example": true,
                                                    "description": "Is the network interface primary.\n"
                                                  },
                                                  "subnet": {
                                                    "type": "object",
                                                    "title": "Stateful Node Subnet Resource",
                                                    "properties": {
                                                      "name": {
                                                        "type": "string",
                                                        "example": "MyNetworkInterface",
                                                        "description": "The name of the disk.\n"
                                                      },
                                                      "resourceGroupName": {
                                                        "type": "string",
                                                        "example": "networkInterfaceResourceGroup",
                                                        "description": "The resource group name of the network interface.\n"
                                                      },
                                                      "addressPrefix": {
                                                        "type": "string",
                                                        "example": "addressPrefix",
                                                        "description": "The resource group name of the network interface.\n"
                                                      }
                                                    }
                                                  },
                                                  "publicIp": {
                                                    "type": "object",
                                                    "title": "Stateful Node Subnet Resource",
                                                    "properties": {
                                                      "name": {
                                                        "type": "string",
                                                        "example": "MyNetworkInterface",
                                                        "description": "The name of the disk.\n"
                                                      },
                                                      "resourceGroupName": {
                                                        "type": "string",
                                                        "example": "networkInterfaceResourceGroup",
                                                        "description": "The resource group name of the network interface.\n"
                                                      },
                                                      "ipAddress": {
                                                        "type": "string",
                                                        "example": "ipAddress",
                                                        "description": "The resource group name of the network interface.\n"
                                                      },
                                                      "skuName": {
                                                        "type": "string",
                                                        "example": "skuName",
                                                        "description": "The resource group name of the network interface.\n"
                                                      }
                                                    }
                                                  },
                                                  "privateIpAddress": {
                                                    "type": "string",
                                                    "example": "privateIpAddress",
                                                    "description": "Is the network interface primary.\n"
                                                  },
                                                  "privateIPAddressVersion": {
                                                    "type": "string",
                                                    "example": "privateIPAddressVersion",
                                                    "description": "Is the network interface primary.\n"
                                                  },
                                                  "privateIpAllocationMethod": {
                                                    "type": "string",
                                                    "example": "privateIpAllocationMethod",
                                                    "description": "Is the network interface primary.\n"
                                                  },
                                                  "applicationSecurityGroups": {
                                                    "type": "array",
                                                    "description": "IP Configurations.\n",
                                                    "items": {
                                                      "type": "object",
                                                      "title": "Stateful IP Configuration Resources",
                                                      "properties": {
                                                        "name": {
                                                          "type": "string",
                                                          "example": "MyIPConfiguration",
                                                          "description": "The name of the disk.\n"
                                                        },
                                                        "resourceGroupName": {
                                                          "type": "string",
                                                          "example": "networkSecurityGroupResourceGroup",
                                                          "description": "The resource group name of the network interface.\n"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "enableAcceleratedNetworking": {
                                              "type": "boolean",
                                              "example": true,
                                              "description": "Is accelerated networking enabled for the network interface.\n"
                                            },
                                            "enableIpForwarding": {
                                              "type": "boolean",
                                              "example": true,
                                              "description": "Is IP forwarding enabled for the network interface.\n"
                                            },
                                            "macAddress": {
                                              "type": "string",
                                              "description": "The MAC address of the network interface.\n"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "storage": {
                                    "type": "object",
                                    "title": "Stateful Node Storage Resources",
                                    "description": "Stateful Node Storage Resources.\n",
                                    "properties": {
                                      "osDisk": {
                                        "type": "object",
                                        "title": "Stateful Node Os Disk",
                                        "description": "Stateful Node Os Disk.\n",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "myOsDisk",
                                            "description": "The name of the os disk.\n"
                                          },
                                          "resourceGroupName": {
                                            "type": "string",
                                            "example": "myResourceGroup",
                                            "description": "The name of the resource group of the os disk.\n"
                                          },
                                          "osType": {
                                            "type": "string",
                                            "example": "Windows",
                                            "description": "The os type of the os disk.\n"
                                          },
                                          "storageAccountType": {
                                            "type": "string",
                                            "example": "virtualNetworkResourceGroup",
                                            "description": "The disk type.\n"
                                          },
                                          "sizeGB": {
                                            "type": "integer",
                                            "example": 1,
                                            "description": "The size of the os disk.\n"
                                          },
                                          "snapshot": {
                                            "type": "string",
                                            "example": "myOsSnapshot",
                                            "description": "The name of the os disk snapshot.\n"
                                          },
                                          "lastCompletedSnapshot": {
                                            "type": "string",
                                            "readOnly": true,
                                            "format": "date-time",
                                            "example": "2022-01-01T00:00:00.000+0000"
                                          }
                                        }
                                      },
                                      "dataDisks": {
                                        "type": "array",
                                        "description": "Data Disks.\n",
                                        "items": {
                                          "type": "object",
                                          "title": "Stateful Node Data Disk Resources",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "example": "MyDataDisk",
                                              "description": "The name of the disk.\n"
                                            },
                                            "resourceGroupName": {
                                              "type": "string",
                                              "example": "myDataDiskResourceGroup",
                                              "description": "The data disk resource group.\n"
                                            },
                                            "storageAccountType": {
                                              "type": "string",
                                              "example": "virtualNetworkResourceGroup",
                                              "description": "The storage account type.\n"
                                            },
                                            "sizeGB": {
                                              "type": "integer",
                                              "example": 1,
                                              "description": "The size of the data disk.\n"
                                            },
                                            "lun": {
                                              "type": "integer",
                                              "example": 1,
                                              "description": "The lun number of the data disk.\n"
                                            },
                                            "snapshot": {
                                              "type": "string",
                                              "example": "mySnapshot",
                                              "description": "The snapshot name for the data disk.\n"
                                            },
                                            "lastCompletedSnapshot": {
                                              "type": "string",
                                              "readOnly": true,
                                              "format": "date-time",
                                              "example": "2022-01-01T00:00:00.000+0000"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:statefulNode:resources"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/statefulNode/{nodeId}/status": {
      "get": {
        "summary": "Get Stateful Node Status",
        "description": "Get the status of a specific stateful node.",
        "operationId": "azureStatefulNodeGetStatus",
        "tags": [
          "Elastigroup Azure Stateful"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1azure~1compute~1statefulNode~1%7BnodeId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Get Stateful Node Status Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/statefulNode/ssn-12345678/status"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1azure~1compute~1statefulNode~1status/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:statefulNode:status"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/statefulNode/status": {
      "get": {
        "summary": "Get All Stateful Node Statuses",
        "description": "Get the statuses of all stateful nodes in a specific account.",
        "operationId": "azureStatefulNodeGetAllStatus",
        "tags": [
          "Elastigroup Azure Stateful"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "List Stateful Node Status Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/statefulNode/status"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Azure Stateful Node Status",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "ssn-12345678",
                                    "readOnly": true,
                                    "description": "Azure Stateful Node ID\n"
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "Spot Stateful Node",
                                    "description": "Azure Stateful Node Name\n"
                                  },
                                  "region": {
                                    "type": "string",
                                    "example": "westus2",
                                    "description": "The Azure region of the Stateful Node.\n"
                                  },
                                  "resourceGroupName": {
                                    "type": "string",
                                    "example": "spotResourceGroup",
                                    "description": "Name of the Resource Group of the Stateful Node.\n"
                                  },
                                  "status": {
                                    "type": "string",
                                    "example": "active",
                                    "description": "State of the Stateful Node.\n"
                                  },
                                  "vmName": {
                                    "type": "string",
                                    "example": "spot-12345678-vm",
                                    "description": "Azure Stateful Node's VM Name.\n"
                                  },
                                  "vmSize": {
                                    "type": "string",
                                    "example": "spot-12345678-vm",
                                    "description": "Type of the VM.\n"
                                  },
                                  "lifecycle": {
                                    "type": "string",
                                    "description": "The desired type of VM.\n",
                                    "example": "od"
                                  },
                                  "rollbackReason": {
                                    "type": "string",
                                    "description": "Reason to roll back\n",
                                    "example": "Failed to launch virtual machine in Azure."
                                  },
                                  "errorReason": {
                                    "type": "string",
                                    "description": "Error reason\n",
                                    "example": "Deallocate action failed. Please contact our support team."
                                  },
                                  "privateIp": {
                                    "type": "string",
                                    "example": "172.23.4.20",
                                    "description": "Private IP"
                                  },
                                  "publicIp": {
                                    "type": "string",
                                    "example": "172.23.4.20",
                                    "description": "Public IP"
                                  },
                                  "vmHealthStatus": {
                                    "type": "string",
                                    "enum": [
                                      "HEALTHY",
                                      "UNHEALTHY",
                                      "UNKNOWN"
                                    ],
                                    "description": "Health Status"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "readOnly": true,
                                    "format": "date-time",
                                    "example": "2022-01-01T00:00:00.000+0000"
                                  },
                                  "updatedAt": {
                                    "type": "string",
                                    "readOnly": true,
                                    "format": "date-time",
                                    "example": "2022-01-01T00:00:00.000+0000"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:statefulNode:status"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/statefulNode/{nodeId}/state": {
      "put": {
        "summary": "Update Stateful Node State",
        "description": "Update the stateful node state.",
        "operationId": "azureStatefulNodeChangeState",
        "tags": [
          "Elastigroup Azure Stateful"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1azure~1compute~1statefulNode~1%7BnodeId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Change State Of Stateful Node",
                    "properties": {
                      "state": {
                        "type": "string",
                        "enum": [
                          "pause",
                          "resume",
                          "recycle"
                        ],
                        "title": "Stateful Node State Change",
                        "example": "pause"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Change State Of Stateful Node Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/statefulNode/ssn-12345678/state"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/statefulNode/resourceGroup/{resourceGroupName}/virtualMachine/{virtualMachineName}/importConfiguration": {
      "get": {
        "summary": "Get Stateful Node from an Azure VM",
        "description": "Get the configuration of a stateful node that was built from an Azure VM. This configuration is used for the [Import VM to a Stateful Node API](https://docs.spot.io/api/#operation/azureStatefulNodeImportVm).\n",
        "operationId": "azureStatefulNodeGetImportConfiguration",
        "tags": [
          "Elastigroup Azure Stateful"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "example": "importResourceGroup",
            "description": "Name of the Resource Group of the imported VM.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "virtualMachineName",
            "example": "spot-12345678-vm",
            "description": "Name of the imported VM.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1azure~1compute~1statefulNode/post/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/statefulNode/import": {
      "post": {
        "summary": "Import VM to a Stateful Node",
        "description": "Import an Azure VM and create a stateful node by providing a node configuration.",
        "operationId": "azureStatefulNodeImportVm",
        "tags": [
          "Elastigroup Azure Stateful"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Import VM to a Stateful Node",
                    "properties": {
                      "statefulNodeImport": {
                        "type": "object",
                        "title": "Azure Import Stateful Node",
                        "required": [
                          "originalVmName",
                          "resourceGroupName"
                        ],
                        "properties": {
                          "statefulImportId": {
                            "type": "string",
                            "example": "sin-12345678",
                            "readOnly": true,
                            "description": "Azure Import Stateful Node ID\n"
                          },
                          "originalVmName": {
                            "type": "string",
                            "example": "Spot Import Stateful Node",
                            "description": "Azure Import Stateful Node Name\n"
                          },
                          "resourceGroupName": {
                            "type": "string",
                            "example": "spotResourceGroup",
                            "description": "Name of the Resource Group for Stateful Node.\n"
                          },
                          "drainingTimeout": {
                            "type": "integer",
                            "example": 1,
                            "description": "Time in seconds before shutdown incase of load balancing.\n",
                            "minimum": 0,
                            "maximum": 1800,
                            "default": 120
                          },
                          "resourcesRetentionTime": {
                            "type": "integer",
                            "example": 1,
                            "description": "Time in hours to delete the original resources after the import has finished.\n",
                            "minimum": 0,
                            "maximum": 731,
                            "default": 96
                          },
                          "convertUnmanagedDisks": {
                            "type": "boolean",
                            "example": true,
                            "description": "Converts virtual machine unmanaged disks to managed disks.\n",
                            "default": false
                          },
                          "node": {
                            "$ref": "#/paths/~1azure~1compute~1statefulNode/post/requestBody/content/application~1json/schema/allOf/0/properties/statefulNode"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Import Stateful Node Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/statefulNode/import"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1azure~1compute~1statefulNode~1import/post/requestBody/content/application~1json/schema/allOf/0/properties/statefulNodeImport"
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:stateful:import:node"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/statefulNode/import/{importId}/status": {
      "get": {
        "summary": "Get Stateful Node Import Status",
        "description": "Get the import process status of a stateful node.\n",
        "operationId": "azureStatefulNodeGetImportStatus",
        "tags": [
          "Elastigroup Azure Stateful"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "importId",
            "example": "sin-12345678",
            "description": "Import Id.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get Stateful Node Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/statefulNode/import/ssn-12345678/status"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Import Stateful Node",
                                "properties": {
                                  "statefulImportId": {
                                    "type": "string",
                                    "example": "sin-12345678",
                                    "description": "The Import Stateful Node Id.\n"
                                  },
                                  "statefulNodeId": {
                                    "type": "string",
                                    "example": "ssn-12345678",
                                    "description": "The Import Stateful Node Id.\n"
                                  },
                                  "vmName": {
                                    "type": "string",
                                    "example": "spot-12345678-spot",
                                    "description": "The name of the imported VM.\n"
                                  },
                                  "state": {
                                    "type": "string",
                                    "example": "ImportStart",
                                    "description": "State of the imported stateful node."
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:stateful:import:node"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/statefulNode/{nodeId}/osDisk/swap": {
      "put": {
        "summary": "Swap OS Disk to Stateful Node",
        "description": "Configure a new managed OS disk for an OS persisted paused Stateful Node.",
        "operationId": "azureStatefulNodeSwapOSDisk",
        "tags": [
          "Elastigroup Azure Stateful"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1azure~1compute~1statefulNode~1%7BnodeId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Swap OS Disk to Stateful Node.",
                    "required": [
                      "osDiskName",
                      "osDiskResourceGroupName"
                    ],
                    "properties": {
                      "osDiskName": {
                        "type": "string",
                        "example": "OsDisk",
                        "description": "Specify the name of the new OS disk.\n"
                      },
                      "osDiskResourceGroupName": {
                        "type": "string",
                        "example": "MyResourceGroup",
                        "description": "The resource group name in which the new OS disk exists.\n"
                      },
                      "shouldTerminate": {
                        "type": "boolean",
                        "description": "Indicates whether to delete the original OS disk.\n",
                        "default": true,
                        "example": false
                      },
                      "retentionTime": {
                        "type": "integer",
                        "description": "Time to keep the original OS disk before deletion (hours).\n",
                        "minimum": 0,
                        "example": 1
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/statefulNode/{nodeId}/dataDisk/attach": {
      "put": {
        "summary": "Attach Data Disk to Stateful Node",
        "description": "Create a new data disk and attaches it to the stateful node.",
        "operationId": "azureStatefulNodeAttachDataDisk",
        "tags": [
          "Elastigroup Azure Stateful"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1azure~1compute~1statefulNode~1%7BnodeId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Attach Data Disk To Stateful Node",
                    "required": [
                      "dataDiskName",
                      "dataDiskResourceGroupName",
                      "sizeGB",
                      "storageAccountType"
                    ],
                    "properties": {
                      "dataDiskName": {
                        "type": "string",
                        "example": "MyDisk",
                        "description": "The name of the created data disk.\n"
                      },
                      "dataDiskResourceGroupName": {
                        "type": "string",
                        "example": "dataDiskResourceGroup",
                        "description": "The resource group name in which the data disk will be created.\n"
                      },
                      "sizeGB": {
                        "type": "integer",
                        "description": "The size of the data disk in GB, Required if dataDisks is specified.\n",
                        "minimum": 1,
                        "maximum": 1023,
                        "example": 1
                      },
                      "lun": {
                        "type": "integer",
                        "default": "ordinal",
                        "description": "The LUN of the data disk.\nIf not defined, the LUN will be set in order.\n",
                        "example": 1
                      },
                      "storageAccountType": {
                        "type": "string",
                        "description": "The type of the data disk.\n",
                        "enum": [
                          "Standard_LRS",
                          "Premium_LRS",
                          "StandardSSD_LRS",
                          "UltraSSD_LRS",
                          "StandardSSD_ZRS",
                          "Premium_ZRS"
                        ],
                        "example": "Standard_LRS"
                      },
                      "zone": {
                        "type": "string",
                        "enum": [
                          "1",
                          "2",
                          "3"
                        ],
                        "example": "1",
                        "description": "The Availability Zone in which the data disk will be created. If not defined, the data disk will be created regionally."
                      },
                      "caching": {
                        "type": "string",
                        "description": "Specifies the host caching requirements. With disk caching enabled, VMs can achieve higher levels of performance.\n* If not specified, the Azure default behavior will be applied.\n",
                        "enum": [
                          "None",
                          "ReadOnly",
                          "ReadWrite"
                        ],
                        "example": "ReadOnly"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Attach Data Disk To Stateful Node Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/statefulNode/ssn-12345678/dataDisk/attach"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Azure Disk",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "MyDisk",
                                    "description": "The name of the disk.\n"
                                  },
                                  "resourceGroupName": {
                                    "type": "string",
                                    "example": "dataDiskResourceGroup",
                                    "description": "The resource group name of the disk.\n"
                                  },
                                  "region": {
                                    "type": "string",
                                    "example": "westus2",
                                    "description": "The Azure region of the disk.\n"
                                  },
                                  "zone": {
                                    "type": "string",
                                    "enum": [
                                      "1",
                                      "2",
                                      "3"
                                    ],
                                    "example": "1",
                                    "description": "Azure Availability Zone of the disk."
                                  },
                                  "size": {
                                    "type": "integer",
                                    "description": "The size of the disk in GB.\n",
                                    "example": 1
                                  },
                                  "lun": {
                                    "type": "integer",
                                    "default": "ordinal",
                                    "description": "The lun of the disk.\n",
                                    "example": 1
                                  },
                                  "accountType": {
                                    "type": "string",
                                    "description": "The type of the disk.\n",
                                    "enum": [
                                      "Standard_LRS",
                                      "Premium_LRS",
                                      "StandardSSD_LRS",
                                      "UltraSSD_LRS",
                                      "StandardSSD_ZRS",
                                      "Premium_ZRS"
                                    ],
                                    "example": "Standard_LRS"
                                  },
                                  "managedBy": {
                                    "type": "string",
                                    "example": "spot-12345678-vm",
                                    "description": "The resource who manages the disk.\n"
                                  },
                                  "tags": {
                                    "type": "array",
                                    "description": "Unique Key-Value pairs.\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "tagKey": {
                                          "type": "string",
                                          "description": "Tag Key of the disk.\n",
                                          "example": "env"
                                        },
                                        "tagValue": {
                                          "type": "string",
                                          "description": "Tag Value for disk.\n",
                                          "example": "staging"
                                        }
                                      }
                                    },
                                    "maximum": 44
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:disk"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/statefulNode/{nodeId}/dataDisk/detach": {
      "put": {
        "summary": "Detach Data Disk From Stateful Node",
        "description": "Detach a data disk from a stateful node.",
        "operationId": "azureStatefulNodeDetachDataDisk",
        "tags": [
          "Elastigroup Azure Stateful"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1azure~1compute~1statefulNode~1%7BnodeId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Attach Data Disk To Stateful Node",
                    "required": [
                      "dataDiskName",
                      "dataDiskResourceGroupName",
                      "shouldDeallocate"
                    ],
                    "properties": {
                      "dataDiskName": {
                        "type": "string",
                        "example": "MyDisk",
                        "description": "The name of the created data disk.\n"
                      },
                      "dataDiskResourceGroupName": {
                        "type": "string",
                        "example": "dataDiskResourceGroup",
                        "description": "The resource group name in which the data disk exists.\n"
                      },
                      "shouldDeallocate": {
                        "type": "boolean",
                        "description": "Indicates whether to delete the data disk in addition to detach.\n",
                        "example": true
                      },
                      "ttlInHours": {
                        "type": "integer",
                        "default": 0,
                        "description": "Hours to keep the disk alive before deletion.\n",
                        "example": 1
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detach Data Disk From Stateful Node Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/statefulNode/ssn-12345678/dataDisk/detach"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/statefulNode/{nodeId}/log": {
      "get": {
        "summary": "Get Stateful Node Logs",
        "description": "Get the logs of a stateful node according to severity and time period filter parameters.",
        "operationId": "azureStatefulNodeLogs",
        "tags": [
          "Elastigroup Azure Stateful"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1azure~1compute~1statefulNode~1%7BnodeId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/2"
          },
          {
            "in": "query",
            "name": "severity",
            "example": "WARN",
            "description": "Severity of log entries to extract.\n",
            "schema": {
              "type": "string",
              "enum": [
                "DEBUG",
                "WARN",
                "INFO",
                "ALL",
                "ERROR"
              ]
            }
          },
          {
            "in": "query",
            "name": "resourceId",
            "example": "ssn-12345678",
            "description": "Filter log extracted entires related to a specific resource id\n",
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "in": "query",
            "name": "limit",
            "example": 100,
            "description": "Maximum number of lines to extract in a response.\n",
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 0,
              "default": 500
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Logs Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/statefulNode/ssn-12345678/log"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Logs",
                                "properties": {
                                  "message": {
                                    "type": "string",
                                    "example": "Successfully created stateful node"
                                  },
                                  "severity": {
                                    "type": "string",
                                    "example": "INFO"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "example": "2022-01-01T00:00:00.000Z"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:statefulNode:logs"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/statefulNode/cost": {
      "get": {
        "summary": "Get All Stateful Node Costs",
        "description": "Get the total costs of a single stateful node/all stateful nodes and for a specific time period.",
        "operationId": "azureGetAggregatedCosts",
        "tags": [
          "Elastigroup Azure Stateful"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/2"
          },
          {
            "in": "query",
            "name": "ownerId",
            "example": "ssn-12345678",
            "description": "Aggregates costs and usage by stateful node.\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Aggregated Costs Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/statefulNode/cost"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Aggregated Costs",
                                "properties": {
                                  "usage": {
                                    "type": "object",
                                    "properties": {
                                      "spot": {
                                        "type": "object",
                                        "properties": {
                                          "hours": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 2781.758
                                          }
                                        }
                                      },
                                      "od": {
                                        "type": "object",
                                        "properties": {
                                          "hours": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 0
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "cost": {
                                    "type": "object",
                                    "properties": {
                                      "odCost": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 0
                                      },
                                      "spotPotentialCost": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 380.9154
                                      },
                                      "spotActualCost": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 118.7367
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:statefulNode:cost"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/statefulNode/cost/daily": {
      "get": {
        "summary": "Get All Stateful Node Aggregated Daily Costs",
        "description": "Get the total costs per day of a single stateful node/all stateful nodes and for a specific time period.",
        "operationId": "azureGetDailyAggregatedCosts",
        "tags": [
          "Elastigroup Azure Stateful"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/2"
          },
          {
            "in": "query",
            "name": "ownerId",
            "example": "ssn-12345678",
            "description": "Aggregates costs and usage daily by stateful node.\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Daily Aggregated Costs Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/statefulNode/cost/daily"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Daily Aggregated Costs",
                                "properties": {
                                  "usage": {
                                    "type": "object",
                                    "properties": {
                                      "spot": {
                                        "type": "object",
                                        "properties": {
                                          "hours": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 2781.758
                                          }
                                        }
                                      },
                                      "od": {
                                        "type": "object",
                                        "properties": {
                                          "hours": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 0
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "cost": {
                                    "type": "object",
                                    "properties": {
                                      "odCost": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 0
                                      },
                                      "spotPotentialCost": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 380.9154
                                      },
                                      "spotActualCost": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 118.7367
                                      },
                                      "day": {
                                        "type": "string",
                                        "readOnly": true,
                                        "format": "date-time",
                                        "example": "2022-01-01T00:00:00.000+0000"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:statefulNode:cost"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/statefulNode/sizeUsage/daily": {
      "get": {
        "summary": "Get Stateful Node Size Usage",
        "description": "Get the daily costs per VM size of a single stateful node/all stateful nodes and for a specific time period.",
        "operationId": "azureGetDailyVmSizeUsage",
        "tags": [
          "Elastigroup Azure Stateful"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/2"
          },
          {
            "in": "query",
            "name": "ownerId",
            "example": "ssn-12345678",
            "description": "Aggregates VM size usage daily by stateful node.\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Daily VM Size Usage Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/statefulNode/sizeUsage/daily"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Daily VM Size Usage",
                                "properties": {
                                  "day": {
                                    "type": "string",
                                    "readOnly": true,
                                    "format": "date-time",
                                    "example": "2022-01-01T00:00:00.000+0000"
                                  },
                                  "cpus": {
                                    "type": "integer",
                                    "example": 60
                                  },
                                  "lifeCycle": {
                                    "type": "string",
                                    "example": "spot"
                                  },
                                  "vmSize": {
                                    "type": "string",
                                    "example": "standard_a1_v2"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:stateful:dailySizeUsage"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/gce/group": {
      "get": {
        "summary": "List Elastigroups",
        "description": "List all GCP Elastigroups for a Spot Account\n",
        "operationId": "elastigroupGcpListAll",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1gcp~1gce~1group/post/requestBody/content/application~1json/schema/allOf/0"
                              }
                            },
                            "kind": {
                              "example": "spotinst:gcp:gce:group"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "summary": "Create Elastigroup",
        "description": "Create a new GCP Elastigroup",
        "operationId": "elastigroupGcpCreate",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Elastigroup Wrapper",
                    "required": [
                      "group"
                    ],
                    "properties": {
                      "group": {
                        "type": "object",
                        "title": "GCP Elastigroup",
                        "required": [
                          "capacity",
                          "compute"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "sig-1234567",
                            "readOnly": true,
                            "description": "GCP Elastigroup\n"
                          },
                          "name": {
                            "type": "string",
                            "example": "spotinst-group",
                            "description": "GCP Elastigroup Name\n"
                          },
                          "description": {
                            "type": "string",
                            "example": "Some GCP Elastigroup description",
                            "description": "Description for your GCP Elastigroup\n"
                          },
                          "capacity": {
                            "title": "Capacity Units",
                            "type": "object",
                            "required": [
                              "target",
                              "minimum",
                              "maximum"
                            ],
                            "properties": {
                              "target": {
                                "type": "integer",
                                "example": 8,
                                "description": "Current scale the Elastigroup will conform to.\n"
                              },
                              "minimum": {
                                "type": "integer",
                                "example": 2,
                                "description": "The Elastigroup will not set a target below this value.\n"
                              },
                              "maximum": {
                                "type": "integer",
                                "example": 20,
                                "description": "The Elastigroup will not set a target greater than this value.\n"
                              },
                              "unit": {
                                "type": "string",
                                "example": "instance",
                                "description": "The base capacity unit.\n"
                              }
                            }
                          },
                          "scheduling": {
                            "title": "Scheduling Object",
                            "type": "object",
                            "properties": {
                              "tasks": {
                                "title": "Tasks Array",
                                "type": "array",
                                "items": {
                                  "title": "Task Object",
                                  "type": "object",
                                  "properties": {
                                    "isEnabled": {
                                      "type": "boolean",
                                      "example": true
                                    },
                                    "taskType": {
                                      "type": "string",
                                      "example": "setCapacity"
                                    },
                                    "cronExpression": {
                                      "type": "string",
                                      "example": "1 10 * * *"
                                    },
                                    "targetCapacity": {
                                      "type": "integer",
                                      "example": 2
                                    },
                                    "minCapacity": {
                                      "type": "integer",
                                      "example": 1
                                    },
                                    "maxCapacity": {
                                      "type": "integer",
                                      "example": 3
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "strategy": {
                            "type": "object",
                            "title": "Elastigroup Strategy",
                            "required": [
                              "preemptiblePercentage",
                              "onDemandCount",
                              "fallbackToOd"
                            ],
                            "properties": {
                              "fallbackToOd": {
                                "type": "boolean",
                                "example": true
                              },
                              "optimizationWindows": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "format": "date-time",
                                  "example": [
                                    "Mon:01:00-Mon:02:00"
                                  ]
                                }
                              },
                              "provisioningModel": {
                                "type": "string",
                                "description": "Define the provisioning model of the launched instances\n",
                                "enum": [
                                  "SPOT",
                                  "PREEMPTIBLE"
                                ],
                                "default": "PREEMPTIBLE"
                              },
                              "revertToPreemptible": {
                                "required": [
                                  "performAt"
                                ],
                                "type": "object",
                                "properties": {
                                  "performAt": {
                                    "type": "string",
                                    "example": "timeWindow"
                                  }
                                }
                              },
                              "preemptiblePercentage": {
                                "type": "integer",
                                "example": 90,
                                "description": "percentage of Preemptible instances in the Elastigroup. The remaining percentage will be On-Demand instances.\n"
                              },
                              "onDemandCount": {
                                "type": "integer",
                                "example": 2,
                                "description": "the exact number of On-Demand instances required in the Elastigroup.\n"
                              },
                              "drainingTimeout": {
                                "example": 30,
                                "type": "integer",
                                "description": "The time in seconds, the instance is allowed to run while detached from the ELB.\n"
                              }
                            }
                          },
                          "compute": {
                            "type": "object",
                            "title": "Compute Object",
                            "required": [
                              "availabilityZones",
                              "subnets",
                              "launchSpecification"
                            ],
                            "properties": {
                              "launchSpecification": {
                                "type": "object",
                                "title": "Virtual Node Group Object",
                                "required": [
                                  "networkInterfaces",
                                  "disks"
                                ],
                                "properties": {
                                  "metadata": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string",
                                          "example": "environment"
                                        },
                                        "value": {
                                          "type": "string",
                                          "example": "production"
                                        }
                                      }
                                    }
                                  },
                                  "tags": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "example": [
                                        "prod1",
                                        "testingfeature"
                                      ]
                                    }
                                  },
                                  "backendServiceConfig": {
                                    "type": "object",
                                    "title": "backendServiceConfig Object",
                                    "properties": {
                                      "backendServices": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "backendServiceName"
                                          ],
                                          "properties": {
                                            "backendServiceName": {
                                              "type": "string",
                                              "example": "bserv-2"
                                            },
                                            "locationType": {
                                              "type": "string",
                                              "example": "global"
                                            },
                                            "scheme": {
                                              "type": "string",
                                              "example": null
                                            },
                                            "namedPorts": {
                                              "type": "object",
                                              "required": [
                                                "name",
                                                "ports"
                                              ],
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "example": "https"
                                                },
                                                "ports": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "integer",
                                                    "example": [
                                                      443,
                                                      8443
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "disks": {
                                    "type": "array",
                                    "title": "Disks array",
                                    "required": [
                                      "type",
                                      "diskSizeGb",
                                      "sourceImage"
                                    ],
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "deviceName": {
                                          "type": "string",
                                          "example": null
                                        },
                                        "initializeParams": {
                                          "type": "object",
                                          "properties": {
                                            "diskSizeGb": {
                                              "type": "integer",
                                              "example": 10
                                            },
                                            "diskType": {
                                              "type": "string",
                                              "example": "pd-standard"
                                            },
                                            "sourceImage": {
                                              "type": "string",
                                              "example": "https://www.googleapis.com/compute/v1/projects/test/global/images/docker-image-1"
                                            }
                                          }
                                        },
                                        "mode": {
                                          "type": "string",
                                          "example": "READ_WRITE"
                                        },
                                        "source": {
                                          "type": "string",
                                          "example": null
                                        },
                                        "type": {
                                          "type": "string",
                                          "example": "PERSISTENT"
                                        },
                                        "autoDelete": {
                                          "type": "boolean",
                                          "example": true
                                        },
                                        "boot": {
                                          "type": "boolean",
                                          "example": true
                                        },
                                        "interface": {
                                          "type": "string",
                                          "example": "SCSI"
                                        }
                                      }
                                    }
                                  },
                                  "networkInterfaces": {
                                    "title": "Network Interfaces array",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "network"
                                      ],
                                      "properties": {
                                        "network": {
                                          "type": "string",
                                          "example": "spot-network"
                                        },
                                        "projectId": {
                                          "type": "string",
                                          "example": "test-project"
                                        }
                                      }
                                    }
                                  },
                                  "startupScript": {
                                    "type": "string",
                                    "example": "IyEvYmluL2Jhc2gNCnRvdWNoIHRlc3Qiquwhq38"
                                  },
                                  "shutdownScript": {
                                    "type": "string",
                                    "example": null
                                  },
                                  "ipForwarding": {
                                    "type": "boolean",
                                    "example": false
                                  },
                                  "minCpuPlatform": {
                                    "type": "string",
                                    "example": "Intel Sandy Bridge"
                                  },
                                  "instanceNamePrefix": {
                                    "pattern": "^[a-z]([-a-z0-9]*[a-z0-9])?",
                                    "type": "string",
                                    "example": "name-prefix",
                                    "description": "Set an instance name prefix to be used for all launched instances and their boot disk. \nThe prefix value should comply with the following limitations:\n* A recommended length of up to 30 characters.\n* A maximum length of 36 characters. Note: the GroupId suffix will be removed from the instance name once using over 30 characters.\n* The first character must be a lowercase letter, and all the following characters must be hyphens, lowercase letters, or digits, except the last character, which cannot be a hyphen.\n"
                                  }
                                }
                              },
                              "instanceTypes": {
                                "type": "object",
                                "title": "On Demand & Preemptible Types Object",
                                "required": [
                                  "ondemand",
                                  "preemptible"
                                ],
                                "properties": {
                                  "ondemand": {
                                    "type": "string",
                                    "example": "n1-standard-1",
                                    "description": "The type of On Demand instances to utilize\n"
                                  },
                                  "preemptible": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "example": [
                                      "n1-standard-1",
                                      "n1-standard-2"
                                    ],
                                    "description": "The type of Preemptible instances to utilize\n"
                                  },
                                  "custom": {
                                    "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/put/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/compute/properties/instanceTypes/properties/custom"
                                  },
                                  "preferred": {
                                    "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/put/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/compute/properties/instanceTypes/properties/preferred"
                                  }
                                }
                              },
                              "availabilityZones": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "asia-east1-a",
                                  "asia-east1-b",
                                  "asia-east1-c"
                                ],
                                "description": "Availability zones for the group"
                              },
                              "health": {
                                "type": "object",
                                "title": "Health",
                                "description": "Set health check and auto-healing of unhealthy VMs according to GCP Backend Services.\n",
                                "required": [
                                  "healthCheckType"
                                ],
                                "properties": {
                                  "healthCheckType": {
                                    "title": "Health Check Type",
                                    "description": "Health check types to use in order to validate instance health.\n",
                                    "type": "string",
                                    "enum": [
                                      "K8S_NODE",
                                      "BACKEND_SERVICE"
                                    ],
                                    "example": "K8S_NODE"
                                  },
                                  "autoHealing": {
                                    "title": "Auto Healing",
                                    "description": "Enable auto-healing of unhealthy instances.\n",
                                    "type": "boolean",
                                    "example": true
                                  },
                                  "gracePeriod": {
                                    "type": "string",
                                    "example": 300,
                                    "title": "Grace Period",
                                    "description": "The amount of time (in seconds) after a new instance has launched before terminating the old instance.\n"
                                  },
                                  "unhealthyDuration": {
                                    "type": "integer",
                                    "example": 250,
                                    "title": "Unhealthy Duration",
                                    "description": "Amount of time (in seconds) for the instance to remain unhealthy before a replacement is triggered.\n"
                                  }
                                }
                              },
                              "preferredAvailabilityZones": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "asia-east1-a",
                                  "asia-east1-c"
                                ],
                                "description": "prioritize availability zones when launching instances for the group <a style=color:red>Must be a sublist of compute.availabilityZones.</a>"
                              },
                              "gpu": {
                                "type": "object",
                                "title": "CPU Object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "example": "nvidia-tesla-v100"
                                  },
                                  "count": {
                                    "type": "integer",
                                    "example": 1
                                  }
                                }
                              },
                              "subnets": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "region": {
                                      "type": "string",
                                      "example": "us-west1"
                                    },
                                    "subnetNames": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "example": [
                                        "private"
                                      ]
                                    }
                                  }
                                },
                                "description": "Subnets your group is associated with\n"
                              }
                            }
                          },
                          "scaling": {
                            "type": "object",
                            "title": "Scaling object",
                            "properties": {
                              "up": {
                                "type": "array",
                                "items": {
                                  "title": "Up scaling object",
                                  "type": "object",
                                  "properties": {
                                    "policyName": {
                                      "type": "string",
                                      "example": "scale_up_1"
                                    },
                                    "source": {
                                      "type": "string",
                                      "example": "stackdriver"
                                    },
                                    "metricName": {
                                      "type": "string",
                                      "example": "instance/disk/read_ops_count"
                                    },
                                    "statistic": {
                                      "type": "string",
                                      "example": "average"
                                    },
                                    "unit": {
                                      "type": "string",
                                      "example": "percent"
                                    },
                                    "threshold": {
                                      "type": "integer",
                                      "example": 10000
                                    },
                                    "namespace": {
                                      "type": "string",
                                      "example": "compute"
                                    },
                                    "period": {
                                      "type": "integer",
                                      "example": 300
                                    },
                                    "evaluationPeriods": {
                                      "type": "integer",
                                      "example": 1
                                    },
                                    "cooldown": {
                                      "type": "integer",
                                      "example": 300
                                    },
                                    "operator": {
                                      "type": "string",
                                      "example": "gte"
                                    },
                                    "dimensions": {
                                      "title": "Array of dimension objects",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "storage_type"
                                          },
                                          "value": {
                                            "type": "string",
                                            "example": "pd-standard"
                                          }
                                        }
                                      }
                                    },
                                    "action": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "example": "adjustment"
                                        },
                                        "adjustment": {
                                          "type": "integer",
                                          "example": 1
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "down": {
                                "type": "array",
                                "items": {
                                  "title": "Down scaling object",
                                  "type": "object",
                                  "properties": {
                                    "policyName": {
                                      "type": "string",
                                      "example": "scale_down_1"
                                    },
                                    "source": {
                                      "type": "string",
                                      "example": "stackdriver"
                                    },
                                    "metricName": {
                                      "type": "string",
                                      "example": "instance/disk/read_ops_count"
                                    },
                                    "statistic": {
                                      "type": "string",
                                      "example": "average"
                                    },
                                    "unit": {
                                      "type": "string",
                                      "example": "percent"
                                    },
                                    "threshold": {
                                      "type": "integer",
                                      "example": 10000
                                    },
                                    "namespace": {
                                      "type": "string",
                                      "example": "compute"
                                    },
                                    "period": {
                                      "type": "integer",
                                      "example": 300
                                    },
                                    "evaluationPeriods": {
                                      "type": "integer",
                                      "example": 1
                                    },
                                    "cooldown": {
                                      "type": "integer",
                                      "example": 300
                                    },
                                    "operator": {
                                      "type": "string",
                                      "example": "lte"
                                    },
                                    "dimensions": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "storage_type"
                                          },
                                          "value": {
                                            "type": "string",
                                            "example": "pd-standard"
                                          }
                                        }
                                      }
                                    },
                                    "action": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "example": "adjustment"
                                        },
                                        "adjustment": {
                                          "type": "integer",
                                          "example": 1
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "thirdPartiesIntegration": {
                            "title": "Third Parties Integration Object",
                            "type": "object",
                            "properties": {
                              "dockerSwarm": {
                                "title": "DockerSwarm ThirdPartiesIntegration Object",
                                "type": "object",
                                "properties": {
                                  "masterHost": {
                                    "type": "string",
                                    "example": "swarm1.swarm.com"
                                  },
                                  "masterPort": {
                                    "type": "integer",
                                    "example": 1234
                                  }
                                }
                              },
                              "gke": {
                                "title": "GKE ThirdPartiesIntegration Object",
                                "type": "object",
                                "properties": {
                                  "autoUpdate": {
                                    "type": "boolean",
                                    "example": true
                                  },
                                  "autoScale": {
                                    "type": "object",
                                    "properties": {
                                      "isEnabled": {
                                        "type": "boolean",
                                        "example": true
                                      },
                                      "isAutoConfig": {
                                        "type": "boolean",
                                        "example": false
                                      },
                                      "cooldown": {
                                        "type": "integer",
                                        "example": 300
                                      },
                                      "headroom": {
                                        "type": "object",
                                        "properties": {
                                          "cpuPerUnit": {
                                            "type": "integer",
                                            "example": 1
                                          },
                                          "memoryPerUnit": {
                                            "type": "integer",
                                            "example": 0
                                          },
                                          "numOfUnits": {
                                            "type": "integer",
                                            "example": 1
                                          }
                                        }
                                      },
                                      "down": {
                                        "type": "object",
                                        "properties": {
                                          "evaluationPeriods": {
                                            "type": "integer",
                                            "example": 5
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "clusterIdentifier": {
                                    "type": "string",
                                    "example": "gke-clust-1"
                                  },
                                  "location": {
                                    "type": "string",
                                    "example": "us-west1"
                                  }
                                }
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "example": "2020-10-16T09:03:23.000Z",
                            "format": "date-time",
                            "description": "The datetime the group was created.\n"
                          },
                          "updatedAt": {
                            "type": "string",
                            "example": "2020-10-16T09:03:23.000Z",
                            "format": "date-time",
                            "description": "The datetime the group was last updated.\n"
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "group": {
                        "type": "object",
                        "required": [
                          "name",
                          "strategy"
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/gce/group/{groupId}": {
      "get": {
        "summary": "Get Elastigroup",
        "description": "List all properties for single GCP Elastigroup\n",
        "operationId": "elastigroupGcpDescribe",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "groupId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "sig-12345",
            "description": "Elastigroup ID\n"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Elastigroup",
        "description": "Delete an Elastigroup GCP\n",
        "operationId": "elastigroupGcpDelete",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Spot Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Elastigroup",
        "description": "Update an GCP Elastigroup\n",
        "operationId": "elastigroupGcpUpdate",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "GCP Elastigroup Update",
                    "required": [
                      "group"
                    ],
                    "properties": {
                      "group": {
                        "type": "object",
                        "title": "GCP Elastigroup",
                        "description": "Elastigroup Configuration",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "spotinst-group",
                            "description": "GCP Elastigroup Name\n"
                          },
                          "description": {
                            "type": "string",
                            "example": "Some GCP Elastigroup description",
                            "description": "Description for your GCP Elastigroup\n"
                          },
                          "capacity": {
                            "title": "Capacity Units",
                            "description": "Update capacity settings",
                            "type": "object",
                            "properties": {
                              "target": {
                                "type": "integer",
                                "example": 8,
                                "description": "Current scale the Elastigroup will conform to.\n"
                              },
                              "minimum": {
                                "type": "integer",
                                "example": 2,
                                "description": "The Elastigroup will not set a target below this value.\n"
                              },
                              "maximum": {
                                "type": "integer",
                                "example": 20,
                                "description": "The Elastigroup will not set a target greater than this value.\n"
                              }
                            }
                          },
                          "scheduling": {
                            "title": "Scheduling Object",
                            "description": "Schedule tasks to execute, using CRON expressions.",
                            "type": "object",
                            "properties": {
                              "tasks": {
                                "title": "Tasks Array",
                                "description": "The scheduling tasks for the group.",
                                "type": "array",
                                "items": {
                                  "title": "Task Object",
                                  "type": "object",
                                  "required": [
                                    "taskType"
                                  ],
                                  "properties": {
                                    "isEnabled": {
                                      "title": "Is Enabled",
                                      "description": "Describes whether the task is enabled. When true the task should run when false it should not run.",
                                      "type": "boolean",
                                      "example": true
                                    },
                                    "taskType": {
                                      "title": "Is Enabled",
                                      "description": "The task type to run. / Valid Values: 'setCapacity'. Required on scheduling.tasks object.",
                                      "type": "string",
                                      "example": "setCapacity"
                                    },
                                    "cronExpression": {
                                      "title": "Cron Expression",
                                      "description": "A valid cron expression. For example : * * * * * .The cron is running in UTC time zone and is in Unix cron format Cron Expression Validator Script. Only one of ‘frequency’ or ‘cronExpression’ should be used at a time.",
                                      "type": "string",
                                      "example": "1 10 * * *"
                                    },
                                    "targetCapacity": {
                                      "title": "Target Capacity",
                                      "description": "The target capacity of the group",
                                      "type": "integer",
                                      "example": 2
                                    },
                                    "minCapacity": {
                                      "title": "Min Capacity",
                                      "description": "The min capacity of the group",
                                      "type": "integer",
                                      "example": 1
                                    },
                                    "maxCapacity": {
                                      "title": "Max Capacity",
                                      "description": "The max capacity of the group",
                                      "type": "integer",
                                      "example": 3
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "strategy": {
                            "type": "object",
                            "title": "Elastigroup Strategy",
                            "description": "Update strategy settings",
                            "properties": {
                              "fallbackToOd": {
                                "title": "Fallback To Od",
                                "description": "Activate Fallback to On-Demand. When provisioning an instance, if no Preemptible market is available, Fallback to On-Demand will provision an On-Demand instance to maintain the group capacity.",
                                "type": "boolean",
                                "example": true
                              },
                              "optimizationWindows": {
                                "type": "array",
                                "title": "Optimization Windows",
                                "description": "Set time window to perform the revert to preemptible. time windows must be at least 120 minutes. Format: DayInWeek:HH-DayInWeek:HH. Required when strategy.revertToPreemptible.performAt is 'timeWindow'",
                                "items": {
                                  "type": "string",
                                  "format": "date-time",
                                  "example": [
                                    "Mon:01:00-Mon:02:00"
                                  ]
                                }
                              },
                              "provisioningModel": {
                                "type": "string",
                                "description": "Define the provisioning model of the launched instances\n",
                                "enum": [
                                  "SPOT",
                                  "PREEMPTIBLE"
                                ]
                              },
                              "revertToPreemptible": {
                                "required": [
                                  "performAt"
                                ],
                                "type": "object",
                                "description": "Setting for revert to preemptible option",
                                "properties": {
                                  "performAt": {
                                    "title": "Perform At",
                                    "description": "Required on strategy.revertToPreemptible object",
                                    "enum": [
                                      "always",
                                      "never",
                                      "timeWindow"
                                    ],
                                    "type": "string",
                                    "example": "timeWindow"
                                  }
                                }
                              },
                              "preemptiblePercentage": {
                                "type": "integer",
                                "example": 90,
                                "description": "percentage of Preemptible instances in the Elastigroup. The remaining percentage will be On-Demand instances.\n"
                              },
                              "onDemandCount": {
                                "type": "integer",
                                "example": 2,
                                "description": "the exact number of On-Demand instances required in the Elastigroup.\n"
                              },
                              "drainingTimeout": {
                                "example": 30,
                                "type": "integer",
                                "description": "The time in seconds, the instance is allowed to run while detached from the ELB.\n"
                              }
                            }
                          },
                          "compute": {
                            "type": "object",
                            "title": "Compute Object",
                            "description": "Compute Configuration",
                            "properties": {
                              "health": {
                                "title": "Health",
                                "type": "object",
                                "description": "Set health check and auto-healing of unhealthy VMs according to GCP Backend Services.\n",
                                "required": [
                                  "healthCheckType"
                                ],
                                "properties": {
                                  "healthCheckType": {
                                    "title": "Health Check Type",
                                    "description": "Health check types to use in order to validate instance health.\n",
                                    "type": "string",
                                    "example": "K8S_NODE"
                                  },
                                  "autoHealing": {
                                    "title": "Auto Healing",
                                    "description": "Enable auto-healing of unhealthy instances.\n",
                                    "type": "boolean",
                                    "example": true
                                  },
                                  "gracePeriod": {
                                    "type": "string",
                                    "example": 300,
                                    "title": "Grace Period",
                                    "description": "The amount of time (in seconds) after a new instance has launched before terminating the old instance.\n"
                                  },
                                  "unhealthyDuration": {
                                    "type": "integer",
                                    "example": 250,
                                    "title": "Unhealthy Duration",
                                    "description": "Amount of time (in seconds) for the instance to remain unhealthy before a replacement is triggered.\n"
                                  }
                                }
                              },
                              "launchSpecification": {
                                "type": "object",
                                "title": "Virtual Node Group Object",
                                "description": "Update compute.launchSpecification settings",
                                "properties": {
                                  "metadata": {
                                    "title": "Metadata",
                                    "description": "An array of the following objects, representing Key-Value pair meta data for the created instances",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "title": "Key",
                                          "description": "The meta data’s key",
                                          "type": "string",
                                          "example": "environment"
                                        },
                                        "value": {
                                          "title": "Value",
                                          "description": "The meta data’s value",
                                          "type": "string",
                                          "example": "production"
                                        }
                                      }
                                    }
                                  },
                                  "tags": {
                                    "title": "Tags",
                                    "description": "Tags to mark instances created.",
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "example": [
                                        "prod1",
                                        "testingfeature"
                                      ]
                                    }
                                  },
                                  "backendServiceConfig": {
                                    "type": "object",
                                    "title": "backendServiceConfig Object",
                                    "description": "Configure Backend Services.",
                                    "properties": {
                                      "backendServices": {
                                        "type": "array",
                                        "title": "Backend Services",
                                        "description": "Configure the Backend Service to connect the Elastigroup to",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "backendServiceName"
                                          ],
                                          "properties": {
                                            "backendServiceName": {
                                              "title": "Backend Service Name",
                                              "description": "The name of the Backend Service. Required on compute.launchSpecification.backendServiceConfig.backendServices object",
                                              "type": "string",
                                              "example": "bserv-2"
                                            },
                                            "locationType": {
                                              "title": "Location Type",
                                              "description": "Which locations the backend service should be active. Possible values should be: 'regional' 'global'",
                                              "type": "string",
                                              "example": "global"
                                            },
                                            "scheme": {
                                              "title": "Scheme",
                                              "description": "In case the locationType is 'regional' we can set the traffic for the backend service, / between the instances in the vpc / traffic from the internet",
                                              "type": "string",
                                              "enum": [
                                                "INTERNAL",
                                                "EXTERNAL",
                                                "null"
                                              ],
                                              "example": null
                                            },
                                            "namedPorts": {
                                              "title": "Named Ports",
                                              "description": "Key-Value of port name and and port tuples.",
                                              "type": "object",
                                              "required": [
                                                "name",
                                                "ports"
                                              ],
                                              "properties": {
                                                "name": {
                                                  "title": "Name",
                                                  "description": "The name mapped to the port numbers that the Backend Service sends traffic through to the Elastigroup instances. The port name is mapped to one or more port numbers. Only one port name can selected per Backend Service. Required on compute.launchSpecification.backendServiceConfig.backendServices.namedPorts object",
                                                  "type": "string",
                                                  "example": "https"
                                                },
                                                "ports": {
                                                  "title": "Port",
                                                  "description": "The ports that the Backend Service sends traffic through to the Elastigroup instances. Required on compute.launchSpecification.backendServiceConfig.backendServices.namedPorts object",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "integer",
                                                    "example": [
                                                      443,
                                                      8443
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "disks": {
                                    "type": "array",
                                    "title": "Disks array",
                                    "description": "Array of disks associated with this instance. Persistent disks must be created before you can assign them",
                                    "required": [
                                      "sourceImage"
                                    ],
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "deviceName": {
                                          "title": "Device Name",
                                          "description": "Specifies a unique device name of your choice",
                                          "type": "string",
                                          "example": null
                                        },
                                        "initializeParams": {
                                          "title": "Initialize Params",
                                          "description": "Specifies the parameters for a new disk that will be created alongside the new instance. Use initialization parameters to create boot disks or local SSDs attached to the new instance",
                                          "type": "object",
                                          "properties": {
                                            "diskSizeGb": {
                                              "title": "Disk Size Gb",
                                              "description": "Specifies the size of the disk in base-2 GB",
                                              "type": "integer",
                                              "example": 10
                                            },
                                            "diskType": {
                                              "title": "Disk Type",
                                              "description": "Specifies the disk type to use to create the instance. the default is pd-standard. Valid values: pd-ssd, local-ssd",
                                              "type": "string",
                                              "example": "pd-standard"
                                            },
                                            "sourceImage": {
                                              "title": "Source Image",
                                              "description": "A source image used to create the disk. You can provide a private (custom) image, and Compute Engine will use the corresponding image from your project. Required for compute.launchSpecification.disks.initializeParams object",
                                              "type": "string",
                                              "example": "https://www.googleapis.com/compute/v1/projects/test/global/images/docker-image-1"
                                            }
                                          }
                                        },
                                        "mode": {
                                          "title": "Mode",
                                          "description": "The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If not specified, the default is to attach the disk in READ_WRITE mode",
                                          "type": "string",
                                          "example": "READ_WRITE"
                                        },
                                        "source": {
                                          "title": "Source",
                                          "description": "Specifies a valid partial or full URL to an existing Persistent Disk resource. This field is only applicable for persistent disks.",
                                          "type": "string",
                                          "example": null
                                        },
                                        "type": {
                                          "title": "Type",
                                          "description": "Specifies the type of the disk, either SCRATCH or PERSISTENT. If not specified, the default is PERSISTENT",
                                          "type": "string",
                                          "example": "PERSISTENT"
                                        },
                                        "autoDelete": {
                                          "title": "Auto Delete",
                                          "description": "Specifies whether the disk will be auto-deleted when the instance is deleted.",
                                          "type": "boolean",
                                          "example": true
                                        },
                                        "boot": {
                                          "title": "Boot",
                                          "description": "Indicates that this is a boot disk. The virtual machine will use the first partition of the disk for its root filesystem",
                                          "type": "boolean",
                                          "example": true
                                        },
                                        "interface": {
                                          "title": "Interface",
                                          "description": "Specifies the disk interface to use for attaching this disk, which is either SCSI or NVM. The default is SCSI",
                                          "type": "string",
                                          "example": "SCSI"
                                        }
                                      }
                                    }
                                  },
                                  "networkInterfaces": {
                                    "title": "Network Interfaces array",
                                    "description": "An array of the following objects, representing network configuration for the created instances",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "network"
                                      ],
                                      "properties": {
                                        "network": {
                                          "title": "Network",
                                          "description": "Network resource for this instance elastic for the created instances",
                                          "type": "string",
                                          "example": "spot-network"
                                        },
                                        "projectId": {
                                          "title": "Project ID",
                                          "description": "Use network resource from different project. set project ID to use it's network resource. This parameter relevant only If the network resource is in different project",
                                          "type": "string",
                                          "example": "test-project"
                                        }
                                      }
                                    }
                                  },
                                  "startupScript": {
                                    "title": "Startup Script",
                                    "description": "Create and run your own startup scripts on your virtual machines to perform automated tasks every time your instance boots up.",
                                    "type": "string",
                                    "example": "IyEvYmluL2Jhc2gNCnRvdWNoIHRlc3Qiquwhq38"
                                  },
                                  "shutdownScript": {
                                    "title": "Shutdown Script",
                                    "description": "The Base64-encoded shutdown script to execute prior to instance termination. For more information please see: Shutdown Script",
                                    "type": "string",
                                    "example": null
                                  },
                                  "ipForwarding": {
                                    "title": "IP Forwarding",
                                    "description": "IP Forwarding Criteria",
                                    "type": "boolean",
                                    "example": false
                                  },
                                  "minCpuPlatform": {
                                    "title": "Min Cpu Platform",
                                    "description": "Set instance CPU platform",
                                    "type": "string",
                                    "example": "Intel Sandy Bridge"
                                  }
                                }
                              },
                              "instanceTypes": {
                                "type": "object",
                                "title": "On Demand & Preemptible Types Object",
                                "description": "Instance Types Configuration",
                                "required": [
                                  "ondemand",
                                  "preemptible"
                                ],
                                "properties": {
                                  "ondemand": {
                                    "type": "string",
                                    "example": "n1-standard-1",
                                    "description": "The type of On Demand instances to utilize\n"
                                  },
                                  "preemptible": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "example": [
                                      "n1-standard-1",
                                      "n1-standard-2"
                                    ],
                                    "description": "The type of Preemptible instances to utilize\n"
                                  },
                                  "custom": {
                                    "type": "object",
                                    "title": "Custom instance type",
                                    "description": "The custom types instances to utilize\n",
                                    "properties": {
                                      "vCPU": {
                                        "type": "integer",
                                        "example": "4"
                                      },
                                      "memoryGiB": {
                                        "type": "integer",
                                        "example": "3.75"
                                      }
                                    }
                                  },
                                  "preferred": {
                                    "type": "object",
                                    "title": "preferred Preemptible Types Object",
                                    "description": "prioritize instance types when launching instances for the group. <a style=color:red>Must be a sublist of the general instance types.</a>\n",
                                    "properties": {
                                      "preemptible": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "example": [
                                          "n1-standard-1",
                                          "n1-standard-2"
                                        ],
                                        "description": "The type of Preemptible instances to utilize\n"
                                      },
                                      "custom": {
                                        "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/put/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/compute/properties/instanceTypes/properties/custom"
                                      }
                                    }
                                  }
                                }
                              },
                              "availabilityZones": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "asia-east1-a",
                                  "asia-east1-b",
                                  "asia-east1-c"
                                ],
                                "description": "Availability zones for the group"
                              },
                              "preferredAvailabilityZones": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "asia-east1-a",
                                  "asia-east1-c"
                                ],
                                "description": "prioritize availability zones when launching instances for the group <a style=color:red>Must be a sublist of compute.availabilityZones.</a>"
                              },
                              "gpu": {
                                "type": "object",
                                "title": "CPU Object",
                                "description": "Cpu Type",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "example": "nvidia-tesla-v100"
                                  },
                                  "count": {
                                    "type": "integer",
                                    "example": 1
                                  }
                                }
                              },
                              "subnets": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "region": {
                                      "type": "string",
                                      "example": "us-west1"
                                    },
                                    "subnetNames": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "example": [
                                        "private"
                                      ]
                                    }
                                  }
                                },
                                "description": "Subnets your group is associated with\n"
                              }
                            }
                          },
                          "scaling": {
                            "type": "object",
                            "title": "Scaling object",
                            "description": "Update scaling settings",
                            "properties": {
                              "up": {
                                "title": "Up",
                                "description": "Update scaling up settings",
                                "type": "array",
                                "items": {
                                  "title": "Up scaling object",
                                  "type": "object",
                                  "required": [
                                    "metricName",
                                    "threshold",
                                    "namespace"
                                  ],
                                  "properties": {
                                    "policyName": {
                                      "title": "Policy Name",
                                      "description": "Scaling policy name",
                                      "type": "string",
                                      "example": "scale_up_1"
                                    },
                                    "source": {
                                      "title": "Source",
                                      "description": "The source of the metric. Valid values: spectrum, stackdriver",
                                      "type": "string",
                                      "example": "stackdriver"
                                    },
                                    "metricName": {
                                      "title": "Metric Name",
                                      "description": "The name of the metric. Default value is instance/cpu/utilization. Required on scaling.up object",
                                      "type": "string",
                                      "example": "instance/disk/read_ops_count"
                                    },
                                    "statistic": {
                                      "title": "Statistic",
                                      "description": "The metric aggregator to return. Valid values: average, sum, min, max",
                                      "type": "string",
                                      "example": "average"
                                    },
                                    "unit": {
                                      "title": "Unit",
                                      "description": "The unit for the alarm’s associated metric.",
                                      "enum": [
                                        "seconds",
                                        "microseconds",
                                        "milliseconds",
                                        "bytes",
                                        "kilobytes",
                                        "megabytes",
                                        "gigabytes",
                                        "terabytes",
                                        "bits",
                                        "kilobits",
                                        "megabits",
                                        "gigabits",
                                        "terabits",
                                        "percent",
                                        "count",
                                        "bytes/second",
                                        "kilobytes/second",
                                        "megabytes/second",
                                        "gigabytes/second",
                                        "terabytes/second",
                                        "bits/second",
                                        "kilobits/second",
                                        "megabits/second",
                                        "gigabits/second",
                                        "terabits/second",
                                        "count/second",
                                        "none"
                                      ],
                                      "type": "string",
                                      "example": "percent"
                                    },
                                    "threshold": {
                                      "title": "Threshold",
                                      "description": "The value against which the specified statistic is compared. Required on scaling.up object",
                                      "type": "integer",
                                      "example": 10000
                                    },
                                    "namespace": {
                                      "title": "Namespace",
                                      "description": "The namespace for the associated metric. Valid value: compute Required on scaling.up object",
                                      "type": "string",
                                      "example": "compute"
                                    },
                                    "period": {
                                      "title": "Period",
                                      "description": "The period in seconds over which the statistic is applied",
                                      "type": "integer",
                                      "example": 300
                                    },
                                    "evaluationPeriods": {
                                      "title": "Evaluation Periods",
                                      "description": "The number of periods over which data is compared to the specified threshold",
                                      "type": "integer",
                                      "default": 1,
                                      "example": 1
                                    },
                                    "cooldown": {
                                      "title": "Cooldown",
                                      "description": "The amount of time (in seconds) after a scaling activity completes before any further trigger-related scaling activities can start",
                                      "type": "integer",
                                      "default": 300,
                                      "example": 300
                                    },
                                    "operator": {
                                      "title": "Operator",
                                      "description": "The operator to use in order to determine if the scaling policy is applicable. / Valid Values: gte (greater than or equal to) lte (lower than or equal to)",
                                      "type": "string",
                                      "default": "gte",
                                      "example": "lte"
                                    },
                                    "dimensions": {
                                      "title": "Array of dimension objects",
                                      "description": "Set metrics for scaling.up policy",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "name"
                                        ],
                                        "properties": {
                                          "name": {
                                            "title": "Name",
                                            "description": "The short labels names for filtering associated metric. For example, the metric instance/disk/read_ops_count is associated with the label compute.googleapis.com/storage_type, the short label name is storage_type",
                                            "type": "string",
                                            "example": "storage_type"
                                          },
                                          "value": {
                                            "title": "Value",
                                            "description": "Value of selected metric.can be Null",
                                            "type": "string",
                                            "example": "pd-standard"
                                          }
                                        }
                                      }
                                    },
                                    "action": {
                                      "type": "object",
                                      "title": "Action",
                                      "description": "The action to take when scale up is needed.",
                                      "required": [
                                        "type"
                                      ],
                                      "properties": {
                                        "type": {
                                          "title": "Type",
                                          "description": "The type of the action to take when scale up is needed. Valid value: adjustment. Required on scaling.up.action object",
                                          "type": "string",
                                          "example": "adjustment"
                                        },
                                        "adjustment": {
                                          "title": "Adjustment",
                                          "description": "The number associated with the specified adjustment type. Required if using adjustment as action type.",
                                          "type": "integer",
                                          "example": 1
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "down": {
                                "type": "array",
                                "title": "Down",
                                "description": "Update scaling down settings",
                                "items": {
                                  "title": "Down scaling object",
                                  "type": "object",
                                  "required": [
                                    "metricName",
                                    "threshold",
                                    "namespace"
                                  ],
                                  "properties": {
                                    "policyName": {
                                      "title": "Policy Name",
                                      "description": "The policy name",
                                      "type": "string",
                                      "example": "scale_down_1"
                                    },
                                    "source": {
                                      "title": "Source",
                                      "description": "The source of the metric. Valid values: spectrum, stackdriver",
                                      "type": "string",
                                      "example": "stackdriver"
                                    },
                                    "metricName": {
                                      "title": "Metric Name",
                                      "description": "The name of the metric. Default value is instance/cpu/utilization. Required on scaling.down object",
                                      "type": "string",
                                      "example": "instance/disk/read_ops_count"
                                    },
                                    "statistic": {
                                      "title": "Statistic",
                                      "description": "The metric aggregator to return. Valid values: average, sum, min, max",
                                      "type": "string",
                                      "example": "average"
                                    },
                                    "unit": {
                                      "title": "Unit",
                                      "description": "The unit for the alarm’s associated metric.",
                                      "enum": [
                                        "seconds",
                                        "microseconds",
                                        "milliseconds",
                                        "bytes",
                                        "kilobytes",
                                        "megabytes",
                                        "gigabytes",
                                        "terabytes",
                                        "bits",
                                        "kilobits",
                                        "megabits",
                                        "gigabits",
                                        "terabits",
                                        "percent",
                                        "count",
                                        "bytes/second",
                                        "kilobytes/second",
                                        "megabytes/second",
                                        "gigabytes/second",
                                        "terabytes/second",
                                        "bits/second",
                                        "kilobits/second",
                                        "megabits/second",
                                        "gigabits/second",
                                        "terabits/second",
                                        "count/second",
                                        "none"
                                      ],
                                      "type": "string",
                                      "example": "percent"
                                    },
                                    "threshold": {
                                      "title": "Threshold",
                                      "description": "The value against which the specified statistic is compared. Required on scaling.down object",
                                      "type": "integer",
                                      "example": 10000
                                    },
                                    "namespace": {
                                      "title": "Namespace",
                                      "description": "The namespace for the associated metric. Valid Value: compute Required on scaling.down object",
                                      "type": "string",
                                      "example": "compute"
                                    },
                                    "period": {
                                      "title": "Period",
                                      "description": "The period in seconds over which the statistic is applied",
                                      "type": "integer",
                                      "example": 300
                                    },
                                    "evaluationPeriods": {
                                      "title": "Evaluation Periods",
                                      "description": "The number of periods over which data is compared to the specified threshold.",
                                      "type": "integer",
                                      "default": 1,
                                      "example": 1
                                    },
                                    "cooldown": {
                                      "title": "Cooldown",
                                      "description": "The amount of time (in seconds) after a scaling activity completes before any further trigger-related scaling activities can start.",
                                      "type": "integer",
                                      "default": 300,
                                      "example": 300
                                    },
                                    "operator": {
                                      "title": "Operator",
                                      "description": "The operator to use in order to determine if the scaling policy is applicable. / Valid Values: gte (greater than or equal to) lte (lower than or equal to)",
                                      "type": "string",
                                      "default": "lte",
                                      "example": "gte"
                                    },
                                    "dimensions": {
                                      "title": "Dimensions",
                                      "description": "he short labels names for filtering associated metric. For example, the metric instance/disk/read_ops_count is associated with the label compute.googleapis.com/storage_type, the short label name is storage_type",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "name"
                                        ],
                                        "properties": {
                                          "name": {
                                            "title": "Name",
                                            "description": "The short labels names for filtering associated metric. For example, the metric instance/disk/read_ops_count is associated with the label compute.googleapis.com/storage_type, the short label name is storage_type Required on scaling.down.dimensions object",
                                            "type": "string",
                                            "example": "storage_type"
                                          },
                                          "value": {
                                            "title": "Value",
                                            "description": "Value of selected metric.can be Null",
                                            "type": "string",
                                            "example": "pd-standard"
                                          }
                                        }
                                      }
                                    },
                                    "action": {
                                      "title": "Action",
                                      "description": "Update the action to take when scale up is needed",
                                      "type": "object",
                                      "required": [
                                        "type"
                                      ],
                                      "properties": {
                                        "type": {
                                          "title": "Type",
                                          "description": "The type of the action to take when scale up is needed. Valid value: adjustment Required on scaling.down.action object",
                                          "type": "string",
                                          "example": "adjustment"
                                        },
                                        "adjustment": {
                                          "title": "Adjustment",
                                          "description": "The number associated with the specified adjustment type. Required if using adjustment as action type",
                                          "type": "integer",
                                          "example": 1
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "thirdPartiesIntegration": {
                            "title": "Third Parties Integration Object",
                            "description": "Third Parties Integration Configuration",
                            "type": "object",
                            "properties": {
                              "dockerSwarm": {
                                "title": "DockerSwarm ThirdPartiesIntegration Object",
                                "description": "Properties to connect docker swarm.",
                                "type": "object",
                                "properties": {
                                  "masterHost": {
                                    "title": "Master Host",
                                    "description": "Docker swarm master hostname",
                                    "type": "string",
                                    "example": "swarm1.swarm.com"
                                  },
                                  "masterPort": {
                                    "title": "Master Port",
                                    "description": "Docker swarm master port",
                                    "type": "integer",
                                    "example": 1234
                                  }
                                }
                              },
                              "gke": {
                                "title": "GKE ThirdPartiesIntegration Object",
                                "description": "Properties for GKE integration",
                                "type": "object",
                                "properties": {
                                  "autoUpdate": {
                                    "title": "Auto Update",
                                    "description": "If set to True - we check every 30 minutes if the gke version of the original node pool of the elastigroup was imported from - changed. if so - we re import the new configurations",
                                    "type": "boolean",
                                    "example": true
                                  },
                                  "autoScale": {
                                    "title": "Auto Scale",
                                    "description": "Properties for GKE integration auto scaling",
                                    "type": "object",
                                    "properties": {
                                      "isEnabled": {
                                        "title": "Is Enabled",
                                        "description": "Flag to enable / disable the auto scaling",
                                        "type": "boolean",
                                        "example": true,
                                        "default": false
                                      },
                                      "isAutoConfig": {
                                        "title": "Is Auto Config",
                                        "description": "Flag to enable / disable the headroom configuration",
                                        "type": "boolean",
                                        "example": false
                                      },
                                      "cooldown": {
                                        "title": "Cooldown",
                                        "description": "Set cooldown (in minutes)",
                                        "type": "integer",
                                        "example": 300
                                      },
                                      "headroom": {
                                        "title": "Headroom",
                                        "description": "Set headroom configuration",
                                        "type": "object",
                                        "properties": {
                                          "cpuPerUnit": {
                                            "title": "CPU Per Unit",
                                            "description": "Optionally configure the number of CPUs to allocate the headroom.",
                                            "type": "integer",
                                            "example": 1
                                          },
                                          "memoryPerUnit": {
                                            "title": "Memory Per Unit",
                                            "description": "Optionally configure the number of memory (MiB) to allocate the headroom.",
                                            "type": "integer",
                                            "example": 0
                                          },
                                          "numOfUnits": {
                                            "title": "Number Of Units",
                                            "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.",
                                            "type": "integer",
                                            "example": 1
                                          }
                                        }
                                      },
                                      "down": {
                                        "title": "Down",
                                        "description": "Set scale down properties",
                                        "type": "object",
                                        "properties": {
                                          "evaluationPeriods": {
                                            "title": "Evaluation Periods",
                                            "description": "Set number of evaluation periods for scale down. minimum value is: 3",
                                            "type": "integer",
                                            "example": 5
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "clusterIdentifier": {
                                    "title": "ClusterIdentifier",
                                    "description": "Cluster ID",
                                    "type": "string",
                                    "example": "gke-clust-1"
                                  },
                                  "location": {
                                    "title": "Location",
                                    "description": "Instance Location",
                                    "type": "string",
                                    "example": "us-west1"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "group": {
                        "type": "object"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/gce/group/{groupId}/status": {
      "get": {
        "summary": "Get Elastigroup Status",
        "description": "Get the status for all instances that are memebers of the Elastigroup",
        "operationId": "elastigroupGcpGetStatus",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "title": "Group Status Object",
                                "type": "object",
                                "properties": {
                                  "privateIpAddress": {
                                    "type": "string"
                                  },
                                  "machineType": {
                                    "type": "string"
                                  },
                                  "zone": {
                                    "type": "string"
                                  },
                                  "instanceName": {
                                    "type": "string"
                                  },
                                  "lifeCycle": {
                                    "type": "string"
                                  },
                                  "provisioningModel": {
                                    "type": "string"
                                  },
                                  "statusName": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "updatedAt": {
                                    "type": "string",
                                    "format": "date-time"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:gcp:gce:group:status"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/gce/group/{groupId}/events": {
      "get": {
        "summary": "List Activity Events",
        "description": "Get all activity events for the Elastigroup",
        "operationId": "elastigroupGcpGetActivityEvents",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          },
          {
            "in": "query",
            "name": "fromDate",
            "example": "2019-05-17",
            "required": true,
            "description": "Get items on or after this date (ISO 8601)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "toDate",
            "example": "2019-05-25",
            "required": true,
            "description": "Get items on or before this date (ISO 8601)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "title": "Activity Event Object",
                                "type": "object",
                                "properties": {
                                  "groudId": {
                                    "type": "string",
                                    "example": "sig-576g654"
                                  },
                                  "eventType": {
                                    "type": "string",
                                    "example": "RollFinished"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2018-03-01T09:58:16.000+0000"
                                  },
                                  "subEvents": {
                                    "type": "array",
                                    "items": {
                                      "title": "Activity Sub-Event Object",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "example": "sbgd-1234567"
                                        },
                                        "groupId": {
                                          "type": "string",
                                          "example": "sig-576g654"
                                        },
                                        "currentBatch": {
                                          "type": "integer",
                                          "example": 1
                                        },
                                        "numOfBatches": {
                                          "type": "integer",
                                          "example": 1
                                        },
                                        "gracePeriod": {
                                          "type": "integer",
                                          "example": 300
                                        },
                                        "type": {
                                          "type": "string",
                                          "example": "rollInfo"
                                        },
                                        "status": {
                                          "type": "string",
                                          "example": null
                                        },
                                        "createdAt": {
                                          "type": "string",
                                          "format": "date-time",
                                          "example": "2018-03-01T09:58:16.000+0000"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:gcp:gce:group:event"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/gce/group/{groupId}/log": {
      "get": {
        "summary": "Get Elastilog",
        "description": "Fetch a group's Elastilog",
        "operationId": "elastigroupGcpFetchGroupElastilog",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/2"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Maximum number of items to return.",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "default": 500,
              "example": 200
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "title": "Elastilog Object",
                                "type": "object",
                                "properties": {
                                  "message": {
                                    "type": "string",
                                    "example": "Group sig-e0a2bd7c successfully created."
                                  },
                                  "severity": {
                                    "type": "string",
                                    "enum": [
                                      "ALL",
                                      "INFO",
                                      "DEBUG",
                                      "WARN"
                                    ],
                                    "example": "INFO"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "example": "2019-05-19T14:34:15.000Z"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:gcp:gce:group:log"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/gce/group/{groupId}/scale/up": {
      "put": {
        "summary": "Scale Up",
        "description": "Add instances to the Elastigroup",
        "operationId": "elastigroupGcpScaleUp",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "adjustment",
            "description": "The number of instances to add to the group",
            "schema": {
              "type": "integer",
              "example": 1
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Preemptible object",
                                "properties": {
                                  "newPreemptibles": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "instanceName": {
                                          "type": "string",
                                          "example": "sin-9da52709"
                                        }
                                      }
                                    }
                                  },
                                  "newInstances": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "instanceName": {
                                          "type": "string",
                                          "example": "sin-1591c0b6"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:gcp:gce:preemptible"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/gce/group/{groupId}/scale/down": {
      "put": {
        "summary": "Scale Down",
        "description": "Remove instances from the Elastigroup",
        "operationId": "elastigroupGcpScaleDown",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "adjustment",
            "description": "The number of instances to remove from the group",
            "schema": {
              "type": "integer",
              "example": 1
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Scale object",
                                "properties": {
                                  "victimPreemptibles": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "title": "Victim Preemptible Object",
                                      "properties": {
                                        "instanceName": {
                                          "type": "string",
                                          "example": "sin-4ecd5037"
                                        },
                                        "zone": {
                                          "type": "string",
                                          "example": "asia-east1-b"
                                        },
                                        "machineType": {
                                          "type": "string",
                                          "example": "N1_STANDARD_2"
                                        }
                                      }
                                    }
                                  },
                                  "victimInstances": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "title": "Victim Instance Object",
                                      "properties": {
                                        "instanceName": {
                                          "type": "string",
                                          "example": "sin-31e0596a"
                                        },
                                        "zone": {
                                          "type": "string",
                                          "example": "europe-west1-c"
                                        },
                                        "machineType": {
                                          "type": "string",
                                          "example": "N1_STANDARD_1"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:gcp:gce:scale"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/gce/costs": {
      "get": {
        "summary": "Get Costs Per Account",
        "description": "Retrieve costs up to one year back per specified account over a specified time period.",
        "operationId": "gcpCostsPerAccount",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accountId",
            "example": "act-12345678",
            "description": "The Spot account ID for which the cost information should be returned.\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "fromDate",
            "example": "2016-01-10T00:00:00.000Z",
            "description": "* The start date of the requested time period. \n* Date values following either a date format (YYYY-MM-DDTHH:mm:ss.SSSZ) or Unix milliseconds timestamp (1668078050004).\n* <a style=color:red>The value cannot be earlier than 1 year back.</a>\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "toDate",
            "example": "2016-01-10T01:00:00.000Z",
            "description": "* The end date of the requested time period. \n* Date values following either a date format (YYYY-MM-DDTHH:mm:ss.SSSZ) or Unix milliseconds timestamp (1668078050004).\n* <a style=color:red>The maximum of time period length is 90 days.</a>\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Costs Per Account Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "67582d0c-108b-4ef7-9fdc-d39678a30844"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/gcp/gce/costs"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2016-01-10T01:00:00.000Z"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:gcp:costs"
                                },
                                "items": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "title": "spotinst:gcp:costs",
                                    "properties": {
                                      "preemptible": {
                                        "type": "object",
                                        "properties": {
                                          "runningHours": {
                                            "description": "The sum of preemptible running hours.",
                                            "type": "number",
                                            "format": "number",
                                            "example": 1470.8
                                          },
                                          "actualCosts": {
                                            "description": "The actual cost of the preemptible instances.",
                                            "type": "number",
                                            "format": "number",
                                            "example": 107.3
                                          },
                                          "potentialCosts": {
                                            "description": "The OD cost of the running preemptible instances.",
                                            "type": "number",
                                            "format": "number",
                                            "example": 378.41
                                          },
                                          "savingsPercentage": {
                                            "description": "The total savings percentage.",
                                            "type": "number",
                                            "format": "number",
                                            "example": 71.64
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/gce/group/{groupId}/costs": {
      "get": {
        "summary": "Get Elastigroup Costs",
        "description": "Get financial information on a specific Elastigroup\n",
        "operationId": "elastigroupGcpCosts",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Group Cost Object",
                                "properties": {
                                  "running": {
                                    "type": "object",
                                    "properties": {
                                      "value": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 294.3
                                      },
                                      "unit": {
                                        "type": "string",
                                        "example": "hours"
                                      }
                                    }
                                  },
                                  "savings": {
                                    "type": "object",
                                    "properties": {
                                      "value": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 60.5263
                                      },
                                      "unit": {
                                        "type": "string",
                                        "example": "percentage"
                                      }
                                    }
                                  },
                                  "costs": {
                                    "type": "object",
                                    "properties": {
                                      "actual": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 8.829
                                      },
                                      "potential": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 22.3668
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:gcp:gce:group:costs"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/gce/group/{groupId}/roll": {
      "get": {
        "summary": "List Deployments",
        "description": "Get all of the deployments for a specific Elastigroup, and their status\n",
        "operationId": "elastigroupGcpListDeployments",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "title": "Group Roll Object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "example": "sbgd-01f01234"
                                      },
                                      "status": {
                                        "type": "string",
                                        "example": "STARTING"
                                      },
                                      "currentBatch": {
                                        "type": "integer",
                                        "example": 1
                                      },
                                      "numOfBatches": {
                                        "type": "integer",
                                        "example": 2
                                      },
                                      "progress": {
                                        "type": "object",
                                        "properties": {
                                          "unit": {
                                            "type": "string",
                                            "example": "percentage"
                                          },
                                          "value": {
                                            "type": "integer",
                                            "example": 0
                                          }
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "$ref": "#/paths/~1aws~1emr~1mrScaler/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/1"
                                  }
                                ]
                              }
                            },
                            "kind": {
                              "example": "spotinst:gcp:gce:group:roll"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Start Deployment",
        "description": "Deploy the Elastigroup: Triggers a Blue/Green deployment that replaces the existing instances in the Elastigroup\n",
        "operationId": "elastigroupGcpDeploy",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Group Deploy Object",
                    "required": [
                      "batchSizePercentage",
                      "gracePeriod"
                    ],
                    "properties": {
                      "batchSizePercentage": {
                        "type": "integer",
                        "example": 20,
                        "description": "(in percentage) the batch size of the deployment, i.e.: how many instances to replace in each batch\n"
                      },
                      "gracePeriod": {
                        "type": "integer",
                        "example": 300,
                        "description": "(in seconds) the time until an instance becomes healthy in the load balancer\n"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "allOf": [
                                  {
                                    "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D~1roll/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/0"
                                  }
                                ]
                              }
                            },
                            "kind": {
                              "example": "spotinst:gcp:gce:group:roll"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/gce/group/{groupId}/roll/{rollId}": {
      "get": {
        "summary": "Get Deployment",
        "description": "Get a specific deployment's status\n",
        "operationId": "elastigroupGcpDeployStatus",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "path",
            "name": "rollId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The deployment ID to query\n"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D~1roll/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Stop Deployment",
        "description": "Stop an existing deployment\n",
        "operationId": "elastigroupGcpStopDeployment",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D~1roll~1%7BrollId%7D/get/parameters/2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "roll": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "STOPPED",
                        "description": "in this case, always set to \"STOPPED\""
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D~1roll/put/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/gce/group/{groupId}/deatchInstances": {
      "put": {
        "summary": "Detach Instances",
        "description": "Detach instances from an Elastigroup\n",
        "operationId": "elastigroupGcpDetachInstances",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Detach Instances Object",
                    "properties": {
                      "instancesToDetach": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The names of the instances to detach from the group.",
                        "example": [
                          "sin-44c02836",
                          "sin-ddf71dfa"
                        ]
                      },
                      "shouldTerminateInstances": {
                        "type": "boolean",
                        "description": "Indicates whether to terminate the instances or not."
                      },
                      "shouldDecrementTargetCapacity": {
                        "type": "boolean",
                        "description": "Indicates whether to decrement the capacity of the group, so no new instance will be launched instead of the detached one.\n"
                      },
                      "drainingTimeout": {
                        "type": "integer",
                        "description": "(Applies only if shouldTerminateInstances is on) The draining timeout (in seconds) before terminating the instance. If no draining timeout is defined, the group's draining timeout applies.\n"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "kind": {
                              "example": "spotinst:gcp:gce:detachInstances"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/gce/instance/{instanceId}": {
      "get": {
        "summary": "Get Instance Status",
        "description": "Get the current instance status. Possible status values: `ACTIVE`, `TERMINATING`\n",
        "operationId": "elastigroupGcpGetInstanceStatus",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "instanceId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "GCP Instance ID\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Instance Status Object",
                                "properties": {
                                  "instanceName": {
                                    "type": "string",
                                    "example": "sin-123"
                                  },
                                  "lifeCycleState": {
                                    "type": "string",
                                    "enum": [
                                      "ACTIVE",
                                      "TERMINATING"
                                    ],
                                    "example": "ACTIVE"
                                  },
                                  "privateIp": {
                                    "type": "string",
                                    "example": "10.0.0.1"
                                  },
                                  "groupId": {
                                    "type": "string",
                                    "example": "sig-123"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:gcp:gce:instance"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/gce/instance/{instanceId}/lock": {
      "post": {
        "summary": "Lock Instance",
        "description": "Set termination protection for a specific instance.\n",
        "operationId": "elastigroupGcpLockInstance",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1instance~1%7BinstanceId%7D/get/parameters/1"
          },
          {
            "in": "query",
            "name": "ttlInMinutes",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Specify a TTL (in minutes) for this lock, i.e.: for how long the protection will be valid for.\n"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/gce/instance/{instanceId}/unlock": {
      "post": {
        "summary": "Unlock Instance",
        "description": "Remove termination protection for a specific instance.\n",
        "operationId": "elastigroupGcpUnlockInstance",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1instance~1%7BinstanceId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/cluster": {
      "get": {
        "summary": "List Clusters",
        "description": "Get the configurations for all Ocean clusters in the specified account.\n",
        "operationId": "OceanECSClusterList",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean ECS Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/put/requestBody/content/application~1json/schema/allOf/0"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:ecs"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "summary": "Create Cluster",
        "description": "Create a new Ocean ECS cluster in the specified account.\n",
        "operationId": "OceanECSClusterCreate",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "cluster"
                    ],
                    "properties": {
                      "cluster": {
                        "type": "object",
                        "title": "ECS Ocean",
                        "required": [
                          "name",
                          "clusterName",
                          "region"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "o-12345abc",
                            "readOnly": true,
                            "description": "Ocean cluster identifier.\n"
                          },
                          "name": {
                            "type": "string",
                            "example": "Ocean::my-elastigroup-name",
                            "description": "Add a name for the Ocean cluster.\n"
                          },
                          "clusterName": {
                            "type": "string",
                            "example": "my-ECS-cluster-name",
                            "description": "ECS cluster name.\n"
                          },
                          "autoScaler": {
                            "type": "object",
                            "title": "Ocean Autoscaler",
                            "description": "The Ocean ECS Autoscaler.\n",
                            "properties": {
                              "isEnabled": {
                                "type": "boolean",
                                "description": "Enable the Ocean ECS Autoscaler.\n",
                                "example": true
                              },
                              "cooldown": {
                                "type": "integer",
                                "description": "Cooldown period between scaling actions. Value should be cooldown period in seconds, greater than 180.\n",
                                "example": 300
                              },
                              "resourceLimits": {
                                "type": "object",
                                "description": "Optionally set upper and lower bounds on the resource usage of the cluster.\n",
                                "properties": {
                                  "maxMemoryGib": {
                                    "type": "integer",
                                    "description": "The maximum memory in GiB units that can be allocated to the cluster. Minimum value: 1.\n",
                                    "example": 1
                                  },
                                  "maxVcpu": {
                                    "type": "integer",
                                    "description": "The maximum CPU in vCPU units that can be allocated to the cluster. Minimum value: 1.\n",
                                    "example": 1
                                  }
                                }
                              },
                              "down": {
                                "type": "object",
                                "description": "Autoscaling scale down operations.\n",
                                "properties": {
                                  "evaluationPeriods": {
                                    "type": "integer",
                                    "example": 4
                                  },
                                  "maxScaleDownPercentage": {
                                    "type": "integer",
                                    "description": "The maximum portion (as a %) of nodes that will be scaled down at once out of the total number of potential nodes to scale down.\nExample: If there are 10 nodes to scale down and the parameter is 50%, then only 5 nodes will be scaled down at once.\nThe other 5 nodes will be scaled down in the next autoscaling iteration.\n",
                                    "example": 20
                                  }
                                }
                              },
                              "headroom": {
                                "type": "object",
                                "description": "Spare resource capacity management enabling fast assignment of pods without waiting for new resources to launch.\n",
                                "properties": {
                                  "cpuPerUnit": {
                                    "type": "integer",
                                    "description": "Optionally configure the number of CPUs to allocate per headroom unit. CPUs are denoted in CPU units, where 1024 units = 1 vCPU.\n",
                                    "example": 2048
                                  },
                                  "memoryPerUnit": {
                                    "type": "integer",
                                    "description": "Optionally configure the amount of memory (MiB) to allocate per headroom unit.\n",
                                    "example": 3
                                  },
                                  "numOfUnits": {
                                    "type": "integer",
                                    "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n",
                                    "example": 2
                                  }
                                }
                              },
                              "isAutoConfig": {
                                "type": "boolean",
                                "description": "Use automatic headroom. When set to true, the values under cluster.autoScaler.headroom are not effective, as Ocean configures and optimizes headroom automatically.\n",
                                "example": false
                              },
                              "autoHeadroomPercentage": {
                                "type": "integer",
                                "description": "Optionally set the auto-headroom percentage. Set a number between 0-200 to control the headroom % of the cluster. Relevant when isAutoConfig=true.\n",
                                "example": 20
                              },
                              "shouldScaleDownNonServiceTasks": {
                                "type": "boolean",
                                "description": "Option to scale down non-service tasks. If not set, Ocean does not scale down standalone tasks.\n",
                                "default": false,
                                "example": true
                              },
                              "enableAutomaticAndManualHeadroom": {
                                "type": "boolean",
                                "description": "When set to true, both automatic and per custom Virtual Node Group manual headroom to be saved concurrently and independently in the cluster. prerequisite: isAutoConfig must be true\n",
                                "example": false
                              }
                            }
                          },
                          "region": {
                            "type": "string",
                            "example": "us-east-1",
                            "description": "Select the region for the Ocean cluster to run in.\n"
                          },
                          "capacity": {
                            "type": "object",
                            "title": "Capacity Units",
                            "description": "Capacity specifications for the Ocean cluster.\n",
                            "required": [
                              "target",
                              "maximum",
                              "minimum"
                            ],
                            "properties": {
                              "minimum": {
                                "type": "integer",
                                "example": 1,
                                "description": "The bottom limit of instances that the cluster can scale down to.\n"
                              },
                              "maximum": {
                                "type": "integer",
                                "example": 10,
                                "description": "The upper limit of instances that the cluster can scale up to.\n",
                                "default": 1000
                              },
                              "target": {
                                "type": "integer",
                                "example": 5,
                                "description": "Number of instances to launch and maintain in cluster.h\n"
                              },
                              "unit": {
                                "type": "string",
                                "example": "instance",
                                "default": "instance",
                                "enum": [
                                  "weight",
                                  "instance"
                                ],
                                "description": "Defines how Ocean scales. Either by number of instances or by instance weights. If `weight` is used, then `weightedCapacity` is required to be set for all instance types used for this cluster.\n"
                              }
                            }
                          },
                          "strategy": {
                            "type": "object",
                            "title": "Ocean Strategy",
                            "description": "Strategy Configuration of the Ocean cluster.\n",
                            "properties": {
                              "utilizeReservedInstances": {
                                "type": "boolean",
                                "description": "If reserved instances exist, Ocean will use them before launching spot instances.\n",
                                "example": true,
                                "default": false
                              },
                              "fallbackToOd": {
                                "type": "boolean",
                                "description": "If no spot instance markets are available, enable Ocean to launch on-demand instances instead.\n",
                                "example": true,
                                "default": true
                              },
                              "spotPercentage": {
                                "type": "integer",
                                "example": 100
                              },
                              "drainingTimeout": {
                                "type": "integer",
                                "description": "The draining timeout (in seconds) before terminating the instance. If no draining timeout is defined, the default draining timeout will be used.\n",
                                "example": 200
                              },
                              "utilizeCommitments": {
                                "type": "boolean",
                                "description": "If savings plans commitment has available capacity, Ocean will utilize them alongside RIs (if exist) to maximize cost efficiency.\n",
                                "example": false,
                                "default": false
                              },
                              "clusterOrientation": {
                                "type": "object",
                                "properties": {
                                  "availabilityVsCost": {
                                    "type": "string",
                                    "description": "You can control the approach that Ocean takes while launching nodes by configuring this value.\n",
                                    "enum": [
                                      "costOriented",
                                      "balanced",
                                      "cheapest"
                                    ],
                                    "example": "balanced",
                                    "default": "balanced"
                                  }
                                }
                              }
                            }
                          },
                          "compute": {
                            "type": "object",
                            "title": "Ocean Compute",
                            "required": [
                              "subnetIds",
                              "launchSpecification"
                            ],
                            "properties": {
                              "subnetIds": {
                                "type": "array",
                                "description": "A comma-separated list of subnet identifiers for the Ocean cluster. Subnet identifiers should be configured with auto-assign public IP.\n",
                                "items": {
                                  "type": "string",
                                  "example": "subnet-1234abcd"
                                }
                              },
                              "instanceTypes": {
                                "type": "object",
                                "description": "The type of instances that may or may not be a part of the Ocean cluster.",
                                "properties": {
                                  "filters": {
                                    "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1instanceTypeFiltersSimulation/post/requestBody/content/application~1json/schema/allOf/0/properties/filters"
                                  },
                                  "whitelist": {
                                    "type": "array",
                                    "description": "Instance types allowed in the Ocean cluster. Cannot be configured if a deny list is configured.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "example": [
                                      "c4.xlarge",
                                      "c4.2xlarge",
                                      "c4.4xlarge",
                                      "c4.8xlarge"
                                    ]
                                  },
                                  "blacklist": {
                                    "type": "array",
                                    "description": "Instance types to avoid launching in the Ocean cluster. Cannot be configured if a permit list is configured.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "example": [
                                      "r5.large",
                                      "r5.xlarge"
                                    ]
                                  }
                                }
                              },
                              "launchSpecification": {
                                "type": "object",
                                "description": "The default specification for container instances in the cluster. Used as a template for custom Virtual Node Groups to inherit values which are not explicitly defined in them, and as a default VNG when no other VNGs exist or match the workload’s requirements.\n",
                                "required": [
                                  "imageId",
                                  "securityGroupIds"
                                ],
                                "properties": {
                                  "associatePublicIpAddress": {
                                    "type": "boolean",
                                    "description": "Configure public IP address allocation.",
                                    "default": false,
                                    "example": false
                                  },
                                  "associateIpv6Address": {
                                    "type": "boolean",
                                    "description": "Configure IPv6 address allocation.",
                                    "default": false,
                                    "example": false
                                  },
                                  "imageId": {
                                    "type": "string",
                                    "example": "ami-123456789abcdefgh"
                                  },
                                  "securityGroupIds": {
                                    "type": "array",
                                    "description": "One or more security group identifiers.\n",
                                    "items": {
                                      "type": "string",
                                      "example": "sg-abcdefgh123456789"
                                    }
                                  },
                                  "iamInstanceProfile": {
                                    "type": "object",
                                    "description": "The instance profile iamRole.\n",
                                    "properties": {
                                      "arn": {
                                        "type": "string",
                                        "description": "The iamRole ARN.\n",
                                        "example": "my-arn"
                                      }
                                    }
                                  },
                                  "blockDeviceMappings": {
                                    "type": "array",
                                    "description": "Block devices that are exposed to the instance. You can specify virtual devices and EBS volumes.\\\nThis parameter and rootVolumeSize cannot be in the specification at the same time.\\\nThis parameter can be null. If not null, it must contain at least one block device.\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "deviceName": {
                                          "type": "string",
                                          "description": "Set device name.\n",
                                          "example": "/dev/xvda"
                                        },
                                        "ebs": {
                                          "type": "object",
                                          "description": "Set EBS properties.\n",
                                          "properties": {
                                            "throughput": {
                                              "type": "integer",
                                              "minimum": 125,
                                              "maximum": 1000,
                                              "example": 125,
                                              "description": "The amount of data transferred to or from a storage device per second. You can use this parameter only if volumetype=‘gp3’.\n"
                                            },
                                            "deleteOnTermination": {
                                              "type": "boolean",
                                              "description": "Flag to delete the EBS on instance termination.\n",
                                              "example": false
                                            },
                                            "encrypted": {
                                              "type": "boolean",
                                              "example": false
                                            },
                                            "iops": {
                                              "type": "integer",
                                              "description": "Must be greater than or equal to 0.\n",
                                              "example": 1
                                            },
                                            "kmsKeyId": {
                                              "type": "string",
                                              "example": "alias/aws/ebs"
                                            },
                                            "snapshotId": {
                                              "type": "string",
                                              "example": "snap-abcdefghi111110"
                                            },
                                            "volumeType": {
                                              "type": "string",
                                              "description": "Set volume type.\n",
                                              "example": "gp2"
                                            },
                                            "volumeSize": {
                                              "type": "integer",
                                              "description": "Set volume size (in GB). When using this property, you cannot use dynamicVolumeSize. You must use one of the other. Volume size should be greater than or equal to the size configured in the AMI.\n"
                                            },
                                            "dynamicVolumeSize": {
                                              "type": "object",
                                              "required": [
                                                "baseSize",
                                                "resource",
                                                "sizePerResourceUnit"
                                              ],
                                              "description": "Set dynamic volume size properties. When using this object, you cannot use volumeSize. You must use one or the other.\n",
                                              "properties": {
                                                "baseSize": {
                                                  "type": "integer",
                                                  "description": "Initial size per volume.\n",
                                                  "example": 50
                                                },
                                                "resource": {
                                                  "type": "string",
                                                  "example": "CPU"
                                                },
                                                "sizePerResourceUnit": {
                                                  "type": "integer",
                                                  "description": "Additional size per resource unit (in GB). For example, if baseSize=50, and sizePerResourceUnit=20, and an instance with 2 CPU is launched, its disk size will be 90 GB.\n",
                                                  "example": 20
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "instanceMetadataOptions": {
                                    "type": "object",
                                    "title": "instanceMetadataOptions",
                                    "required": [
                                      "httpTokens"
                                    ],
                                    "description": "Ocean instance metadata options object for [IMDSv2](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-service.html).\n",
                                    "properties": {
                                      "httpTokens": {
                                        "type": "string",
                                        "description": "Determines if a signed token is required or not.\n",
                                        "enum": [
                                          "optional",
                                          "required"
                                        ],
                                        "example": "optional"
                                      },
                                      "httpPutResponseHopLimit": {
                                        "type": "integer",
                                        "description": "An integer from 1 through 64.\nThe desired HTTP PUT response hop limit for instance metadata requests.\nThe larger the number, the further the instance metadata requests can travel.\n",
                                        "example": 12
                                      },
                                      "httpEndpoint": {
                                        "type": "string",
                                        "description": "Enables or disables the HTTP metadata endpoint on your instances.\n",
                                        "enum": [
                                          "disabled",
                                          "enabled"
                                        ],
                                        "example": "disabled"
                                      }
                                    }
                                  },
                                  "userData": {
                                    "type": "string",
                                    "format": "byte",
                                    "description": "The base 64 encoded MIME user data to make available to the instances.",
                                    "example": "Q29udGVudC1UeXBlOiBtdWx0aXBhcnQvbWl4ZWQ7IGJvdW5kYXJ5PSI9PT09PT09PT09PT09PT01MTg5MDY1Mzc3MjIyODk4NDA3PT0iCk1JTUUtVmVyc2lvbjogMS4wCgotLT09PT09PT09PT09PT09PTUxODkwNjUzNzcyMjI4OTg0MDc9PQp"
                                  },
                                  "useAsTemplateOnly": {
                                    "type": "boolean",
                                    "description": "The configuration specified on the Ocean object will function only as a template for virtual node groups.\n",
                                    "default": false
                                  },
                                  "monitoring": {
                                    "type": "boolean",
                                    "description": "Enable detailed monitoring for cluster.",
                                    "example": false
                                  },
                                  "ebsOptimized": {
                                    "type": "boolean",
                                    "description": "Enable EBS optimization for the cluster. A flag will enable optimized capacity for high bandwidth connectivity to the EB service for non EBS optimized instance types. For instances that are EBS optimized, this flag will be ignored.",
                                    "example": false
                                  },
                                  "tags": {
                                    "type": "array",
                                    "description": "List of kay-value pairs of tags.\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "tagKey": {
                                          "type": "string",
                                          "description": "Set the tag key.\n",
                                          "example": "Creator"
                                        },
                                        "tagValue": {
                                          "type": "string",
                                          "description": "Set the tag value.\n",
                                          "example": "John Doe"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "optimizeImages": {
                                "type": "object",
                                "properties": {
                                  "shouldOptimizeEcsAmi": {
                                    "type": "boolean",
                                    "example": "true"
                                  },
                                  "performAt": {
                                    "type": "string",
                                    "example": "never",
                                    "description": "Must be one of the following values: never, always, timeWindow. If performAt = timeWindow, the time window array should contain at least one time window.\n"
                                  },
                                  "timeWindows": {
                                    "type": "array",
                                    "description": "Restrict to time window regex.\n",
                                    "items": {
                                      "example": "['Sun:02:00-Sun:12:00', 'Wed:01:01-Fri:02:03']"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "scheduling": {
                            "type": "object",
                            "title": "Ocean Scheduling",
                            "description": "An object used to define times for a task such as a shutdown to be activated.\n",
                            "required": [
                              "tasks"
                            ],
                            "properties": {
                              "tasks": {
                                "type": "array",
                                "description": "The actions in the cluster to be scheduled.\n",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "isEnabled",
                                    "cronExpression",
                                    "taskType"
                                  ],
                                  "properties": {
                                    "isEnabled": {
                                      "type": "boolean",
                                      "description": "Describes whether the task is enabled. When true, the task will run. When false, it does not run. Required for the object cluster.scheduling.tasks.\n",
                                      "example": false
                                    },
                                    "cronExpression": {
                                      "type": "string",
                                      "description": "A valid cron expression, for example \" * * * * * \". The cron runs in the UTC time zone and is in Unix cron format [Cron Expression Validator Script](https://www.unix.com/man-page/linux/5/crontab/). Only one of ‘frequency' or ‘cronExpression' should be used at a time. Required for cluster.scheduling.tasks.\n"
                                    },
                                    "taskType": {
                                      "type": "string",
                                      "description": "Valid values: \"clusterRoll\". Required for cluster.scheduling.tasks.\n",
                                      "enum": [
                                        "clusterRoll"
                                      ],
                                      "example": "clusterRoll"
                                    },
                                    "parameters": {
                                      "type": "object",
                                      "properties": {
                                        "clusterRoll": {
                                          "type": "object",
                                          "properties": {
                                            "batchSizePercentage": {
                                              "type": "integer",
                                              "minimum": 0,
                                              "maximum": 100,
                                              "example": 20,
                                              "description": "Value as a percent to set the size of a batch in a roll. Valid values are 0-100.\n"
                                            },
                                            "comment": {
                                              "type": "string",
                                              "example": "This is why I deployed my cluster.",
                                              "description": "Add a comment description for the roll. The comment is limited to 256 chars\n"
                                            },
                                            "batchMinHealthyPercentage": {
                                              "type": "integer",
                                              "minimum": 1,
                                              "maximum": 100,
                                              "default": 50,
                                              "example": 100,
                                              "description": "Indicates the threshold of minimum healthy instances in single batch. If the amount of healthy instances in single batch is under the threshold, the cluster roll will fail. If exists, the parameter value will be in range of 1-100. In case of null as value, the default value in the backend will be 50%. Value of param should represent the number in percentage (%) of the batch.\n"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "shutdownHours": {
                                "type": "object",
                                "title": "Shutdown Hours",
                                "required": [
                                  "timeWindows"
                                ],
                                "properties": {
                                  "timeWindows": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "example": "Sat:08:00-Sun:08:00"
                                    }
                                  },
                                  "isEnabled": {
                                    "type": "boolean",
                                    "example": true,
                                    "description": "Flag to enable / disable the shutdown hours mechanism. When turned to false, the mechanism is deactivated and the cluster remains in its current state.\n"
                                  }
                                }
                              }
                            }
                          },
                          "logging": {
                            "type": "object",
                            "title": "Logging configuration",
                            "properties": {
                              "export": {
                                "type": "object",
                                "title": "Logging Export Configuration.",
                                "properties": {
                                  "s3": {
                                    "type": "object",
                                    "title": "Logging S3 Export configuration.",
                                    "description": "Exports your cluster's logs to the S3 bucket and subdir configured on the S3 [data integration](/#operation/DataIntegrationCreate) given.\nEach file contains logs of 3 minutes where each log is separated by a new line and saved as a JSON.\nThe file formats are `subdir`/`accountId`_`oceanId`_`oceanName`_`startTime`.log\nIf no subdir was configured, the files will be saved in the root of the bucket.\n",
                                    "required": [
                                      "id"
                                    ],
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "The identifier of The S3 data integration to export the logs to.",
                                        "example": "di-123"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2019-06-03T08:13:08.000Z",
                            "description": "A timestamp of the Ocean creation.\n"
                          },
                          "updatedAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2019-06-10T15:06:13.000Z",
                            "description": "A timestamp of the latest Ocean update.\n"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/cluster/{oceanClusterId}": {
      "get": {
        "summary": "Get Cluster",
        "description": "Get the configurations for a specified Ocean cluster.\n",
        "operationId": "OceanECSClusterGet",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "oceanClusterId",
            "example": "o-12345abc",
            "description": "Identifier of the Ocean cluster.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Cluster",
        "description": "All Ocean parameters are updatable, excluding Region and ID. This API supports partial updates, so specific fields can be updated separately.\n",
        "operationId": "OceanECSClusterUpdate",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "cluster"
                    ],
                    "properties": {
                      "cluster": {
                        "type": "object",
                        "title": "ECS Ocean",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "o-12345abc",
                            "readOnly": true,
                            "description": "Ocean cluster identifier.\n"
                          },
                          "name": {
                            "type": "string",
                            "example": "Ocean::my-elastigroup-name",
                            "description": "Add a name for the Ocean cluster.\n"
                          },
                          "clusterName": {
                            "type": "string",
                            "example": "my-ECS-cluster-name",
                            "description": "ECS cluster name.\n"
                          },
                          "autoScaler": {
                            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/autoScaler"
                          },
                          "region": {
                            "type": "string",
                            "example": "us-east-1",
                            "description": "Select the region for the Ocean cluster to run in.\n"
                          },
                          "capacity": {
                            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/capacity"
                          },
                          "strategy": {
                            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/strategy"
                          },
                          "compute": {
                            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/compute"
                          },
                          "scheduling": {
                            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/scheduling"
                          },
                          "logging": {
                            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/logging"
                          },
                          "createdAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2019-06-03T08:13:08.000Z",
                            "description": "A timestamp of the Ocean creation.\n"
                          },
                          "updatedAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2019-06-10T15:06:13.000Z",
                            "description": "A timestamp of the latest Ocean update.\n"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Cluster",
        "description": "Delete a specified Ocean cluster.\n",
        "operationId": "OceanECSClusterDelete",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/cluster/{EcsClusterName}/import": {
      "post": {
        "summary": "Import Cluster",
        "description": "Create Ocean cluster object from an existing ECS cluster with at least one container instance to be used as input for create cluster.<br> Import the configuration from the latest instance id launched with in the cluster (out of the first batch of 100 instances ECS returns).<br> **This route will not register the ECS cluster to Ocean.**\n",
        "operationId": "OceanECSClusterImport",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "EcsClusterName",
            "example": "ecsName",
            "description": "ECS Cluster name\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "region"
                    ],
                    "properties": {
                      "region": {
                        "type": "string",
                        "example": "us-east-1",
                        "description": "The region that the ECS cluster is running at.\n"
                      },
                      "name": {
                        "type": "string",
                        "example": "oceanName",
                        "description": "The name for the new Ocean cluster object. <br> If the name is not provided, the default will be *Ocean_{EcsClusterName}*\n"
                      },
                      "instanceId": {
                        "type": "string",
                        "example": "i-123456789abcdefgh",
                        "description": "Indicate the container instance id that the configuration will be taken from. This is an optional field\n"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Import Ocean ECS Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/ecs/cluster/my-ECS-cluster-name/import"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "cluster"
                                ],
                                "properties": {
                                  "cluster": {
                                    "type": "object",
                                    "title": "ECS Ocean",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "my-Ocean-ECS-cluster",
                                        "description": "The name of the Ocean cluster provided in the request. If not provided in the import request, the name will be Ocean_{EcsClusterName}.\n"
                                      },
                                      "clusterName": {
                                        "type": "string",
                                        "example": "my-ECS-cluster-name",
                                        "description": "ECS cluster name.\n"
                                      },
                                      "region": {
                                        "type": "string",
                                        "example": "us-east-1",
                                        "description": "The region for the Ocean cluster to run in. The same name as the provided ECS cluster.\n"
                                      },
                                      "compute": {
                                        "type": "object",
                                        "title": "Ocean Compute",
                                        "properties": {
                                          "subnetIds": {
                                            "type": "array",
                                            "description": "A comma-separated list of subnet identifiers for the Ocean cluster. Subnet identifiers should be configured with auto-assign public IP.\n",
                                            "items": {
                                              "type": "string",
                                              "example": "subnet-1234abcd"
                                            }
                                          },
                                          "launchSpecification": {
                                            "type": "object",
                                            "description": "The default specification for container instances in the cluster. Used as a template for custom Virtual Node Groups to inherit values which are not explicitly defined in them, and as a default VNG when no other VNGs exist or match the workload’s requirements.\n",
                                            "properties": {
                                              "imageId": {
                                                "type": "string",
                                                "example": "ami-123456789abcdefgh"
                                              },
                                              "securityGroupIds": {
                                                "type": "array",
                                                "description": "One or more security group identifiers.\n",
                                                "items": {
                                                  "type": "string",
                                                  "example": "sg-abcdefgh123456789"
                                                }
                                              },
                                              "keyPair": {
                                                "type": "string",
                                                "example": "dev-keypair"
                                              },
                                              "userData": {
                                                "type": "string",
                                                "example": "userData"
                                              },
                                              "iamInstanceProfile": {
                                                "type": "object",
                                                "description": "The instance profile iamRole.\n",
                                                "properties": {
                                                  "arn": {
                                                    "type": "string",
                                                    "description": "The iamRole arn.\n",
                                                    "example": "my-arn"
                                                  }
                                                }
                                              },
                                              "tags": {
                                                "type": "object",
                                                "description": "AWS tags from an EC2 instance registered as a container instance.\n",
                                                "properties": {
                                                  "tagKey": {
                                                    "type": "string",
                                                    "example": "env"
                                                  },
                                                  "tagValue": {
                                                    "type": "string",
                                                    "example": "dev"
                                                  }
                                                }
                                              },
                                              "instanceMetadataOptions": {
                                                "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/compute/properties/launchSpecification/properties/instanceMetadataOptions"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:ecs"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/cluster/{oceanClusterId}/log": {
      "summary": "Ocean for AWS ECS",
      "get": {
        "summary": "Fetch Elastilog",
        "description": "Get the log of an Ocean Cluster.\n",
        "operationId": "oceanEcsFetchLog",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1mcs~1ecs~1cluster~1%7BclusterName%7D~1costs/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1mcs~1ecs~1cluster~1%7BclusterName%7D~1costs/get/parameters/1"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Maximum number of lines to extract in a response.\n",
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "default": 500
            },
            "required": false,
            "example": 200
          },
          {
            "in": "query",
            "name": "severity",
            "description": "Severity of log entries to extract.\n",
            "schema": {
              "type": "string",
              "enum": [
                "ALL",
                "INFO",
                "DEBUG",
                "ERROR",
                "WARN"
              ],
              "default": "ALL"
            },
            "required": false,
            "example": "INFO"
          },
          {
            "in": "query",
            "name": "resourceId",
            "example": "i-12345678",
            "description": "Filter extracted log entries for a specific resource identifier. Default: Null\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Get Log Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request": {
                      "type": "object",
                      "description": "Original request properties.\n",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "3213f42e-455e-4801-a185-cd3eb65fac5f",
                          "description": "Unique identifier associated with this request.\n"
                        },
                        "url": {
                          "type": "string",
                          "example": "/ocean/aws/ecs/cluster/o-e0a2bd7c/log?fromDate=2020-10-06&toDate=2020-10-08&severity=ALL&limit=500",
                          "description": "The URL that was used for the request.\n"
                        },
                        "method": {
                          "type": "string",
                          "example": "GET",
                          "description": "The HTTP **METHOD** used for the request.\n"
                        },
                        "timestamp": {
                          "type": "string",
                          "example": "2020-10-05T16:20:38.579Z",
                          "description": "When the request was received by Spot.\n"
                        }
                      }
                    },
                    "response": {
                      "type": "object",
                      "description": "Response package that includes status, type, and any relevant data.\n",
                      "properties": {
                        "status": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "integer",
                              "example": "200",
                              "description": "HTTP status code assigned to this response.\n"
                            },
                            "message": {
                              "type": "string",
                              "example": "OK",
                              "description": "HTTP status message for the respective status code.\n"
                            }
                          }
                        },
                        "kind": {
                          "type": "string",
                          "example": "spotinst:ocean:cluster:log"
                        },
                        "items": {
                          "type": "array",
                          "description": "Array of data objects.\n",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              },
                              "severity": {
                                "type": "string"
                              },
                              "createdAt": {
                                "type": "string"
                              }
                            }
                          },
                          "example": [
                            {
                              "message": "Instances Terminated - ECS Autoscaler ,Terminated 1, List of instances: [i-0914721d46ebbabb2]",
                              "severity": "INFO",
                              "createdAt": "2020-10-07T09:51:12.000Z"
                            },
                            {
                              "message": "Instances: [i-0914721d46ebbabb2] have been detached. Reason: Auto scale",
                              "severity": "INFO",
                              "createdAt": "2020-10-07T09:51:11.000Z"
                            }
                          ]
                        },
                        "count": {
                          "type": "integer",
                          "example": "2"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/cluster/{oceanClusterId}/rightSizing/suggestion": {
      "get": {
        "summary": "Get Right Sizing Recommendations",
        "description": "Get right-sizing recommendations for an Ocean cluster.\n",
        "operationId": "oceanEcsGetRightSizingRecommend",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean ECS Right Sizing Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "suggestedMemory": {
                                    "type": "integer",
                                    "example": 2
                                  },
                                  "requestedMemory": {
                                    "type": "integer",
                                    "example": 100
                                  },
                                  "serviceName": {
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "sg-test"
                                  },
                                  "suggestedCpu": {
                                    "type": "integer",
                                    "example": 0
                                  },
                                  "requestedCpu": {
                                    "type": "integer",
                                    "example": 128
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:ecs:cluster:rightSizing:resourceSuggestion"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/cluster/{oceanClusterId}/instanceTypeFiltersSimulation": {
      "post": {
        "summary": "Instance Types Filters Simulation",
        "description": "Returns all instances types that match the given filters. These instance types will be used if the cluster is configured with these filters.\n",
        "operationId": "oceanEcsInstanceTypeFiltersSimulation",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "filters"
                    ],
                    "properties": {
                      "filters": {
                        "type": "object",
                        "description": "List of filters. The Instance types that match with all filters compose the Ocean's whitelist parameter.  Cannot be configured together with whitelist/blacklist.\n",
                        "title": "InstanceTypesFilters",
                        "properties": {
                          "minVcpu": {
                            "type": "integer",
                            "description": "Minimum number of vcpus available.\n",
                            "minimum": 0,
                            "example": 2
                          },
                          "maxVcpu": {
                            "type": "integer",
                            "description": "Maximum number of vcpus available.\n",
                            "minimum": 1,
                            "example": 16
                          },
                          "minMemoryGiB": {
                            "type": "number",
                            "format": "double",
                            "description": "Minimum amount of Memory (GiB).\n",
                            "minimum": 0,
                            "example": 8
                          },
                          "maxMemoryGiB": {
                            "type": "number",
                            "format": "double",
                            "description": "Maximum amount of Memory (GiB).\n",
                            "minimum": 0,
                            "example": 16
                          },
                          "minGpu": {
                            "type": "integer",
                            "description": "Minimum total number of GPUs.\n",
                            "minimum": 0,
                            "example": 0
                          },
                          "maxGpu": {
                            "type": "integer",
                            "description": "Maximum total number of GPUs.\n",
                            "minimum": 1,
                            "example": 4
                          },
                          "includeFamilies": {
                            "type": "array",
                            "description": "Types belonging to a family from the IncludeFamilies will be available for scaling (asterisk wildcard is also supported). For example, C* will include instance types from these families: c5, c4, c4a, etc.\n",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "c5*",
                              "g5"
                            ]
                          },
                          "excludeFamilies": {
                            "type": "array",
                            "description": "Types belonging to a family from the ExcludeFamilies will not be available for scaling (asterisk wildcard is also supported). For example, C* will exclude instance types from these families: c5, c4, c4a, etc.\n",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "t2",
                              "R4*"
                            ]
                          },
                          "excludeMetal": {
                            "type": "boolean",
                            "default": false,
                            "description": "In case excludeMetal is set to true, metal types will not be available for scaling.\n",
                            "example": true
                          },
                          "isEnaSupported": {
                            "type": "boolean",
                            "description": "Ena is supported or not.\n",
                            "example": true
                          },
                          "architectures": {
                            "type": "array",
                            "description": "The filtered instance types will support at least one of the architectures from this list.\n",
                            "items": {
                              "type": "string",
                              "enum": [
                                "i386",
                                "x86_64",
                                "arm64"
                              ]
                            },
                            "example": [
                              "i386",
                              "x86_64"
                            ]
                          },
                          "virtualizationTypes": {
                            "type": "array",
                            "description": "The filtered instance types will support at least one of the virtualization types from this list.\n",
                            "items": {
                              "type": "string",
                              "enum": [
                                "hvm",
                                "paravirtual"
                              ]
                            },
                            "example": [
                              "hvm"
                            ]
                          },
                          "categories": {
                            "type": "array",
                            "description": "The filtered instance types will belong to one of the categories types from this list.\n",
                            "items": {
                              "type": "string",
                              "enum": [
                                "Accelerated_computing",
                                "Compute_optimized",
                                "General_purpose",
                                "Memory_optimized",
                                "Storage_optimized"
                              ]
                            },
                            "example": [
                              "Accelerated_computing",
                              "Compute_optimized"
                            ]
                          },
                          "minEnis": {
                            "type": "integer",
                            "description": "Minimum number of network interfaces (ENIs).\n",
                            "minimum": 0,
                            "example": 2
                          },
                          "diskTypes": {
                            "type": "array",
                            "description": "The filtered instance types will have one of the disk type from this list.\n",
                            "items": {
                              "type": "string",
                              "enum": [
                                "NVMe",
                                "EBS",
                                "SSD",
                                "HDD"
                              ]
                            },
                            "example": [
                              "NVMe",
                              "EBS"
                            ]
                          },
                          "hypervisor": {
                            "type": "array",
                            "description": "The filtered instance types will have a hypervisor type from this list.\n",
                            "items": {
                              "type": "string",
                              "enum": [
                                "nitro",
                                "xen"
                              ]
                            },
                            "example": [
                              "nitro"
                            ]
                          },
                          "rootDeviceTypes": {
                            "type": "array",
                            "description": "The filtered instance types will have a root device types from this list.\n",
                            "items": {
                              "type": "string",
                              "enum": [
                                "ebs",
                                "instance-store"
                              ]
                            },
                            "example": [
                              "ebs"
                            ]
                          },
                          "minNetworkPerformance": {
                            "type": "integer",
                            "description": "Minimum Bandwidth in Gib/s of network performance.\n",
                            "minimum": 0,
                            "example": 2
                          },
                          "maxNetworkPerformance": {
                            "type": "integer",
                            "description": "Maximum Bandwidth in Gib/s of network performance.\n",
                            "minimum": 1,
                            "example": 20
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Instance Types Filters Simulation Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/ecs/cluster/o-abcd1234/instanceTypeFiltersSimulation"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "filteredInstanceTypes": {
                                    "type": "array",
                                    "description": "The simulated instance types.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "example": [
                                      "g5.xlarge",
                                      "c5.2xlarge",
                                      "c5ad.2xlarge",
                                      "c5d.2xlarge",
                                      "c5a.2xlarge"
                                    ]
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:ecs:instanceTypesFilters:simulation"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/cluster/{oceanClusterId}/allowedInstanceTypes": {
      "get": {
        "summary": "Allowed Instance Types",
        "description": "Return the list of the allowed Ocean cluster instance types.\n",
        "operationId": "oceanEcsGetAllowedInstanceTypes",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Allowed Instance Types Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/ecs/cluster/0-12345abc/allowedInstanceTypes"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "instanceTypes": {
                                    "type": "array",
                                    "description": "The allowed Ocean cluster instance types.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "example": [
                                      "c3.large",
                                      "c5.large"
                                    ]
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:ecs:allowedInstanceTypes"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/cluster/import": {
      "post": {
        "summary": "Upgrade Elastigroup to Ocean",
        "description": "Upgrade an Elastigroup with ECS integration into Ocean for ECS cluster.\n",
        "operationId": "oceanEcsUpgradeFromEG",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "groupId",
            "example": "sig-1234abcd",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The identifier of the Elastigroup to upgrade.\n"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/cluster/{oceanClusterId}/roll": {
      "post": {
        "summary": "Initiate Roll",
        "description": "Roll an entire Ocean cluster or roll subsets of the cluster by specifying launchSpecIds or instanceIds. Performing this request will start the roll immediately according to defined batches. Note that the first response for a successful request will indicate the start of a roll. In order to check the status of a roll, you can use the [GET Roll API](https://docs.spot.io/api//#operation/oceanEcsRollGetSingleRoll) using the roll identifier.\n",
        "operationId": "oceanEcsRollInit",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "title": "Roll",
                    "properties": {
                      "roll": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "batchSizePercentage": {
                                "type": "integer",
                                "description": "Value (in percent) to set size of batch in roll. Valid values are 0-100.\n",
                                "example": 20
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "comment": {
                                "type": "string",
                                "description": "Add a brief description for the roll. The comment is limited to 256 chars.\n",
                                "example": "This is why I rolled my cluster."
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "batchMinHealthyPercentage": {
                                "type": "integer",
                                "description": "Indicates the threshold of minimum healthy instances in single batch. If the amount of healthy instances in single batch is under the threshold, the cluster roll will fail. If exists, the parameter value will be in range of 1-100. In case of null as value, the default value in the backend will be 50%. Value of param should represent the number in percentage (%) of the batch.\n",
                                "example": 100,
                                "default": 50
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  {
                    "type": "object",
                    "title": "Roll with instance ids",
                    "properties": {
                      "roll": {
                        "allOf": [
                          {
                            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/properties/roll/allOf/0"
                          },
                          {
                            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/properties/roll/allOf/1"
                          },
                          {
                            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/properties/roll/allOf/2"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "instanceIds": {
                                "type": "array",
                                "description": "List of instance identifiers to be rolled. Each identifier is a string. Can be null. Cannot be used together with launchSpecIds.\n",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "i-0003a99ffb566f039",
                                  "i-0567a99ffb566f765"
                                ]
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  {
                    "type": "object",
                    "title": "Roll with Virtual Node Group ids",
                    "properties": {
                      "roll": {
                        "allOf": [
                          {
                            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/properties/roll/allOf/0"
                          },
                          {
                            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/properties/roll/allOf/1"
                          },
                          {
                            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/properties/roll/allOf/2"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "launchSpecIds": {
                                "type": "array",
                                "description": "List of virtual node group identifiers to be rolled. Each identifier is a string. Can be null. Cannot be used together with instanceIds.\n",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "ols-76694a7d",
                                  "ols-56694a76"
                                ]
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Rolls",
        "description": "List rolls of an Ocean cluster.\n",
        "operationId": "oceanEcsRollListRolls",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean ECS Roll Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "readOnly": true,
                                            "example": "scr-1234abcd"
                                          },
                                          "scope": {
                                            "type": "string",
                                            "enum": [
                                              "Cluster",
                                              "Vngs",
                                              "Vng",
                                              "Instances",
                                              "Instance"
                                            ],
                                            "example": "Cluster"
                                          },
                                          "currentBatch": {
                                            "type": "integer",
                                            "readOnly": true,
                                            "example": 1,
                                            "description": "Batch number that is currenlty being deployed.\n"
                                          },
                                          "numOfBatches": {
                                            "type": "integer",
                                            "readOnly": true,
                                            "example": 2,
                                            "description": "Total number of batches the deployment will process.\n"
                                          },
                                          "progress": {
                                            "type": "object",
                                            "readOnly": true,
                                            "properties": {
                                              "unit": {
                                                "type": "string",
                                                "example": "percentage"
                                              },
                                              "value": {
                                                "type": "integer",
                                                "example": 10
                                              },
                                              "detailedStatus": {
                                                "type": "object",
                                                "properties": {
                                                  "oldInstances": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "instanceId": {
                                                          "type": "string"
                                                        },
                                                        "status": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    },
                                                    "example": [
                                                      {
                                                        "instanceId": "i-003a0281a24c01a20",
                                                        "status": "REPLACED"
                                                      },
                                                      {
                                                        "instanceId": "i-003a0281a24c01a21",
                                                        "status": "TO_BE_REPLACED"
                                                      },
                                                      {
                                                        "instanceId": "i-003a0281a24c01a22",
                                                        "status": "COULD_NOT_BE_REPLACED"
                                                      }
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "oceanId": {
                                            "type": "string",
                                            "example": "o-abcd1234",
                                            "readOnly": true,
                                            "description": "The Ocean ECS cluster that is being rolled.\n"
                                          },
                                          "createdAt": {
                                            "type": "string",
                                            "readOnly": true,
                                            "format": "date-time",
                                            "example": "2019-06-03T08:13:08.000Z",
                                            "description": "A timestamp of the roll creation.\n"
                                          },
                                          "updatedAt": {
                                            "type": "string",
                                            "readOnly": true,
                                            "format": "date-time",
                                            "example": "2019-06-10T15:06:13.000Z",
                                            "description": "The timestamp of the latest roll update.\n"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "status": {
                                            "type": "string",
                                            "description": "Sets the status of the roll.\n",
                                            "example": "IN_PROGRESS",
                                            "enum": [
                                              "IN_PROGRESS",
                                              "COMPLETED",
                                              "FAILED",
                                              "STOPPED"
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/properties/roll/allOf/1"
                                      },
                                      {
                                        "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/properties/roll/allOf/2"
                                      },
                                      {
                                        "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/1/properties/roll/allOf/3"
                                      }
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/oneOf/0/allOf/0"
                                      },
                                      {
                                        "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/oneOf/0/allOf/1"
                                      },
                                      {
                                        "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/properties/roll/allOf/1"
                                      },
                                      {
                                        "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/properties/roll/allOf/2"
                                      },
                                      {
                                        "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/2/properties/roll/allOf/3"
                                      }
                                    ]
                                  }
                                ]
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:ecs:cluster:roll"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/cluster/{oceanClusterId}/roll/{ROLL_ID}": {
      "put": {
        "summary": "Update Roll",
        "description": "Update a roll of an Ocean cluster. Performing the request will stop the next batch in a roll.\n",
        "operationId": "oceanEcsRollUpdate",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "in": "path",
            "name": "ROLL_ID",
            "example": "scr-12345abc",
            "description": "Ocean Cluster Roll identifier\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "roll": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "description": "Sets the status of the roll.\n",
                        "properties": {
                          "status": {
                            "type": "string",
                            "enum": [
                              "STOPPED"
                            ],
                            "description": "Set status of a roll. Valid values: \"STOPPED\"\n",
                            "example": "STOPPED"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get Roll",
        "description": "Get status for roll of an Ocean cluster.\n",
        "operationId": "oceanEcsRollGetSingleRoll",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll~1%7BROLL_ID%7D/put/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/cluster/{oceanClusterId}/containerInstances": {
      "get": {
        "summary": "Get Cluster Container Instances",
        "description": "Get container instances data of an Ocean cluster.\n",
        "operationId": "oceanAwsEcsGetContainerInstances",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D~1nodes/get/parameters/2"
          },
          {
            "in": "query",
            "name": "instanceId",
            "schema": {
              "type": "string"
            },
            "example": "i-123",
            "description": "Get a specific container instance ec2 instance id."
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean AWS Container Instances Data Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/ecs/cluster/o-12345abc/containerInstances"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "AWS Ocean ECS Container Instance Data",
                                "description": "Container Instance of Ocean cluster.",
                                "properties": {
                                  "instanceId": {
                                    "type": "string",
                                    "example": "i-123",
                                    "description": "The AWS instance id of this container instance.\n"
                                  },
                                  "instanceType": {
                                    "type": "string",
                                    "example": "c3.large",
                                    "description": "The AWS instance type of this container instance.\n"
                                  },
                                  "availabilityZone": {
                                    "type": "string",
                                    "example": "us-west-2b",
                                    "description": "The AWS availability zone of this container instance.\n"
                                  },
                                  "launchSpecId": {
                                    "type": "string",
                                    "example": "ols-123",
                                    "description": "The container instance's Virtual Node Group id.\n"
                                  },
                                  "launchSpecName": {
                                    "type": "string",
                                    "example": "dev-launchSpec",
                                    "description": "The container instance's Virtual Node Group name.\n"
                                  },
                                  "lifeCycle": {
                                    "type": "string",
                                    "enum": [
                                      "Spot",
                                      "OD",
                                      "OD (RI)"
                                    ],
                                    "example": "Spot",
                                    "description": "The AWS lifeCycle of this container instance.\n"
                                  },
                                  "publicIp": {
                                    "type": "string",
                                    "example": "1.2.3.4",
                                    "description": "This container instance's public ip.\n"
                                  },
                                  "workloadRequestedCpuUnit": {
                                    "type": "number",
                                    "format": "double",
                                    "example": 1320,
                                    "description": "The amount of cpu units requested by the ECS workload.\n"
                                  },
                                  "workloadRequestedMemoryInMiB": {
                                    "type": "number",
                                    "example": 500,
                                    "description": "The amount of memory in MiB requested by the ECS workload.\n"
                                  },
                                  "workloadRequestedGpu": {
                                    "type": "number",
                                    "example": 1,
                                    "description": "The amount of gpus requested by the ECS workload.\n"
                                  },
                                  "headroomRequestedCpuUnit": {
                                    "type": "number",
                                    "example": 1320,
                                    "description": "The amount of cpu units saved for headroom.\n"
                                  },
                                  "headroomRequestedMemoryInMiB": {
                                    "type": "number",
                                    "example": 512,
                                    "description": "The amount of memory in MiB saved for headroom.\n"
                                  },
                                  "headroomRequestedGpu": {
                                    "type": "number",
                                    "example": 1,
                                    "description": "The amount of gpus saved for headroom.\n"
                                  },
                                  "registeredCpuUnit": {
                                    "type": "number",
                                    "example": 2000,
                                    "description": "The amount of registered cpu units as registered in ECS.\n"
                                  },
                                  "registeredMemoryInMiB": {
                                    "type": "number",
                                    "example": 3646.1,
                                    "description": "The amount of registered memory in MiB as registered in ECS.\n"
                                  },
                                  "registeredGpu": {
                                    "type": "number",
                                    "example": 1,
                                    "description": "The amount of registered gpus as registered in ECS.\n"
                                  },
                                  "containerInstanceId": {
                                    "type": "string",
                                    "example": "abcdefg",
                                    "description": "The ECS container instance id.\n"
                                  },
                                  "registrationStatus": {
                                    "type": "string",
                                    "enum": [
                                      "Registered",
                                      "Registering",
                                      "Failed"
                                    ],
                                    "example": "Registered",
                                    "description": "The registration status of this container instance.\n"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "example": "2021-10-01T05:51:06.000Z",
                                    "description": "When was this container instance's EC2 instance was created at.\n"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:ecs:containerInstances"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/cluster/{oceanClusterId}/detachInstances": {
      "put": {
        "summary": "Detach Instances",
        "description": "Detach instances from your Ocean cluster.\n",
        "operationId": "oceanEcsDetachInstance",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "instancesToDetach"
                    ],
                    "properties": {
                      "instancesToDetach": {
                        "type": "array",
                        "description": "Array of instance identifiers to be detached.\n",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "i-0003a99ffb566f039",
                          "i-0567a99ffb566f765"
                        ]
                      },
                      "shouldTerminateInstances": {
                        "type": "boolean",
                        "description": "Determines whether the detached EC2 instances should be terminated or not.\n",
                        "example": true
                      },
                      "shouldDecrementTargetCapacity": {
                        "type": "boolean",
                        "description": "Determines whether the Ocean cluster's target capacity should be decremented.\n",
                        "example": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detach Instances Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/ecs/cluster/o-abcd1234/detachInstances"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/launchSpec": {
      "post": {
        "summary": "Create VNG",
        "description": "Create a new Ocean ECS virtual node group in the specified account.\n",
        "operationId": "OceanECSLaunchSpecCreate",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "launchSpec"
                    ],
                    "properties": {
                      "launchSpec": {
                        "type": "object",
                        "description": "AWS Cluster Virtual Node Group (VNG).\n",
                        "required": [
                          "oceanId",
                          "name",
                          "imageId"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "readOnly": true,
                            "example": "ols-1234abcd"
                          },
                          "oceanId": {
                            "type": "string",
                            "description": "The Ocean cluster identifier. Required for to create a virtual node group.\n",
                            "example": "o-1234abcd"
                          },
                          "name": {
                            "type": "string",
                            "description": "User given name of the virtual node group.\n",
                            "example": "mySpecLauncher"
                          },
                          "imageId": {
                            "type": "string",
                            "description": "Set image identifier. Can be null.\n",
                            "example": "img2"
                          },
                          "images": {
                            "type": "array",
                            "description": "An array of image objects. <br>\n* You can configure VNG with either the imageId or images objects, but not both simultaneously.\n* For each architecture type (amd64, arm64) only one AMI is allowed.\n* Valid values: null, or an array with at least one element\n",
                            "items": {
                              "type": "object",
                              "title": "Image object, containing the id of the image used to launch instances.",
                              "required": [
                                "id"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Identifier of the image in AWS. Valid values: any string which is not empty or null.\n",
                                  "example": "ami-ID"
                                }
                              }
                            }
                          },
                          "userData": {
                            "type": "string",
                            "format": "byte",
                            "description": "Base64-encoded MIME user data to make available to the instances.\n",
                            "example": "dXNlcmJhc2g2NGVuY29kZWQ="
                          },
                          "securityGroupIds": {
                            "type": "array",
                            "description": "Set security groups. Each element in array should be a security group identifier.\n",
                            "items": {
                              "type": "string",
                              "example": "sg1, sg3"
                            }
                          },
                          "instanceTypes": {
                            "type": "array",
                            "description": "An array of supported instance types for the VNG.\n",
                            "items": {
                              "type": "string",
                              "example": "c3.2xlarge, c4.2xlarge"
                            }
                          },
                          "preferredSpotTypes": {
                            "type": "array",
                            "description": "When Ocean scales up instances, it takes your preferred types into consideration while maintaining a variety of machine types running for optimized distribution. [Learn More](https://docs.spot.io/ocean/features/vngs/attributes-and-actions-per-vng?id=preferred-spot-instance-types-per-vng)\n",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "c3.2xlarge",
                              "c4.2xlarge"
                            ]
                          },
                          "subnetIds": {
                            "type": "array",
                            "description": "Set the subnets in the VNG. Each element in the array should be a subnet identifier.\n",
                            "items": {
                              "type": "string",
                              "example": "subnet-01234566789abcdef, subnet-9876543210ghijkl"
                            }
                          },
                          "iamInstanceProfile": {
                            "type": "array",
                            "description": "The instance profile iamRole object.\n",
                            "items": {
                              "oneOf": [
                                {
                                  "title": "arn",
                                  "type": "string",
                                  "description": "The iamRole ARN. If set, do not set launchSpec.iamInstanceProfile.name\n",
                                  "example": "arn:aws:iam::123456789123:instance-profile"
                                },
                                {
                                  "title": "name",
                                  "type": "string",
                                  "description": "The iamRole name. If set, do not set launchSpec.iamInstanceProfile.arn\n",
                                  "example": "my-iamInstance-Profile"
                                }
                              ]
                            }
                          },
                          "attributes": {
                            "description": "Add attributes to the cluster.\n",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "key",
                                "value"
                              ],
                              "properties": {
                                "key": {
                                  "description": "Give the attribute a key.\n",
                                  "type": "string",
                                  "example": "key1"
                                },
                                "value": {
                                  "description": "Set the value of the attribute.\n",
                                  "type": "string",
                                  "example": "value1"
                                }
                              }
                            }
                          },
                          "autoScale": {
                            "type": "object",
                            "properties": {
                              "headrooms": {
                                "description": "Set custom headroom per VNG. Provide a list of launchSpec.autoscale.headroom objects.\n",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "numOfUnits"
                                  ],
                                  "properties": {
                                    "cpuPerUnit": {
                                      "description": "Configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.\n",
                                      "type": "integer",
                                      "example": 1024
                                    },
                                    "memoryPerUnit": {
                                      "description": "Configure the amount of memory (MiB) to allocate the headroom.\n",
                                      "type": "integer",
                                      "example": 512
                                    },
                                    "numOfUnits": {
                                      "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n",
                                      "type": "integer",
                                      "example": 2
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "tags": {
                            "description": "List of kay-value pairs of tags.\n",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "tagKey": {
                                  "type": "string",
                                  "description": "Set the tag key.\n",
                                  "example": "Creator"
                                },
                                "tagValue": {
                                  "type": "string",
                                  "description": "Set the tag value.\n",
                                  "example": "John Doe"
                                }
                              }
                            }
                          },
                          "blockDeviceMappings": {
                            "type": "array",
                            "description": "Block devices that are exposed to the instance. You can specify virtual devices and EBS volumes. This parameter and rootVolumeSize cannot be in the configuration at the same time. This parameter can be null, but if not null, it must contain at least one block device.\n",
                            "items": {
                              "type": "object",
                              "properties": {
                                "deviceName": {
                                  "type": "string",
                                  "description": "Set device name.\n",
                                  "example": "/dev/xvda"
                                },
                                "ebs": {
                                  "type": "object",
                                  "description": "Set EBS properties.\n",
                                  "properties": {
                                    "throughput": {
                                      "type": "integer",
                                      "minimum": 125,
                                      "maximum": 1000,
                                      "example": 125,
                                      "description": "The amount of data transferred to or from a storage device per second. You can use this parameter only if volumetype=‘gp3’.\n"
                                    },
                                    "deleteOnTermination": {
                                      "type": "boolean",
                                      "description": "Flag to delete the EBS on instance termination.\n",
                                      "example": false
                                    },
                                    "encrypted": {
                                      "type": "boolean",
                                      "example": false
                                    },
                                    "iops": {
                                      "type": "integer",
                                      "description": "Must be greater than or equal to 0.\n",
                                      "example": 1
                                    },
                                    "kmsKeyId": {
                                      "type": "string",
                                      "example": "alias/aws/ebs"
                                    },
                                    "snapshotId": {
                                      "type": "string",
                                      "example": "snap-abcdefghi111110"
                                    },
                                    "volumeType": {
                                      "type": "string",
                                      "description": "Set volume type.\n",
                                      "example": "gp2"
                                    },
                                    "volumeSize": {
                                      "type": "integer",
                                      "description": "Set volume size (in GB). When using this property, you cannot use dynamicVolumeSize. You must use one or the other. Volume size should be greater than or equal to the size configured in the AMI.\n"
                                    },
                                    "dynamicVolumeSize": {
                                      "type": "object",
                                      "required": [
                                        "baseSize",
                                        "resource",
                                        "sizePerResourceUnit"
                                      ],
                                      "description": "Set dynamic volume size properties. When using this object, you cannot use volumeSize. You must use one or the other.\n",
                                      "properties": {
                                        "baseSize": {
                                          "type": "integer",
                                          "description": "Initial size per volume.\n",
                                          "example": 50
                                        },
                                        "resource": {
                                          "type": "string",
                                          "example": "CPU"
                                        },
                                        "sizePerResourceUnit": {
                                          "type": "integer",
                                          "description": "Additional size per resource unit (in GB). For example: if baseSize=50, and sizePerResourceUnit=20, and an instance with 2 CPU is launched, its disk size will be: 90 GB.\n",
                                          "example": 20
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "restrictScaleDown": {
                            "type": "boolean",
                            "description": "When set to True, the VNG container instances will be treated as if all tasks running have the [restrict-scale-down label](https://docs.spot.io/ocean/features/labels-and-taints). Therefore, Ocean will not scale down container instances unless they are empty.\n",
                            "example": false
                          },
                          "instanceMetadataOptions": {
                            "type": "object",
                            "title": "instanceMetadataOptions",
                            "required": [
                              "httpTokens"
                            ],
                            "description": "Ocean instance metadata options object for [IMDSv2](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-service.html).\n",
                            "properties": {
                              "httpTokens": {
                                "type": "string",
                                "description": "Determines if a signed token is required or not.\n",
                                "enum": [
                                  "optional",
                                  "required"
                                ],
                                "example": "optional"
                              },
                              "httpPutResponseHopLimit": {
                                "type": "integer",
                                "description": "An integer from 1 through 64.\nThe desired HTTP PUT response hop limit for instance metadata requests.\nThe larger the number, the further the instance metadata requests can travel.\n",
                                "example": 12
                              }
                            }
                          },
                          "scheduling": {
                            "type": "object",
                            "description": "An object used to define scheduled tasks such as a manual headroom update.\n",
                            "title": "Ocean Scheduling",
                            "properties": {
                              "tasks": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "title": "Task Definition",
                                  "required": [
                                    "isEnabled",
                                    "cronExpression",
                                    "taskType"
                                  ],
                                  "properties": {
                                    "isEnabled": {
                                      "type": "boolean",
                                      "example": true,
                                      "description": "Describes whether the task is enabled. When True, the task runs. When False, it does not run. Required for launchSpec.scheduling.tasks. In case automatic headroom is configured, please make sure to set autoScaler.enableAutomaticAndManualHeadroom on Ocean level to true in order to make sure that the manual headroom would be affective.\n"
                                    },
                                    "cronExpression": {
                                      "type": "string",
                                      "example": "0 1 * * *",
                                      "description": "A valid cron expression. For example : \" * * * * * \". The cron job runs in UTC time and is in Unix cron format. (See the Cron Expression Validator Script.)\n"
                                    },
                                    "taskType": {
                                      "type": "string",
                                      "example": "manualHeadroomUpdate",
                                      "enum": [
                                        "manualHeadroomUpdate"
                                      ],
                                      "description": "The activity that you are scheduling. Valid values: \"manualHeadroomUpdate\". Required for launchSpec.scheduling.tasks.\n"
                                    },
                                    "config": {
                                      "description": "The config of this scheduled task. Depends on the value of `taskType`.",
                                      "oneOf": [
                                        {
                                          "type": "object",
                                          "title": "manualHeadroomUpdate",
                                          "required": [
                                            "headrooms"
                                          ],
                                          "properties": {
                                            "headrooms": {
                                              "description": "Set custom headroom per VNG. Provide a list of launchSpec.autoscale.headroom objects.\n",
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "cpuPerUnit": {
                                                    "description": "Configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.\n",
                                                    "type": "integer"
                                                  },
                                                  "memoryPerUnit": {
                                                    "description": "Configure the amount of memory (MiB) to allocate the headroom.\n",
                                                    "type": "integer"
                                                  },
                                                  "numOfUnits": {
                                                    "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n",
                                                    "type": "integer"
                                                  }
                                                }
                                              },
                                              "example": [
                                                {
                                                  "cpuPerUnit": 1024,
                                                  "memoryPerUnit": 512,
                                                  "numOfUnits": 2
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "strategy": {
                            "type": "object",
                            "description": "Similar to a strategy for an Ocean cluster, but applying only to a virtual node group.\n",
                            "properties": {
                              "spotPercentage": {
                                "type": "integer",
                                "description": "The desired percentage of the Spot instances out of all running container instances. Defaults to 100 when not set.\\\nOnly available when the field is **not** set in the cluster directly (Ocean.Strategy.spotPercentage)\n",
                                "minimum": 0,
                                "maximum": 100,
                                "example": 70,
                                "default": 100
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2019-06-03T08:13:08.000Z"
                          },
                          "updatedAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2019-06-10T15:06:13.000Z"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Virtual Node Group Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/ecs/launchSpec"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec/post/requestBody/content/application~1json/schema/allOf/0/properties/launchSpec"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:ecs:launchSpec"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List VNGs",
        "description": "Get all the custom VNGs for all Ocean clusters in the specified account.\n",
        "operationId": "OceanECSLaunchSpecList",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "oceanId",
            "schema": {
              "type": "string"
            },
            "example": "o-12345abc",
            "description": "Identifier of the Ocean cluster.\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Virtual Node Group Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/ecs/launchSpec"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec/post/requestBody/content/application~1json/schema/allOf/0/properties/launchSpec"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:ecs:launchSpec"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/launchSpec/{oceanLaunchSpecId}": {
      "get": {
        "summary": "Get VNG",
        "description": "Get a specific custom launch configuration for an Ocean cluster in the specified account.\n",
        "operationId": "OceanECSLaunchSpecGet",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "oceanLaunchSpecId",
            "description": "Ocean cluster Virtual Node Group identifier.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Virtual Node Group Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/ecs/launchSpec/ols-12345abc"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec/post/requestBody/content/application~1json/schema/allOf/0/properties/launchSpec"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:ecs:launchSpec"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete VNG",
        "description": "Delete a specified virtual node group in an Ocean cluster.\n",
        "operationId": "OceanECSLaunchSpecDelete",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec~1%7BoceanLaunchSpecId%7D/get/parameters/1"
          },
          {
            "in": "query",
            "name": "deleteContainerInstances",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "When set to \"true\", all instances belonging to the deleted VNG will be drained, detached, and terminated.\n",
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Virtual Node Group Delete Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/ecs/launchSpec/ols-12345abc"
                            },
                            "method": {
                              "example": "DELETE"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update VNG",
        "description": "Get a specific custom launch configuration for an Ocean cluster in the specified account.\n",
        "operationId": "OceanECSLaunchSpecUpdate",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec~1%7BoceanLaunchSpecId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/2"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec/post/requestBody/content/application~1json/schema/allOf/0"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Virtual Node Group Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/ecs/launchSpec/ols-12345abc"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec/post/requestBody/content/application~1json/schema/allOf/0/properties/launchSpec"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:ecs:launchSpec"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/cluster/{oceanClusterId}/fargateMigration": {
      "post": {
        "summary": "Import Fargate To Existing Ocean Cluster",
        "description": "Import a Fargate service into an existing Ocean ECS cluster.\nUpon Fargate service import, Spot clones the selected Fargate services and runs them with the same VPC & Subnet settings on EC2 spot Instances.\nOcean will automatically and seamlessly predict and replace spot instances before they are interrupted, ensuring the uptime of the cluster and providing cost-savings of up to 90% over Fargate-enabled ECS clusters.\n",
        "operationId": "oceanEcsFargateImportToExist",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "config",
                    "properties": {
                      "services": {
                        "type": "array",
                        "description": "List of Fargate services by their names. Must contain at least one service.\n",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "service_1",
                          "service_2"
                        ]
                      },
                      "simpleNewServiceNames": {
                        "type": "boolean",
                        "description": "Flag to align imported service names in the following format: sfm_\n",
                        "example": false,
                        "default": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean ECS Fargate Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "efm-d235b4d8"
                                  },
                                  "oceanId": {
                                    "type": "string",
                                    "example": "o-fgdfgdf"
                                  },
                                  "state": {
                                    "type": "string",
                                    "example": "STARTING"
                                  },
                                  "config": {
                                    "type": "object",
                                    "properties": {
                                      "services": {
                                        "type": "array",
                                        "description": "List of Fargate services by their names. Must contain at least one service.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "example": [
                                          "service_1",
                                          "service_2"
                                        ]
                                      }
                                    }
                                  },
                                  "simpleNewServiceNames": {
                                    "type": "boolean",
                                    "description": "Flag to align imported service names in the following format: sfm_\n",
                                    "example": false,
                                    "default": false
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/cluster/{oceanClusterId}/fargateMigration/serviceDiscovery": {
      "get": {
        "summary": "Get Fargate Services Discovery",
        "description": "Get existing Fargate services in the ECS cluster.\n",
        "operationId": "oceanEcsFargateGetServicesDiscovery",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean ECS Fargate Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "ecsClusterName": {
                                    "type": "string",
                                    "example": "EcsTestCluster"
                                  },
                                  "ecsClusterRegion": {
                                    "type": "string",
                                    "example": "us-east-2"
                                  },
                                  "serviceNames": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "example": [
                                        "test_with_1",
                                        "test_without"
                                      ]
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "type": "string",
                              "example": "spotinst:ocean:aws:ecs:fargateMigration:serviceDiscovery"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/cluster/{oceanClusterId}/fargateMigration/status": {
      "get": {
        "summary": "Get Fargate Migration Status",
        "description": "Get the status of a Fargate service import.\n",
        "operationId": "oceanEcsFargateGetMigrationStatus",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean ECS Fargate Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "ecsClusterName": {
                                    "type": "string",
                                    "example": "EcsTestCluster"
                                  },
                                  "ecsClusterRegion": {
                                    "type": "string",
                                    "example": "us-east-2"
                                  },
                                  "state": {
                                    "type": "string",
                                    "example": "FINISHED"
                                  },
                                  "importedServices": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "example": "test_with_1"
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "type": "string",
                              "example": "spotinst:ocean:aws:ecs:fargateMigration:status"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/cluster/fargate/import": {
      "post": {
        "summary": "Import Fargate To New Ocean Cluster",
        "description": "This API copies the configuration from a Fargate service into the corresponding fields of an Ocean object.\n(This process is commonly referred to as importing.)\nThe API returns an Ocean object that is suitable for use in the [Create API](https://docs.spot.io/api/#operation/oceanEcsCreate/) to create a new Ocean cluster based on your Fargate configuration.\nIf you are migrating a Fargate service that has tags, you must run the Opt In procedure on your Amazon account or IAM role.\nThis is required in order to obtain the necessary Amazon Resource Name (ARN) and resource identifier format for your ECS tasks, container instances, and services.\nFor more information about the required ARN and the Opt In procedure, see the following pages:\n\n* [Amazon Resource Names (ARNs) and identifiers](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-account-settings.html#ecs-resource-ids)\n* [Migrating your Amazon ECS deployment to the new ARN and resource identifier format](https://aws.amazon.com/blogs/compute/migrating-your-amazon-ecs-deployment-to-the-new-arn-and-resource-id-format-2/)\n\nThe API requires one of the following permissions to be defined in Spot -\n\n* Permission: Account Editor (See [User Roles](https://docs.spot.io/administration/users/)) or\n* Action: ocean:importOceanFromFargate (See [Access Policies](https://docs.spot.io/administration/access-policies/))\n",
        "operationId": "oceanEcsFargateImportToNew",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "oceanClusterName",
                      "ecsClusterName",
                      "region",
                      "services"
                    ],
                    "properties": {
                      "oceanClusterName": {
                        "type": "string",
                        "description": "Name of the cluster in new Ocean object.",
                        "example": "fargate-import-ocean"
                      },
                      "ecsClusterName": {
                        "type": "string",
                        "description": "Name of the cluster in ECS.",
                        "example": "fargateTestCluster"
                      },
                      "region": {
                        "type": "string",
                        "description": "Name of the AWS region the ECS cluster is in.",
                        "example": "us-west-1"
                      },
                      "services": {
                        "type": "array",
                        "description": "Name of the ECS Fargate service to be imported.",
                        "items": {
                          "type": "array",
                          "items": {
                            "allOf": [
                              {
                                "type": "string",
                                "example": "service_1"
                              },
                              {
                                "type": "string",
                                "example": "service_2"
                              }
                            ]
                          }
                        }
                      },
                      "keyPair": {
                        "type": "string",
                        "description": "Specify a key pair to attach to the services.",
                        "example": "spot-prod"
                      },
                      "tags": {
                        "type": "array",
                        "description": "Set tags for the service. Items should be unique.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "tagKey": {
                              "type": "string",
                              "description": "The tag's key.",
                              "example": "env"
                            },
                            "tagValue": {
                              "type": "string",
                              "description": "The tag's name.",
                              "example": "prod"
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean ECS Import Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "cluster"
                                ],
                                "properties": {
                                  "cluster": {
                                    "type": "object",
                                    "title": "ECS Ocean",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "Ocean::my-elastigroup-name",
                                        "description": "Add a name for the Ocean cluster.\n"
                                      },
                                      "clusterName": {
                                        "type": "string",
                                        "example": "my-ECS-cluster-name",
                                        "description": "ECS cluster name.\n"
                                      },
                                      "autoScaler": {
                                        "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/autoScaler"
                                      },
                                      "region": {
                                        "type": "string",
                                        "example": "us-east-1",
                                        "description": "Select the region for the Ocean cluster to run in.\n"
                                      },
                                      "capacity": {
                                        "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/capacity"
                                      },
                                      "strategy": {
                                        "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/strategy"
                                      },
                                      "compute": {
                                        "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/compute"
                                      },
                                      "scheduling": {
                                        "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/scheduling"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:ecs"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/cluster/{oceanClusterId}/aggregatedCosts": {
      "post": {
        "summary": "Get Ecs Cluster Aggregated Detailed Costs",
        "description": "Provides Ecs cluster resource usage and costs over a time interval which can be grouped and/or filtered by AWS tags,\\\nfor example - application name (webapp, backend), environment (production, staging), version etc.\\\nThe response will contain a breakdown of the cluster resource costs($) in terms of compute (CPU, memory), storage (block, file, rootVolume).\nThe response will group the cluster usage costs based on the preselected default of Ecs Group Type which is composed of Service, Headroom, Custom Object,\nIdle and Standalone, or user selected AWS tags.\\\nWithin the default grouping, costs are broken down for the Service group, and for tag grouping the costs will be broken up by tag value.\n\nTime Rounding Down: The CostAnalysis API applies rounding down to the hours provided during the call.\\\nFor example, the value 1707004799099 (In GMT) representing Saturday, February 3, 2024, 23:59:59.099 is rounded down to Saturday, February 3, 2024, 23:00:00.000, resulting in the omission of one hour of cost.\n",
        "operationId": "oceanECSClusterAggregatedDetailedCosts",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "endTime",
                      "startTime"
                    ],
                    "properties": {
                      "startTime": {
                        "type": "string",
                        "example": 1675209600000,
                        "description": "Beginning date value using either the date format \"yyyy-MM-dd'T'HH:mm:ss'Z'\" or ms \"1494751821472\".\n"
                      },
                      "endTime": {
                        "type": "string",
                        "example": 1675216800000,
                        "description": "End date value using either the date format \"yyyy-MM-dd'T'HH:mm:ss'Z'\" or ms \"1494751821472\".\n"
                      },
                      "groupBy": {
                        "type": "string",
                        "description": "The parameter we want to group the costs by, default is grouping by ECS group types. Only a tag key can be passed in.\n",
                        "example": "env"
                      },
                      "filter": {
                        "type": "object",
                        "description": "Describe how to filter the costs. Optional field. Can only be used if grouping by tags.",
                        "required": [
                          "conditions"
                        ],
                        "properties": {
                          "conditions": {
                            "type": "object",
                            "required": [
                              "anyMatch"
                            ],
                            "properties": {
                              "anyMatch": {
                                "type": "array",
                                "description": "Array of conditions set that OR operator is applied between them.\n",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "allMatch"
                                  ],
                                  "properties": {
                                    "allMatch": {
                                      "type": "array",
                                      "description": "Array of conditions that AND operator is applied between them.\\\nFor example, (label env equals prod) AND (label app exists)\n",
                                      "items": {
                                        "type": "object",
                                        "description": "The basic expression of a condition",
                                        "required": [
                                          "key",
                                          "operator"
                                        ],
                                        "properties": {
                                          "key": {
                                            "type": "string",
                                            "description": "May be any string, but shouldn't be empty.\n",
                                            "example": "env"
                                          },
                                          "operator": {
                                            "type": "string",
                                            "example": "equals",
                                            "enum": [
                                              "equals",
                                              "notEquals",
                                              "exists",
                                              "notExists"
                                            ]
                                          },
                                          "value": {
                                            "type": "string",
                                            "description": "Required whenever the operator is \"equals\" or \"notEquals\".\n",
                                            "example": "dev"
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "example": [
                                  {
                                    "allMatch": [
                                      {
                                        "key": "env",
                                        "operator": "equals",
                                        "value": "dev"
                                      },
                                      {
                                        "key": "app",
                                        "operator": "exists"
                                      }
                                    ]
                                  },
                                  {
                                    "allMatch": [
                                      {
                                        "key": "team",
                                        "operator": "exists"
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean ECS Cluster Aggregated Detailed Costs Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/ecs/cluster/o-abcd1234/aggregatedCosts"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "totalForDuration": {
                                    "type": "object",
                                    "properties": {
                                      "startTime": {
                                        "type": "string",
                                        "example": "2023-02-01T12:00:00.745Z",
                                        "description": "Beginning date value using either the date format \"yyyy-MM-dd'T'HH:mm:ss'Z'\" or ms \"1494751821472\".\n"
                                      },
                                      "endTime": {
                                        "type": "string",
                                        "example": "2023-02-01T02:00:00.745Z",
                                        "description": "End date value using either the date format \"yyyy-MM-dd'T'HH:mm:ss'Z'\" or ms \"1494751821472\".\n"
                                      },
                                      "summary": {
                                        "type": "object",
                                        "properties": {
                                          "total": {
                                            "type": "number",
                                            "example": 20000,
                                            "description": "The total costs of cluster in a given time range"
                                          },
                                          "compute": {
                                            "type": "object",
                                            "properties": {
                                              "total": {
                                                "type": "number",
                                                "example": 12000,
                                                "description": "The total compute costs of the cluster in a given time range"
                                              },
                                              "services": {
                                                "type": "object",
                                                "properties": {
                                                  "total": {
                                                    "type": "number",
                                                    "example": 12000
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "storage": {
                                            "type": "object",
                                            "properties": {
                                              "total": {
                                                "type": "number",
                                                "example": 8000,
                                                "description": "The total storage costs of the cluster in given time range"
                                              },
                                              "block": {
                                                "type": "object",
                                                "properties": {
                                                  "total": {
                                                    "type": "number",
                                                    "example": 6000
                                                  },
                                                  "ebsPv": {
                                                    "type": "object",
                                                    "properties": {
                                                      "total": {
                                                        "type": "number",
                                                        "example": 4000
                                                      }
                                                    }
                                                  },
                                                  "nonPv": {
                                                    "type": "object",
                                                    "properties": {
                                                      "total": {
                                                        "type": "number",
                                                        "example": 2000
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "file": {
                                                "type": "object",
                                                "properties": {
                                                  "total": {
                                                    "type": "number",
                                                    "example": 2000
                                                  },
                                                  "efsPv": {
                                                    "type": "object",
                                                    "properties": {
                                                      "total": {
                                                        "type": "number",
                                                        "example": 2000
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "detailedCostsByTime": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "startTime": {
                                              "type": "string",
                                              "description": "Beginning date value using either the date format \"yyyy-MM-dd'T'HH:mm:ss'Z'\" or ms \"1494751821472\".\n"
                                            },
                                            "endTime": {
                                              "type": "string",
                                              "description": "End date value using either the date format \"yyyy-MM-dd'T'HH:mm:ss'Z'\" or ms \"1494751821472\".\n"
                                            },
                                            "summary": {
                                              "type": "object",
                                              "properties": {
                                                "total": {
                                                  "type": "number",
                                                  "description": "The total costs of cluster in a given time range"
                                                },
                                                "compute": {
                                                  "type": "object",
                                                  "properties": {
                                                    "total": {
                                                      "type": "number",
                                                      "description": "The total compute costs of the cluster in a given time range"
                                                    }
                                                  }
                                                },
                                                "storage": {
                                                  "type": "object",
                                                  "properties": {
                                                    "total": {
                                                      "type": "number",
                                                      "description": "The total storage costs of the cluster in given time range"
                                                    },
                                                    "block": {
                                                      "type": "object",
                                                      "properties": {
                                                        "total": {
                                                          "type": "number"
                                                        },
                                                        "ebsPv": {
                                                          "type": "object",
                                                          "properties": {
                                                            "total": {
                                                              "type": "number"
                                                            }
                                                          }
                                                        },
                                                        "nonPv": {
                                                          "type": "object",
                                                          "properties": {
                                                            "total": {
                                                              "type": "number"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "file": {
                                                      "type": "object",
                                                      "properties": {
                                                        "total": {
                                                          "type": "number"
                                                        },
                                                        "efsPv": {
                                                          "type": "object",
                                                          "properties": {
                                                            "total": {
                                                              "type": "number"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "groupedBy": {
                                              "type": "string",
                                              "example": "env"
                                            },
                                            "aggregations": {
                                              "type": "object",
                                              "description": "Contains aggregation for each group by value.\n",
                                              "additionalProperties": {
                                                "type": "object",
                                                "description": "For example - if group by is tag with a key 'env', each aggregation will be a corresponding value ('prod','dev' etc.)",
                                                "properties": {
                                                  "summary": {
                                                    "type": "object",
                                                    "properties": {
                                                      "total": {
                                                        "type": "number"
                                                      },
                                                      "compute": {
                                                        "type": "object",
                                                        "properties": {
                                                          "total": {
                                                            "type": "number"
                                                          }
                                                        }
                                                      },
                                                      "storage": {
                                                        "type": "object",
                                                        "properties": {
                                                          "total": {
                                                            "type": "number"
                                                          },
                                                          "block": {
                                                            "type": "object",
                                                            "properties": {
                                                              "total": {
                                                                "type": "number"
                                                              },
                                                              "ebsPv": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "total": {
                                                                    "type": "number"
                                                                  }
                                                                }
                                                              },
                                                              "nonPv": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "total": {
                                                                    "type": "number"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "file": {
                                                            "type": "object",
                                                            "properties": {
                                                              "total": {
                                                                "type": "number"
                                                              },
                                                              "efsPv": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "total": {
                                                                    "type": "number"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "services": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "name": {
                                                          "type": "string",
                                                          "example": "k8s-events"
                                                        },
                                                        "total": {
                                                          "type": "number"
                                                        },
                                                        "compute": {
                                                          "type": "object",
                                                          "properties": {
                                                            "total": {
                                                              "type": "number"
                                                            }
                                                          }
                                                        },
                                                        "storage": {
                                                          "type": "object",
                                                          "properties": {
                                                            "total": {
                                                              "type": "number"
                                                            },
                                                            "block": {
                                                              "type": "object",
                                                              "properties": {
                                                                "total": {
                                                                  "type": "number"
                                                                },
                                                                "ebsPv": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "total": {
                                                                      "type": "number"
                                                                    }
                                                                  }
                                                                },
                                                                "nonPv": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "total": {
                                                                      "type": "number"
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            },
                                                            "file": {
                                                              "type": "object",
                                                              "properties": {
                                                                "total": {
                                                                  "type": "number"
                                                                },
                                                                "efsPv": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "total": {
                                                                      "type": "number"
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "example": [
                                          {
                                            "startTime": "2023-02-01T12:00:00.745Z",
                                            "endTime": "2023-02-01T01:00:00.745Z",
                                            "summary": {
                                              "total": 10000,
                                              "compute": {
                                                "total": 6000
                                              },
                                              "storage": {
                                                "total": 4000,
                                                "block": {
                                                  "total": 3000,
                                                  "ebsPv": {
                                                    "total": 2000
                                                  },
                                                  "nonPv": {
                                                    "total": 1000
                                                  }
                                                },
                                                "file": {
                                                  "total": 1000,
                                                  "efsPv": {
                                                    "total": 1000
                                                  }
                                                }
                                              }
                                            },
                                            "groupedBy": "env",
                                            "aggregations": {
                                              "dev": {
                                                "summary": {
                                                  "total": 5000,
                                                  "compute": {
                                                    "total": 3000
                                                  },
                                                  "storage": {
                                                    "total": 2000,
                                                    "block": {
                                                      "total": 1500,
                                                      "ebsPv": {
                                                        "total": 1000
                                                      },
                                                      "nonPv": {
                                                        "total": 500
                                                      }
                                                    },
                                                    "file": {
                                                      "total": 500,
                                                      "efsPv": {
                                                        "total": 500
                                                      }
                                                    }
                                                  }
                                                },
                                                "services": [
                                                  {
                                                    "name": "service-1",
                                                    "total": 5000,
                                                    "compute": {
                                                      "total": 3000
                                                    },
                                                    "storage": {
                                                      "total": 2000,
                                                      "block": {
                                                        "total": 1500,
                                                        "ebsPv": {
                                                          "total": 1000
                                                        },
                                                        "nonPv": {
                                                          "total": 500
                                                        }
                                                      },
                                                      "file": {
                                                        "total": 500,
                                                        "efsPv": {
                                                          "total": 500
                                                        }
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              "prod": {
                                                "summary": {
                                                  "total": 5000,
                                                  "compute": {
                                                    "total": 3000
                                                  },
                                                  "storage": {
                                                    "total": 2000,
                                                    "block": {
                                                      "total": 1500,
                                                      "ebsPv": {
                                                        "total": 1000
                                                      },
                                                      "nonPv": {
                                                        "total": 500
                                                      }
                                                    },
                                                    "file": {
                                                      "total": 500,
                                                      "efsPv": {
                                                        "total": 500
                                                      }
                                                    }
                                                  }
                                                },
                                                "services": [
                                                  {
                                                    "name": "service-2",
                                                    "total": 5000,
                                                    "compute": {
                                                      "total": 3000
                                                    },
                                                    "storage": {
                                                      "total": 2000,
                                                      "block": {
                                                        "total": 1500,
                                                        "ebsPv": {
                                                          "total": 1000
                                                        },
                                                        "nonPv": {
                                                          "total": 500
                                                        }
                                                      },
                                                      "file": {
                                                        "total": 500,
                                                        "efsPv": {
                                                          "total": 500
                                                        }
                                                      }
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          },
                                          {
                                            "startTime": "2023-02-01T01:00:00.745Z",
                                            "endTime": "2023-02-01T02:00:00.745Z",
                                            "summary": {
                                              "total": 10000,
                                              "compute": {
                                                "total": 6000
                                              },
                                              "storage": {
                                                "total": 4000,
                                                "block": {
                                                  "total": 3000,
                                                  "ebsPv": {
                                                    "total": 2000
                                                  },
                                                  "nonPv": {
                                                    "total": 1000
                                                  }
                                                },
                                                "file": {
                                                  "total": 1000,
                                                  "efsPv": {
                                                    "total": 1000
                                                  }
                                                }
                                              }
                                            },
                                            "groupedBy": "env",
                                            "aggregations": {
                                              "dev": {
                                                "summary": {
                                                  "total": 5000,
                                                  "compute": {
                                                    "total": 3000
                                                  },
                                                  "storage": {
                                                    "total": 2000,
                                                    "block": {
                                                      "total": 1500,
                                                      "ebsPv": {
                                                        "total": 1000
                                                      },
                                                      "nonPv": {
                                                        "total": 500
                                                      }
                                                    },
                                                    "file": {
                                                      "total": 500,
                                                      "efsPv": {
                                                        "total": 500
                                                      }
                                                    }
                                                  }
                                                },
                                                "services": [
                                                  {
                                                    "name": "service-1",
                                                    "total": 5000,
                                                    "compute": {
                                                      "total": 3000
                                                    },
                                                    "storage": {
                                                      "total": 2000,
                                                      "block": {
                                                        "total": 1500,
                                                        "ebsPv": {
                                                          "total": 1000
                                                        },
                                                        "nonPv": {
                                                          "total": 500
                                                        }
                                                      },
                                                      "file": {
                                                        "total": 500,
                                                        "efsPv": {
                                                          "total": 500
                                                        }
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              "prod": {
                                                "summary": {
                                                  "total": 5000,
                                                  "compute": {
                                                    "total": 3000
                                                  },
                                                  "storage": {
                                                    "total": 2000,
                                                    "block": {
                                                      "total": 1500,
                                                      "ebsPv": {
                                                        "total": 1000
                                                      },
                                                      "nonPv": {
                                                        "total": 500
                                                      }
                                                    },
                                                    "file": {
                                                      "total": 500,
                                                      "efsPv": {
                                                        "total": 500
                                                      }
                                                    }
                                                  }
                                                },
                                                "services": [
                                                  {
                                                    "name": "service-2",
                                                    "total": 5000,
                                                    "compute": {
                                                      "total": 3000
                                                    },
                                                    "storage": {
                                                      "total": 2000,
                                                      "block": {
                                                        "total": 1500,
                                                        "ebsPv": {
                                                          "total": 1000
                                                        },
                                                        "nonPv": {
                                                          "total": 500
                                                        }
                                                      },
                                                      "file": {
                                                        "total": 500,
                                                        "efsPv": {
                                                          "total": 500
                                                        }
                                                      }
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "ocean:ecs:cluster:aggregatedCosts:detailed"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/clusterRoll": {
      "post": {
        "summary": "ECS Initiate Cluster Roll",
        "description": "Initiate a cluster roll for an Elastigroup with ECS cluster\n",
        "operationId": "elastigroupAwsEcsInitiateClusterRoll",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "roll"
                    ],
                    "properties": {
                      "roll": {
                        "type": "object",
                        "required": [
                          "batchSizePercentage"
                        ],
                        "properties": {
                          "batchSizePercentage": {
                            "type": "integer",
                            "example": 20,
                            "description": "Size of patch for roll as a percent\n"
                          },
                          "comment": {
                            "type": "string",
                            "example": "This is why I deployed my cluster.",
                            "description": "Add a comment description for the roll. comment should be limit to 256 chars.\n"
                          },
                          "batchMinHealthyPercentage": {
                            "type": "integer",
                            "default": 50,
                            "example": 100,
                            "description": "Indicates the threshold of minimum healthy instances in single batch. If the amount of healthy instances in single batch is under the threshold, the cluster roll will fail. If exists, the parameter value will be in range of 1-100. In case of null as value, the default value in the backend will be 50%. Value of param should represent the number in percentage (%) of the batch.\n"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D~1clusterRoll/put/responses/200"
          },
          "400": {
            "description": "Bad Request - Deployment already in progress",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "integer",
                                  "example": 400,
                                  "description": "HTTP status code assigned to this response\n"
                                },
                                "message": {
                                  "type": "string",
                                  "example": "Bad Request",
                                  "description": "HTTP status message for the respective status code\n"
                                }
                              }
                            },
                            "errors": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string",
                                    "example": "DEPLOYMENT_ALREADY_IN_PROGRESS"
                                  },
                                  "message": {
                                    "type": "string",
                                    "example": "A group roll is currently running. Cannot start cluster roll until the group roll completes."
                                  }
                                }
                              }
                            },
                            "count": {
                              "type": "integer",
                              "example": 1,
                              "description": "Size of the data object array\n"
                            },
                            "kind": {
                              "type": "string",
                              "description": "The data type of each item in the response\n"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "ECS Update Cluster Roll Status",
        "description": "Update a running ECS cluster roll status\n",
        "operationId": "elastigroupAwsEcsUpdateClusterRoll",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "roll"
                    ],
                    "properties": {
                      "roll": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string",
                            "example": "STOPPED",
                            "description": "Valid values: \"STOPPED\"\n"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "scr-5aaf854e"
                                  },
                                  "scope": {
                                    "type": "string",
                                    "enum": [
                                      "Cluster",
                                      "Vngs",
                                      "Vng",
                                      "Instances",
                                      "Instance"
                                    ],
                                    "example": "Cluster"
                                  },
                                  "status": {
                                    "type": "string",
                                    "example": "IN_PROGRESS",
                                    "enum": [
                                      "IN_PROGRESS",
                                      "COMPLETED",
                                      "FAILED",
                                      "STOPPED"
                                    ]
                                  },
                                  "currentBatch": {
                                    "type": "integer",
                                    "example": 1
                                  },
                                  "numOfBatches": {
                                    "type": "integer",
                                    "example": 5
                                  },
                                  "comment": {
                                    "type": "string",
                                    "example": "This is why I deployed my cluster."
                                  },
                                  "batchMinHealthyPercentage": {
                                    "type": "integer",
                                    "example": 100
                                  },
                                  "progress": {
                                    "type": "object",
                                    "properties": {
                                      "unit": {
                                        "type": "string",
                                        "example": "percentage"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "example": 0
                                      },
                                      "detailedStatus": {
                                        "type": "object",
                                        "properties": {
                                          "oldInstances": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "instanceId": {
                                                  "type": "string"
                                                },
                                                "status": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "example": [
                                              {
                                                "instanceId": "i-003a0281a24c01a20",
                                                "status": "REPLACED"
                                              },
                                              {
                                                "instanceId": "i-003a0281a24c01a21",
                                                "status": "TO_BE_REPLACED"
                                              },
                                              {
                                                "instanceId": "i-003a0281a24c01a22",
                                                "status": "COULD_NOT_BE_REPLACED"
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "groupId": {
                                    "type": "string",
                                    "example": "sig-43a8a5ee"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "example": "2019-03-24T15:46:09.000Z"
                                  },
                                  "updatedAt": {
                                    "type": "string",
                                    "example": "2019-03-24T15:46:09.000Z"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "ECS Get All Cluster Rolls Per Elastigroup",
        "description": "Get status for every ECS cluster rolls in given Elastigroup\n",
        "operationId": "elastigroupAwsEcsGetAllClusterRollsPerElastigroup",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D~1clusterRoll/put/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/clusterRoll/{rollId}": {
      "get": {
        "summary": "ECS Get Cluster Roll Status by Roll ID",
        "description": "Get status for specific ECS cluster rolls in given Elastigroup\n",
        "operationId": "elastigroupAwsEcsGetClusterRollStatusByRollID",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          },
          {
            "in": "path",
            "name": "rollId",
            "required": true,
            "description": "The cluster roll ID you want to query\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D~1clusterRoll/put/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/beanstalk/maintenance/start": {
      "put": {
        "summary": "Start Beanstalk Maintenance",
        "description": "Put your Beanstslk Elastigroup into maintenance mode, before you start updating the beanstalk configuration.\n",
        "operationId": "elastigroupAwsStartBeanstalkMaintenance",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "groupId",
            "example": "sig-12345",
            "description": "The Spot Elastigroup ID \n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/beanstalk/maintenance/finish": {
      "put": {
        "summary": "Finish Beanstalk Maintenance",
        "description": "Finish maintenance mode, and trigger a blue-green deployment.\n",
        "operationId": "elastigroupAwsFinishBeanstalkMaintenance",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/beanstalk/maintenance/status": {
      "get": {
        "summary": "Get Beanstalk Maintenance Status",
        "description": "Get the group maintenance status.<ul>\n<li>If the status is ACTIVE: putting the group in maintenance mode is allowed.</li> <li>If the status is AWAIT_USER_UPDATE: the group is pending for manually finishing maintenance mode.</li> <li>If the status is CANCELING_MAINTENANCE_MODE: the group is in the process of canceling maintenance mode.</li> </ul>\n",
        "operationId": "elastigroupAwsBeanstalkGetMaintenance",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "type": "string",
                                    "example": "AWAIT_USER_UPDATE"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:ec2:beanstalk:status"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/beanstalk/import": {
      "get": {
        "summary": "Get Beanstalk Configuration",
        "description": "<ul> <li>Get your Beanstalk environment configuration from AWS. This call is typically used as the initial step in importing your existing Beanstalk configuration to an Elastigroup.</li> <li> Note: To optimize the availability of your Beanstalk workload on Elastigroup, instance types similar to those running in your existing configuration are automatically added to the response under instanceTypes. Should these instance types not meet your requirements you may remove them.</li> <ul>\n",
        "operationId": "elastigroupAwsGetBeanstalkConfiguration",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "environmentId",
            "example": "e-12345",
            "required": true,
            "description": "The Beanstalk name\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "region",
            "example": "us-east-1",
            "required": true,
            "description": "The AWS region for the Beanstalk\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "group"
                                ],
                                "properties": {
                                  "group": {
                                    "type": "object",
                                    "title": "AWS Elastigroup",
                                    "required": [
                                      "name"
                                    ],
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "First Elastigroup",
                                        "description": "The name of the Elastigroup\n"
                                      },
                                      "description": {
                                        "type": "string",
                                        "example": "This is the first Spot Elastigroup of many",
                                        "description": "The detailed purpose for this Elastigroup\n"
                                      },
                                      "capacity": {
                                        "type": "object",
                                        "title": "Capacity Units",
                                        "required": [
                                          "target"
                                        ],
                                        "properties": {
                                          "minimum": {
                                            "type": "integer",
                                            "example": 1,
                                            "description": "The minimum number of units Elastigroup will scale down to        \n"
                                          },
                                          "maximum": {
                                            "type": "integer",
                                            "example": 10,
                                            "description": "The maximum number of units Elastigroup will scale up to\n"
                                          },
                                          "target": {
                                            "type": "integer",
                                            "example": 5,
                                            "description": "Number of units Elastigroup will start with\n"
                                          }
                                        }
                                      },
                                      "strategy": {
                                        "type": "object",
                                        "properties": {
                                          "risk": {
                                            "type": "integer",
                                            "example": 100
                                          }
                                        }
                                      },
                                      "compute": {
                                        "type": "object",
                                        "properties": {
                                          "instanceTypes": {
                                            "type": "object",
                                            "properties": {
                                              "ondemand": {
                                                "type": "string",
                                                "example": "t2.micro"
                                              },
                                              "spot": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "availabilityZones": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "example": "us-west-2a"
                                                }
                                              }
                                            }
                                          },
                                          "launchSpecification": {
                                            "type": "object",
                                            "properties": {
                                              "loadBalancersConfig": {
                                                "type": "object",
                                                "properties": {
                                                  "loadBalancers": {
                                                    "type": "array",
                                                    "items": {
                                                      "anyOf": [
                                                        {
                                                          "type": "object",
                                                          "title": "MULTAI_TARGET_SET",
                                                          "properties": {
                                                            "name": {
                                                              "type": "string",
                                                              "example": "awseb-AWSEB-12345"
                                                            },
                                                            "arn": {
                                                              "type": "string",
                                                              "example": "arn:aws:elasticloadbalancing:us-west-2:842422002533:targetgroup/awseb-AWSEB-12345/245f20215d9ba7fc"
                                                            },
                                                            "type": {
                                                              "type": "string",
                                                              "example": "TARGET_GROUP"
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "object",
                                                          "title": "APPLICATION_GATEWAY",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string",
                                                              "example": "APPLICATION_GATEWAY",
                                                              "enum": [
                                                                "APPLICATION_GATEWAY"
                                                              ]
                                                            },
                                                            "resourceGroupName": {
                                                              "type": "string",
                                                              "example": "azureResourceGroup"
                                                            },
                                                            "applicationGatewayName": {
                                                              "type": "string",
                                                              "example": "appGateway"
                                                            },
                                                            "backendPoolName": {
                                                              "type": "string",
                                                              "example": "backendpool490822"
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                }
                                              },
                                              "healthCheckType": {
                                                "type": "string",
                                                "example": "EC2"
                                              },
                                              "securityGroupIds": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string",
                                                  "example": "sg-12345"
                                                }
                                              },
                                              "monitoring": {
                                                "type": "boolean",
                                                "example": true
                                              },
                                              "imageId": {
                                                "type": "string",
                                                "example": "ami-12345"
                                              },
                                              "iamRole": {
                                                "type": "object",
                                                "properties": {
                                                  "name": {
                                                    "type": "string",
                                                    "example": "aws-elasticbeanstalk-ec2-role"
                                                  }
                                                }
                                              },
                                              "userData": {
                                                "type": "string",
                                                "example": "Q29udGVudC1UeXBlOiBtdWx0aXBhcnQvbWl4ZWQ7IGJvdW5kYXJ5PSI9PT09PT09PT09PT09PT01MTg5MDY1Mzc3MjIyODk4NDA3PT0iCk1JTUUtVmVyc2lvbjogMS4wCgotLT09PT09PT09PT09PT09PTUxODkwNjUzNzcyMjI4OTg0MDc9PQpDb250ZW50LVR5cGU6IHRleHQvY2xvdWQtY29uZmlnOyBjaGFyc2V0PSJ1cy1hc2NpaSIKTUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogN2JpdApDb250ZW50LURpc3Bvc2l0aW9uOiBhdHRhY2htZW50OyBmaWxlbmFtZT0iY2xvdWQtY29uZmlnLnR4dCIKCiNjbG91ZC1jb25maWcKcmVwb191cGdyYWRlOiBub25lCnJlcG9fcmVsZWFzZXZlcjogMjAxNy4wOQpjbG91ZF9maW5hbF9tb2R1bGVzOgogLSBbc2NyaXB0cy11c2VyLCBhbHdheXNdCgotLT09PT09PT09PT09PT09PTUxODkwNjUzNzcyMjI4OTg0MDc9PQpDb250ZW50LVR5cGU6IHRleHQveC1zaGVsbHNjcmlwdDsgY2hhcnNldD0idXMtYXNjaWkiCk1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IDdiaXQKQ29udGVudC1EaXNwb3NpdGlvbjogYXR0YWNobWVudDsgZmlsZW5hbWU9InVzZXItZGF0YS50eHQiCgojIS9iaW4vYmFzaApleGVjID4gPih0ZWUgLWEgL3Zhci9sb2cvZWItY2ZuLWluaXQubG9nfGxvZ2dlciAtdCBbZWItY2ZuLWluaXRdIC1zIDI"
                                              },
                                              "tags": {
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "tagKey": {
                                                      "type": "string",
                                                      "example": "env"
                                                    },
                                                    "tagValue": {
                                                      "type": "string",
                                                      "example": "staging"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "scaling": {
                                        "type": "object",
                                        "properties": {
                                          "up": {
                                            "type": "array",
                                            "items": {
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "policyName": {
                                                      "type": "string",
                                                      "example": "cpuScale"
                                                    },
                                                    "metricName": {
                                                      "type": "string",
                                                      "example": "NetworkOut"
                                                    },
                                                    "statistic": {
                                                      "type": "string",
                                                      "example": "average",
                                                      "enum": [
                                                        "average",
                                                        "sampleCount",
                                                        "sum",
                                                        "minimum",
                                                        "maximum"
                                                      ]
                                                    },
                                                    "unit": {
                                                      "type": "string",
                                                      "example": "bytes"
                                                    },
                                                    "threshold": {
                                                      "type": "integer",
                                                      "example": 6000000
                                                    },
                                                    "namespace": {
                                                      "type": "string",
                                                      "example": "AWS/EC2"
                                                    },
                                                    "source": {
                                                      "type": "string",
                                                      "example": "cloudWatch"
                                                    },
                                                    "period": {
                                                      "type": "integer",
                                                      "example": 300
                                                    },
                                                    "evaluationPeriods": {
                                                      "type": "integer",
                                                      "example": 1
                                                    },
                                                    "cooldown": {
                                                      "type": "integer",
                                                      "example": 360
                                                    },
                                                    "dimenstions": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "example": "resourceName"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "action": {
                                                      "type": "object",
                                                      "properties": {
                                                        "type": {
                                                          "type": "string",
                                                          "example": "adjustment"
                                                        },
                                                        "adjustment": {
                                                          "type": "string",
                                                          "example": 1
                                                        }
                                                      }
                                                    },
                                                    "operator": {
                                                      "type": "string",
                                                      "example": "gte",
                                                      "enum": [
                                                        "gt",
                                                        "gte",
                                                        "lt",
                                                        "lte"
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "policyName": {
                                                      "example": "awseb-e-12345-stack-AWSEBCloudwatchAlarmHigh-56QPITB3WUFM"
                                                    },
                                                    "threshold": {
                                                      "example": 6000000
                                                    },
                                                    "operator": {
                                                      "example": "gte"
                                                    },
                                                    "action": {
                                                      "type": "object",
                                                      "properties": {
                                                        "type": {
                                                          "type": "string",
                                                          "example": "adjustment",
                                                          "enum": [
                                                            "adjustment",
                                                            "setMinTarget",
                                                            "updateCapacity",
                                                            "percentageAdjustment"
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          },
                                          "down": {
                                            "type": "array",
                                            "items": {
                                              "allOf": [
                                                {
                                                  "$ref": "#/paths/~1aws~1ec2~1group~1beanstalk~1import/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/group/properties/scaling/properties/up/items/allOf/0"
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "policyName": {
                                                      "example": "awseb-e-12345-stack-AWSEBCloudwatchAlarmLow-UNGVBRKT0EHP"
                                                    },
                                                    "threshold": {
                                                      "example": 2000000
                                                    },
                                                    "operator": {
                                                      "example": "lte"
                                                    },
                                                    "action": {
                                                      "type": "object",
                                                      "properties": {
                                                        "type": {
                                                          "type": "string",
                                                          "example": "adjustment",
                                                          "enum": [
                                                            "adjustment",
                                                            "setMaxTarget",
                                                            "updateCapacity",
                                                            "percentageAdjustment"
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "thirdPartiesIntegration": {
                                        "type": "object",
                                        "properties": {
                                          "elasticBeanstalk": {
                                            "type": "object",
                                            "properties": {
                                              "environmentId": {
                                                "type": "string",
                                                "example": "e-12345"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:ec2:group"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/beanstalk/reimport": {
      "put": {
        "summary": "Beanstalk Reimport",
        "description": "Re-import the beanstalk configuration\n",
        "operationId": "elastigroupAwsBeanstalkReImport",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "group": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "example": "sig-123456"
                                      },
                                      "compute": {
                                        "type": "object",
                                        "properties": {
                                          "launchSpecification": {
                                            "type": "object",
                                            "properties": {
                                              "securityGroupIds": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string",
                                                  "example": "sg-b75343cf"
                                                }
                                              },
                                              "monitoring": {
                                                "type": "boolean",
                                                "example": false
                                              },
                                              "imageId": {
                                                "type": "string",
                                                "example": "ami-3c873e5c"
                                              },
                                              "iamRole": {
                                                "type": "object",
                                                "properties": {
                                                  "name": {
                                                    "type": "string",
                                                    "example": "aws-elasticbeanstalk-ec2-role"
                                                  }
                                                }
                                              },
                                              "userData": {
                                                "type": "string",
                                                "example": "Q29udGVudC1UeXBlOiBtdWx0aXBhcnQvbWl4ZWQ7IGJvdW5kYXJ5PSI9PT09PT09PT09PT09PT01MTg5MDY1Mzc3MjIyODk4NDA3PT0iCk1JTUUtVmVyc2lvbjogMS4wCgotLT09PT09PT09PT09PT09PTUxODkwNjUzNzcyMjI4OTg0MDc9PQpDb250ZW50LVR5cGU6IHRleHQvY2xvdWQtY29uZmlnOyBjaGFyc2V0PSJ1cy1hc2NpaSIKTUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogN2JpdApDb250ZW50LURpc3Bvc2l0aW9uOiBhdHRhY2htZW50OyBmaWxlbmFtZT0iY2xvdWQtY29uZmlnLnR4dCIKCiNjbG91ZC1jb25maWcKcmVwb191cGdyYWRlOiBub25lCnJlcG9fcmVsZWFzZXZlcjogMjAxNy4wOQpjbG91ZF9maW5hbF9tb2R1bGVzOgogLSBbc2NyaXB0cy11c2VyLCBhbHdheXNdCgotLT09PT09PT09PT09PT09PTUxODkwNjUzNzcyMjI4OTg0MDc9PQpDb250ZW50LVR5cGU6IHRleHQveC1zaGVsbHNjcmlwdDsgY2hhcnNldD0idXMtYXNjaWkiCk1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IDdiaXQKQ29udGVudC1EaXNwb3NpdGlvbjogYXR0YWNobWVudDsgZmlsZW5hbWU9InVzZXItZGF0YS50eHQiCgojIS9iaW4vYmFzaApleGVjID4gPih0ZWUgLWEgL3Zhci9sb2cvZWItY2ZuLWluaXQubG9nfGxvZ2dlciAtdCBbZWItY2ZuLWluaXRdIC1zIDI"
                                              },
                                              "blockDeviceMappings": {
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "deviceName": {
                                                      "type": "string",
                                                      "example": "/dev/xvdcz"
                                                    },
                                                    "ebs": {
                                                      "type": "object",
                                                      "properties": {
                                                        "deleteOnTermination": {
                                                          "type": "boolean",
                                                          "example": true
                                                        },
                                                        "volumeSize": {
                                                          "type": "integer",
                                                          "example": 12
                                                        },
                                                        "volumeType": {
                                                          "type": "string",
                                                          "example": "gp2"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:ec2:group"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/codeDeploy/blueGreenDeployment": {
      "post": {
        "summary": "Create CodeDeploy B/G Deployment",
        "description": "Trigger a Blue-Green deployment to your Elastigroup, this will initiate a deployment that will replace the existing instances(blue) with new ones(green).\n",
        "operationId": "elastigroupAwsCreateCodeDeployB_GDeployment",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D~1codeDeploy~1blueGreenDeployment/get/requestBody/content/application~1json/schema/allOf/0"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D~1codeDeploy~1blueGreenDeployment/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get CodeDeploy B/G Deployment",
        "description": "Get CodeDeploy Elastigroup deployment status for more information see: CodeDeploy B/G Deployment\n",
        "operationId": "elastigroupAwsGetCodeDeployB_GDeployment",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "deployment": {
                        "type": "object",
                        "properties": {
                          "timeout": {
                            "type": "integer",
                            "example": 20
                          },
                          "tags": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "tagKey": {
                                  "type": "string",
                                  "example": "ver"
                                },
                                "tagValue": {
                                  "type": "string",
                                  "example": "pink"
                                }
                              }
                            }
                          },
                          "deploymentGroups": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "applicationName": {
                                  "type": "string",
                                  "example": "appTest"
                                },
                                "deploymentGroupName": {
                                  "type": "string",
                                  "example": "deploymentGroupName"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "cdbg-3ccf1234"
                                  },
                                  "groupId": {
                                    "type": "string",
                                    "example": "sig-87231234"
                                  },
                                  "state": {
                                    "type": "string",
                                    "example": "STARTING"
                                  },
                                  "config": {
                                    "type": "object",
                                    "properties": {
                                      "timeout": {
                                        "type": "integer",
                                        "example": 20
                                      },
                                      "tags": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "tagKey": {
                                              "type": "string",
                                              "example": "ver"
                                            },
                                            "tagValue": {
                                              "type": "string",
                                              "example": "pink"
                                            }
                                          }
                                        }
                                      },
                                      "deploymentGroups": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "applicationName": {
                                              "type": "string",
                                              "example": "appTest"
                                            },
                                            "deploymentGroupName": {
                                              "type": "string",
                                              "example": "deploymentGroupName"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:ec2:group:codeDeploy:blueGreenDeployment"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/itf/migration": {
      "get": {
        "summary": "List Elastigroup ITF Listener Rule Migrations",
        "description": "Get all ITF listener rule migrations of a specific Elastigroup.\n",
        "operationId": "elastigroupAwsItfListenerRuleMigrationsGet",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/aws/ec2/group/sig-12345/itf/migration?spotinstAccountId=act-123456"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "title": "ITF Listener Rule Migration",
                                "type": "object",
                                "description": "Contains the details of an ITF listener rule migration process.\n",
                                "properties": {
                                  "createdAt": {
                                    "type": "string",
                                    "example": "2020-04-10T21:41:31.000Z"
                                  },
                                  "updatedAt": {
                                    "type": "string",
                                    "example": "2020-05-12T22:37:18.000Z"
                                  },
                                  "id": {
                                    "type": "string",
                                    "example": "ilrm-12345678"
                                  },
                                  "groupId": {
                                    "type": "string",
                                    "title": "Group Id",
                                    "example": "sig-12345"
                                  },
                                  "ruleArn": {
                                    "type": "string",
                                    "example": "arn:aws:elasticloadbalancing:us-west-2:123456789012:listener-rule/app/0123456789012345/1234567890123456/234567890123456"
                                  },
                                  "status": {
                                    "type": "string",
                                    "enum": [
                                      "Starting",
                                      "In progress",
                                      "Finished",
                                      "Failed"
                                    ],
                                    "example": "Starting"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:ec2:group:itf:migration"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/itf/migration/{migrationId}": {
      "put": {
        "summary": "Update ITF Listener Rule Migration",
        "description": "Update an ITF listener rule migration object of a specific Elastigroup.\n",
        "operationId": "elastigroupAwsItfListenerRuleMigrationUpdate",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "path",
            "name": "migrationId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the ITF listener rule migration to be updated.\n",
            "example": "ilrm-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "title": "ITF Listener Rule Migration Update Request",
                    "type": "object",
                    "description": "A request to update the status of an ITF listener rule migration process. Only 'USER_RETRY' is supported, allowing to retry a previously failed migration process (having a \"Failed\" status).\n",
                    "properties": {
                      "status": {
                        "type": "string",
                        "description": "The status to be updated. Valid value is \"USER_RETRY\".",
                        "enum": [
                          "USER_RETRY"
                        ],
                        "example": "USER_RETRY"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/aws/ec2/group/sig-12345/itf/migration/ilrm-12345678?spotinstAccountId=act-123456"
                            },
                            "method": {
                              "example": "UPDATE"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D~1itf~1migration/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:ec2:group:itf:migration"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/cluster": {
      "summary": "Ocean for AWS",
      "post": {
        "summary": "Create Cluster",
        "description": "**Prerequisites**\n\nThe Ocean Controller is used to monitor the cluster resources and report back to Ocean. The Ocean Controller is required for Ocean Cloud.<br />\n\nTo install the Ocean Controller, complete and run the following script on a machine with the kubectl command line tool installed and configured:\n\n```\n#!/usr/bin/env bash\ncurl -fsSL http://spotinst-public.s3.amazonaws.com/integrations/kubernetes/cluster-controller/scripts/init.sh | \\\nSPOTINST_TOKEN=<ENTER YOUR TOKEN HERE> \\\nSPOTINST_ACCOUNT=<ENTER YOUR SPOTINST ACCOUNT ID HERE> \\\nSPOTINST_CLUSTER_IDENTIFIER=<ENTER YOUR CLUSTER IDENTIFIER HERE> \\\nbash\n```\n",
        "operationId": "OceanAWSClusterCreate",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "cluster"
                    ],
                    "properties": {
                      "cluster": {
                        "type": "object",
                        "description": "The object specifying the configuration of the Ocean cluster.\n",
                        "title": "AWS Cluster",
                        "required": [
                          "name",
                          "region",
                          "controllerClusterId",
                          "compute"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The Ocean cluster identifier.\n",
                            "example": "o-abcd1234"
                          },
                          "name": {
                            "type": "string",
                            "example": "oceanName",
                            "description": "Add a name for the Ocean cluster.\n"
                          },
                          "controllerClusterId": {
                            "type": "string",
                            "example": "ocean.k8s",
                            "description": "Enter the reporting identifier for the Ocean Controller.\n"
                          },
                          "region": {
                            "type": "string",
                            "example": "us-east-1",
                            "description": "Select the region for the Ocean cluster to run in.\n"
                          },
                          "autoScaler": {
                            "type": "object",
                            "title": "auto-scaler",
                            "description": "The automatic scaling mechanism used in Ocean for Kubernetes.",
                            "properties": {
                              "isEnabled": {
                                "type": "boolean",
                                "description": "Enable the Ocean Kubernetes autoscaler.",
                                "default": true,
                                "example": true
                              },
                              "cooldown": {
                                "type": "integer",
                                "description": "A period of time (in seconds) that Ocean waits from the end of a scaling action until starting another scaling action.",
                                "default": null,
                                "example": 180
                              },
                              "resourceLimits": {
                                "type": "object",
                                "description": "Option to set upper and lower bounds on the resource usage of the cluster.",
                                "properties": {
                                  "maxMemoryGib": {
                                    "type": "integer",
                                    "description": "The maximum memory (in GiB) that can be allocated to the cluster.",
                                    "example": 1500
                                  },
                                  "maxVCpu": {
                                    "type": "integer",
                                    "description": "The maximum CPU (in vCPU units) that can be allocated to the cluster.",
                                    "example": 750
                                  }
                                }
                              },
                              "down": {
                                "type": "object",
                                "description": "Autoscaling scale down operations.",
                                "properties": {
                                  "maxScaleDownPercentage": {
                                    "type": "integer",
                                    "description": "Represents the maximum percent of your instances to scale down in a single scale-down action. Number between 1-100.",
                                    "example": 60
                                  },
                                  "aggressiveScaleDown": {
                                    "type": "object",
                                    "description": "Enable and customize the Aggressive Scale Down feature. This allows nodes to be promptly scaled down by the Ocean Autoscaler as soon as they become eligible, without any waiting period.",
                                    "properties": {
                                      "isEnabled": {
                                        "type": "boolean",
                                        "description": "When set to 'true', the Aggressive Scale Down feature is enabled",
                                        "default": false
                                      }
                                    }
                                  }
                                }
                              },
                              "headroom": {
                                "type": "object",
                                "description": "Spare resource capacity management enabling fast assignment of pods without waiting for new resources to launch.",
                                "properties": {
                                  "cpuPerUnit": {
                                    "type": "integer",
                                    "description": "Option to configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.",
                                    "example": 2000
                                  },
                                  "memoryPerUnit": {
                                    "type": "integer",
                                    "description": "Option to configure the amount of memory (MiB) to allocate the headroom.",
                                    "example": 0
                                  },
                                  "gpuPerUnit": {
                                    "type": "integer",
                                    "description": "Amount of GPU to allocate for headroom.",
                                    "example": 0
                                  },
                                  "numOfUnits": {
                                    "type": "integer",
                                    "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.",
                                    "example": 4
                                  }
                                }
                              },
                              "isAutoConfig": {
                                "type": "boolean",
                                "description": "Use automatic headroom. When set to true, the values under cluster.autoScaler.headroom are not effective, as Ocean configures and optimizes headroom automatically.",
                                "default": true,
                                "example": false
                              },
                              "autoHeadroomPercentage": {
                                "type": "integer",
                                "description": "Dynamic (automatic) buffer of spare capacity, i.e., vCPU, memory, and GPU resources. Expressed as a percent of the overall cluster capacity with valid values from 0-200. Optional. Relevant when isAutoConfig=true.",
                                "example": null
                              },
                              "enableAutomaticAndManualHeadroom": {
                                "type": "boolean",
                                "description": "When set to true, both automatic and per-VNG manual headroom to be saved concurrently and independently in the cluster. prerequisite: isAutoConfig must be true\n",
                                "example": true
                              },
                              "extendedResourceDefinitions": {
                                "type": "array",
                                "description": "List of Ocean extended resource definitions to use in this cluster.\n",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "erd-123",
                                  "erd-456"
                                ]
                              }
                            }
                          },
                          "capacity": {
                            "type": "object",
                            "title": "Capacity Units",
                            "description": "The overall capability of the Ocean cluster expressed as number of instances and specified with a minimum, a maximum, and a target number of running instances.",
                            "properties": {
                              "minimum": {
                                "type": "integer",
                                "example": 0,
                                "description": "The lower limit of instances that the cluster can scale down to.\n"
                              },
                              "maximum": {
                                "type": "integer",
                                "default": 1000,
                                "example": 1000,
                                "description": "The upper limit of instances that the cluster can scale up to.\n"
                              },
                              "target": {
                                "type": "integer",
                                "example": 1,
                                "description": "Number of instances to launch and maintain in the cluster.\n"
                              }
                            }
                          },
                          "strategy": {
                            "type": "object",
                            "title": "Ocean Cluster Strategy",
                            "description": "An object defining the cluster strategy with regard to waiting periods and utilization of on-demand and reserved instances.\n",
                            "properties": {
                              "utilizeReservedInstances": {
                                "type": "boolean",
                                "default": true,
                                "example": true,
                                "description": "If reserved instances exist, Ocean will utilize them before launching spot instances.\n"
                              },
                              "fallbackToOd": {
                                "type": "boolean",
                                "default": true,
                                "example": true,
                                "description": "If no spot instance markets are available, enable Ocean to launch on-demand instances instead.\n"
                              },
                              "spotPercentage": {
                                "type": "integer",
                                "default": 100,
                                "minimum": 0,
                                "maximum": 100,
                                "description": "The desired percentage of Spot instances out of all running instances.\\\nOnly available when the field is **not** set in any VNG directly (launchSpec.strategy.spotPercentage).\n",
                                "example": 100
                              },
                              "gracePeriod": {
                                "type": "integer",
                                "default": 300,
                                "example": 300,
                                "description": "The amount of time, in seconds, from the time the instance has launched to the time its first health check starts.\n"
                              },
                              "drainingTimeout": {
                                "type": "integer",
                                "example": 60,
                                "description": "The configurable amount of time that Ocean will wait for the draining process to complete before terminating an instance. If you have not defined a draining timeout, the default of 300 seconds will be used.\n"
                              },
                              "utilizeCommitments": {
                                "type": "boolean",
                                "description": "If savings plans commitment has available capacity, Ocean will utilize them alongside RIs (if exist) to maximize cost efficiency.\n",
                                "example": false,
                                "default": false
                              },
                              "clusterOrientation": {
                                "type": "object",
                                "properties": {
                                  "availabilityVsCost": {
                                    "type": "string",
                                    "description": "You can control the approach that Ocean takes while launching nodes by configuring this value.\n",
                                    "enum": [
                                      "costOriented",
                                      "balanced",
                                      "cheapest"
                                    ],
                                    "example": "balanced",
                                    "default": "balanced"
                                  }
                                }
                              },
                              "spreadNodesBy": {
                                "type": "string",
                                "description": "Ocean will spread the nodes across markets by this value.\n",
                                "enum": [
                                  "vcpu",
                                  "count"
                                ],
                                "example": "count",
                                "default": "count"
                              }
                            }
                          },
                          "scheduling": {
                            "type": "object",
                            "description": "An object used to define times for a task such as a shutdown to be activated.\n",
                            "title": "Elastigroup Scheduling",
                            "properties": {
                              "tasks": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "title": "Task Definition",
                                  "required": [
                                    "isEnabled",
                                    "taskType"
                                  ],
                                  "properties": {
                                    "isEnabled": {
                                      "type": "boolean",
                                      "example": true,
                                      "description": "Describes whether the task is enabled. When True, the task runs. When False, it does not run. Required for cluster.scheduling.tasks.\n"
                                    },
                                    "cronExpression": {
                                      "type": "string",
                                      "example": "0 1 * * *",
                                      "description": "A valid cron expression. For example : \" * * * * * \". The cron job runs in UTC time and is in Unix cron format (See the Cron Expression Validator Script). Required field for taskType \"clusterRoll\", optional field for taskType \"amiAutoUpdate\" (if Cron Expression is not provided for amiAutoUpdate task, the task will run once a day).\n"
                                    },
                                    "taskType": {
                                      "type": "string",
                                      "example": "clusterRoll",
                                      "enum": [
                                        "clusterRoll",
                                        "amiAutoUpdate"
                                      ],
                                      "description": "The activity that you are scheduling. Valid values: \"clusterRoll\", \"amiAutoUpdate\". Required for cluster.scheduling.tasks.\n"
                                    },
                                    "parameters": {
                                      "type": "object",
                                      "description": "This field will be compatible to the task type field. \nIf taskType is defined as \"clusterRoll\", use cluster roll object in parameters.\n",
                                      "properties": {
                                        "clusterRoll": {
                                          "type": "object",
                                          "properties": {
                                            "batchSizePercentage": {
                                              "type": "integer",
                                              "minimum": 0,
                                              "maximum": 100,
                                              "example": 20,
                                              "description": "Value as a percent to set the size of a batch in a roll. Valid values are 0-100.\n"
                                            },
                                            "comment": {
                                              "type": "string",
                                              "example": "This is why I deployed my cluster.",
                                              "description": "Add a comment description for the roll. The comment is limited to 256 chars\n"
                                            },
                                            "batchMinHealthyPercentage": {
                                              "type": "integer",
                                              "minimum": 1,
                                              "maximum": 100,
                                              "default": 50,
                                              "example": 100,
                                              "description": "Indicates the threshold of minimum healthy instances in single batch. If the amount of healthy instances in single batch is under the threshold, the cluster roll will fail. If exists, the parameter value will be in range of 1-100. In case of null as value, the default value in the backend will be 50%. Value of param should represent the number in percentage (%) of the batch.\n"
                                            },
                                            "respectPdb": {
                                              "type": "boolean",
                                              "description": "During the roll, if the parameter is set to true we honor PDB during the instance replacement.\n",
                                              "example": true,
                                              "default": false
                                            }
                                          }
                                        },
                                        "amiAutoUpdate": {
                                          "type": "object",
                                          "properties": {
                                            "patch": {
                                              "type": "boolean",
                                              "description": "When set to 'true', the auto-update process will update the VNGs’ images with the latest security patches. either \"patch\" or \"minorVersion\" must be true.\n",
                                              "example": "true",
                                              "default": false
                                            },
                                            "minorVersion": {
                                              "type": "boolean",
                                              "example": "true",
                                              "default": false,
                                              "description": "When set to 'true', the auto-update process will update the VNGs’ AMI with the AMI to match the Kubernetes control plane version. either \"patch\" or \"minorVersion\" must be true.\n"
                                            },
                                            "applyRoll": {
                                              "type": "boolean",
                                              "example": "true",
                                              "default": false,
                                              "description": "This parameter is optional. When the AMI is updated according to the configuration set, a cluster roll can be triggered.\n"
                                            },
                                            "clusterRoll": {
                                              "type": "object",
                                              "properties": {
                                                "batchSizePercentage": {
                                                  "type": "integer",
                                                  "minimum": 0,
                                                  "maximum": 100,
                                                  "example": 20,
                                                  "description": "Value as a percent to set the size of a batch in a roll. Valid values are 0-100.\n"
                                                },
                                                "comment": {
                                                  "type": "string",
                                                  "example": "This is why I deployed my cluster.",
                                                  "description": "Add a comment description for the roll. The comment is limited to 256 chars\n"
                                                },
                                                "batchMinHealthyPercentage": {
                                                  "type": "integer",
                                                  "minimum": 1,
                                                  "maximum": 100,
                                                  "default": 50,
                                                  "example": 100,
                                                  "description": "Indicates the threshold of minimum healthy instances in single batch. If the amount of healthy instances in single batch is under the threshold, the cluster roll will fail. If exists, the parameter value will be in range of 1-100. In case of null as value, the default value in the backend will be 50%. Value of param should represent the number in percentage (%) of the batch.\n"
                                                },
                                                "respectPdb": {
                                                  "type": "boolean",
                                                  "description": "During the roll, if the parameter is set to true we honor PDB during the instance replacement.\n",
                                                  "example": true,
                                                  "default": false
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "shutdownHours": {
                                "type": "object",
                                "description": "An object used to specify times that the nodes in the cluster will be taken down.\n",
                                "title": "Shutdown Hours",
                                "required": [
                                  "timeWindows"
                                ],
                                "properties": {
                                  "timeWindows": {
                                    "type": "array",
                                    "description": "The times that the shutdown hours will apply.\n",
                                    "items": {
                                      "type": "string",
                                      "example": "Sat:08:00-Sun:08:00"
                                    }
                                  },
                                  "isEnabled": {
                                    "type": "boolean",
                                    "example": true,
                                    "description": "Flag to enable or disable the shutdown hours mechanism. When False, the mechanism is deactivated, and the cluster remains in its current state.\n"
                                  }
                                }
                              }
                            }
                          },
                          "security": {
                            "type": "object",
                            "title": "Security",
                            "description": "Object for cluster security features.\n",
                            "properties": {
                              "containerImage": {
                                "type": "object",
                                "properties": {
                                  "approvedImages": {
                                    "type": "array",
                                    "description": "Set a permitted list of repositories for container images.",
                                    "items": {
                                      "type": "string",
                                      "example": [
                                        "*.ecr.*.amazonaws.com/*",
                                        "docker.*"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "compute": {
                            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1import/post/responses/200/content/application~1json/schema/properties/items/properties/compute"
                          },
                          "logging": {
                            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/logging"
                          },
                          "createdAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2021-03-17T08:13:08.000Z",
                            "description": "A timestamp of the cluster creation.\n"
                          },
                          "updatedAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2021-03-17T15:06:13.000Z",
                            "description": "A timestamp of the latest cluster update.\n"
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "cluster": {
                        "type": "object",
                        "required": [
                          "name"
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/k8s/cluster"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:k8s"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Clusters",
        "description": "List the configurations for all Ocean clusters in the specified account.\n",
        "operationId": "OceanAWSClusterList",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/k8s/cluster"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:k8s"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/cluster/{oceanClusterId}": {
      "delete": {
        "summary": "Delete Cluster",
        "description": "Delete an existing Ocean cluster.\n",
        "operationId": "OceanAWSClusterDelete",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean AWS Delete Cluster Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/k8s/cluster/o-abcd1234"
                            },
                            "method": {
                              "example": "DELETE"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get Cluster",
        "description": "Get the configuration of an existing Ocean cluster.\n",
        "operationId": "OceanAWSClusterGet",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "oceanClusterId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "o-abcd1234",
            "description": "Identifier of the Ocean cluster.\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/k8s/cluster/o-abcd1234"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:k8s"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Cluster",
        "description": "All Ocean parameters are updatable, except for region and identifier. This API supports partial updates, so specific fields can be updated separately.\n",
        "operationId": "OceanAWSClusterUpdate",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "autoApplyTags",
            "example": "true",
            "description": "Option to update instance tags on the fly without rolling the cluster.\n",
            "schema": {
              "type": "string",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "cluster"
                    ],
                    "properties": {
                      "cluster": {
                        "type": "object",
                        "description": "The object specifying the configuration of the Ocean cluster.\n",
                        "title": "AWS Cluster",
                        "properties": {
                          "id": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The Ocean cluster identifier.\n",
                            "example": "o-abcd1234"
                          },
                          "name": {
                            "type": "string",
                            "example": "oceanName",
                            "description": "Add a name for the Ocean cluster.\n"
                          },
                          "controllerClusterId": {
                            "type": "string",
                            "example": "ocean.k8s",
                            "description": "Enter the reporting identifier for the Ocean Controller.\n"
                          },
                          "region": {
                            "type": "string",
                            "example": "us-east-1",
                            "description": "Select the region for the Ocean cluster to run in.\n"
                          },
                          "autoScaler": {
                            "type": "object",
                            "title": "auto-scaler",
                            "description": "The automatic scaling mechanism used in Ocean for Kubernetes.",
                            "properties": {
                              "isEnabled": {
                                "type": "boolean",
                                "description": "Enable the Ocean Kubernetes autoscaler.",
                                "default": true,
                                "example": true
                              },
                              "cooldown": {
                                "type": "integer",
                                "description": "A period of time (in seconds) that Ocean waits from the end of a scaling action until starting another scaling action.",
                                "default": null,
                                "example": 180
                              },
                              "resourceLimits": {
                                "type": "object",
                                "description": "Option to set upper and lower bounds on the resource usage of the cluster.",
                                "properties": {
                                  "maxMemoryGib": {
                                    "type": "integer",
                                    "description": "The maximum memory (in GiB) that can be allocated to the cluster.",
                                    "example": 1500
                                  },
                                  "maxVCpu": {
                                    "type": "integer",
                                    "description": "The maximum CPU (in vCPU units) that can be allocated to the cluster.",
                                    "example": 750
                                  }
                                }
                              },
                              "down": {
                                "type": "object",
                                "description": "Autoscaling scale down operations.",
                                "properties": {
                                  "maxScaleDownPercentage": {
                                    "type": "integer",
                                    "description": "Represents the maximum percent of your instances to scale down in a single scale-down action. Number between 1-100.",
                                    "example": 60
                                  },
                                  "aggressiveScaleDown": {
                                    "type": "object",
                                    "description": "Enable and customize the Aggressive Scale Down feature. This allows nodes to be promptly scaled down by the Ocean Autoscaler as soon as they become eligible, without any waiting period.",
                                    "properties": {
                                      "isEnabled": {
                                        "type": "boolean",
                                        "description": "When set to 'true', the Aggressive Scale Down feature is enabled",
                                        "default": false
                                      }
                                    }
                                  }
                                }
                              },
                              "headroom": {
                                "type": "object",
                                "description": "Spare resource capacity management enabling fast assignment of pods without waiting for new resources to launch.",
                                "properties": {
                                  "cpuPerUnit": {
                                    "type": "integer",
                                    "description": "Option to configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.",
                                    "example": 2000
                                  },
                                  "memoryPerUnit": {
                                    "type": "integer",
                                    "description": "Option to configure the amount of memory (MiB) to allocate the headroom.",
                                    "example": 0
                                  },
                                  "gpuPerUnit": {
                                    "type": "integer",
                                    "description": "Amount of GPU to allocate for headroom.",
                                    "example": 0
                                  },
                                  "numOfUnits": {
                                    "type": "integer",
                                    "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.",
                                    "example": 4
                                  }
                                }
                              },
                              "isAutoConfig": {
                                "type": "boolean",
                                "description": "Use automatic headroom. When set to true, the values under cluster.autoScaler.headroom are not effective, as Ocean configures and optimizes headroom automatically.",
                                "default": true,
                                "example": false
                              },
                              "autoHeadroomPercentage": {
                                "type": "integer",
                                "description": "Dynamic (automatic) buffer of spare capacity, i.e., vCPU, memory, and GPU resources. Expressed as a percent of the overall cluster capacity with valid values from 0-200. Optional. Relevant when isAutoConfig=true.",
                                "example": null
                              },
                              "enableAutomaticAndManualHeadroom": {
                                "type": "boolean",
                                "description": "When set to true, both automatic and per-VNG manual headroom to be saved concurrently and independently in the cluster. prerequisite: isAutoConfig must be true\n",
                                "example": true
                              },
                              "extendedResourceDefinitions": {
                                "type": "array",
                                "description": "List of Ocean extended resource definitions to use in this cluster.\n",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "erd-123",
                                  "erd-456"
                                ]
                              }
                            }
                          },
                          "capacity": {
                            "type": "object",
                            "title": "Capacity Units",
                            "description": "The overall capability of the Ocean cluster expressed as number of instances and specified with a minimum, a maximum, and a target number of running instances.",
                            "properties": {
                              "minimum": {
                                "type": "integer",
                                "example": 0,
                                "description": "The lower limit of instances that the cluster can scale down to.\n"
                              },
                              "maximum": {
                                "type": "integer",
                                "default": 1000,
                                "example": 1000,
                                "description": "The upper limit of instances that the cluster can scale up to.\n"
                              },
                              "target": {
                                "type": "integer",
                                "example": 1,
                                "description": "Number of instances to launch and maintain in the cluster.\n"
                              }
                            }
                          },
                          "strategy": {
                            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/strategy"
                          },
                          "scheduling": {
                            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/scheduling"
                          },
                          "security": {
                            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/security"
                          },
                          "compute": {
                            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1import/post/responses/200/content/application~1json/schema/properties/items/properties/compute"
                          },
                          "logging": {
                            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/logging"
                          },
                          "createdAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2021-03-17T08:13:08.000Z",
                            "description": "A timestamp of the cluster creation.\n"
                          },
                          "updatedAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2021-03-17T15:06:13.000Z",
                            "description": "A timestamp of the latest cluster update.\n"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/k8s/cluster/o-abcd1234"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:k8s"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/k8s/cluster/{oceanClusterId}/controllerHeartbeat": {
      "get": {
        "summary": "Get Heartbeat Status",
        "description": "Get the heartbeat status of the Ocean Controller for the cluster. <br /> The response returns the heartbeat status and the last heartbeat timestamp.\n",
        "operationId": "oceanAwsGetHeartbeatStatus",
        "tags": [
          "Ocean AWS",
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Get Heartbeat Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/k8s/cluster/o-e0a2bd7c/controllerHeartbeat"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Controller Heartbeat",
                                "properties": {
                                  "status": {
                                    "type": "string",
                                    "example": "ACTIVE"
                                  },
                                  "lastHeartbeat": {
                                    "type": "string",
                                    "example": "2019-11-24T14:33:00.746Z"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:k8s:cluster:controllerHeartbeat"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/cluster/{clusterIdentifier}/log": {
      "summary": "Ocean for AWS K8s",
      "get": {
        "summary": "Fetch Elastilog",
        "description": "Fetch the log of an Ocean cluster.\n",
        "operationId": "oceanAwsFetchLog",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "clusterIdentifier",
            "example": "o-6e3819ae",
            "description": "The reporting identifier of the Ocean Controller.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1mcs~1ecs~1cluster~1%7BclusterName%7D~1costs/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1mcs~1ecs~1cluster~1%7BclusterName%7D~1costs/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1log/get/parameters/4"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1log/get/parameters/5"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1log/get/parameters/6"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Get Log Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request": {
                      "type": "object",
                      "description": "Original request properties\n",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "3213f42e-455e-4801-a185-cd3eb65fac5f",
                          "description": "Unique identifier associated with this request\n"
                        },
                        "url": {
                          "type": "string",
                          "example": "/ocean/aws/k8s/cluster/o-e0a2bd7c/log?fromDate=2020-10-06&toDate=2020-10-08&severity=ALL&limit=500",
                          "description": "The URL that was used for the request\n"
                        },
                        "method": {
                          "type": "string",
                          "example": "GET",
                          "description": "The HTTP **METHOD** used for the request\n"
                        },
                        "timestamp": {
                          "type": "string",
                          "example": "2020-10-05T16:20:38.579Z",
                          "description": "When the request was received by Spot\n"
                        }
                      }
                    },
                    "response": {
                      "type": "object",
                      "description": "Response payload that includes status, type, and any relevant data.\n",
                      "properties": {
                        "status": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "integer",
                              "example": "200",
                              "description": "HTTP status code assigned to this response.\n"
                            },
                            "message": {
                              "type": "string",
                              "example": "OK",
                              "description": "HTTP status message for the respective status code.\n"
                            }
                          }
                        },
                        "kind": {
                          "type": "string",
                          "example": "spotinst:ocean:cluster:log"
                        },
                        "items": {
                          "type": "array",
                          "description": "Array of data objects\n",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              },
                              "severity": {
                                "type": "string"
                              },
                              "createdAt": {
                                "type": "string"
                              }
                            }
                          },
                          "example": [
                            {
                              "message": "Ocean o-e0a2bd7c successfully created.",
                              "severity": "INFO",
                              "createdAt": "2020-10-07T09:51:12.000Z"
                            }
                          ]
                        },
                        "count": {
                          "type": "integer",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/cluster/autoScalingGroup/import": {
      "post": {
        "summary": "Import ASG To Ocean Cluster",
        "description": "Create an Ocean configuration according to an AWS autoscaling group (ASG) configuration.\n",
        "operationId": "oceanAwsImportAsg",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "autoScalingGroupName",
            "example": "myAutoScalingGroup",
            "description": "The ASG name.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "region",
            "example": "us-east-1",
            "description": "Region name of the ASG.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "cluster": {
                        "type": "object",
                        "description": "The object specifying the configuration of the VNG.\n",
                        "properties": {
                          "instanceTypes": {
                            "type": "array",
                            "description": "List of possible instance types for the cluster.\n",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "c3.large",
                              "m4.large"
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Import ASG to Ocean Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/k8s/cluster/autoScalingGroup/import"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Ocean Import ASG Response.\n",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "TestASG1"
                                  },
                                  "controllerClusterId": {
                                    "type": "string",
                                    "example": "ocean-ed609402-8557-4d18-818a-e549333cc11e"
                                  },
                                  "region": {
                                    "type": "string",
                                    "example": "us-west-2"
                                  },
                                  "capacity": {
                                    "type": "object",
                                    "properties": {
                                      "minimum": {
                                        "type": "integer",
                                        "example": 0
                                      },
                                      "maximum": {
                                        "type": "integer",
                                        "example": 1000
                                      },
                                      "target": {
                                        "type": "integer",
                                        "example": 1
                                      }
                                    }
                                  },
                                  "compute": {
                                    "type": "object",
                                    "properties": {
                                      "subnetIds": {
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "example": [
                                            "subnet-00cab2dd9f40a9883",
                                            "subnet-0df9d512c7cbbd9e1"
                                          ]
                                        }
                                      },
                                      "launchSpecification": {
                                        "type": "object",
                                        "properties": {
                                          "securityGroupIds": {
                                            "type": "array",
                                            "items": {
                                              "type": "string",
                                              "example": [
                                                "sg-03ccf232a2bf0f4ea"
                                              ]
                                            }
                                          },
                                          "keyPair": {
                                            "type": "string",
                                            "example": "testteamkp"
                                          },
                                          "imageId": {
                                            "type": "string",
                                            "example": "ami-0ce21b51cb31a54b8"
                                          },
                                          "tags": {
                                            "type": "object",
                                            "properties": {
                                              "tagKey": {
                                                "type": "string",
                                                "example": "AmazonECSManaged"
                                              },
                                              "tagValue": {
                                                "type": "string",
                                                "example": ""
                                              }
                                            }
                                          },
                                          "associatePublicIpAddress": {
                                            "type": "boolean",
                                            "example": "false"
                                          },
                                          "instanceMetadataOptions": {
                                            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1import/post/responses/200/content/application~1json/schema/properties/items/properties/compute/properties/launchSpecification/properties/instanceMetadataOptions"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:k8s"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/cluster/{oceanClusterId}/rightSizing/suggestion": {
      "post": {
        "summary": "Fetch Right Sizing Recommendations",
        "description": "Get right-sizing recommendations for an Ocean cluster and filter them according to namespace or label.\n",
        "operationId": "oceanAwsFilterRightSizingWithFilter",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "filter": {
                        "type": "object",
                        "description": "Optional - may be null.\n",
                        "properties": {
                          "namespaces": {
                            "type": "array",
                            "description": "Optional - may be null. If exists - should contain at least 1 item.\n",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "sparkSpace",
                              "kube-system"
                            ]
                          },
                          "attribute": {
                            "type": "object",
                            "description": "Optional - may be null.\n",
                            "required": [
                              "type",
                              "key"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "label",
                                  "annotation"
                                ],
                                "example": "label"
                              },
                              "key": {
                                "type": "string",
                                "description": "May be any string, but shouldn't be empty.\n",
                                "example": "app"
                              },
                              "operator": {
                                "type": "string",
                                "description": "Optional - may be null.\n",
                                "enum": [
                                  "Equals",
                                  "notEquals",
                                  "exists",
                                  "doesNotExist"
                                ],
                                "default": "Equals",
                                "example": "Equals"
                              },
                              "value": {
                                "type": "string",
                                "description": "Required whenever the operator is \"equals\" or \"notEquals\". |\nIf exists, may be any string.\n",
                                "example": "redis"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Right Sizing Recommendation Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/k8s/cluster/o-abcd1234/rightSizing/suggestion"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "resourceName": {
                                    "type": "string"
                                  },
                                  "resourceType": {
                                    "type": "string"
                                  },
                                  "namespace": {
                                    "type": "string"
                                  },
                                  "suggestedCPU": {
                                    "type": "integer"
                                  },
                                  "suggestedMemory": {
                                    "type": "integer"
                                  },
                                  "requestedCPU": {
                                    "type": "integer"
                                  },
                                  "requestedMemory": {
                                    "type": "integer"
                                  },
                                  "containers": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "requestedCPU": {
                                          "type": "integer"
                                        },
                                        "suggestedCPU": {
                                          "type": "integer"
                                        },
                                        "requestedMemory": {
                                          "type": "integer"
                                        },
                                        "suggestedMemory": {
                                          "type": "integer"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "example": [
                                {
                                  "resourceName": "redis-controller",
                                  "resourceType": "deployment",
                                  "namespace": "kube-system",
                                  "suggestedCPU": 4,
                                  "suggestedMemory": 19,
                                  "requestedCPU": 50,
                                  "requestedMemory": 50,
                                  "containers": [
                                    {
                                      "name": "dnsmasq",
                                      "requestedCPU": 10,
                                      "suggestedCPU": 2,
                                      "requestedMemory": 40,
                                      "suggestedMemory": 15
                                    },
                                    {
                                      "name": "sidecar",
                                      "requestedCPU": 40,
                                      "suggestedCPU": 2,
                                      "requestedMemory": 10,
                                      "suggestedMemory": 4
                                    }
                                  ]
                                },
                                {
                                  "resourceName": "test-redis",
                                  "resourceType": "deployment",
                                  "namespace": "sparkSpace",
                                  "suggestedCPU": 2,
                                  "suggestedMemory": 20,
                                  "requestedCPU": 50,
                                  "requestedMemory": 30,
                                  "containers": [
                                    {
                                      "name": "dns-controller",
                                      "requestedCPU": 20,
                                      "suggestedCPU": 1,
                                      "requestedMemory": 20,
                                      "suggestedMemory": 15
                                    },
                                    {
                                      "name": "kubedns",
                                      "requestedCPU": 30,
                                      "suggestedCPU": 1,
                                      "requestedMemory": 10,
                                      "suggestedMemory": 5
                                    }
                                  ]
                                }
                              ]
                            },
                            "count": {
                              "example": 2
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:k8s:cluster:rightSizing:suggestion"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/cluster/{oceanClusterId}/instanceTypeFiltersSimulation": {
      "post": {
        "summary": "Instance Types Filters Simulation",
        "description": "Returns all instances types that match the given filters. These instance types will be used if the cluster is configured with these filters.\n",
        "operationId": "oceanAwsInstanceTypeFiltersSimulation",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "filters"
                    ],
                    "properties": {
                      "filters": {
                        "type": "object",
                        "description": "List of filters. The Instance types that match with all filters compose the Ocean's whitelist parameter.  Cannot be configured together with whitelist/blacklist.\n",
                        "title": "InstanceTypesFilters",
                        "properties": {
                          "minVcpu": {
                            "type": "integer",
                            "description": "Minimum number of vcpus available.\n",
                            "minimum": 0,
                            "example": 2
                          },
                          "maxVcpu": {
                            "type": "integer",
                            "description": "Maximum number of vcpus available.\n",
                            "minimum": 1,
                            "example": 16
                          },
                          "minMemoryGiB": {
                            "type": "number",
                            "format": "double",
                            "description": "Minimum amount of Memory (GiB).\n",
                            "minimum": 0,
                            "example": 8
                          },
                          "maxMemoryGiB": {
                            "type": "number",
                            "format": "double",
                            "description": "Maximum amount of Memory (GiB).\n",
                            "minimum": 0,
                            "example": 16
                          },
                          "minGpu": {
                            "type": "integer",
                            "description": "Minimum total number of GPUs.\n",
                            "minimum": 0,
                            "example": 0
                          },
                          "maxGpu": {
                            "type": "integer",
                            "description": "Maximum total number of GPUs.\n",
                            "minimum": 1,
                            "example": 4
                          },
                          "includeFamilies": {
                            "type": "array",
                            "description": "Types belonging to a family from the IncludeFamilies will be available for scaling (asterisk wildcard is also supported). For example, C* will include instance types from these families: c5, c4, c4a, etc.\n",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "c5*",
                              "g5"
                            ]
                          },
                          "excludeFamilies": {
                            "type": "array",
                            "description": "Types belonging to a family from the ExcludeFamilies will not be available for scaling (asterisk wildcard is also supported). For example, C* will exclude instance types from these families: c5, c4, c4a, etc.\n",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "t2",
                              "R4*"
                            ]
                          },
                          "excludeMetal": {
                            "type": "boolean",
                            "default": false,
                            "description": "In case excludeMetal is set to true, metal types will not be available for scaling.\n",
                            "example": true
                          },
                          "isEnaSupported": {
                            "type": "boolean",
                            "description": "Ena is supported or not.\n",
                            "example": true
                          },
                          "architectures": {
                            "type": "array",
                            "description": "The filtered instance types will support at least one of the architectures from this list.\n",
                            "items": {
                              "type": "string",
                              "enum": [
                                "i386",
                                "x86_64",
                                "arm64"
                              ]
                            },
                            "example": [
                              "i386",
                              "x86_64"
                            ]
                          },
                          "virtualizationTypes": {
                            "type": "array",
                            "description": "The filtered instance types will support at least one of the virtualization types from this list.\n",
                            "items": {
                              "type": "string",
                              "enum": [
                                "hvm",
                                "paravirtual"
                              ]
                            },
                            "example": [
                              "hvm"
                            ]
                          },
                          "categories": {
                            "type": "array",
                            "description": "The filtered instance types will belong to one of the categories types from this list.\n",
                            "items": {
                              "type": "string",
                              "enum": [
                                "Accelerated_computing",
                                "Compute_optimized",
                                "General_purpose",
                                "Memory_optimized",
                                "Storage_optimized"
                              ]
                            },
                            "example": [
                              "Accelerated_computing",
                              "Compute_optimized"
                            ]
                          },
                          "minEnis": {
                            "type": "integer",
                            "description": "Minimum number of network interfaces (ENIs).\n",
                            "minimum": 0,
                            "example": 2
                          },
                          "diskTypes": {
                            "type": "array",
                            "description": "The filtered instance types will have one of the disk type from this list.\n",
                            "items": {
                              "type": "string",
                              "enum": [
                                "NVMe",
                                "EBS",
                                "SSD",
                                "HDD"
                              ]
                            },
                            "example": [
                              "NVMe",
                              "EBS"
                            ]
                          },
                          "hypervisor": {
                            "type": "array",
                            "description": "The filtered instance types will have a hypervisor type from this list.\n",
                            "items": {
                              "type": "string",
                              "enum": [
                                "nitro",
                                "xen"
                              ]
                            },
                            "example": [
                              "nitro"
                            ]
                          },
                          "rootDeviceTypes": {
                            "type": "array",
                            "description": "The filtered instance types will have a root device types from this list.\n",
                            "items": {
                              "type": "string",
                              "enum": [
                                "ebs",
                                "instance-store"
                              ]
                            },
                            "example": [
                              "ebs"
                            ]
                          },
                          "minNetworkPerformance": {
                            "type": "integer",
                            "description": "Minimum Bandwidth in Gib/s of network performance.\n",
                            "minimum": 0,
                            "example": 2
                          },
                          "maxNetworkPerformance": {
                            "type": "integer",
                            "description": "Maximum Bandwidth in Gib/s of network performance.\n",
                            "minimum": 1,
                            "example": 20
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Instance Types Filters Simulation Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/k8s/cluster/o-abcd1234/instanceTypeFiltersSimulation"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "filteredInstanceTypes": {
                                    "type": "array",
                                    "description": "The simulated instance types.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "example": [
                                      "g5.xlarge",
                                      "c5.2xlarge",
                                      "c5ad.2xlarge",
                                      "c5d.2xlarge",
                                      "c5a.2xlarge"
                                    ]
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:k8s:instanceTypesFilters:simulation"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/cluster/{oceanClusterId}/allowedInstanceTypes": {
      "get": {
        "summary": "Allowed Instance Types",
        "description": "Return the list of the allowed Ocean cluster instance types.\n",
        "operationId": "oceanAwsGetAllowedInstanceTypes",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Allowed Instance Types Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/k8s/cluster/o-12345abc/allowedInstanceTypes"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "instanceTypes": {
                                    "type": "array",
                                    "description": "The allowed Ocean cluster instance types.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "example": [
                                      "c3.large",
                                      "c5.large"
                                    ]
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:k8s:allowedInstanceTypes"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/cluster/{oceanClusterId}/loadBalancer/attach": {
      "put": {
        "summary": "Attach Load Balancers",
        "description": "Add new load balancers to the existing load balancers on the Ocean Cluster.\n",
        "operationId": "OceanAWSClusterAttachLb",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "loadBalancers"
                ],
                "properties": {
                  "loadBalancers": {
                    "type": "array",
                    "description": "Load balancers to add to the Ocean cluster.\n",
                    "items": {
                      "type": "object",
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type of load balancer to use.\n",
                          "enum": [
                            "CLASSIC",
                            "TARGET_GROUP"
                          ],
                          "example": "TARGET_GROUP"
                        },
                        "name": {
                          "type": "string",
                          "description": "If type is \"CLASSIC\" then a name is required. Otherwise is not allowed.\n",
                          "example": "MyTargetGroup"
                        },
                        "arn": {
                          "type": "string",
                          "description": "If type is \"TARGET_GROUP\" then an ARN is required. Otherwise is not allowed.\n",
                          "example": "arn:aws:elasticloadbalancing:us-west-2:922761411234:targetgroup"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Cluster Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/k8s/cluster/o-12345abc/loadBalancer/attach"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:k8s"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/cluster/{oceanClusterId}/loadBalancer/detach": {
      "put": {
        "summary": "Detach Load Balancers",
        "description": "Remove load balancers from the existing load balancers on the Ocean Cluster.\n",
        "operationId": "OceanAWSClusterDetachLb",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "loadBalancers"
                ],
                "properties": {
                  "loadBalancers": {
                    "type": "array",
                    "description": "Load balancers to remove from the Ocean cluster.\n",
                    "items": {
                      "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D~1loadBalancer~1attach/put/requestBody/content/application~1json/schema/properties/loadBalancers/items"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Cluster Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/k8s/cluster/o-12345abc/loadBalancer/detach"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:k8s"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/mcs/ecs/cluster/{clusterName}/costs": {
      "get": {
        "summary": "Get Cluster Costs",
        "description": "Describes ECS cluster costs in a time range.\\\nThe response will provide the distribution of the costs per cluster.\n\n<span><strong>Deprecated API:</strong></span></span>\nThis API is no longer supported. As an alternative you may use the \"Get Ecs Cluster Aggregated Detailed Costs\" API.\n",
        "operationId": "oceanEcsClusterCosts",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "toDate",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "End date value using either the date format \"yyyy-mm-dd; 2016-11-20\" or ms \"1494751821472\".\n"
          },
          {
            "in": "query",
            "name": "fromDate",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Beginning date value using either the date format \"yyyy-mm-dd; 2016-11-20\" or ms \"1494751821472\".\n"
          },
          {
            "in": "query",
            "name": "region",
            "example": "us-east-1",
            "description": "Region name.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "clusterName",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "ocean.ecs",
            "description": "The name of the ECS cluster, as set in the Ocean cluster configuration under the \"clusterName\" field.\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean ECS Cluster Costs Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/mcs/ecs/cluster/my-cluster-identifier/costs"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "totalCost": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 279.9907
                                  },
                                  "headroomCost": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 279.9907
                                  },
                                  "standAloneTasksCost": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 0
                                  },
                                  "ecsGroups": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "example": "default"
                                        },
                                        "cost": {
                                          "type": "number",
                                          "format": "float",
                                          "example": 18.00862
                                        },
                                        "type": {
                                          "type": "string",
                                          "example": "SERVICE",
                                          "enum": [
                                            "SERVICE",
                                            "HEADROOM",
                                            "STAND_ALONE",
                                            "IDLE"
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/cluster/import": {
      "post": {
        "summary": "Upgrade Elastigroup To Ocean",
        "description": "Upgrade an Elastigroup with Kubernetes integration to Ocean for Kubernetes cluster.\n",
        "operationId": "oceanAwsUpgradeElastigroup",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "groupId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Elastigroup identifier\n"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "kind": {
                      "type": "string",
                      "example": "spotinst:ocean:aws:k8s"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "o-482d9d26"
                        },
                        "name": {
                          "type": "string",
                          "example": "Ocean::test-k8s-batch-1"
                        },
                        "clusterName": {
                          "type": "string",
                          "example": "testEnvironment_Batch_852a670a-aa73-3d5d-9576-147a26d43401"
                        },
                        "autoScaler": {
                          "type": "object",
                          "properties": {
                            "isEnabled": {
                              "type": "boolean",
                              "example": true
                            },
                            "isAutoConfig": {
                              "type": "boolean",
                              "example": true
                            }
                          }
                        },
                        "region": {
                          "type": "string",
                          "example": "us-west-2"
                        },
                        "groupId": {
                          "type": "string",
                          "example": "sig-b6bb68fb"
                        },
                        "strategy": {
                          "type": "object",
                          "properties": {
                            "fallbackToOd": {
                              "type": "boolean",
                              "example": true
                            },
                            "spotPercentage": {
                              "type": "integer",
                              "example": 100
                            },
                            "drainingTimeout": {
                              "type": "integer",
                              "example": 120
                            }
                          }
                        },
                        "compute": {
                          "type": "object",
                          "title": "Ocean Compute",
                          "description": "Compute specifications for the Ocean cluster.\n",
                          "required": [
                            "subnetIds",
                            "launchSpecification"
                          ],
                          "properties": {
                            "subnetIds": {
                              "type": "array",
                              "description": "A comma-separated list of subnet identifiers for the Ocean cluster. Subnet identifiers should be configured with auto-assign public IP.\n",
                              "items": {
                                "type": "string"
                              },
                              "example": [
                                "subnet-4c1d1538",
                                "subnet-2791bb61"
                              ]
                            },
                            "instanceTypes": {
                              "type": "object",
                              "description": "The type of instances that may or may not be a part of the Ocean cluster.",
                              "properties": {
                                "whitelist": {
                                  "type": "array",
                                  "description": "Instance types allowed in the Ocean cluster. Cannot be configured if a deny list is configured.\n",
                                  "items": {
                                    "type": "string"
                                  },
                                  "example": [
                                    "c4.xlarge",
                                    "c4.2xlarge",
                                    "c4.4xlarge",
                                    "c4.8xlarge"
                                  ]
                                },
                                "blacklist": {
                                  "type": "array",
                                  "description": "Instance types to avoid launching in the Ocean cluster. Cannot be configured if a permit list is configured.\n",
                                  "items": {
                                    "type": "string"
                                  },
                                  "example": [
                                    "r5.large",
                                    "r5.xlarge"
                                  ]
                                },
                                "filters": {
                                  "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D~1instanceTypeFiltersSimulation/post/requestBody/content/application~1json/schema/allOf/0/properties/filters"
                                }
                              }
                            },
                            "launchSpecification": {
                              "type": "object",
                              "description": "The default specification for nodes in the cluster. Used as a template for custom Virtual Node Groups to inherit values which are not explicitly defined in them, and as a default VNG when no other VNGs exist or match the workload requirements.\n",
                              "required": [
                                "imageId",
                                "securityGroupIds"
                              ],
                              "properties": {
                                "useAsTemplateOnly": {
                                  "type": "boolean",
                                  "description": "The configuration specified on the Ocean object will function only as a template for virtual node groups.\n",
                                  "default": false
                                },
                                "imageId": {
                                  "type": "string",
                                  "description": "identifier of the image used to launch the instances."
                                },
                                "userData": {
                                  "type": "string",
                                  "format": "byte",
                                  "description": "The base 64 encoded MIME user data to make available to the instances."
                                },
                                "securityGroupIds": {
                                  "type": "array",
                                  "description": "One or more security group identifiers.",
                                  "items": {
                                    "type": "string",
                                    "example": [
                                      "sg-c3d914b0"
                                    ]
                                  }
                                },
                                "iamInstanceProfile": {
                                  "type": "object",
                                  "description": "The instance profile iamRole.",
                                  "properties": {
                                    "arn": {
                                      "type": "string",
                                      "description": "The iamRole ARN.",
                                      "example": "orform"
                                    }
                                  }
                                },
                                "blockDeviceMappings": {
                                  "type": "array",
                                  "description": "Block devices that are exposed to the instance. You can specify virtual devices and EBS volumes.\\\nThis parameter and rootVolumeSize cannot be in the specification at the same time.\\\nThis parameter can be null. If not null, it must contain at least one block device.\n",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "deviceName": {
                                        "type": "string",
                                        "description": "Set device name.\n",
                                        "example": "/dev/xvda"
                                      },
                                      "ebs": {
                                        "type": "object",
                                        "description": "Set EBS properties.\n",
                                        "properties": {
                                          "throughput": {
                                            "type": "integer",
                                            "minimum": 125,
                                            "maximum": 1000,
                                            "example": 125,
                                            "description": "The amount of data transferred to or from a storage device per second. You can use this parameter only if volumetype=‘gp3’.\n"
                                          },
                                          "deleteOnTermination": {
                                            "type": "boolean",
                                            "description": "Flag to delete the EBS on instance termination.\n",
                                            "example": false
                                          },
                                          "encrypted": {
                                            "type": "boolean",
                                            "example": false
                                          },
                                          "iops": {
                                            "type": "integer",
                                            "description": "Must be greater than or equal to 0.\n",
                                            "example": 1
                                          },
                                          "dynamicIops": {
                                            "type": "object",
                                            "required": [
                                              "baseSize",
                                              "resource",
                                              "sizePerResourceUnit"
                                            ],
                                            "description": "Set dynamic IOPS properties. When using this object, you cannot use the 'iops' object. You must use one or the other.\n",
                                            "properties": {
                                              "baseSize": {
                                                "type": "integer",
                                                "description": "Initial size for IOPS.\n",
                                                "example": 50
                                              },
                                              "resource": {
                                                "type": "string",
                                                "enum": [
                                                  "CPU",
                                                  "memory"
                                                ],
                                                "description": "",
                                                "example": "CPU"
                                              },
                                              "sizePerResourceUnit": {
                                                "type": "integer",
                                                "description": "Additional size per resource unit (in IOPS).\nFor example: if baseSize=50, and sizePerResourceUnit=20, and an instance with 2 CPU is launched - its IOPS size will be: 90\n",
                                                "example": 20
                                              }
                                            }
                                          },
                                          "kmsKeyId": {
                                            "type": "string",
                                            "example": "alias/aws/ebs"
                                          },
                                          "snapshotId": {
                                            "type": "string",
                                            "example": "snap-abcdefghi111110"
                                          },
                                          "volumeType": {
                                            "type": "string",
                                            "description": "Set volume type.\n",
                                            "example": "gp2"
                                          },
                                          "volumeSize": {
                                            "type": "integer",
                                            "description": "Set volume size (in GB). When using this property, you cannot use dynamicVolumeSize. You must use one of the other. Volume size should be greater than or equal to the size configured in the AMI.\n"
                                          },
                                          "dynamicVolumeSize": {
                                            "type": "object",
                                            "required": [
                                              "baseSize",
                                              "resource",
                                              "sizePerResourceUnit"
                                            ],
                                            "description": "Set dynamic volume size properties. When using this object, you cannot use volumeSize. You must use one or the other.\n",
                                            "properties": {
                                              "baseSize": {
                                                "type": "integer",
                                                "description": "Initial size per volume.\n",
                                                "example": 50
                                              },
                                              "resource": {
                                                "type": "string",
                                                "enum": [
                                                  "CPU"
                                                ],
                                                "example": "CPU"
                                              },
                                              "sizePerResourceUnit": {
                                                "type": "integer",
                                                "description": "Additional size per resource unit (in GB). For example, if baseSize=50, and sizePerResourceUnit=20, and an instance with 2 CPU is launched, its disk size will be 90 GB.\n",
                                                "example": 20
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "keyPair": {
                                  "type": "string",
                                  "description": "The key pair to attach the instances.",
                                  "example": "spotinst-labs-oregon"
                                },
                                "tags": {
                                  "type": "array",
                                  "description": "List of kay-value pairs of tags.\n",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "tagKey": {
                                        "type": "string",
                                        "description": "Set the tag key.\n",
                                        "example": "Creator"
                                      },
                                      "tagValue": {
                                        "type": "string",
                                        "description": "Set the tag value.\n",
                                        "example": "John Doe"
                                      }
                                    }
                                  }
                                },
                                "loadBalancers": {
                                  "type": "array",
                                  "description": "Configure load balancer settings for the Ocean cluster.\n",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "Type of load balancer to use. Supported types are: \"TARGET_GROUP\", and \"CLASSIC\".\n",
                                        "example": "TARGET_GROUP"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "If type is \"CLASSIC\" then a name is required. Otherwise Name is optional.\n",
                                        "example": "MyTargetGroup"
                                      },
                                      "arn": {
                                        "type": "string",
                                        "description": "If type is \"TARGET_GROUP\" then an ARN is required.\n",
                                        "example": "arn:aws:elasticloadbalancing:us-west-2:922761411234:targetgroup"
                                      }
                                    }
                                  }
                                },
                                "associatePublicIpAddress": {
                                  "type": "boolean",
                                  "description": "Configure public IP address allocation.",
                                  "default": false,
                                  "example": false
                                },
                                "associateIpv6Address": {
                                  "type": "boolean",
                                  "description": "Configure IPv6 address allocation.",
                                  "default": false,
                                  "example": false
                                },
                                "monitoring": {
                                  "type": "boolean",
                                  "description": "Enable detailed monitoring for cluster. Flag will enable CloudWatch detailed monitoring (one minute increments). There are additional hourly costs for this service based on the region used.\n",
                                  "example": true
                                },
                                "ebsOptimized": {
                                  "type": "boolean",
                                  "description": "Enable EBS optimization for the cluster. A flag will enable optimized capacity for high bandwidth connectivity to the EB service for non EBS optimized instance types. For instances that are EBS optimized, this flag will be ignored.\n",
                                  "example": true
                                },
                                "rootVolumeSize": {
                                  "type": "integer",
                                  "description": "Set root volume size in GiB.",
                                  "example": 73
                                },
                                "instanceMetadataOptions": {
                                  "type": "object",
                                  "title": "instanceMetadataOptions",
                                  "required": [
                                    "httpTokens"
                                  ],
                                  "description": "Ocean instance metadata options object for [IMDSv2](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-service.html).\n",
                                  "properties": {
                                    "httpTokens": {
                                      "type": "string",
                                      "description": "Determines if a signed token is required or not.\n",
                                      "enum": [
                                        "optional",
                                        "required"
                                      ],
                                      "example": "optional"
                                    },
                                    "httpPutResponseHopLimit": {
                                      "type": "integer",
                                      "description": "An integer within 1,64 range (including).\nThe desired HTTP PUT response hop limit for instance metadata requests.\nThe larger the number, the further instance metadata requests can travel.\n",
                                      "example": 12
                                    },
                                    "httpEndpoint": {
                                      "type": "string",
                                      "description": "Enables or disables the HTTP metadata endpoint on your instances.\n",
                                      "enum": [
                                        "disabled",
                                        "enabled"
                                      ],
                                      "example": "disabled"
                                    }
                                  }
                                },
                                "resourceTagSpecification": {
                                  "type": "object",
                                  "description": "Optional field. Specify which resources should be tagged with Virtual Node Group tags or Ocean tags. If tags are set on the VNG, the resources will be tagged with the VNG tags; otherwise, they will be tagged with the Ocean tags.",
                                  "properties": {
                                    "volumes": {
                                      "type": "object",
                                      "description": "Optional field. Tag specification for Volume resources.",
                                      "properties": {
                                        "shouldTag": {
                                          "type": "boolean",
                                          "description": "Optional field. Specify if Volume resources will be tagged with Virtual Node Group tags or Ocean tags.",
                                          "default": false,
                                          "example": false
                                        }
                                      }
                                    }
                                  }
                                },
                                "healthCheckUnhealthyDurationBeforeReplacement": {
                                  "type": "integer",
                                  "description": "The amount of time, in seconds, an existing instance should remain active after becoming unhealthy.\nAfter the set time out the instance will be replaced. \nThe minimum value allowed is 60, and it must be a multiple of 60.\n",
                                  "minimum": 60,
                                  "default": 120,
                                  "example": 60
                                }
                              }
                            }
                          }
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2018-11-05T12:55:50.000+0000"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2018-11-05T12:58:15.000+0000"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/cluster/{oceanClusterId}/roll": {
      "summary": "Ocean for AWS",
      "post": {
        "summary": "Initiate Roll",
        "description": "Roll an entire Ocean cluster or roll subsets of the cluster by specifying launchSpecIds or instanceIds. Performing this request will start the roll immediately and run it in defined batches.\nNote that the first response for a successful request will indicate the start of a roll. In order to check the status of a roll, you can use the GET Roll API.\n",
        "operationId": "oceanAwsRollInit",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "title": "Roll",
                    "properties": {
                      "roll": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "batchSizePercentage": {
                                "type": "integer",
                                "description": "Value as a percent to set the size of a batch in a roll. Valid values are 0-100.\n",
                                "example": 20
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "comment": {
                                "type": "string",
                                "description": "Add a comment description for the roll. The comment is limited to 256 chars.\n",
                                "example": "This is why I deployed my cluster."
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "respectPdb": {
                                "type": "boolean",
                                "description": "During the roll, if the parameter is set to true we honor PDB during the instance replacement.\n",
                                "example": true,
                                "default": false
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "batchMinHealthyPercentage": {
                                "type": "integer",
                                "description": "Indicates the threshold of minimum healthy instances in single batch. If the amount of healthy instances in single batch is under the threshold, the cluster roll will fail. If exists, the parameter value will be in range of 1-100. In case of null as value, the default value in the backend will be 50%. Value of param should represent the number in percentage (%) of the batch.\n",
                                "example": 100,
                                "default": 50
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  {
                    "type": "object",
                    "title": "Roll with instance ids",
                    "properties": {
                      "roll": {
                        "allOf": [
                          {
                            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/properties/roll/allOf/0"
                          },
                          {
                            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/properties/roll/allOf/1"
                          },
                          {
                            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/properties/roll/allOf/2"
                          },
                          {
                            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/properties/roll/allOf/3"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "instanceIds": {
                                "type": "array",
                                "description": "List of instance identifiers to be rolled. Each identifier is a string. InstanceIds can be null, and cannot be used together with launchSpecIds.\n",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "i-0003a99ffb566f039",
                                  "i-0567a99ffb566f765"
                                ]
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  {
                    "type": "object",
                    "title": "Roll with Virtual Node Group ids",
                    "properties": {
                      "roll": {
                        "allOf": [
                          {
                            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/properties/roll/allOf/0"
                          },
                          {
                            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/properties/roll/allOf/1"
                          },
                          {
                            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/properties/roll/allOf/2"
                          },
                          {
                            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/properties/roll/allOf/3"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "launchSpecIds": {
                                "type": "array",
                                "description": "List of virtual node group identifiers to be rolled. Each identifier is a string. LaunchSpecIds can be null, and cannot be used together with instanceIds.\n",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "ols-76694a7d",
                                  "ols-56694a76"
                                ]
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "disableLaunchSpecAutoScaling": {
                                "type": "boolean",
                                "description": "When set to True and virtual node group identifiers are defined to roll, the specified Virtual Node Group(s) will be blocked from scaling up. (Replacements will scale up in other Virtual Node Groups that match the displaced pods instead.) This is meant for different use cases of 'migrating' nodes from one Virtual Node Group to another.\n",
                                "example": true
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cluster Roll Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "scr-5aaf854e"
                    },
                    "scope": {
                      "type": "string",
                      "enum": [
                        "Cluster",
                        "Vngs",
                        "Vng",
                        "Instances",
                        "Instance"
                      ],
                      "example": "Cluster"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "IN_PROGRESS",
                        "COMPLETED",
                        "FAILED",
                        "STOPPED"
                      ],
                      "example": "IN_PROGRESS"
                    },
                    "currentBatch": {
                      "type": "integer",
                      "example": 1
                    },
                    "numOfBatches": {
                      "type": "integer",
                      "example": 5
                    },
                    "comment": {
                      "type": "string",
                      "example": "This is why I deployed my cluster."
                    },
                    "progress": {
                      "type": "object",
                      "properties": {
                        "unit": {
                          "type": "string",
                          "example": "percentage"
                        },
                        "value": {
                          "type": "integer",
                          "example": 0
                        },
                        "detailedStatus": {
                          "type": "object",
                          "properties": {
                            "oldInstances": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "instanceId": {
                                    "type": "string"
                                  },
                                  "status": {
                                    "type": "string"
                                  }
                                }
                              },
                              "example": [
                                {
                                  "instanceId": "i-003a0281a24c01a20",
                                  "status": "REPLACED"
                                },
                                {
                                  "instanceId": "i-003a0281a24c01a21",
                                  "status": "TO_BE_REPLACED"
                                },
                                {
                                  "instanceId": "i-003a0281a24c01a22",
                                  "status": "COULD_NOT_BE_REPLACED"
                                },
                                {
                                  "instanceId": "i-003a0281a24c01a23",
                                  "status": "NOT_REPLACED_DUE_TO_PDB"
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "oceanId": {
                      "type": "string",
                      "example": "o-12e31234"
                    },
                    "instanceIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "i-0003a99ffb566f039",
                        "i-0567a99ffb566f765"
                      ]
                    },
                    "launchSpecIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "ols-76694a7d",
                        "ols-56694a76"
                      ]
                    },
                    "respectPdb": {
                      "type": "boolean",
                      "example": true
                    },
                    "batchMinHealthyPercentage": {
                      "type": "integer",
                      "example": 100
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2019-03-24T15:46:09.000Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "example": "2019-03-24T15:46:09.000Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Rolls",
        "description": "Get status for all rolls of an Ocean cluster.\n",
        "operationId": "oceanAwsRollList",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "oceanClusterId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "o-1abcd124",
            "description": "The identifier of the Ocean cluster\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Get List Of Rolls Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "example": 200
                        },
                        "message": {
                          "type": "string",
                          "example": "OK"
                        }
                      }
                    },
                    "kind": {
                      "type": "string",
                      "example": "spotinst:ocean:aws:k8s:cluster:roll"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "scr-5aaf854e"
                          },
                          "scope": {
                            "type": "string",
                            "enum": [
                              "Cluster",
                              "Vngs",
                              "Vng",
                              "Instances",
                              "Instance"
                            ],
                            "example": "Cluster"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "IN_PROGRESS",
                              "COMPLETED",
                              "FAILED",
                              "STOPPED"
                            ],
                            "example": "IN_PROGRESS"
                          },
                          "currentBatch": {
                            "type": "integer",
                            "example": 1
                          },
                          "numOfBatches": {
                            "type": "integer",
                            "example": 5
                          },
                          "comment": {
                            "type": "string",
                            "example": "This is why I deployed my cluster."
                          },
                          "progress": {
                            "type": "object",
                            "properties": {
                              "unit": {
                                "type": "string",
                                "example": "percentage"
                              },
                              "value": {
                                "type": "integer",
                                "example": 0
                              },
                              "detailedStatus": {
                                "type": "object",
                                "properties": {
                                  "oldInstances": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "instanceId": {
                                          "type": "string"
                                        },
                                        "status": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "example": [
                                      {
                                        "instanceId": "i-003a0281a24c01a20",
                                        "status": "REPLACED"
                                      },
                                      {
                                        "instanceId": "i-003a0281a24c01a21",
                                        "status": "TO_BE_REPLACED"
                                      },
                                      {
                                        "instanceId": "i-003a0281a24c01a22",
                                        "status": "COULD_NOT_BE_REPLACED"
                                      },
                                      {
                                        "instanceId": "i-003a0281a24c01a23",
                                        "status": "NOT_REPLACED_DUE_TO_PDB"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "oceanId": {
                            "type": "string",
                            "example": "o-12e31234"
                          },
                          "instanceIds": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "i-0003a99ffb566f039",
                              "i-0567a99ffb566f765"
                            ]
                          },
                          "launchSpecIds": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "ols-76694a7d",
                              "ols-56694a76"
                            ]
                          },
                          "respectPdb": {
                            "type": "boolean",
                            "example": true
                          },
                          "batchMinHealthyPercentage": {
                            "type": "integer",
                            "example": 100
                          },
                          "createdAt": {
                            "type": "string",
                            "example": "2019-03-24T15:46:09.000Z"
                          },
                          "updatedAt": {
                            "type": "string",
                            "example": "2019-03-24T15:46:09.000Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/cluster/{oceanClusterId}/roll/{ROLL_ID}": {
      "summary": "Ocean for AWS",
      "put": {
        "summary": "Update Roll",
        "description": "Update a roll of an Ocean cluster.\n\n*Performing the request will stop the next batch in a roll.*\n",
        "operationId": "oceanAwsRollUpdate",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "oceanClusterId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "o-1abcd124",
            "description": "The identifier of the Ocean cluster\n"
          },
          {
            "in": "path",
            "name": "ROLL_ID",
            "example": "scr-12345abc",
            "description": "Ocean cluster roll identifier\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "roll"
                ],
                "properties": {
                  "roll": {
                    "type": "object",
                    "required": [
                      "status"
                    ],
                    "description": "Object that specifies the parameters required to initiate a roll (also called a deployment).\n",
                    "properties": {
                      "status": {
                        "type": "string",
                        "enum": [
                          "STOPPED"
                        ],
                        "description": "Set status of a roll. Valid values: \"STOPPED\"\n",
                        "example": "STOPPED"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cluster Roll Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "scr-5aaf854e"
                    },
                    "scope": {
                      "type": "string",
                      "enum": [
                        "Cluster",
                        "Vngs",
                        "Vng",
                        "Instances",
                        "Instance"
                      ],
                      "example": "Cluster"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "STOPPED"
                      ],
                      "example": "STOPPED"
                    },
                    "currentBatch": {
                      "type": "integer",
                      "example": 1
                    },
                    "numOfBatches": {
                      "type": "integer",
                      "example": 5
                    },
                    "progress": {
                      "type": "object",
                      "properties": {
                        "unit": {
                          "type": "string",
                          "example": "percentage"
                        },
                        "value": {
                          "type": "integer",
                          "example": 0
                        },
                        "detailedStatus": {
                          "type": "object",
                          "properties": {
                            "oldInstances": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "instanceId": {
                                    "type": "string"
                                  },
                                  "status": {
                                    "type": "string"
                                  }
                                }
                              },
                              "example": [
                                {
                                  "instanceId": "i-003a0281a24c01a20",
                                  "status": "REPLACED"
                                },
                                {
                                  "instanceId": "i-003a0281a24c01a21",
                                  "status": "TO_BE_REPLACED"
                                },
                                {
                                  "instanceId": "i-003a0281a24c01a22",
                                  "status": "COULD_NOT_BE_REPLACED"
                                },
                                {
                                  "instanceId": "i-003a0281a24c01a23",
                                  "status": "NOT_REPLACED_DUE_TO_PDB"
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "oceanId": {
                      "type": "string",
                      "example": "o-12e31234"
                    },
                    "respectPdb": {
                      "type": "boolean",
                      "example": true
                    },
                    "batchMinHealthyPercentage": {
                      "type": "integer",
                      "example": 100
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2019-03-24T15:46:09.000Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "example": "2019-03-24T15:46:09.000Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get Roll",
        "description": "Get status for a roll of an Ocean cluster.\n",
        "operationId": "oceanAwsRollGetSingleRoll",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "oceanClusterId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "o-1abcd124",
            "description": "The identifier of the Ocean cluster\n"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll~1%7BROLL_ID%7D/put/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D~1roll/post/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/cluster/{oceanClusterId}/nodes": {
      "get": {
        "summary": "Get Cluster Nodes",
        "description": "Get nodes data of an Ocean cluster.\n",
        "operationId": "oceanAwsGetNodes",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "in": "query",
            "name": "launchSpecId",
            "example": "ols-123abc",
            "description": "Ocean cluster Virtual Node Group identifier.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "instanceId",
            "schema": {
              "type": "string"
            },
            "example": "i-123",
            "description": "Get a specific node by instance id."
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Kubernetes AWS Nodes Data Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/k8s/cluster/o-12345abc/nodes"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "AWS Ocean kubernetes node data",
                                "description": "Node data of Ocean cluster.",
                                "properties": {
                                  "instanceId": {
                                    "type": "string",
                                    "example": "i-123",
                                    "description": "The AWS instance id of this node.\n"
                                  },
                                  "instanceType": {
                                    "type": "string",
                                    "example": "c3.large",
                                    "description": "The AWS instance type of this node.\n"
                                  },
                                  "availabilityZone": {
                                    "type": "string",
                                    "example": "us-west-2b",
                                    "description": "The AWS availability zone of this node.\n"
                                  },
                                  "launchSpecId": {
                                    "type": "string",
                                    "example": "ols-123",
                                    "description": "The node's Virtual Node Group ID.\n"
                                  },
                                  "launchSpecName": {
                                    "type": "string",
                                    "example": "dev-vng",
                                    "description": "The node's Virtual Node Group name.\n"
                                  },
                                  "lifeCycle": {
                                    "type": "string",
                                    "enum": [
                                      "Spot",
                                      "OD",
                                      "OD (RI)",
                                      "OD (SP)"
                                    ],
                                    "example": "Spot",
                                    "description": "The AWS lifeCycle of this node.\n"
                                  },
                                  "publicIp": {
                                    "type": "string",
                                    "example": "1.2.3.4",
                                    "description": "This node's public ip.\n"
                                  },
                                  "workloadRequestedMilliCpu": {
                                    "type": "number",
                                    "example": 1320,
                                    "description": "The amount of milli cpus requested by the kubernetes workload.\n"
                                  },
                                  "workloadRequestedMemoryInMiB": {
                                    "type": "number",
                                    "example": 500,
                                    "description": "The amount of memory in MiB requested by the kubernetes workload.\n"
                                  },
                                  "workloadRequestedGpu": {
                                    "type": "number",
                                    "example": 1,
                                    "description": "The amount of gpus requested by the kubernetes workload.\n"
                                  },
                                  "headroomRequestedMilliCpu": {
                                    "type": "number",
                                    "example": 1320,
                                    "description": "The amount of milli cpus saved for headroom.\n"
                                  },
                                  "headroomRequestedMemoryInMiB": {
                                    "type": "number",
                                    "example": 512,
                                    "description": "The amount of memory in MiB saved for headroom.\n"
                                  },
                                  "headroomRequestedGpu": {
                                    "type": "number",
                                    "example": 1,
                                    "description": "The amount of gpus saved for headroom.\n"
                                  },
                                  "allocatableMilliCpu": {
                                    "type": "number",
                                    "example": 2000,
                                    "description": "The amount of allocatable milli cpus as registered in kubernetes.\n"
                                  },
                                  "allocatableMemoryInMiB": {
                                    "type": "number",
                                    "example": 3646.1,
                                    "description": "The amount of allocatable memory in MiB as registered in kubernetes.\n"
                                  },
                                  "allocatableGpu": {
                                    "type": "number",
                                    "example": 1,
                                    "description": "The amount of allocatable gpus as registered in kubernetes.\n"
                                  },
                                  "nodeName": {
                                    "type": "string",
                                    "example": "node-1",
                                    "description": "The kubernetes node name.\n"
                                  },
                                  "registrationStatus": {
                                    "type": "string",
                                    "enum": [
                                      "Registered",
                                      "Registering",
                                      "Failed"
                                    ],
                                    "example": "Registered",
                                    "description": "The registration status of this node.\n"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "example": "2021-10-01T05:51:06.000Z",
                                    "description": "When was this node's instance was created at.\n"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:k8s:nodes"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/cluster/{oceanClusterId}/detachInstances": {
      "put": {
        "summary": "Detach Instances",
        "description": "Detach instances from your Ocean cluster.\n",
        "operationId": "oceanAwsDetachInstance",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1detachInstances/put/requestBody/content/application~1json/schema/allOf/0"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detach Instances Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/k8s/cluster/o-abcd1234/detachInstances"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/cluster/{oceanClusterId}/aggregatedCosts": {
      "post": {
        "summary": "Get Cluster Aggregated Detailed Costs",
        "description": "Provides Kubernetes cluster resource usage and costs over a time interval which can be grouped and/or filtered by label/annotaion.\\\nFor example - application name (webapp, backend), environment (production, staging), version etc.\\\nThe response will contain a breakdown of the cluster resource costs($) in terms of compute (CPU, memory), storage (block, file, rootVolume).\nThe response will group the cluster usage costs based on preselected default of application namespace or user selected label or annotation.\\\nWithin the group, resource costs are broken down per resource kind (Deployment, DaemonSet etc.).\n\nTime Rounding Down: The CostAnalysis API applies rounding down to the hours provided during the call.\\\nFor example, the value 1707004799099 (In GMT) representing Saturday, February 3, 2024, 23:59:59.099 is rounded down to Saturday, February 3, 2024, 23:00:00.000, resulting in the omission of one hour of cost.\n",
        "operationId": "oceanAwsK8sClusterAggregatedDetailedCosts",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "endTime",
                      "startTime"
                    ],
                    "properties": {
                      "startTime": {
                        "type": "string",
                        "example": "2018-06-20T11:35:02.745Z",
                        "description": "Beginning date value using either the date format \"yyyy-MM-dd'T'HH:mm:ss'Z'\" or ms \"1494751821472\".\n"
                      },
                      "endTime": {
                        "type": "string",
                        "example": "2018-06-22T11:30:01.745Z",
                        "description": "End date value using either the date format \"yyyy-MM-dd'T'HH:mm:ss'Z'\" or ms \"1494751821472\".\n"
                      },
                      "groupBy": {
                        "type": "string",
                        "description": "The parameter we want to group the costs by.\n",
                        "default": "namespace",
                        "example": "namespace.label.env",
                        "enum": [
                          "namespace",
                          "namespace.label.${labelKey}",
                          "resource.label.${labelKey}",
                          "resource.annotation.${annotationKey}",
                          "namespace.annotation.${annotationKey}"
                        ]
                      },
                      "filter": {
                        "type": "object",
                        "description": "Describe how to filter the costs. Optional field.",
                        "required": [
                          "scope",
                          "conditions"
                        ],
                        "properties": {
                          "scope": {
                            "type": "string",
                            "enum": [
                              "namespace",
                              "resource"
                            ]
                          },
                          "conditions": {
                            "type": "object",
                            "required": [
                              "anyMatch"
                            ],
                            "properties": {
                              "anyMatch": {
                                "type": "array",
                                "description": "Array of conditions set that OR operator is applied between them.\n",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "allMatch"
                                  ],
                                  "properties": {
                                    "allMatch": {
                                      "type": "array",
                                      "description": "Array of conditions that AND operator is applied between them.\\\nFor example, (label env equals prod) AND (label app exists)\n",
                                      "items": {
                                        "type": "object",
                                        "description": "The basic expression of a condition",
                                        "required": [
                                          "type",
                                          "key",
                                          "operator"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "label",
                                              "annotation"
                                            ]
                                          },
                                          "key": {
                                            "type": "string",
                                            "description": "May be any string, but shouldn't be empty.\n",
                                            "example": "env"
                                          },
                                          "operator": {
                                            "type": "string",
                                            "enum": [
                                              "equals",
                                              "notEquals",
                                              "exists",
                                              "notExists"
                                            ]
                                          },
                                          "value": {
                                            "type": "string",
                                            "description": "Required whenever the operator is \"equals\" or \"notEquals\".\n",
                                            "example": "prod"
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "example": [
                                  {
                                    "allMatch": [
                                      {
                                        "type": "label",
                                        "key": "env",
                                        "operator": "equals",
                                        "value": "prod"
                                      },
                                      {
                                        "type": "label",
                                        "key": "app",
                                        "operator": "exists"
                                      }
                                    ]
                                  },
                                  {
                                    "allMatch": [
                                      {
                                        "type": "annotation",
                                        "key": "meta.data",
                                        "operator": "exists"
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Cluster Aggregated Detailed Costs Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/k8s/cluster/o-abcd1234/aggregatedCosts"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "result": {
                                    "type": "object",
                                    "properties": {
                                      "totalForDuration": {
                                        "type": "object",
                                        "properties": {
                                          "startTime": {
                                            "type": "string",
                                            "example": "2018-06-20T11:35:01.745Z",
                                            "description": "Beginning date value using either the date format \"yyyy-MM-dd'T'HH:mm:ss'Z'\" or ms \"1494751821472\".\n"
                                          },
                                          "endTime": {
                                            "type": "string",
                                            "example": "2018-06-22T11:30:01.745Z",
                                            "description": "End date value using either the date format \"yyyy-MM-dd'T'HH:mm:ss'Z'\" or ms \"1494751821472\".\n"
                                          },
                                          "summary": {
                                            "type": "object",
                                            "properties": {
                                              "total": {
                                                "type": "number",
                                                "example": 41772.882658035785,
                                                "description": "The total costs of cluster in a given time range"
                                              },
                                              "compute": {
                                                "type": "object",
                                                "properties": {
                                                  "total": {
                                                    "type": "number",
                                                    "example": 40668.1299631538,
                                                    "description": "The total compute costs of the cluster in a given time range"
                                                  },
                                                  "workloads": {
                                                    "type": "object",
                                                    "properties": {
                                                      "total": {
                                                        "type": "number",
                                                        "example": 39882.13803327978
                                                      }
                                                    }
                                                  },
                                                  "headroom": {
                                                    "type": "object",
                                                    "properties": {
                                                      "total": {
                                                        "type": "number",
                                                        "example": 0
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "storage": {
                                                "type": "object",
                                                "properties": {
                                                  "total": {
                                                    "type": "number",
                                                    "example": 1104.7526948819868,
                                                    "description": "The total storage costs of the cluster in given time range"
                                                  },
                                                  "block": {
                                                    "type": "object",
                                                    "properties": {
                                                      "total": {
                                                        "type": "number",
                                                        "example": 1104.7526948819868
                                                      },
                                                      "ebsPv": {
                                                        "type": "object",
                                                        "properties": {
                                                          "total": {
                                                            "type": "number",
                                                            "example": 1104.7526948819868
                                                          }
                                                        }
                                                      },
                                                      "nonPv": {
                                                        "type": "object",
                                                        "properties": {
                                                          "total": {
                                                            "type": "number",
                                                            "example": 0
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "file": {
                                                    "type": "object",
                                                    "properties": {
                                                      "total": {
                                                        "type": "number",
                                                        "example": 0
                                                      },
                                                      "efsPv": {
                                                        "type": "object",
                                                        "properties": {
                                                          "total": {
                                                            "type": "number",
                                                            "example": 0
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "networking": {
                                                "type": "object",
                                                "properties": {
                                                  "totalCost": {
                                                    "type": "number",
                                                    "example": 0.00278988928,
                                                    "description": "The total costs of cluster's networking in a given time range"
                                                  },
                                                  "totalUsage": {
                                                    "type": "number",
                                                    "example": 0.03154064,
                                                    "description": "The total usages of cluster's networking in a given time range"
                                                  },
                                                  "total": {
                                                    "type": "object",
                                                    "properties": {
                                                      "in": {
                                                        "type": "object",
                                                        "properties": {
                                                          "cost": {
                                                            "type": "number",
                                                            "example": 0.00139494464
                                                          },
                                                          "usage": {
                                                            "type": "number",
                                                            "example": 0.01577032
                                                          }
                                                        }
                                                      },
                                                      "out": {
                                                        "type": "object",
                                                        "properties": {
                                                          "cost": {
                                                            "type": "number",
                                                            "example": 0.00139494464
                                                          },
                                                          "usage": {
                                                            "type": "number",
                                                            "example": 0.01577032
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "internet": {
                                                    "type": "object",
                                                    "properties": {
                                                      "in": {
                                                        "type": "object",
                                                        "properties": {
                                                          "cost": {
                                                            "type": "number",
                                                            "example": 0.000693972
                                                          },
                                                          "usage": {
                                                            "type": "number",
                                                            "example": 0.0077108
                                                          }
                                                        }
                                                      },
                                                      "out": {
                                                        "type": "object",
                                                        "properties": {
                                                          "cost": {
                                                            "type": "number",
                                                            "example": 0.000693972
                                                          },
                                                          "usage": {
                                                            "type": "number",
                                                            "example": 0.0077108
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "interAZ": {
                                                    "type": "object",
                                                    "properties": {
                                                      "in": {
                                                        "type": "object",
                                                        "properties": {
                                                          "cost": {
                                                            "type": "number",
                                                            "example": 0.0000035003200000000003
                                                          },
                                                          "usage": {
                                                            "type": "number",
                                                            "example": 0.000175016
                                                          }
                                                        }
                                                      },
                                                      "out": {
                                                        "type": "object",
                                                        "properties": {
                                                          "cost": {
                                                            "type": "number",
                                                            "example": 0.0000035003200000000003
                                                          },
                                                          "usage": {
                                                            "type": "number",
                                                            "example": 0.000175016
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "intraAZ": {
                                                    "type": "object",
                                                    "properties": {
                                                      "in": {
                                                        "type": "object",
                                                        "properties": {
                                                          "cost": {
                                                            "type": "number",
                                                            "example": 0.000693972
                                                          },
                                                          "usage": {
                                                            "type": "number",
                                                            "example": 0.0077108
                                                          }
                                                        }
                                                      },
                                                      "out": {
                                                        "type": "object",
                                                        "properties": {
                                                          "cost": {
                                                            "type": "number",
                                                            "example": 0.000693972
                                                          },
                                                          "usage": {
                                                            "type": "number",
                                                            "example": 0.0077108
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "interRegion": {
                                                    "type": "object",
                                                    "properties": {
                                                      "in": {
                                                        "type": "object",
                                                        "properties": {
                                                          "cost": {
                                                            "type": "number",
                                                            "example": 0.0000035003200000000003
                                                          },
                                                          "usage": {
                                                            "type": "number",
                                                            "example": 0.000175016
                                                          }
                                                        }
                                                      },
                                                      "out": {
                                                        "type": "object",
                                                        "properties": {
                                                          "cost": {
                                                            "type": "number",
                                                            "example": 0.0000035003200000000003
                                                          },
                                                          "usage": {
                                                            "type": "number",
                                                            "example": 0.000175016
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "detailedCosts": {
                                            "type": "object",
                                            "properties": {
                                              "groupedBy": {
                                                "type": "string",
                                                "example": "n.l.name"
                                              },
                                              "aggregations": {
                                                "type": "object",
                                                "description": "Contains aggregation for each group by value.\n",
                                                "additionalProperties": {
                                                  "type": "object",
                                                  "description": "For example - if group by is namespace so each property name will a namesapce in the cluster.",
                                                  "properties": {
                                                    "summary": {
                                                      "type": "object",
                                                      "properties": {
                                                        "total": {
                                                          "type": "number",
                                                          "example": 423.33455
                                                        },
                                                        "compute": {
                                                          "type": "object",
                                                          "properties": {
                                                            "total": {
                                                              "type": "number",
                                                              "example": 125.23778
                                                            }
                                                          }
                                                        },
                                                        "storage": {
                                                          "type": "object",
                                                          "properties": {
                                                            "total": {
                                                              "type": "number",
                                                              "example": 307.09677
                                                            },
                                                            "block": {
                                                              "type": "object",
                                                              "properties": {
                                                                "total": {
                                                                  "type": "number",
                                                                  "example": 300
                                                                },
                                                                "ebsPv": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "total": {
                                                                      "type": "number",
                                                                      "example": 300
                                                                    }
                                                                  }
                                                                },
                                                                "nonPv": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "total": {
                                                                      "type": "number",
                                                                      "example": 0
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            },
                                                            "file": {
                                                              "type": "object",
                                                              "properties": {
                                                                "total": {
                                                                  "type": "number",
                                                                  "example": 7.09677
                                                                },
                                                                "efsPv": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "total": {
                                                                      "type": "number",
                                                                      "example": 7.09677
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "networking": {
                                                          "type": "object",
                                                          "properties": {
                                                            "totalCost": {
                                                              "type": "number",
                                                              "example": 0.00278988928,
                                                              "description": "The total costs of cluster's networking in a given time range"
                                                            },
                                                            "totalUsage": {
                                                              "type": "number",
                                                              "example": 0.03154064,
                                                              "description": "The total usages of cluster's networking in a given time range"
                                                            },
                                                            "total": {
                                                              "type": "object",
                                                              "properties": {
                                                                "in": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "cost": {
                                                                      "type": "number",
                                                                      "example": 0.00139494464
                                                                    },
                                                                    "usage": {
                                                                      "type": "number",
                                                                      "example": 0.01577032
                                                                    }
                                                                  }
                                                                },
                                                                "out": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "cost": {
                                                                      "type": "number",
                                                                      "example": 0.00139494464
                                                                    },
                                                                    "usage": {
                                                                      "type": "number",
                                                                      "example": 0.01577032
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            },
                                                            "internet": {
                                                              "type": "object",
                                                              "properties": {
                                                                "in": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "cost": {
                                                                      "type": "number",
                                                                      "example": 0.000693972
                                                                    },
                                                                    "usage": {
                                                                      "type": "number",
                                                                      "example": 0.0077108
                                                                    }
                                                                  }
                                                                },
                                                                "out": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "cost": {
                                                                      "type": "number",
                                                                      "example": 0.000693972
                                                                    },
                                                                    "usage": {
                                                                      "type": "number",
                                                                      "example": 0.0077108
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            },
                                                            "interAZ": {
                                                              "type": "object",
                                                              "properties": {
                                                                "in": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "cost": {
                                                                      "type": "number",
                                                                      "example": 0.0000035003200000000003
                                                                    },
                                                                    "usage": {
                                                                      "type": "number",
                                                                      "example": 0.000175016
                                                                    }
                                                                  }
                                                                },
                                                                "out": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "cost": {
                                                                      "type": "number",
                                                                      "example": 0.0000035003200000000003
                                                                    },
                                                                    "usage": {
                                                                      "type": "number",
                                                                      "example": 0.000175016
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            },
                                                            "intraAZ": {
                                                              "type": "object",
                                                              "properties": {
                                                                "in": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "cost": {
                                                                      "type": "number",
                                                                      "example": 0.000693972
                                                                    },
                                                                    "usage": {
                                                                      "type": "number",
                                                                      "example": 0.0077108
                                                                    }
                                                                  }
                                                                },
                                                                "out": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "cost": {
                                                                      "type": "number",
                                                                      "example": 0.000693972
                                                                    },
                                                                    "usage": {
                                                                      "type": "number",
                                                                      "example": 0.0077108
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            },
                                                            "interRegion": {
                                                              "type": "object",
                                                              "properties": {
                                                                "in": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "cost": {
                                                                      "type": "number",
                                                                      "example": 0.0000035003200000000003
                                                                    },
                                                                    "usage": {
                                                                      "type": "number",
                                                                      "example": 0.000175016
                                                                    }
                                                                  }
                                                                },
                                                                "out": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "cost": {
                                                                      "type": "number",
                                                                      "example": 0.0000035003200000000003
                                                                    },
                                                                    "usage": {
                                                                      "type": "number",
                                                                      "example": 0.000175016
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "resources": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "metadata": {
                                                            "type": "object",
                                                            "properties": {
                                                              "name": {
                                                                "type": "string",
                                                                "example": "k8s-events"
                                                              },
                                                              "type": {
                                                                "type": "string",
                                                                "example": "Deployment"
                                                              },
                                                              "namespace": {
                                                                "type": "string",
                                                                "example": "kube-system"
                                                              }
                                                            }
                                                          },
                                                          "total": {
                                                            "type": "number",
                                                            "example": 1.655635222089105
                                                          },
                                                          "compute": {
                                                            "type": "object",
                                                            "properties": {
                                                              "total": {
                                                                "type": "number",
                                                                "example": 1.4213600158059045
                                                              }
                                                            }
                                                          },
                                                          "storage": {
                                                            "type": "object",
                                                            "properties": {
                                                              "total": {
                                                                "type": "number",
                                                                "example": 0.23427520628320053
                                                              },
                                                              "block": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "total": {
                                                                    "type": "number",
                                                                    "example": 0.23427520628320053
                                                                  },
                                                                  "ebsPv": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                      "total": {
                                                                        "type": "number",
                                                                        "example": 0
                                                                      }
                                                                    }
                                                                  },
                                                                  "nonPv": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                      "total": {
                                                                        "type": "number",
                                                                        "example": 0.23427520628320053
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "file": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "total": {
                                                                    "type": "number",
                                                                    "example": 0
                                                                  },
                                                                  "efsPv": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                      "total": {
                                                                        "type": "number",
                                                                        "example": 0
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "networking": {
                                                            "type": "object",
                                                            "properties": {
                                                              "totalCost": {
                                                                "type": "number",
                                                                "example": 0.00278988928,
                                                                "description": "The total costs of cluster's networking in a given time range"
                                                              },
                                                              "totalUsage": {
                                                                "type": "number",
                                                                "example": 0.03154064,
                                                                "description": "The total usages of cluster's networking in a given time range"
                                                              },
                                                              "total": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "in": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                      "cost": {
                                                                        "type": "number",
                                                                        "example": 0.00139494464
                                                                      },
                                                                      "usage": {
                                                                        "type": "number",
                                                                        "example": 0.01577032
                                                                      }
                                                                    }
                                                                  },
                                                                  "out": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                      "cost": {
                                                                        "type": "number",
                                                                        "example": 0.00139494464
                                                                      },
                                                                      "usage": {
                                                                        "type": "number",
                                                                        "example": 0.01577032
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "internet": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "in": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                      "cost": {
                                                                        "type": "number",
                                                                        "example": 0.000693972
                                                                      },
                                                                      "usage": {
                                                                        "type": "number",
                                                                        "example": 0.0077108
                                                                      }
                                                                    }
                                                                  },
                                                                  "out": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                      "cost": {
                                                                        "type": "number",
                                                                        "example": 0.000693972
                                                                      },
                                                                      "usage": {
                                                                        "type": "number",
                                                                        "example": 0.0077108
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "interAZ": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "in": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                      "cost": {
                                                                        "type": "number",
                                                                        "example": 0.0000035003200000000003
                                                                      },
                                                                      "usage": {
                                                                        "type": "number",
                                                                        "example": 0.000175016
                                                                      }
                                                                    }
                                                                  },
                                                                  "out": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                      "cost": {
                                                                        "type": "number",
                                                                        "example": 0.0000035003200000000003
                                                                      },
                                                                      "usage": {
                                                                        "type": "number",
                                                                        "example": 0.000175016
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "intraAZ": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "in": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                      "cost": {
                                                                        "type": "number",
                                                                        "example": 0.000693972
                                                                      },
                                                                      "usage": {
                                                                        "type": "number",
                                                                        "example": 0.0077108
                                                                      }
                                                                    }
                                                                  },
                                                                  "out": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                      "cost": {
                                                                        "type": "number",
                                                                        "example": 0.000693972
                                                                      },
                                                                      "usage": {
                                                                        "type": "number",
                                                                        "example": 0.0077108
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "interRegion": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "in": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                      "cost": {
                                                                        "type": "number",
                                                                        "example": 0.0000035003200000000003
                                                                      },
                                                                      "usage": {
                                                                        "type": "number",
                                                                        "example": 0.000175016
                                                                      }
                                                                    }
                                                                  },
                                                                  "out": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                      "cost": {
                                                                        "type": "number",
                                                                        "example": 0.0000035003200000000003
                                                                      },
                                                                      "usage": {
                                                                        "type": "number",
                                                                        "example": 0.000175016
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "ocean:k8s:cluster:aggregatedCosts:detailed"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/cluster/{oceanClusterId}/aggregatedCosts/summary": {
      "post": {
        "summary": "Get Cluster Aggregated Summary Costs",
        "description": "Provides Kubernetes cluster summary usage and costs over a time interval which can be grouped and/or filtered by label/annotaion,\\\nfor example - application name (webapp, backend), environment (production, staging), version etc.\\\nThe response will contain a breakdown of the cluster resource costs($) in terms of compute (CPU, memory), storage (block, file, rootVolume).\nThe response will group the cluster usage costs based on preselected default of application namespace or user selected label or annotation.\n\nTime Rounding Down: The CostAnalysis API applies rounding down to the hours provided during the call.\\\nFor example, the value 1707004799099 (In GMT) representing Saturday, February 3, 2024, 23:59:59.099 is rounded down to Saturday, February 3, 2024, 23:00:00.000, resulting in the omission of one hour of cost.\n",
        "operationId": "oceanAwsK8sClusterAggregatedSummaryCosts",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "endTime",
                      "startTime"
                    ],
                    "properties": {
                      "startTime": {
                        "type": "string",
                        "example": "2018-06-20T11:35:02.745Z",
                        "description": "Beginning date value using either the date format \"yyyy-MM-dd'T'HH:mm:ss'Z'\" or ms \"1494751821472\".\n"
                      },
                      "endTime": {
                        "type": "string",
                        "example": "2018-06-22T11:30:01.745Z",
                        "description": "End date value using either the date format \"yyyy-MM-dd'T'HH:mm:ss'Z'\" or ms \"1494751821472\".\n"
                      },
                      "groupBy": {
                        "type": "string",
                        "description": "The parameter we want to group the costs by.\n",
                        "default": "namespace",
                        "example": "namespace.label.env",
                        "enum": [
                          "namespace",
                          "namespace.label.${labelKey}",
                          "resource.label.${labelKey}",
                          "resource.annotation.${annotationKey}",
                          "namespace.annotation.${annotationKey}"
                        ]
                      },
                      "filter": {
                        "type": "object",
                        "description": "Describe how to filter the costs. Optional field.",
                        "required": [
                          "scope",
                          "conditions"
                        ],
                        "properties": {
                          "scope": {
                            "type": "string",
                            "enum": [
                              "namespace",
                              "resource"
                            ]
                          },
                          "conditions": {
                            "type": "object",
                            "required": [
                              "anyMatch"
                            ],
                            "properties": {
                              "anyMatch": {
                                "type": "array",
                                "description": "Array of conditions set that OR operator is applied between them.\n",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "allMatch"
                                  ],
                                  "properties": {
                                    "allMatch": {
                                      "type": "array",
                                      "description": "Array of conditions that AND operator is applied between them.\\\nFor example, (label env equals prod) AND (label app exists)\n",
                                      "items": {
                                        "type": "object",
                                        "description": "The basic expression of a condition",
                                        "required": [
                                          "type",
                                          "key",
                                          "operator"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "label",
                                              "annotation"
                                            ]
                                          },
                                          "key": {
                                            "type": "string",
                                            "description": "May be any string, but shouldn't be empty.\n",
                                            "example": "env"
                                          },
                                          "operator": {
                                            "type": "string",
                                            "enum": [
                                              "equals",
                                              "notEquals",
                                              "exists",
                                              "notExists"
                                            ]
                                          },
                                          "value": {
                                            "type": "string",
                                            "description": "Required whenever the operator is \"equals\" or \"notEquals\".\n",
                                            "example": "prod"
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "example": [
                                  {
                                    "allMatch": [
                                      {
                                        "type": "label",
                                        "key": "env",
                                        "operator": "equals",
                                        "value": "prod"
                                      },
                                      {
                                        "type": "label",
                                        "key": "app",
                                        "operator": "exists"
                                      }
                                    ]
                                  },
                                  {
                                    "allMatch": [
                                      {
                                        "type": "annotation",
                                        "key": "meta.data",
                                        "operator": "exists"
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Cluster Aggregated Summary Costs Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/k8s/cluster/o-abcd1234/aggregatedCosts/summary"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "result": {
                                    "type": "object",
                                    "properties": {
                                      "totalForDuration": {
                                        "type": "object",
                                        "properties": {
                                          "startTime": {
                                            "type": "string",
                                            "example": "2018-06-20T11:35:01.745Z",
                                            "description": "Beginning date value using either the date format \"yyyy-MM-dd'T'HH:mm:ss'Z'\" or ms \"1494751821472\".\n"
                                          },
                                          "endTime": {
                                            "type": "string",
                                            "example": "2018-06-22T11:30:01.745Z",
                                            "description": "End date value using either the date format \"yyyy-MM-dd'T'HH:mm:ss'Z'\" or ms \"1494751821472\".\n"
                                          },
                                          "summary": {
                                            "type": "object",
                                            "properties": {
                                              "total": {
                                                "type": "number",
                                                "example": 41772.882658035785,
                                                "description": "The total costs of cluster in a given time range"
                                              },
                                              "compute": {
                                                "type": "object",
                                                "properties": {
                                                  "total": {
                                                    "type": "number",
                                                    "example": 40668.1299631538,
                                                    "description": "The total compute costs of the cluster in a given time range"
                                                  },
                                                  "workloads": {
                                                    "type": "object",
                                                    "properties": {
                                                      "total": {
                                                        "type": "number",
                                                        "example": 39882.13803327978
                                                      }
                                                    }
                                                  },
                                                  "headroom": {
                                                    "type": "object",
                                                    "properties": {
                                                      "total": {
                                                        "type": "number",
                                                        "example": 0
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "storage": {
                                                "type": "object",
                                                "properties": {
                                                  "total": {
                                                    "type": "number",
                                                    "example": 1104.7526948819868,
                                                    "description": "The total storage costs of the cluster in given time range"
                                                  },
                                                  "block": {
                                                    "type": "object",
                                                    "properties": {
                                                      "total": {
                                                        "type": "number",
                                                        "example": 1104.7526948819868
                                                      },
                                                      "ebsPv": {
                                                        "type": "object",
                                                        "properties": {
                                                          "total": {
                                                            "type": "number",
                                                            "example": 1104.7526948819868
                                                          }
                                                        }
                                                      },
                                                      "nonPv": {
                                                        "type": "object",
                                                        "properties": {
                                                          "total": {
                                                            "type": "number",
                                                            "example": 0
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "file": {
                                                    "type": "object",
                                                    "properties": {
                                                      "total": {
                                                        "type": "number",
                                                        "example": 0
                                                      },
                                                      "efsPv": {
                                                        "type": "object",
                                                        "properties": {
                                                          "total": {
                                                            "type": "number",
                                                            "example": 0
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "networking": {
                                                "type": "object",
                                                "properties": {
                                                  "totalCost": {
                                                    "type": "number",
                                                    "example": 0.00278988928,
                                                    "description": "The total costs of cluster's networking in a given time range"
                                                  },
                                                  "totalUsage": {
                                                    "type": "number",
                                                    "example": 0.03154064,
                                                    "description": "The total usages of cluster's networking in a given time range"
                                                  },
                                                  "total": {
                                                    "type": "object",
                                                    "properties": {
                                                      "in": {
                                                        "type": "object",
                                                        "properties": {
                                                          "cost": {
                                                            "type": "number",
                                                            "example": 0.00139494464
                                                          },
                                                          "usage": {
                                                            "type": "number",
                                                            "example": 0.01577032
                                                          }
                                                        }
                                                      },
                                                      "out": {
                                                        "type": "object",
                                                        "properties": {
                                                          "cost": {
                                                            "type": "number",
                                                            "example": 0.00139494464
                                                          },
                                                          "usage": {
                                                            "type": "number",
                                                            "example": 0.01577032
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "internet": {
                                                    "type": "object",
                                                    "properties": {
                                                      "in": {
                                                        "type": "object",
                                                        "properties": {
                                                          "cost": {
                                                            "type": "number",
                                                            "example": 0.000693972
                                                          },
                                                          "usage": {
                                                            "type": "number",
                                                            "example": 0.0077108
                                                          }
                                                        }
                                                      },
                                                      "out": {
                                                        "type": "object",
                                                        "properties": {
                                                          "cost": {
                                                            "type": "number",
                                                            "example": 0.000693972
                                                          },
                                                          "usage": {
                                                            "type": "number",
                                                            "example": 0.0077108
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "interAZ": {
                                                    "type": "object",
                                                    "properties": {
                                                      "in": {
                                                        "type": "object",
                                                        "properties": {
                                                          "cost": {
                                                            "type": "number",
                                                            "example": 0.0000035003200000000003
                                                          },
                                                          "usage": {
                                                            "type": "number",
                                                            "example": 0.000175016
                                                          }
                                                        }
                                                      },
                                                      "out": {
                                                        "type": "object",
                                                        "properties": {
                                                          "cost": {
                                                            "type": "number",
                                                            "example": 0.0000035003200000000003
                                                          },
                                                          "usage": {
                                                            "type": "number",
                                                            "example": 0.000175016
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "intraAZ": {
                                                    "type": "object",
                                                    "properties": {
                                                      "in": {
                                                        "type": "object",
                                                        "properties": {
                                                          "cost": {
                                                            "type": "number",
                                                            "example": 0.000693972
                                                          },
                                                          "usage": {
                                                            "type": "number",
                                                            "example": 0.0077108
                                                          }
                                                        }
                                                      },
                                                      "out": {
                                                        "type": "object",
                                                        "properties": {
                                                          "cost": {
                                                            "type": "number",
                                                            "example": 0.000693972
                                                          },
                                                          "usage": {
                                                            "type": "number",
                                                            "example": 0.0077108
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "interRegion": {
                                                    "type": "object",
                                                    "properties": {
                                                      "in": {
                                                        "type": "object",
                                                        "properties": {
                                                          "cost": {
                                                            "type": "number",
                                                            "example": 0.0000035003200000000003
                                                          },
                                                          "usage": {
                                                            "type": "number",
                                                            "example": 0.000175016
                                                          }
                                                        }
                                                      },
                                                      "out": {
                                                        "type": "object",
                                                        "properties": {
                                                          "cost": {
                                                            "type": "number",
                                                            "example": 0.0000035003200000000003
                                                          },
                                                          "usage": {
                                                            "type": "number",
                                                            "example": 0.000175016
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "ocean:k8s:cluster:aggregatedCosts:summary"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/eks/cluster/{oceanClusterId}/amiAutoUpdate": {
      "put": {
        "summary": "Initiate EKS AMI Auto Update",
        "description": "Update the Ocean EKS cluster's VNGs with the latest image or the image matching the control plane's version after upgrading, by specifying ‘patch' or 'minorVersion’.\nPerforming this request will update the VNGs with new AMI if available, and run a cluster roll if set.\nIf the response is successful, the old and new AMIs will be included in the response along with the updated VNGs.\nIf a cluster roll is set in the request, the first response for a successful request will indicate the start of a roll.\nIn order to check the status of the roll, you can use the GET Roll API.\n",
        "operationId": "oceanAwsAmiAutoUpdate",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "description": "The object specifying the request to trigger an AMI auto update operation\n",
                    "title": "AMI Auto Update",
                    "properties": {
                      "amiAutoUpdate": {
                        "type": "object",
                        "properties": {
                          "patch": {
                            "type": "boolean",
                            "description": "When set to 'true', the auto-update process will update the VNGs’ images with the latest security patches. Either \"patch\" or \"minorVersion\" must be true.\n",
                            "example": "true",
                            "default": false
                          },
                          "minorVersion": {
                            "type": "boolean",
                            "example": "true",
                            "default": false,
                            "description": "When set to 'true', the auto-update process will update the VNGs’ AMI with the AMI to match the Kubernetes control plane version. Either \"patch\" or \"minorVersion\" must be true.\n"
                          },
                          "applyRoll": {
                            "type": "boolean",
                            "example": "true",
                            "default": false,
                            "description": "This parameter is optional. When the AMI is updated according to the configuration set, a cluster roll can be triggered.\n"
                          },
                          "clusterRoll": {
                            "type": "object",
                            "description": "Cluster roll configuration.",
                            "properties": {
                              "batchSizePercentage": {
                                "type": "integer",
                                "description": "Value as a percent to set the size of a batch in a roll. Valid values are 0-100.",
                                "example": 20
                              },
                              "batchMinHealthyPercentage": {
                                "type": "integer",
                                "description": "Indicates the threshold of minimum healthy instances in single batch. If the amount of healthy instances in single batch is under the threshold, the cluster roll will fail. If exists, the parameter value will be in range of 1-100. In case of null as value, the default value in the backend will be 50%. Value of param should represent the number in percentage (%) of the batch.",
                                "example": 100,
                                "minimum": 1,
                                "maximum": 100,
                                "default": 50
                              },
                              "comment": {
                                "type": "string",
                                "description": "Add a brief description for the roll. The comment is limited to 256 chars.\n",
                                "example": "This is why I rolled my cluster."
                              },
                              "respectPdb": {
                                "type": "boolean",
                                "description": "During the roll, if the parameter is set to true we honor PDB during the instance replacement.\n",
                                "example": true,
                                "default": false
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "EKS AMI Auto Update Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/eks/cluster/o-abcd1234/amiAutoUpdate"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Response indicating AMI updated for each cluster's Virtual Node Groups\n",
                                "title": "AMI Auto Update Response",
                                "properties": {
                                  "oceanId": {
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "o-134abcd",
                                    "description": "Ocean cluster identifier.\n"
                                  },
                                  "status": {
                                    "type": "string",
                                    "description": "Ami update result.\n",
                                    "enum": [
                                      "Success",
                                      "Failed"
                                    ]
                                  },
                                  "data": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "description": "Virtual Node Group AMI auto update details\n",
                                      "properties": {
                                        "vngId": {
                                          "type": "string",
                                          "readOnly": true,
                                          "example": "default",
                                          "description": "The Virtual Node Group Identifier.\n"
                                        },
                                        "vngName": {
                                          "type": "string",
                                          "readOnly": true,
                                          "example": "default",
                                          "description": "The Virtual Node Group name.\n"
                                        },
                                        "status": {
                                          "type": "string",
                                          "readOnly": true,
                                          "example": "UPDATE_SUCCEEDED",
                                          "description": "The AMI update result.\n",
                                          "enum": [
                                            "NO_UPDATE_REQUIRED",
                                            "UPDATE_SUCCEEDED",
                                            "UPDATE_REQUIRED_BUT_FAILED",
                                            "FAILED"
                                          ]
                                        },
                                        "updateType": {
                                          "type": "string",
                                          "readOnly": true,
                                          "example": "MINOR",
                                          "description": "Virtual Node Group's AMI update type.\n",
                                          "enum": [
                                            "MINOR",
                                            "PATCH"
                                          ]
                                        },
                                        "oldAmiId": {
                                          "type": "string",
                                          "readOnly": true,
                                          "example": "ami-00cd348996bfd7ba8",
                                          "description": "The ID of the old AMI that was replaced.\n"
                                        },
                                        "newAmiId": {
                                          "type": "string",
                                          "readOnly": true,
                                          "example": "ami-019e5b81636e5a350",
                                          "description": "The ID of the new AMI that is being used for the VNG.\n"
                                        }
                                      }
                                    }
                                  },
                                  "rollId": {
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "scr-752331b9",
                                    "description": "The ID of the triggered cluster roll.\n"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "2024-01-02T09:57:09.211Z",
                                    "description": "The AMI update method was triggered at this time.\n"
                                  },
                                  "updatedAt": {
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "2024-01-02T09:57:09.211Z",
                                    "description": "The AMI update method was triggered at this time.    \n  \n"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "ocean:k8s:cluster:amiAutoUpdate:summary"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/launchSpec": {
      "post": {
        "summary": "Create Virtual Node Group",
        "description": "Create a Virtual Node Group.\n",
        "operationId": "OceanAWSLaunchSpecCreate",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "initialNodes",
            "example": 1,
            "description": "When set to an integer greater than 0, a corresponding number of nodes will be launched from the  virtual node group created.\n",
            "schema": {
              "type": "integer",
              "default": null
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "launchSpec"
                    ],
                    "properties": {
                      "launchSpec": {
                        "allOf": [
                          {
                            "type": "object",
                            "description": "AWS Cluster Virtual Node Group (VNG).\n",
                            "required": [
                              "oceanId"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "readOnly": true,
                                "example": "ols-12345abc",
                                "description": "The virtual node group identifier.\n"
                              },
                              "oceanId": {
                                "type": "string",
                                "example": "o-abcd1234",
                                "description": "The Ocean cluster identifier. Required for Virtual Node Group creation.\n"
                              },
                              "createdAt": {
                                "type": "string",
                                "readOnly": true,
                                "format": "date-time",
                                "example": "2021-03-17T08:13:08.000Z",
                                "description": "A timestamp of the VNG creation.\n"
                              },
                              "updatedAt": {
                                "type": "string",
                                "readOnly": true,
                                "format": "date-time",
                                "example": "2021-03-17T15:06:13.000Z",
                                "description": "A timestamp of the latest VNG update.\n"
                              }
                            }
                          },
                          {
                            "$ref": "#/paths/~1ocean~1aws~1k8s~1launchSpec~1%7BoceanLaunchSpecId%7D/put/requestBody/content/application~1json/schema/properties/launchSpec"
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Virtual Node Group Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/k8s/launchSpec"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1aws~1k8s~1launchSpec/post/requestBody/content/application~1json/schema/allOf/0/properties/launchSpec"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:k8s:launchSpec"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Virtual Node Groups",
        "description": "List the configurations of all virtual node groups for the cluster.\n",
        "operationId": "OceanAWSLaunchSpecList",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "oceanId",
            "example": "o-12345abc",
            "description": "Identifier of the Ocean cluster.\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Virtual Node Group Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/k8s/launchSpec"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1aws~1k8s~1launchSpec/post/requestBody/content/application~1json/schema/allOf/0/properties/launchSpec"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:k8s:launchSpec"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/launchSpec/{oceanLaunchSpecId}": {
      "delete": {
        "summary": "Delete Virtual Node Group",
        "description": "Delete a specified Virtual Node Group in an Ocean cluster.\n",
        "operationId": "OceanAWSLaunchSpecDelete",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec~1%7BoceanLaunchSpecId%7D/get/parameters/1"
          },
          {
            "in": "query",
            "name": "deleteNodes",
            "example": true,
            "description": "When set to \"true\", all instances belonging to the deleted Virtual Node Group will be drained, detached, and terminated.\n",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "name": "forceDelete",
            "example": true,
            "description": "When set to \"true\", delete even if it is the only custom Virtual Node Group remaining, and default Virtual Node Group has useAsTemlateOnly = true.\n",
            "schema": {
              "type": "boolean",
              "default": null
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Virtual Node Group Delete Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/k8s/launchSpec/ols-12345abc"
                            },
                            "method": {
                              "example": "DELETE"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Virtual Node Group",
        "description": "Update Virtual Node Group.\n",
        "operationId": "OceanAWSLaunchSpecUpdate",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec~1%7BoceanLaunchSpecId%7D/get/parameters/1"
          },
          {
            "in": "query",
            "name": "autoApplyTags",
            "example": true,
            "description": "Optionally update resource tags on the fly without performing a roll.\n",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "launchSpec"
                ],
                "properties": {
                  "launchSpec": {
                    "type": "object",
                    "description": "AWS Cluster Virtual Node Group (VNG).\n",
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "specialty.nodes.spotk8s.com",
                        "description": "Set Virtual Node Group name.\n"
                      },
                      "imageId": {
                        "type": "string",
                        "example": "ami-ID",
                        "description": "Set image identifier. Can be null.\n"
                      },
                      "images": {
                        "type": "array",
                        "description": "An array of image objects. <br>\n* You can configure VNG with either the imageId or images objects, but not both simultaneously.\n* For each architecture type (amd64, arm64) only one AMI is allowed.\n* Valid values: null, or an array with at least one element\n",
                        "items": {
                          "type": "object",
                          "title": "Image object, containing the id of the image used to launch instances.",
                          "required": [
                            "id"
                          ],
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Identifier of the image in AWS. Valid values: any string which is not empty or null.\n",
                              "example": "ami-ID"
                            }
                          }
                        }
                      },
                      "userData": {
                        "type": "string",
                        "example": "dsa89d7uosduxq98sau9s8aux9s8aux09q0qu09axsuix0s9qas09xz",
                        "description": "Set user data script in base 64 encoded MIME.\n"
                      },
                      "iamInstanceProfile": {
                        "type": "object",
                        "title": "auto-scaler",
                        "description": "The instance profile iamRole object.\n",
                        "properties": {
                          "arn": {
                            "type": "string",
                            "example": "arn:aws:iam::123456781234:instance-profile/EKS-nodes-test-NodeInstanceProfile-ABCDEFGH123",
                            "description": "The iamRole ARN. If set, do not set launchSpec.iamInstanceProfile.name\n"
                          },
                          "name": {
                            "type": "string",
                            "description": "The iamRole name. If set, do not set launchSpec.iamInstanceProfile.arn\n",
                            "example": "EKS-nodes-test"
                          }
                        }
                      },
                      "securityGroupIds": {
                        "type": "array",
                        "description": "Set security groups. Each element in the array is a security group identifier.\n",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "sg-0ded3a2980208c30c",
                          "sg-0ded3a2980208c30d"
                        ]
                      },
                      "instanceTypes": {
                        "type": "array",
                        "description": "A list of instance types allowed to be provisioned for pods pending for the Virtual Node Group.\\\nThe list overrides the list defined for the Ocean cluster. Can be null.\n",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "c3.2xlarge",
                          "c4.2xlarge"
                        ]
                      },
                      "instanceTypesFilters": {
                        "$ref": "#/paths/~1ocean~1aws~1k8s~1launchSpec~1%7BoceanLaunchSpecId%7D~1instanceTypeFiltersSimulation/post/requestBody/content/application~1json/schema/allOf/0/properties/instanceTypesFilters"
                      },
                      "preferredOnDemandTypes": {
                        "type": "array",
                        "description": "When Ocean scales up instances, it takes your preferred types into consideration while maintaining a variety of machine types running for optimized distribution.\n",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "c3.large",
                          "m4.xlarge"
                        ]
                      },
                      "preferredSpotTypes": {
                        "type": "array",
                        "description": "When Ocean scales up instances, it takes your preferred types into consideration while maintaining a variety of machine types running for optimized distribution. [Learn More](https://docs.spot.io/ocean/features/vngs/attributes-and-actions-per-vng?id=preferred-spot-instance-types-per-vng)\n",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "c3.2xlarge",
                          "c4.2xlarge"
                        ]
                      },
                      "rootVolumeSize": {
                        "type": "integer",
                        "description": "Set root volume size (in GB). This field and blockDeviceMappings cannot be used in the same specification.\n",
                        "example": 8
                      },
                      "labels": {
                        "type": "array",
                        "description": "An array of labels to add to the VNG nodes. Only custom user labels are allowed,\nand not Kubernetes built-in labels or Spot internal labels.\n",
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "Set label key.\\\nThe following are not allowed:\n* \"kubernetes.io/hostname\"\n* \"failure-domain.beta.kubernetes.io/zone\"\n* \"topology.kubernetes.io/zone\"\n* \"failure-domain.beta.kubernetes.io/region\"\n* \"topology.kubernetes.io/region\"\n* \"beta.kubernetes.io/instance-type\"\n* \"node.kubernetes.io/instance-type\"\n* \"beta.kubernetes.io/os\"\n* \"kubernetes.io/os\"\n* \"beta.kubernetes.io/arch\"\n* \"kubernetes.io/arch\"\n* \"spotinst.io/node-lifecycle\"'\n"
                            },
                            "value": {
                              "type": "string",
                              "description": "Set label value.\n"
                            }
                          }
                        },
                        "example": [
                          {
                            "key": "env",
                            "value": "test"
                          }
                        ]
                      },
                      "taints": {
                        "type": "array",
                        "description": "Add taints to Virtual Node Group.\n",
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "Set taint key.\n"
                            },
                            "value": {
                              "type": "string",
                              "description": "Set taint value.\n"
                            },
                            "effect": {
                              "type": "string",
                              "description": "Set taint effect.\n"
                            }
                          }
                        },
                        "example": [
                          {
                            "key": "taintKey",
                            "value": "taintValue",
                            "effect": "NoSchedule"
                          }
                        ]
                      },
                      "subnetIds": {
                        "type": "array",
                        "description": "Set subnets in Virtual Node Group. Each element in the array is a subnet identifier.\n",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "subnet-123",
                          "subnet-456"
                        ]
                      },
                      "elasticIpPool": {
                        "type": "object",
                        "description": "Assign an Elastic IP to the instances launched by the Virtual Node Group. Can be null.\n",
                        "properties": {
                          "tagSelector": {
                            "type": "object",
                            "required": [
                              "tagKey"
                            ],
                            "description": "Key-value object, which defines an Elastic IP from the customer pool. Can be null.\n",
                            "properties": {
                              "tagKey": {
                                "type": "string",
                                "description": "Elastic IP tag key. The Virtual Node Group will consider all elastic IPs tagged with this tag as a part of the elastic IP pool to use.\n",
                                "example": "color"
                              },
                              "tagValue": {
                                "type": "string",
                                "description": "Elastic IP tag value. Can be null.\n",
                                "example": "orange"
                              }
                            }
                          }
                        }
                      },
                      "autoScale": {
                        "type": "object",
                        "description": "Object specifying the automatic scaling of an Ocean VNG.\n",
                        "properties": {
                          "headrooms": {
                            "description": "Specify the custom headroom per VNG. Provide a list of headroom objects.\n",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "cpuPerUnit": {
                                  "description": "Configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.\n",
                                  "type": "integer",
                                  "example": 1024
                                },
                                "memoryPerUnit": {
                                  "description": "Configure the amount of memory (MiB) to allocate the headroom.\n",
                                  "type": "integer",
                                  "example": 512
                                },
                                "numOfUnits": {
                                  "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n",
                                  "type": "integer",
                                  "example": 2
                                },
                                "gpuPerUnit": {
                                  "type": "integer",
                                  "description": "Amont of GPU to allocate for headroom unit.\n",
                                  "example": 0
                                }
                              }
                            }
                          },
                          "autoHeadroomPercentage": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 200,
                            "description": "Control the headroom % of the specific Virtual Node Group. Effective when cluster.autoScaler.isAutoConfig=true is set on the Ocean cluster.\n",
                            "example": 20
                          },
                          "down": {
                            "type": "object",
                            "description": "Autoscaling scale down operations.\n",
                            "properties": {
                              "maxScaleDownPercentage": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0.1,
                                "maximum": 100,
                                "description": "The maximum percentage allowed to scale down in a single scaling action on the nodes running in a specific VNG. Allowed only if maxScaleDownPercentage is set to null at the cluster level.\n",
                                "example": 30
                              }
                            }
                          }
                        }
                      },
                      "tags": {
                        "type": "array",
                        "description": "List of kay-value pairs of tags.\n",
                        "items": {
                          "type": "object",
                          "properties": {
                            "tagKey": {
                              "type": "string",
                              "description": "Set the tag key.\n",
                              "example": "Creator"
                            },
                            "tagValue": {
                              "type": "string",
                              "description": "Set the tag value.\n",
                              "example": "John Doe"
                            }
                          }
                        }
                      },
                      "blockDeviceMappings": {
                        "type": "array",
                        "description": "Block devices that are exposed to the instance. You can specify virtual devices and EBS volumes.\\\nThis parameter and rootVolumeSize cannot be in the spec at the same time.\\\nThis parameter can be null, but if not null, it must contain at least one block device.\n",
                        "items": {
                          "type": "object",
                          "properties": {
                            "deviceName": {
                              "type": "string",
                              "description": "Set device name.\n",
                              "example": "/dev/xvda"
                            },
                            "ebs": {
                              "type": "object",
                              "description": "Set EBS properties.\n",
                              "properties": {
                                "throughput": {
                                  "type": "integer",
                                  "minimum": 125,
                                  "maximum": 1000,
                                  "example": 125,
                                  "description": "The amount of data transferred to or from a storage device per second. You can use this parameter only if volumetype=‘gp3’.\n"
                                },
                                "deleteOnTermination": {
                                  "type": "boolean",
                                  "description": "Flag to delete the EBS on instance termination.\n",
                                  "example": false
                                },
                                "encrypted": {
                                  "type": "boolean",
                                  "example": false
                                },
                                "iops": {
                                  "type": "integer",
                                  "description": "Must be greater than or equal to 0.\n",
                                  "example": 1
                                },
                                "kmsKeyId": {
                                  "type": "string",
                                  "example": "alias/aws/ebs"
                                },
                                "snapshotId": {
                                  "type": "string",
                                  "example": "snap-abcdefghi111110"
                                },
                                "volumeType": {
                                  "type": "string",
                                  "description": "Set volume type.\n",
                                  "enum": [
                                    "standard",
                                    "io1",
                                    "io2",
                                    "gp2",
                                    "gp3",
                                    "st1",
                                    "sc1"
                                  ],
                                  "example": "gp2"
                                },
                                "volumeSize": {
                                  "type": "integer",
                                  "description": "Set volume size (in GB). When using this property, you cannot use dynamicVolumeSize.\\\nYou must use one or the other. Volume size should be greater than or equal to the size configured in the AMI.\n"
                                },
                                "dynamicVolumeSize": {
                                  "type": "object",
                                  "required": [
                                    "baseSize",
                                    "resource",
                                    "sizePerResourceUnit"
                                  ],
                                  "description": "Set dynamic volume size properties. When using this object, you cannot use volumeSize.\\\nYou must use one or the other.\n",
                                  "properties": {
                                    "baseSize": {
                                      "type": "integer",
                                      "description": "Initial size per volume.\n",
                                      "example": 50
                                    },
                                    "resource": {
                                      "type": "string",
                                      "example": "CPU"
                                    },
                                    "sizePerResourceUnit": {
                                      "type": "integer",
                                      "description": "Additional size per resource unit (in GB).\\\nFor example: if baseSize=50, and sizePerResourceUnit=20, and an instance with 2 CPU is launched, its disk size will be 90 GB.\n",
                                      "example": 20
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "ephemeralStorage": {
                        "type": "object",
                        "properties": {
                          "deviceName": {
                            "type": "string",
                            "description": "Specify an alternative device name from which ephemeral storage calculations should be derived.\nThis parameter is used when the ephemeral storage should not utilize the root device.\nProvide the device name configured in the VNG's BDM or AMI's BDM that differs from the default root device.\n",
                            "example": "/dev/xvdb"
                          }
                        }
                      },
                      "resourceLimits": {
                        "type": "object",
                        "properties": {
                          "maxInstanceCount": {
                            "description": "Option to set a maximum number of instances per Virtual Node Group.\\\nCan be null. If set, value must be greater than or equal to 0.\n",
                            "type": "integer",
                            "example": 5
                          },
                          "minInstanceCount": {
                            "description": "Option to set a minimum number of instances per Virtual Node Group.\\\nCan be null. If set, value must be greater than or equal to 0.\n",
                            "type": "integer",
                            "example": 2
                          }
                        }
                      },
                      "strategy": {
                        "type": "object",
                        "description": "Similar to a strategy for an Ocean cluster, but applying only to a virtual node group.\n",
                        "properties": {
                          "spotPercentage": {
                            "type": "integer",
                            "description": "The desired percentage of the Spot instances out of all running instances for this VNG.\\\nOnly available when the field is **not** set in the cluster directly (cluster.strategy.spotPercentage).\n",
                            "minimum": 0,
                            "maximum": 100,
                            "example": 70,
                            "default": 100
                          }
                        }
                      },
                      "associatePublicIpAddress": {
                        "type": "boolean",
                        "description": "Configure public IP address allocation.\n",
                        "default": false,
                        "example": false
                      },
                      "restrictScaleDown": {
                        "type": "boolean",
                        "description": "When set to “True”, VNG nodes will be treated as if all pods running have the [restrict-scale-down label](https://docs.spot.io/ocean/features/labels-and-taints).\nTherefore, Ocean will not scale nodes down unless empty.\n",
                        "example": false
                      },
                      "scheduling": {
                        "type": "object",
                        "description": "An object used to define scheduled tasks such as a manual headroom update.\n",
                        "title": "Ocean Scheduling",
                        "properties": {
                          "tasks": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Task Definition",
                              "required": [
                                "isEnabled",
                                "cronExpression",
                                "taskType"
                              ],
                              "properties": {
                                "isEnabled": {
                                  "type": "boolean",
                                  "example": true,
                                  "description": "Describes whether the task is enabled. When True, the task runs. When False, it does not run. Required for launchSpec.scheduling.tasks. In case automatic headroom is configured, please make sure to set autoScaler.enableAutomaticAndManualHeadroom on Ocean level to true in order to make sure that the manual headroom would be affective.\n"
                                },
                                "cronExpression": {
                                  "type": "string",
                                  "example": "0 1 * * *",
                                  "description": "A valid cron expression. For example : \" * * * * * \". The cron job runs in UTC time and is in Unix cron format. (See the Cron Expression Validator Script.)\n"
                                },
                                "taskType": {
                                  "type": "string",
                                  "example": "manualHeadroomUpdate",
                                  "enum": [
                                    "manualHeadroomUpdate"
                                  ],
                                  "description": "The activity that you are scheduling. Valid values: \"manualHeadroomUpdate\". Required for launchSpec.scheduling.tasks.\n"
                                },
                                "config": {
                                  "description": "The config of this scheduled task. Depends on the value of `taskType`.",
                                  "oneOf": [
                                    {
                                      "type": "object",
                                      "title": "manualHeadroomUpdate",
                                      "required": [
                                        "headrooms"
                                      ],
                                      "properties": {
                                        "headrooms": {
                                          "description": "Set custom headroom per VNG. Provide a list of launchSpec.autoscale.headroom objects.\n",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "cpuPerUnit": {
                                                "description": "Configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.\n",
                                                "type": "integer"
                                              },
                                              "memoryPerUnit": {
                                                "description": "Configure the amount of memory (MiB) to allocate the headroom.\n",
                                                "type": "integer"
                                              },
                                              "numOfUnits": {
                                                "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n",
                                                "type": "integer"
                                              },
                                              "gpuPerUnit": {
                                                "type": "integer",
                                                "description": "Amont of GPU to allocate for headroom unit.\n"
                                              }
                                            }
                                          },
                                          "example": [
                                            {
                                              "cpuPerUnit": 1024,
                                              "memoryPerUnit": 512,
                                              "numOfUnits": 2,
                                              "gpuPerUnit": 1
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "shutdownHours": {
                            "type": "object",
                            "title": "Shutdown Hours",
                            "description": "An object used to specify times that the nodes in the virtual node group will be taken down.\n",
                            "required": [
                              "timeWindows"
                            ],
                            "properties": {
                              "timeWindows": {
                                "type": "array",
                                "description": "The times that the shutdown hours will apply.\n",
                                "items": {
                                  "type": "string",
                                  "example": "Sat:08:00-Sun:08:00"
                                }
                              },
                              "isEnabled": {
                                "type": "boolean",
                                "example": true,
                                "description": "Flag to enable or disable the shutdown hours mechanism. When False, the mechanism is deactivated, and the virtual node group remains in its current state.\n"
                              }
                            }
                          }
                        }
                      },
                      "instanceMetadataOptions": {
                        "type": "object",
                        "title": "instanceMetadataOptions",
                        "required": [
                          "httpTokens"
                        ],
                        "description": "Ocean instance metadata options object for [IMDSv2](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-service.html).\n",
                        "properties": {
                          "httpTokens": {
                            "type": "string",
                            "description": "Determines if a signed token is required or not.\n",
                            "enum": [
                              "optional",
                              "required"
                            ],
                            "example": "optional"
                          },
                          "httpPutResponseHopLimit": {
                            "type": "integer",
                            "description": "An integer within 1,64 range (including).\nThe desired HTTP PUT response hop limit for instance metadata requests.\nThe larger the number, the further instance metadata requests can travel.\n",
                            "example": 12
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Virtual Node Group Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/k8s/launchSpec/ols-12345abc"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1aws~1k8s~1launchSpec/post/requestBody/content/application~1json/schema/allOf/0/properties/launchSpec"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:k8s:launchSpec"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get Virtual Node Group",
        "operationId": "OceanAWSLaunchSpecGet",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec~1%7BoceanLaunchSpecId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Virtual Node Group Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/k8s/launchSpec/ols-12345abc"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1aws~1k8s~1launchSpec/post/requestBody/content/application~1json/schema/allOf/0/properties/launchSpec"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:k8s:launchSpec"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/launchSpec/{oceanLaunchSpecId}/instanceTypeFiltersSimulation": {
      "post": {
        "summary": "Instance Types Filters Simulation For Virtual Node Group",
        "description": "Returns all instance types that match the given filters. These instance types will be used if the Virtual Node Group is configured with these filters.\n",
        "operationId": "oceanAwsInstanceTypeFiltersSimulationForVng",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec~1%7BoceanLaunchSpecId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "instanceTypesFilters"
                    ],
                    "properties": {
                      "instanceTypesFilters": {
                        "type": "object",
                        "description": "List of instance types filters. The instance types that match with all filters compose the Virtual Node Group's instanceTypes parameter.\\\nThe architectures that come from the Virtual Node Group's images will be taken into account when using this parameter.\\\nCannot be configured together with Virtual Node Group's instanceTypes and with the Cluster's whitelist/blacklist/filters.\n",
                        "title": "InstanceTypesFilters",
                        "properties": {
                          "minVcpu": {
                            "type": "integer",
                            "description": "Minimum number of vcpus available.\n",
                            "minimum": 0,
                            "example": 2
                          },
                          "maxVcpu": {
                            "type": "integer",
                            "description": "Maximum number of vcpus available.\n",
                            "minimum": 1,
                            "example": 16
                          },
                          "minMemoryGiB": {
                            "type": "number",
                            "description": "Minimum amount of Memory (GiB).\n",
                            "minimum": 0,
                            "example": 8
                          },
                          "maxMemoryGiB": {
                            "type": "number",
                            "description": "Maximum amount of Memory (GiB).\n",
                            "minimum": 0,
                            "example": 16
                          },
                          "minGpu": {
                            "type": "integer",
                            "description": "Minimum total number of GPUs.\n",
                            "minimum": 0,
                            "example": 0
                          },
                          "maxGpu": {
                            "type": "integer",
                            "description": "Maximum total number of GPUs.\n",
                            "minimum": 1,
                            "example": 4
                          },
                          "includeFamilies": {
                            "type": "array",
                            "description": "Types belonging to a family from the IncludeFamilies will be available for scaling (asterisk wildcard is also supported). For example, C* will include instance types from these families: c5, c4, c4a, etc.\n",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "c5*",
                              "g5"
                            ]
                          },
                          "excludeFamilies": {
                            "type": "array",
                            "description": "Types belonging to a family from the ExcludeFamilies will not be available for scaling (asterisk wildcard is also supported). For example, C* will exclude instance types from these families: c5, c4, c4a, etc.\n",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "t2",
                              "R4*"
                            ]
                          },
                          "excludeMetal": {
                            "type": "boolean",
                            "default": false,
                            "description": "In case excludeMetal is set to true, metal types will not be available for scaling.\n",
                            "example": true
                          },
                          "isEnaSupported": {
                            "type": "boolean",
                            "description": "Ena is supported or not.\n",
                            "example": true
                          },
                          "virtualizationTypes": {
                            "type": "array",
                            "description": "The filtered instance types will support at least one of the virtualization types from this list.\n",
                            "items": {
                              "type": "string",
                              "enum": [
                                "hvm",
                                "paravirtual"
                              ]
                            },
                            "example": [
                              "hvm"
                            ]
                          },
                          "categories": {
                            "type": "array",
                            "description": "The filtered instance types will belong to one of the categories types from this list.\n",
                            "items": {
                              "type": "string",
                              "enum": [
                                "Accelerated_computing",
                                "Compute_optimized",
                                "General_purpose",
                                "Memory_optimized",
                                "Storage_optimized"
                              ]
                            },
                            "example": [
                              "Accelerated_computing",
                              "Compute_optimized"
                            ]
                          },
                          "minEnis": {
                            "type": "integer",
                            "description": "Minimum number of network interfaces (ENIs).\n",
                            "minimum": 0,
                            "example": 2
                          },
                          "diskTypes": {
                            "type": "array",
                            "description": "The filtered instance types will have one of the disk type from this list.\n",
                            "items": {
                              "type": "string",
                              "enum": [
                                "NVMe",
                                "EBS",
                                "SSD",
                                "HDD"
                              ]
                            },
                            "example": [
                              "NVMe",
                              "EBS"
                            ]
                          },
                          "hypervisor": {
                            "type": "array",
                            "description": "The filtered instance types will have a hypervisor type from this list.\n",
                            "items": {
                              "type": "string",
                              "enum": [
                                "nitro",
                                "xen"
                              ]
                            },
                            "example": [
                              "nitro"
                            ]
                          },
                          "rootDeviceTypes": {
                            "type": "array",
                            "description": "The filtered instance types will have a root device types from this list.\n",
                            "items": {
                              "type": "string",
                              "enum": [
                                "ebs",
                                "instance-store"
                              ]
                            },
                            "example": [
                              "ebs"
                            ]
                          },
                          "minNetworkPerformance": {
                            "type": "integer",
                            "description": "Minimum Bandwidth in Gib/s of network performance.\n",
                            "minimum": 0,
                            "example": 2
                          },
                          "maxNetworkPerformance": {
                            "type": "integer",
                            "description": "Maximum Bandwidth in Gib/s of network performance.\n",
                            "minimum": 1,
                            "example": 20
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Instance Types Filters Simulation For Virtual Node Group Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/k8s/launchspec/o-abcd1234/instanceTypeFiltersSimulation"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D~1instanceTypeFiltersSimulation/post/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:k8s:launchSpec:instanceTypesFilters:simulation"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/launchSpec/{oceanLaunchSpecId}/allowedInstanceTypesByFilters": {
      "get": {
        "summary": "Allowed Instance Types By Filters For Virtual Node Group",
        "description": "Returns the Virtual Node Group's instance types when instance types filters is set.\n",
        "operationId": "oceanAwsGetAllowedInstanceTypesByFilters",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec~1%7BoceanLaunchSpecId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Virtual Node Group Allowed Instance Types By Filters",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/k8s/launchSpec/ols-12345abc/allowedInstanceTypesByFilters"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "instanceTypes": {
                                    "type": "array",
                                    "description": "The allowed Virtual Node Group's instance types when instance types filters is set.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "example": [
                                      "c3.large",
                                      "c5.large"
                                    ]
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:k8s:launchSpec:allowedInstanceTypesByFilters"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/launchSpec/autoScalingGroup/import": {
      "summary": "Ocean for AWS",
      "post": {
        "summary": "Import ASG To Ocean Virtual Node Group",
        "description": "Returns an Ocean Virtual Node Group (VNG) configuration in a given AWS autoscaling group (ASG). The returned value (\"Imported VNG\") can then be used as input to the Create Virtual Node Group API in order to create an actual VNG in your Ocean cluster.\n",
        "operationId": "oceanAwsImportAsgToLaunchSpec",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1autoScalingGroup~1import/post/parameters/1"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "launchSpec": {
                        "type": "object",
                        "description": "The object specifying the configuration of the VNG.\n",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Set Virtual Node Group name.\n",
                            "example": "specialty.nodes.spotk8s.com"
                          },
                          "labels": {
                            "type": "array",
                            "description": "An array of labels to add to the VNG nodes. Only custom user labels are allowed,\nand not Kubernetes built-in labels or Spot internal labels.\n",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string",
                                  "description": "Set label key. \\\nThe following are not allowed:\n* \"kubernetes.io/hostname\"\n* \"failure-domain.beta.kubernetes.io/zone\"\n* \"topology.kubernetes.io/zone\"\n* \"failure-domain.beta.kubernetes.io/region\"\n* \"topology.kubernetes.io/region\"\n* \"beta.kubernetes.io/instance-type\"\n* \"node.kubernetes.io/instance-type\"\n* \"beta.kubernetes.io/os\"\n* \"kubernetes.io/os\"\n* \"beta.kubernetes.io/arch\"\n* \"kubernetes.io/arch\"\n* \"spotinst.io/node-lifecycle\"\n"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Set label value.\n"
                                }
                              }
                            },
                            "example": [
                              {
                                "key": "env",
                                "value": "test"
                              }
                            ]
                          },
                          "taints": {
                            "type": "array",
                            "description": "Add taints to Virtual Node Group.\n",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string",
                                  "description": "Set taint key.\n"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Set taint value.\n"
                                },
                                "effect": {
                                  "type": "string",
                                  "description": "Set taint effect.\n",
                                  "enum": [
                                    "NoSchedule",
                                    "PreferNoSchedule",
                                    "NoExecute"
                                  ]
                                }
                              }
                            },
                            "example": [
                              {
                                "key": "taintKey",
                                "value": "taintValue",
                                "effect": "NoSchedule"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Import ASG to Virtual Node Group Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/k8s/launchSpec/autoScalingGroup/import"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Ocean Import ASG to Virtual Node Group Response.\n",
                                "properties": {
                                  "oceanId": {
                                    "type": "string",
                                    "example": "o-500a5d5a"
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "TestTeam1"
                                  },
                                  "imageId": {
                                    "type": "string",
                                    "example": "ami-0ce21b51cb55a48b8"
                                  },
                                  "securityGroupIds": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "example": [
                                        "sg-03ccf232a2bf0f4ea"
                                      ]
                                    }
                                  },
                                  "tags": {
                                    "type": "object",
                                    "properties": {
                                      "tagKey": {
                                        "type": "string",
                                        "example": "AmazonECSManaged"
                                      },
                                      "tagValue": {
                                        "type": "string",
                                        "example": ""
                                      }
                                    }
                                  },
                                  "instanceMetadataOptions": {
                                    "$ref": "#/paths/~1ocean~1aws~1k8s~1launchSpec~1%7BoceanLaunchSpecId%7D/put/requestBody/content/application~1json/schema/properties/launchSpec/properties/instanceMetadataOptions"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:k8s:launchSpec"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/launchSpec/eksNodeGroup/import": {
      "summary": "Ocean for EKS",
      "post": {
        "summary": "Import EKS Cluster Node Group To Ocean Virtual Node Group",
        "description": "<ul> <li> Returns an Ocean Virtual Node Group (VNG) configuration based on a given AWS EKS Cluster Node Group.\n     The returned value (\"Imported VNG\") can then be used as input to the Create Virtual Node Group API in order to create an actual VNG in your Ocean cluster.</li>\n<li> Notes: <ul>\n            <li> Make sure to have the necessary permissions in your Spot policy: <b>eks:ListNodegroups, eks:DescribeNodegroup</b>.\n                 <a href=\"https://docs.spot.io/administration/api/spot-policy-in-aws?id=spot-policy-in-aws\">Click here for the full Spot policy.</a></li>\n            <li> <b>Exactly one of region or oceanId must be supplied</b> as query parameters.</li>\n            <ul>\n</li> <ul>\n",
        "operationId": "oceanEksImportNodeGroupToLaunchSpec",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "eksClusterName",
            "example": "MyEksCluster",
            "description": "Cluster name of the EKS cluster.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "eksNodeGroupName",
            "example": "MyEksClusterNodeGroup",
            "description": "Node group name to import.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "region",
            "example": "us-east-1",
            "description": "Region name of the EKS cluster's node group.\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1launchSpec/get/parameters/1"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "launchSpec": {
                        "type": "object",
                        "description": "The object specifying the configuration of the VNG.\n",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Set Virtual Node Group name.\n",
                            "example": "specialty.nodes.spotk8s.com"
                          },
                          "labels": {
                            "type": "array",
                            "description": "An array of labels to add to the VNG nodes. Only custom user labels are allowed,\nand not Kubernetes built-in labels or Spot internal labels.\n",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string",
                                  "description": "Set label key. \\\nThe following are not allowed:\n* \"kubernetes.io/hostname\"\n* \"failure-domain.beta.kubernetes.io/zone\"\n* \"topology.kubernetes.io/zone\"\n* \"failure-domain.beta.kubernetes.io/region\"\n* \"topology.kubernetes.io/region\"\n* \"beta.kubernetes.io/instance-type\"\n* \"node.kubernetes.io/instance-type\"\n* \"beta.kubernetes.io/os\"\n* \"kubernetes.io/os\"\n* \"beta.kubernetes.io/arch\"\n* \"kubernetes.io/arch\"\n* \"spotinst.io/node-lifecycle\"\n"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Set label value.\n"
                                }
                              }
                            },
                            "example": [
                              {
                                "key": "env",
                                "value": "test"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Import EKS Cluster Node Group to Virtual Node Group Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/k8s/launchSpec/eksNodeGroup/import"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Ocean Import EKS Cluster Node Group to Virtual Node Group Response.\n",
                                "properties": {
                                  "oceanId": {
                                    "type": "string",
                                    "example": "o-500a5d5a"
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "TestTeam1"
                                  },
                                  "imageId": {
                                    "type": "string",
                                    "example": "ami-0ce21b51cb55a48b8"
                                  },
                                  "securityGroupIds": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "example": "sg-03ccf232a2bf0f4ea"
                                    }
                                  },
                                  "tags": {
                                    "type": "array",
                                    "description": "A maximum of 10 unique key-value pairs for VM tags in the virtual node group.\n",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "tagKey"
                                      ],
                                      "properties": {
                                        "tagKey": {
                                          "type": "string",
                                          "description": "Tag key for VMs in the cluster.\n",
                                          "example": "env"
                                        },
                                        "tagValue": {
                                          "type": "string",
                                          "description": "Tag value for VMs in the cluster.\n",
                                          "example": "staging"
                                        }
                                      }
                                    }
                                  },
                                  "instanceMetadataOptions": {
                                    "$ref": "#/paths/~1ocean~1aws~1k8s~1launchSpec~1%7BoceanLaunchSpecId%7D/put/requestBody/content/application~1json/schema/properties/launchSpec/properties/instanceMetadataOptions"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:k8s:launchSpec"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/managedInstance": {
      "post": {
        "summary": "Create Stateful Node",
        "description": "Create a new Stateful Node resource.\n",
        "operationId": "AWSManagedInstanceCreate",
        "tags": [
          "Stateful Node AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "managedInstance": {
                        "type": "object",
                        "required": [
                          "name",
                          "region"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "mi-test",
                            "description": "Stateful Node name\n"
                          },
                          "description": {
                            "type": "string",
                            "example": "This is my Stateful Node",
                            "description": "Describe your Stateful Node resource\n"
                          },
                          "region": {
                            "type": "string",
                            "example": "us-east-1",
                            "description": "The AWS region your resource will be created in.\n"
                          },
                          "strategy": {
                            "type": "object",
                            "title": "MI Strategy",
                            "properties": {
                              "lifeCycle": {
                                "type": "string",
                                "example": "spot",
                                "description": "Set lifecycle, valid values: `spot`, `on_demand` Default: spot\n"
                              },
                              "orientation": {
                                "type": "string",
                                "example": "availabilityOriented",
                                "description": "The strategy orientation. valid values: `costOriented`, `availabilityOriented`, `balanced`, `cheapest` Default: availabilityOriented\n"
                              },
                              "drainingTimeout": {
                                "type": "integer",
                                "description": "The time in seconds to allow the instance be drained from incoming TCP connections and detached from ELB before terminating it, during a scale down operation\n"
                              },
                              "fallbackToOd": {
                                "type": "boolean",
                                "example": true,
                                "description": "In case of no spots available, Stateful Node will launch an On-demand instance instead Default: true\n"
                              },
                              "utilizeReservedInstances": {
                                "type": "boolean",
                                "default": false,
                                "example": true,
                                "description": "In case of any available Reserved Instances, Stateful Node will utilize them before purchasing Spot instances Default: false\n"
                              },
                              "utilizeCommitments": {
                                "type": "boolean",
                                "description": "If there are available Reserved Instances or Savings Plans, Elastigroup will utilize them before using Spot instances\n",
                                "example": false
                              },
                              "optimizationWindows": {
                                "type": "array",
                                "description": "When performAt is 'timeWindow': must specify a list of 'timeWindows' with at least one time window Each string is in the format of - ddd:hh:mm-ddd:hh:mm ddd = day of week = Sun | Mon | Tue | Wed | Thu | Fri | Sat hh = hour 24 = 0 -23 mm = minute = 0 - 59\n",
                                "items": {
                                  "type": "string",
                                  "example": "Mon:03:00-Wed:02:30"
                                }
                              },
                              "revertToSpot": {
                                "type": "object",
                                "title": "When Elastigroup moves from OnDemand back to Spot capacity",
                                "properties": {
                                  "performAt": {
                                    "type": "string",
                                    "example": "timeWindow",
                                    "enum": [
                                      "never",
                                      "always",
                                      "timeWindow"
                                    ],
                                    "description": "Valid values: `always`, `never`, \"timeWindow\" Example: never Default: never\n"
                                  }
                                }
                              }
                            }
                          },
                          "compute": {
                            "type": "object",
                            "title": "MI Compute",
                            "required": [
                              "subnetIds",
                              "vpcId"
                            ],
                            "properties": {
                              "subnetIds": {
                                "type": "array",
                                "description": "A comma-separated list of subnet identifiers for your instance.\n",
                                "items": {
                                  "type": "string",
                                  "example": "subnet-79da021e"
                                }
                              },
                              "vpcId": {
                                "type": "string",
                                "example": "vpc-111",
                                "description": "VPC ID for your instance.\n"
                              },
                              "elasticIp": {
                                "type": "string",
                                "example": "ip",
                                "description": "Elastic IP Allocation Id to associate to the instance\n"
                              },
                              "privateIp": {
                                "type": "string",
                                "example": "ip",
                                "description": "Private IP Allocation Id to associate to the instance\n"
                              },
                              "product": {
                                "type": "string",
                                "example": "Linux/UNIX",
                                "description": "Operation system type. Possible values: Linux/UNIX, SUSE Linux, Windows, Red Hat Enterprise Linux In case of EC2 classic: Linux/UNIX (Amazon VPC), SUSE Linux (Amazon VPC), Windows (Amazon VPC), Red Hat Enterprise Linux (Amazon VPC)\n"
                              },
                              "volumeAttachments": {
                                "$ref": "#/paths/~1aws~1ec2~1group/post/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/compute/properties/volumeAttachments"
                              },
                              "launchSpecification": {
                                "type": "object",
                                "properties": {
                                  "instanceTypes": {
                                    "type": "object",
                                    "properties": {
                                      "preferredType": {
                                        "type": "string",
                                        "example": "t2.micro",
                                        "description": "Prioritized instance type. The instance type must be included in the selected instance types or  meet the resource requirements if defined. Note: Either preferredType or preferredTypes can be defined,  but not both.\n"
                                      },
                                      "preferredTypes": {
                                        "type": "array",
                                        "description": "Prioritized subset of instance types. The list must be a subset of the selected instance types or meet the  resource requirements if defined. Note: Either preferredType or preferredTypes can be defined, but not  both.\n",
                                        "items": {
                                          "type": "string",
                                          "example": [
                                            "t2.micro",
                                            "t3.micro",
                                            "t2.medium",
                                            "t3.medium"
                                          ]
                                        }
                                      },
                                      "types": {
                                        "type": "array",
                                        "description": "Set instance types settings.  \nNote: Cannot be defined if 'resourceRequirements' is defined.\n",
                                        "items": {
                                          "type": "string",
                                          "example": "t2.micro"
                                        }
                                      },
                                      "resourceRequirements": {
                                        "$ref": "#/paths/~1aws~1ec2~1group/post/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/compute/properties/instanceTypes/properties/resourceRequirements"
                                      }
                                    }
                                  },
                                  "ebsOptimized": {
                                    "type": "boolean",
                                    "example": false,
                                    "description": "Enable EBS optimization for supported instance which is not enabled by default. Note - additional charges will be applied. Default: false\n"
                                  },
                                  "monitoring": {
                                    "type": "boolean",
                                    "example": false,
                                    "description": "Describes whether instance Enhanced Monitoring is enabled. Default: false\n"
                                  },
                                  "tenancy": {
                                    "type": "string",
                                    "example": "default",
                                    "description": "Valid values: \"default\", \"dedicated\" Default: default\n"
                                  },
                                  "iamRole": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "name"
                                      },
                                      "arn": {
                                        "type": "string",
                                        "example": "arn"
                                      }
                                    }
                                  },
                                  "securityGroupIds": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "example": "sg-0dfc2c8760df6fec7"
                                    }
                                  },
                                  "imageId": {
                                    "type": "string",
                                    "example": "ami-01e24be29428c15b2"
                                  },
                                  "keyPair": {
                                    "type": "string",
                                    "example": "labs-oregon"
                                  },
                                  "tags": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "tagKey": {
                                          "type": "string",
                                          "example": "Creator"
                                        },
                                        "tagValue": {
                                          "type": "string",
                                          "example": "test1@spot.io"
                                        }
                                      }
                                    }
                                  },
                                  "resourceTagSpecification": {
                                    "type": "object",
                                    "description": "Optional field. User will specified which resources should be tagged with group tags.",
                                    "properties": {
                                      "volumes": {
                                        "type": "object",
                                        "description": "Optional field. Tag specification for Volume resources.",
                                        "properties": {
                                          "shouldTag": {
                                            "type": "boolean",
                                            "description": "Optional field. Volume resources will be tagged with group tags.",
                                            "default": false,
                                            "example": false
                                          }
                                        }
                                      },
                                      "snapshots": {
                                        "type": "object",
                                        "description": "Optional field. Tag specification for Snapshot resources.",
                                        "properties": {
                                          "shouldTag": {
                                            "type": "boolean",
                                            "description": "Optional field. Snapshot resources will be tagged with group tags.",
                                            "default": true,
                                            "example": true
                                          }
                                        }
                                      },
                                      "enis": {
                                        "type": "object",
                                        "description": "Optional field. Tag specification for ENI resources.",
                                        "properties": {
                                          "shouldTag": {
                                            "type": "boolean",
                                            "description": "Optional field. ENI resources will be tagged with group tags.",
                                            "default": false,
                                            "example": false
                                          }
                                        }
                                      },
                                      "amis": {
                                        "type": "object",
                                        "description": "Optional field. Tag specification for AMI resources.",
                                        "properties": {
                                          "shouldTag": {
                                            "type": "boolean",
                                            "description": "Optional field. AMI resources will be tagged with group tags.",
                                            "default": true,
                                            "example": true
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "userData": {
                                    "type": "string",
                                    "example": "dXNlcmJhc2g2NGVuY29kZWQ="
                                  },
                                  "shutdownScript": {
                                    "type": "string",
                                    "example": "dXNlcmJhc2g2NGVuY29kZWQ="
                                  },
                                  "creditSpecification": {
                                    "type": "object",
                                    "properties": {
                                      "cpuCredits": {
                                        "type": "string",
                                        "example": "unlimited"
                                      }
                                    }
                                  },
                                  "networkInterfaces": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "deviceIndex": {
                                          "type": "integer",
                                          "example": 0
                                        },
                                        "associatePublicIpAddress": {
                                          "type": "boolean",
                                          "example": true
                                        },
                                        "associateIpv6Address": {
                                          "type": "boolean",
                                          "example": true
                                        }
                                      }
                                    }
                                  },
                                  "blockDeviceMappings": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "deviceName": {
                                          "type": "string",
                                          "example": "/dev/xvdcz"
                                        },
                                        "ebs": {
                                          "type": "object",
                                          "properties": {
                                            "iops": {
                                              "type": "integer",
                                              "minimum": 0,
                                              "description": "Must be greater than or equal to 0\n",
                                              "example": 0
                                            },
                                            "throughput": {
                                              "type": "integer",
                                              "minimum": 125,
                                              "maximum": 1000,
                                              "example": 125,
                                              "description": "The amount of data transferred to or from a storage device per second, you can use this param just in a case that volumetype=‘gp3’.\n"
                                            },
                                            "deleteOnTermination": {
                                              "type": "boolean",
                                              "example": true
                                            },
                                            "encrypted": {
                                              "type": "boolean",
                                              "example": true
                                            },
                                            "volumeSize": {
                                              "type": "integer",
                                              "example": 12
                                            },
                                            "volumeType": {
                                              "type": "string",
                                              "example": "gp2"
                                            },
                                            "kmsKeyId": {
                                              "type": "string"
                                            },
                                            "snapshotId": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "metadataOptions": {
                                    "title": "Metadata Options",
                                    "type": "object",
                                    "description": "Optional field. Used for IMDSv2.",
                                    "required": [
                                      "httpTokens"
                                    ],
                                    "properties": {
                                      "httpTokens": {
                                        "title": "HTTP Tokens",
                                        "type": "string",
                                        "description": "Required for IMDSv2. Can’t be null in Create or Update. Values can be \"optional\" or \"required\".",
                                        "example": "optional"
                                      },
                                      "httpPutResponseHopLimit": {
                                        "type": "integer",
                                        "example": "33",
                                        "description": "An integer within 1,64 range (including).\nThe desired HTTP PUT response hop limit for instance metadata requests.\nThe larger the number, the further instance metadata requests can travel.\n"
                                      },
                                      "instanceMetadataTags": {
                                        "title": "Instance Metadata Tags",
                                        "type": "string",
                                        "enum": [
                                          "Enabled",
                                          "Disabled"
                                        ],
                                        "description": "Indicates whether access to instance tags from the instance metadata is enabled or disabled.\nCan’t be null.\n",
                                        "example": "Enabled"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "integrations": {
                            "type": "object",
                            "title": "MI integrations",
                            "properties": {
                              "loadBalancersConfig": {
                                "type": "object",
                                "properties": {
                                  "loadBalancers": {
                                    "type": "array",
                                    "items": {
                                      "anyOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "example": "name"
                                            },
                                            "arn": {
                                              "type": "string",
                                              "example": "arn"
                                            },
                                            "type": {
                                              "type": "string",
                                              "example": "CLASSIC",
                                              "description": "The resource type. Valid Values: CLASSIC, TARGET_GROUP\n"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "route53": {
                                "type": "object",
                                "properties": {
                                  "domains": {
                                    "type": "array",
                                    "items": {
                                      "anyOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "hostedZoneId": {
                                              "type": "string",
                                              "example": "Z00275642KS5ZZJFIQBCA"
                                            },
                                            "recordSetType": {
                                              "type": "string",
                                              "example": "a"
                                            },
                                            "spotinstAccountId": {
                                              "type": "string",
                                              "example": "act-1234"
                                            },
                                            "recordSets": {
                                              "type": "array",
                                              "items": {
                                                "anyOf": [
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "usePublicIp": {
                                                        "type": "boolean",
                                                        "example": true
                                                      },
                                                      "name": {
                                                        "type": "string",
                                                        "example": "testa.spot.io"
                                                      }
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "scheduling": {
                            "type": "object",
                            "title": "MI Scheduling",
                            "properties": {
                              "tasks": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "title": "Task Definition",
                                  "properties": {
                                    "taskType": {
                                      "type": "string",
                                      "example": "recycle",
                                      "enum": [
                                        "pause",
                                        "resume",
                                        "recycle"
                                      ],
                                      "description": "The task type to run.\n"
                                    },
                                    "startTime": {
                                      "type": "string",
                                      "example": "2018-05-23T10:55:09.000Z",
                                      "description": "DATETIME in ISO-8601 format. Sets a start time for scheduled actions. If `frequency` or `cronExpression` are not used - the task will run only once at the start time and will then be deleted from the group configuration\n"
                                    },
                                    "cronExpression": {
                                      "type": "string",
                                      "example": "0 1 * * *",
                                      "description": "A valid cron expression. For example : \" * * * * * \". The cron is running in UTC time zone and is in Unix cron format Cron Expression Validator Script. Only one of ‘frequency' or ‘cronExpression' should be used at a time.\n"
                                    },
                                    "isEnabled": {
                                      "type": "boolean",
                                      "default": true,
                                      "example": true,
                                      "description": "Describes whether the task is enabled. When true the task should run when false it should not run.\n"
                                    },
                                    "frequency": {
                                      "type": "string",
                                      "enum": [
                                        "hourly",
                                        "daily",
                                        "weekly"
                                      ],
                                      "description": "The recurrence frequency to run this task. Only one of `frequency` or `cronExpression` should be used at a time\n"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "persistence": {
                            "type": "object",
                            "description": "Persistence settings. Should omit at least one of the persist options below.\n",
                            "properties": {
                              "blockDevicesMode": {
                                "type": "string",
                                "example": "reattach",
                                "description": "Determine the way we attach the data volumes to the data devices.\n",
                                "enum": [
                                  "reattach",
                                  "onLaunch"
                                ],
                                "default": "onLaunch"
                              },
                              "persistRootDevice": {
                                "type": "boolean",
                                "example": true,
                                "description": "Should the instance maintain its root device volumes\n"
                              },
                              "persistBlockDevices": {
                                "type": "boolean",
                                "example": true,
                                "description": "Should the instance maintain its Data volumes\n"
                              },
                              "persistPrivateIp": {
                                "type": "boolean",
                                "example": true,
                                "description": "Should the instance maintain its private IP\n"
                              }
                            }
                          },
                          "healthCheck": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "example": "EC2",
                                "description": "The service to use for the health check.\n",
                                "enum": [
                                  "EC2",
                                  "ELB",
                                  "TARGET_GROUP"
                                ],
                                "default": "EC2"
                              },
                              "autoHealing": {
                                "type": "boolean",
                                "example": true,
                                "description": "Enable the auto healing which auto replaces the instance in case the health check fails\n",
                                "default": true
                              },
                              "gracePeriod": {
                                "type": "integer",
                                "example": 120,
                                "description": "The amount of time, in seconds, after the instance has launched to starts and check its health.\n",
                                "default": 120
                              },
                              "unhealthyDuration": {
                                "type": "integer",
                                "example": 120,
                                "description": "The amount of time, in seconds, an existing instance should remain active after becoming unhealthy.\\\nAfter the set time out the instance will be replaced\n",
                                "default": 120
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1aws~1ec2~1managedInstance/post/requestBody/content/application~1json/schema/allOf/0"
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:ec2:managedInstance"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Stateful Nodes",
        "description": "List all Stateful Node resources in the account.\n",
        "operationId": "AWSManagedInstanceList",
        "tags": [
          "Stateful Node AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "createdAt": {
                                    "type": "string",
                                    "example": "2020-04-10T21:41:31.000Z"
                                  },
                                  "updatedAt": {
                                    "type": "string",
                                    "example": "2020-05-12T22:37:18.000Z"
                                  },
                                  "id": {
                                    "type": "string",
                                    "example": "smi-34ae3a42"
                                  },
                                  "config": {
                                    "type": "object",
                                    "required": [
                                      "region"
                                    ],
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "mi-test",
                                        "description": "Stateful Node name\n"
                                      },
                                      "region": {
                                        "type": "string",
                                        "example": "us-east-1",
                                        "description": "The AWS region your resource will be created in.\n"
                                      },
                                      "strategy": {
                                        "$ref": "#/paths/~1aws~1ec2~1managedInstance/post/requestBody/content/application~1json/schema/allOf/0/properties/managedInstance/properties/strategy"
                                      },
                                      "persistence": {
                                        "type": "object",
                                        "description": "Persistence settings. Should omit at least one of the persist options below.\n",
                                        "properties": {
                                          "blockDevicesMode": {
                                            "type": "string",
                                            "example": "reattach",
                                            "description": "Determine the way we attach the data volumes to the data devices. Valid values: ‘reattach', ‘onLaunch' Default: onLaunch\n"
                                          },
                                          "persistRootDevice": {
                                            "type": "boolean",
                                            "example": true,
                                            "description": "Should the instance maintain its root device volumes\n"
                                          },
                                          "persistBlockDevices": {
                                            "type": "boolean",
                                            "example": true,
                                            "description": "Should the instance maintain its Data volumes\n"
                                          },
                                          "persistPrivateIp": {
                                            "type": "boolean",
                                            "example": true,
                                            "description": "Should the instance maintain its private IP\n"
                                          }
                                        }
                                      },
                                      "healthCheck": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "example": "EC2",
                                            "description": "The service to use for the health check. Valid values: `EC2`, `ELB`, `TARGET_GROUP` Default: EC2\n"
                                          },
                                          "autoHealing": {
                                            "type": "boolean",
                                            "example": true,
                                            "description": "Enable the auto healing which auto replaces the instance in case the health check fails Default: true\n"
                                          },
                                          "gracePeriod": {
                                            "type": "integer",
                                            "example": 120,
                                            "description": "The amount of time, in seconds, after the instance has launched to starts and check its health. Default: 120\n"
                                          },
                                          "unhealthyDuration": {
                                            "type": "integer",
                                            "example": 120,
                                            "description": "The amount of time, in seconds, an existing instance should remain active after becoming unhealthy. After the set time out the instance will be replaced Default: 120\n"
                                          }
                                        }
                                      },
                                      "compute": {
                                        "$ref": "#/paths/~1aws~1ec2~1managedInstance/post/requestBody/content/application~1json/schema/allOf/0/properties/managedInstance/properties/compute"
                                      },
                                      "integrations": {
                                        "$ref": "#/paths/~1aws~1ec2~1managedInstance/post/requestBody/content/application~1json/schema/allOf/0/properties/managedInstance/properties/integrations"
                                      },
                                      "scheduling": {
                                        "$ref": "#/paths/~1aws~1ec2~1managedInstance/post/requestBody/content/application~1json/schema/allOf/0/properties/managedInstance/properties/scheduling"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:ec2:managedInstance"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/managedInstance/{MI_ID}": {
      "put": {
        "summary": "Update Stateful Node",
        "description": "<ul> <li>Update one or more attributes in your Stateful Node.\n<li>This API supports partial updates, so only specific fields can be updated separately.\n<li>In order to remove a setting from the instance config, set the object value to null.\n<li>For a Full List of the Elastigroup JSON object reference please see Stateful Node Create. <ul>\n",
        "operationId": "AWSManagedInstanceUpdate",
        "tags": [
          "Stateful Node AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "MI_ID",
            "example": "smi-111",
            "description": "Stateful Node ID you want to get\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/paths/~1aws~1ec2~1managedInstance/post/requestBody/content/application~1json/schema/allOf/0"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1aws~1ec2~1managedInstance/post/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get Stateful Node",
        "description": "Get specific Stateful Node config.\n",
        "operationId": "AWSManagedInstanceGet",
        "tags": [
          "Stateful Node AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1managedInstance~1%7BMI_ID%7D/put/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1aws~1ec2~1managedInstance/post/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Stateful Node",
        "description": "Get specific Stateful Node config.\n",
        "operationId": "AWSManagedInstanceDelete",
        "tags": [
          "Stateful Node AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1managedInstance~1%7BMI_ID%7D/put/parameters/1"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "deallocationConfig": {
                        "type": "object",
                        "properties": {
                          "shouldDeleteImages": {
                            "type": "boolean",
                            "example": true,
                            "description": "Flag to remove persistent image\nDefault: false\n"
                          },
                          "shouldDeleteNetworkInterfaces": {
                            "type": "boolean",
                            "example": true,
                            "description": "Flag to remove network interfaces\nDefault: false\n"
                          },
                          "shouldDeleteVolumes": {
                            "type": "boolean",
                            "example": true,
                            "description": "Flag to remove persistent volumes\nDefault: false\n"
                          },
                          "shouldDeleteSnapshots": {
                            "type": "boolean",
                            "example": true,
                            "description": "Flag to remove snapshots\nDefault: false\n"
                          },
                          "shouldTerminateInstance": {
                            "type": "boolean",
                            "example": true,
                            "description": "Flag to detach a machine without terminating it on AWS side. This will enable rollback to AWS.\nExample: false\n"
                          }
                        }
                      },
                      "amiBackup": {
                        "type": "object",
                        "properties": {
                          "shouldDeleteImages": {
                            "type": "boolean",
                            "example": true,
                            "description": "Mark if images collected during AMI Auto Backup should be deleted during instance deletion\nDefault: false\n"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/managedInstance/{MI_ID}/pause": {
      "put": {
        "summary": "Pause Stateful Node",
        "description": "Pause an existing Stateful Node.\n",
        "operationId": "AWSManagedInstancePause",
        "tags": [
          "Stateful Node AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1managedInstance~1%7BMI_ID%7D/put/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/managedInstance/{MI_ID}/resume": {
      "put": {
        "summary": "Resume Stateful Node",
        "description": "Resume an existing Stateful Node.\n",
        "operationId": "AWSManagedInstanceResume",
        "tags": [
          "Stateful Node AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1managedInstance~1%7BMI_ID%7D/put/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/managedInstance/{MI_ID}/recycle": {
      "put": {
        "summary": "Recycle Stateful Node",
        "description": "Recycle an existing Stateful Node.\n",
        "operationId": "AWSManagedInstanceRecycle",
        "tags": [
          "Stateful Node AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1managedInstance~1%7BMI_ID%7D/put/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/managedInstance/{MI_ID}/costs": {
      "get": {
        "summary": "Get Stateful Node Costs",
        "description": "Get financial information on a specific Stateful Node.\nTo use this API, managedInstanceId must be defined.\n",
        "operationId": "AWSManagedInstanceCostsPerManagedInstance",
        "tags": [
          "Stateful Node AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1managedInstance~1%7BMI_ID%7D/put/parameters/1"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D~1events/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D~1events/get/parameters/3"
          },
          {
            "in": "query",
            "name": "aggregationPeriod",
            "schema": {
              "type": "string"
            },
            "description": "Data values following either a date format (YYYY-MM-DDTHH:mm:ss.SSSZ ; 2016-01-10T00:00:00.000Z) or Unix seconds Timestamp (1494751821)\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Get Elastigroup Costs",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "running": {
                                    "type": "object",
                                    "properties": {
                                      "value": {
                                        "type": "integer",
                                        "example": 4
                                      },
                                      "unit": {
                                        "type": "string",
                                        "example": "hours"
                                      }
                                    }
                                  },
                                  "savings": {
                                    "type": "object",
                                    "properties": {
                                      "value": {
                                        "type": "integer",
                                        "example": 0
                                      },
                                      "unit": {
                                        "type": "string",
                                        "example": "percentage"
                                      }
                                    }
                                  },
                                  "costs": {
                                    "type": "object",
                                    "properties": {
                                      "actual": {
                                        "type": "integer",
                                        "example": 0.268
                                      },
                                      "potential": {
                                        "type": "integer",
                                        "example": 0.268
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:ec2:managedInstance:costs"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/managedInstance/{MI_ID}/status": {
      "get": {
        "summary": "Get Stateful Node Status",
        "description": "Describes the current status of a specific Stateful Node – entailing information regarding running instance and its status.\n",
        "operationId": "AWSManagedInstanceStatus",
        "tags": [
          "Stateful Node AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1managedInstance~1%7BMI_ID%7D/put/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "smi-50739ad2"
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "i-0db00q51ec9069ebf"
                                  },
                                  "status": {
                                    "type": "string",
                                    "example": "ACTIVE"
                                  },
                                  "instanceId": {
                                    "type": "string",
                                    "example": "i-0vc9530daq19c4aad"
                                  },
                                  "instanceType": {
                                    "type": "string",
                                    "example": "t2.micro"
                                  },
                                  "imageId": {
                                    "type": "string",
                                    "example": "ami-03238ecdbdc7d6d6a"
                                  },
                                  "privateIp": {
                                    "type": "string",
                                    "example": "172.31.10.21"
                                  },
                                  "publicIp": {
                                    "type": "string",
                                    "example": "34.212.65.224"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "example": "2020-05-05T08:53:12.000Z"
                                  },
                                  "launchedAt": {
                                    "type": "string",
                                    "example": "2020-05-05T08:53:12.000Z"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:ec2:managedInstanceStatus"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/managedInstance/{MI_ID}/volume/{volumeId}": {
      "delete": {
        "summary": "Delete Volume in a Stateful Node",
        "description": "Delete a Volume that is part of a Stateful Node\n",
        "operationId": "deleteVolumeManagedInstance",
        "tags": [
          "Stateful Node AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "MI_ID",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "smi-123456",
            "description": "Stateful Node ID\n"
          },
          {
            "in": "path",
            "name": "volumeId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "vol-0faa4b2957a3d59c8",
            "description": "Volume ID\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "3b750eff-3940-46b3-a309-aa2b415272fd",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/managedInstance/smi-123456/volume/vol-0faa4b2957a3d59c8",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "DELETE",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2021-11-03T11:02:55.608Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/managedInstance/migration": {
      "post": {
        "summary": "Import Instance from AWS",
        "description": "<ul> <li>Import an instance from AWS into Stateful Node, while keeping the instance data and its persistence settings.\n<li>This call is starting the migration and returns migration ID.\n<li>In order to get migration status use the Get Migration Status call <ul>\n",
        "operationId": "AWSManagedInstanceImportInstanceFromAWS",
        "tags": [
          "Stateful Node AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "migration"
                    ],
                    "properties": {
                      "migration": {
                        "title": "Migration",
                        "description": "Migration Configuration",
                        "type": "object",
                        "required": [
                          "originalInstanceId",
                          "region"
                        ],
                        "properties": {
                          "shouldKeepPrivateIp": {
                            "type": "boolean",
                            "example": false,
                            "description": "Set whether the instance should keep its private ip or not\n"
                          },
                          "shouldKeepMetadataOptions": {
                            "type": "boolean",
                            "example": false,
                            "description": "Set whether the instance should keep its metadataOptions or not\n"
                          },
                          "originalInstanceId": {
                            "type": "string",
                            "example": "i-123",
                            "description": "The instance ID on AWS\n"
                          },
                          "region": {
                            "type": "string",
                            "example": "us-east-1",
                            "description": "Set instance's region\n"
                          },
                          "shouldTerminateInstance": {
                            "type": "boolean",
                            "example": false,
                            "description": "Set true or false whether to terminate the instance in AWS. Note: If shouldKeepPrivateIp is true, then shouldTerminateInstance must be true. Otherwise an error will be returned.\n"
                          },
                          "managedInstanceName": {
                            "type": "string",
                            "example": "us-east-1",
                            "description": "Set Stateful Node name\n"
                          },
                          "product": {
                            "type": "string",
                            "example": "Linux/UNIX",
                            "description": "Set instance's product\n"
                          },
                          "spotInstanceTypes": {
                            "type": "array",
                            "description": "List of possible instance types for the Stateful Node\n",
                            "items": {
                              "type": "string",
                              "example": "m3.large"
                            }
                          },
                          "availabilityZones": {
                            "title": "Availability Zones",
                            "description": "List of availability zones for the Stateful Node. Should exist only if shouldKeepPrivateIp is false.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Availability Zone name",
                                  "example": "us-west-2c"
                                },
                                "subnetIds": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "example": "subnet-fdfb00a0"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Migration Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "migrationId": {
                                    "type": "string",
                                    "title": "The id of the migration",
                                    "description": "In order to fetch migration status, you can utilize this id as a `Get Instance Migration Status` API call input",
                                    "example": "smg-123"
                                  },
                                  "managedInstanceId": {
                                    "type": "string",
                                    "title": "Stateful Node ID",
                                    "example": "smi-123"
                                  },
                                  "data": {
                                    "type": "object",
                                    "properties": {
                                      "originalInstanceId": {
                                        "type": "string",
                                        "title": "Instance id",
                                        "description": "Original AWS EC2 Instance id",
                                        "example": "i-123"
                                      },
                                      "shouldKeepPrivateIp": {
                                        "type": "boolean",
                                        "title": "Should keep private IP",
                                        "example": true
                                      },
                                      "shouldKeepMetadataOptions": {
                                        "type": "boolean",
                                        "title": "Should keep metadataOptions",
                                        "example": true
                                      },
                                      "shouldTerminateInstance": {
                                        "type": "boolean",
                                        "title": "Should terminate instance",
                                        "example": true
                                      }
                                    }
                                  },
                                  "state": {
                                    "type": "string",
                                    "title": "Migration state",
                                    "description": "On initiation, the migration would be in the following state - `MIGRATE_START`. Possible end states for the migration are -  `MIGRATE_CANCEL`, `MIGRATE_FINISH`, `MIGRATE_ERROR`.",
                                    "example": "MIGRATE_START"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:ec2:managedInstance:migration"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/managedInstance/migration/bulk": {
      "post": {
        "summary": "Import Multiple Instances from AWS",
        "description": "<ul> <li>Import multiple stateful instances from AWS into Stateful Node, preserving both instance data and persistence settings.\n<li>This call initiates migration for all instances and returns the associated migration IDs.\n<li>To check the status of multiple migrations, use the `Get Multiple Instance Migration Status` call.\n<li>Note: The response contains a `failures` field. In the event that one or more instances failed to migrate, this field will provide the corresponding resource IDs and error messages. If all migrations were successful, this field will return an empty list. <ul>\n",
        "operationId": "AWSManagedInstanceBulkImportInstanceFromAWS",
        "tags": [
          "Stateful Node AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "migrations"
                    ],
                    "properties": {
                      "migrations": {
                        "title": "Migrations",
                        "description": "List of Migration requests",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "title": "Migration",
                          "description": "Migration request",
                          "required": [
                            "originalInstanceId",
                            "region"
                          ],
                          "properties": {
                            "shouldKeepPrivateIp": {
                              "type": "boolean",
                              "example": false,
                              "description": "Set whether the instance should keep its private ip or not\n"
                            },
                            "shouldKeepMetadataOptions": {
                              "type": "boolean",
                              "example": false,
                              "description": "Set whether the instance should keep its metadataOptions or not\n"
                            },
                            "originalInstanceId": {
                              "type": "string",
                              "example": "i-123",
                              "description": "The instance ID on AWS\n"
                            },
                            "region": {
                              "type": "string",
                              "example": "us-east-1",
                              "description": "Set instance's region\n"
                            },
                            "shouldTerminateInstance": {
                              "type": "boolean",
                              "example": false,
                              "description": "Set true or false whether to terminate the instance in AWS. Note: If shouldKeepPrivateIp is true, then shouldTerminateInstance must be true. Otherwise an error will be returned.\n"
                            },
                            "managedInstanceName": {
                              "type": "string",
                              "example": "us-east-1",
                              "description": "Set Stateful Node name\n"
                            },
                            "product": {
                              "type": "string",
                              "example": "Linux/UNIX",
                              "description": "Set instance's product\n"
                            },
                            "spotInstanceTypes": {
                              "type": "array",
                              "description": "List of possible instance types for the Stateful Node\n",
                              "items": {
                                "type": "string",
                                "example": "m3.large"
                              }
                            },
                            "availabilityZones": {
                              "title": "Availability Zones",
                              "description": "List of availability zones for the Stateful Node. Should exist only if shouldKeepPrivateIp is false.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Availability Zone name",
                                    "example": "us-west-2c"
                                  },
                                  "subnetIds": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "example": "subnet-fdfb00a0"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Bulk Migration Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Migration",
                                "properties": {
                                  "migrationId": {
                                    "type": "string",
                                    "title": "The id of the migration",
                                    "description": "In order to fetch migration status, you can utilize this id as a `Get Instance Migration Status` API call input",
                                    "example": "smg-123"
                                  },
                                  "managedInstanceId": {
                                    "type": "string",
                                    "title": "Stateful Node ID",
                                    "example": "smi-123"
                                  },
                                  "data": {
                                    "type": "object",
                                    "properties": {
                                      "originalInstanceId": {
                                        "type": "string",
                                        "title": "Instance id",
                                        "description": "Original AWS EC2 Instance id",
                                        "example": "i-123"
                                      },
                                      "managedInstanceName": {
                                        "type": "string",
                                        "title": "Stateful Node name",
                                        "description": "Your chosen Stateful Node name, so you would be able to distinct between your requests",
                                        "example": "MI-PROD-123"
                                      },
                                      "shouldKeepPrivateIp": {
                                        "type": "boolean",
                                        "title": "Should keep private IP",
                                        "example": true
                                      },
                                      "shouldKeepMetadataOptions": {
                                        "type": "boolean",
                                        "title": "Should keep metadataOptions",
                                        "example": true
                                      },
                                      "shouldTerminateInstance": {
                                        "type": "boolean",
                                        "title": "Should terminate instance",
                                        "example": true
                                      }
                                    }
                                  },
                                  "state": {
                                    "type": "string",
                                    "title": "Migration state",
                                    "description": "On initiation, the migration would be in the following state - `MIGRATE_START`. Possible end states for the migration are -  `MIGRATE_CANCEL`, `MIGRATE_FINISH`, `MIGRATE_ERROR`.",
                                    "example": "MIGRATE_START"
                                  }
                                }
                              }
                            },
                            "failures": {
                              "type": "array",
                              "title": "Failed instances",
                              "description": "AWS EC2 instances that we failed to start migrating. In case there are no failures, would return empty list",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "resourceId": {
                                    "type": "string",
                                    "title": "Original Instance Id",
                                    "example": "i-456"
                                  },
                                  "errorMessage": {
                                    "title": "Error Message",
                                    "type": "string",
                                    "description": "Failure reason",
                                    "example": "Failed to create migration for Stateful Node"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:ec2:managedInstance:migration"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/managedInstance/migration/{MIGRATION_ID}": {
      "get": {
        "summary": "Get Instance Migration Status",
        "description": "<ul> <li>Get a previously initiated instance migration status.\n<li>To initiate an instance migration from AWS use the Import Instance From AWS call.\n<li>On initiation, the migration would be in the following state: `MIGRATE_START`.\n<li>Possible end states for the migration are: `MIGRATE_CANCEL`, `MIGRATE_FINISH`, `MIGRATE_ERROR`. <ul>\n",
        "operationId": "AWSManagedInstanceGetInstanceMigrationStatus",
        "tags": [
          "Stateful Node AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "MIGRATION_ID",
            "example": "smg-123",
            "description": "Migration ID for which you want to get the status\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Stateful Node Migration Status Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1aws~1ec2~1managedInstance~1migration~1search/post/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:ec2:managedInstance:migration"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/managedInstance/migration/search": {
      "post": {
        "summary": "Get Multiple Instance Migration Status",
        "description": "<ul> <li>Retrieve the status of a previously initiated multiple instance migrations.\n<li>To initiate multiple instance migrations from AWS, use the `Import Multiple Instances From AWS` call.\n<li>Upon initiation, the migration will be in the state of `MIGRATE_START`.\n<li>Possible final states for each migration include `MIGRATE_CANCEL`, `MIGRATE_FINISH`, and `MIGRATE_ERROR`. <ul>\n",
        "operationId": "AWSManagedInstanceGetMultipleInstanceMigrationStatus",
        "tags": [
          "Stateful Node AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "migrationIds"
                    ],
                    "properties": {
                      "migrationIds": {
                        "title": "Migration Ids",
                        "description": "List of Migration ids. Use the `migrationId` field received in a `Import Multiple Instances from AWS` response",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "title": "Migration Id",
                          "example": [
                            "smg-1234",
                            "smi-5678"
                          ]
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Bulk Stateful Node Migration Status Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "example": [
                                {
                                  "migrationId": "smg-1234",
                                  "managedInstanceId": "smi-1234",
                                  "instanceId": "i-1234",
                                  "state": "MIGRATE_START",
                                  "stateDescription": "Current state description"
                                },
                                {
                                  "migrationId": "smg-5678",
                                  "managedInstanceId": "smi-5678",
                                  "instanceId": "i-5678",
                                  "state": "MIGRATE_START",
                                  "stateDescription": "Current state description"
                                }
                              ],
                              "items": {
                                "type": "object",
                                "properties": {
                                  "migrationId": {
                                    "type": "string",
                                    "title": "Stateful Migration id",
                                    "example": "smg-1234"
                                  },
                                  "managedInstanceId": {
                                    "type": "string",
                                    "title": "Stateful Node id",
                                    "example": "smi-1234"
                                  },
                                  "instanceId": {
                                    "type": "string",
                                    "title": "AWS EC2 Instance id",
                                    "example": "i-1234"
                                  },
                                  "state": {
                                    "type": "string",
                                    "title": "Current migration state",
                                    "example": "MIGRATE_START"
                                  },
                                  "stateDescription": {
                                    "type": "string",
                                    "title": "Current state description",
                                    "example": "Creating an image from the instance"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:ec2:managedInstance:migration"
                            },
                            "count": {
                              "type": "integer",
                              "example": 2
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/managedInstance/state": {
      "put": {
        "summary": "Update Stateful Node States",
        "description": "Update the state of multiple Stateful Nodes.\n",
        "operationId": "AWSManagedInstanceUpdateStates",
        "tags": [
          "Stateful Node AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "title": "Update Stateful Node states",
                    "type": "object",
                    "description": "Contains the details of a request to update Stateful Node states.\n",
                    "required": [
                      "managedInstanceStates"
                    ],
                    "properties": {
                      "managedInstanceStates": {
                        "type": "array",
                        "description": "An array of Stateful Node State objects (must contain at least 1 object).\n",
                        "items": {
                          "title": "Stateful Node State",
                          "type": "object",
                          "description": "Contains the details of a Stateful Node state.\n",
                          "required": [
                            "id",
                            "state"
                          ],
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Identifier of the Stateful Node.\n",
                              "example": "smi-12345678"
                            },
                            "state": {
                              "type": "string",
                              "description": "The new state of the Stateful Node.\n",
                              "enum": [
                                "PAUSE",
                                "RESUME"
                              ],
                              "example": "PAUSE"
                            }
                          }
                        },
                        "example": [
                          {
                            "id": "smi-12345678",
                            "state": "PAUSE"
                          },
                          {
                            "id": "smi-12345679",
                            "state": "RESUME"
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Stateful Node States Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/aws/ec2/managedInstance/state?spotinstAccountId=act-123456"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/audit/events": {
      "get": {
        "summary": "List Audit Log Events",
        "description": "Gets audit events that have response status of 200. This is the default when the responseStatus parameter is not included in the query. When you use responseStatus in the query, you can get all audit events without regard to status.\n\nThe API requires one of the following permissions to be defined in Spot:\n\n* Permission: Organization Viewer (See User Roles) or\n* Action: setup:describeAllAuditEvents (See Access Policies)\n",
        "operationId": "AuditServiceListAll",
        "tags": [
          "Audit Service"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "fromDate",
            "required": true,
            "description": "Get items on or after this date (Unix timestamp)",
            "example": "1598918400000",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          {
            "in": "query",
            "name": "toDate",
            "required": true,
            "description": "Get items on or before this date (Unix timestamp)",
            "example": "1598918400000",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "responseStatus",
            "example": "all",
            "description": "Determines whether the audit events should be filtered by their response status code or not. Valid values: \"success\": Gets only events with status 200. \"all\": Audit events will not be filtered by response status codes, and all the events will be returned. Default: success\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "All Response Statuses (responseStatus=all)",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "user": {
                                    "type": "string",
                                    "example": "test@spot.io"
                                  },
                                  "namespace": {
                                    "type": "string",
                                    "example": "GENERAL"
                                  },
                                  "actionType": {
                                    "type": "string",
                                    "example": "Sign in with SSO"
                                  },
                                  "resourceType": {
                                    "type": "string",
                                    "example": "User"
                                  },
                                  "resourceId": {
                                    "type": "string",
                                    "example": 21126
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "example": "2020-06-01T12:17:51.000Z"
                                  },
                                  "context": {
                                    "type": "string",
                                    "example": "{\"body\":{\"email\":\"test@spot.io\",\"isMarketplaceCustomer\":false},\"url\":\"/signIn/sso\",\"query\":{}}"
                                  },
                                  "source": {
                                    "type": "string",
                                    "example": "UI"
                                  },
                                  "agent": {
                                    "type": "string",
                                    "example": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/33.9.1667.012 Safari/537.36"
                                  },
                                  "responseStatus": {
                                    "type": "integer",
                                    "example": 200
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:audit"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/healthCheck": {
      "post": {
        "summary": "Create Health Check",
        "description": "Create an HCS for Spot Elastigroup.\n",
        "operationId": "HealthCheckServiceCreate",
        "tags": [
          "Health Check Service"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "healthCheck"
                    ],
                    "properties": {
                      "healthCheck": {
                        "type": "object",
                        "description": "Group",
                        "required": [
                          "proxyAddress",
                          "resourceId"
                        ],
                        "properties": {
                          "resourceId": {
                            "type": "string",
                            "example": "sig-12345",
                            "description": "Spot Resource ID\n"
                          },
                          "name": {
                            "type": "string",
                            "example": "Service-1-healthCheck",
                            "description": "A logical name for the health check\n"
                          },
                          "proxyAddress": {
                            "type": "string",
                            "description": "The public hostname / IP where you installed the Spot HCS\n",
                            "example": "51.22.125.47"
                          },
                          "proxyPort": {
                            "description": "The port of the HCS. Default: 80\n",
                            "type": "integer",
                            "example": 80
                          },
                          "check": {
                            "type": "object",
                            "required": [
                              "protocol",
                              "port",
                              "endpoint",
                              "unhealthyThreshold",
                              "healthyThreshold",
                              "interval",
                              "timeout"
                            ],
                            "properties": {
                              "protocol": {
                                "type": "string",
                                "example": "http",
                                "description": "The protocol to use to connect with the instance. Valid values: http https\n"
                              },
                              "port": {
                                "description": "The port to use to connect with the instance\n",
                                "type": "integer",
                                "example": 80
                              },
                              "endpoint": {
                                "description": "The destination for the request\n",
                                "type": "string",
                                "example": "index.html"
                              },
                              "unhealthyThreshold": {
                                "description": "The number of consecutive failed health checks that must occur before declaring an instance unhealthy\n",
                                "type": "integer",
                                "example": 2
                              },
                              "healthyThreshold": {
                                "description": "The number of consecutive successful health checks that must occur before declaring an instance healthy\n",
                                "type": "integer",
                                "example": 2
                              },
                              "interval": {
                                "description": "The amount of time (in seconds) between each health check. Minimum value is 10\n",
                                "type": "integer",
                                "example": 30
                              },
                              "timeout": {
                                "description": "The amount of time (in seconds) to wait when receiving a response from the health check\n",
                                "type": "integer",
                                "example": 60
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1healthCheck/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Health Checks",
        "description": "Get a list of all HCS services.\n",
        "operationId": "HealthCheckServiceListAllHcs",
        "tags": [
          "Health Check Service"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects.\n",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array.\n"
                                },
                                "kind": {
                                  "type": "string",
                                  "description": "The data type of each item in the response.\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "example": 1
                                  },
                                  "resourceId": {
                                    "type": "string",
                                    "example": "sig-12345"
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "Service-1-healthCheck"
                                  },
                                  "proxyAddress": {
                                    "type": "string",
                                    "example": "51.22.125.47"
                                  },
                                  "proxyPort": {
                                    "type": "integer",
                                    "example": 80
                                  },
                                  "check": {
                                    "type": "object",
                                    "properties": {
                                      "protocol": {
                                        "type": "string",
                                        "example": "http"
                                      },
                                      "port": {
                                        "type": "integer",
                                        "example": 80
                                      },
                                      "endpoint": {
                                        "type": "string",
                                        "example": "index.html"
                                      },
                                      "unhealthyThreshold": {
                                        "type": "integer",
                                        "example": 2
                                      },
                                      "healthyThreshold": {
                                        "type": "integer",
                                        "example": 2
                                      },
                                      "interval": {
                                        "type": "integer",
                                        "example": 30
                                      },
                                      "timeout": {
                                        "type": "integer",
                                        "example": 60
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:healthCheck"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/healthCheck/{HEALTHCHECK_ID}": {
      "put": {
        "summary": "Update Health Check",
        "description": "Update existing HCS.\n",
        "operationId": "HealthCheckServiceUpdate",
        "tags": [
          "Health Check Service"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "path",
            "name": "HEALTHCHECK_ID",
            "example": "hcs-123",
            "description": "The HCS you want to update\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "healthCheck"
                    ],
                    "properties": {
                      "healthCheck": {
                        "type": "object",
                        "description": "Group",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "Service-1-healthCheck",
                            "description": "A logical name for the health check\n"
                          },
                          "proxyAddress": {
                            "type": "string",
                            "description": "The public hostname / IP where you installed the Spot HCS\n",
                            "example": "51.22.125.47"
                          },
                          "proxyPort": {
                            "description": "The port of the HCS. Default: 80\n",
                            "type": "integer",
                            "example": 80
                          },
                          "check": {
                            "type": "object",
                            "properties": {
                              "protocol": {
                                "type": "string",
                                "example": "http",
                                "description": "The protocol to use to connect with the instance. Valid values: http https\n"
                              },
                              "port": {
                                "description": "The port to use to connect with the instance\n",
                                "type": "integer",
                                "example": 80
                              },
                              "endpoint": {
                                "description": "The destination for the request\n",
                                "type": "string",
                                "example": "index.html"
                              },
                              "unhealthyThreshold": {
                                "description": "The number of consecutive failed health checks that must occur before declaring an instance unhealthy\n",
                                "type": "integer",
                                "example": 2
                              },
                              "healthyThreshold": {
                                "description": "The number of consecutive successful health checks that must occur before declaring an instance healthy\n",
                                "type": "integer",
                                "example": 2
                              },
                              "interval": {
                                "description": "The amount of time (in seconds) between each health check. Minimum value is 10\n",
                                "type": "integer",
                                "example": 30
                              },
                              "timeout": {
                                "description": "The amount of time (in seconds) to wait when receiving a response from the health check\n",
                                "type": "integer",
                                "example": 60
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get Health Check",
        "description": "List the information of a particular HCS\n",
        "operationId": "HealthCheckServiceListHcs",
        "tags": [
          "Health Check Service"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "path",
            "name": "HEALTHCHECK_ID",
            "example": "hcs-123",
            "description": "The HCS you want to update\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1healthCheck/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Health Check",
        "description": "Delete existing HCS\n",
        "operationId": "HealthCheckServiceDelete",
        "tags": [
          "Health Check Service"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "HEALTHCHECK_ID",
            "example": "hcs-123",
            "description": "The HCS you want to update\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/events/notification/accountPolicy": {
      "put": {
        "summary": "Update Account Notification Policy",
        "description": "Update the account notification policy\n",
        "operationId": "NotificationsServiceUpdateAccountNotificationPolicy",
        "tags": [
          "Notifications Service"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "accountPolicy": {
                        "type": "object",
                        "properties": {
                          "emailPolicy": {
                            "type": "object",
                            "properties": {
                              "statements": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "category": {
                                      "type": "string",
                                      "example": "Elastigroup Errors",
                                      "description": "Event notification category\n"
                                    },
                                    "subCategory": {
                                      "type": "string",
                                      "example": "Launch instances failures",
                                      "description": "Event notification sub category (should match to the event category)\n"
                                    },
                                    "isEnabled": {
                                      "type": "boolean",
                                      "example": true,
                                      "description": "Flag to enable/disable the notification statement\n"
                                    },
                                    "applyOnFutureResources": {
                                      "type": "boolean",
                                      "example": true,
                                      "description": "Flag to set whether to auto apply on newly created resources\n"
                                    },
                                    "allowedResources": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "sig-1234",
                                            "description": "Set resource ID\n"
                                          }
                                        }
                                      }
                                    },
                                    "deniedResources": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "sig-9999",
                                            "description": "List of denied resources for the statement settings\n"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "slackPolicy": {
                            "type": "object",
                            "properties": {
                              "statements": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "category": {
                                      "type": "string",
                                      "example": "Elastigroup Errors",
                                      "description": "Event notification category\n"
                                    },
                                    "subCategory": {
                                      "type": "string",
                                      "example": "Launch instances failures",
                                      "description": "Event notification sub category (should match to the event category)\n"
                                    },
                                    "isEnabled": {
                                      "type": "boolean",
                                      "example": true,
                                      "description": "Flag to enable/disable the notification statement\n"
                                    },
                                    "applyOnFutureResources": {
                                      "type": "boolean",
                                      "example": true,
                                      "description": "Flag to set whether to auto apply on newly created resources\n"
                                    },
                                    "allowedResources": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "sig-1234",
                                            "description": "Set resource ID\n"
                                          }
                                        }
                                      }
                                    },
                                    "deniedResources": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "sig-9999",
                                            "description": "List of denied resources for the statement settings\n"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get Account Notification Policy",
        "description": "Get the account notification policy\n",
        "operationId": "NotificationsServiceGetAccountNotificationPolicy",
        "tags": [
          "Notifications Service"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1events~1notification~1accountPolicy/put/requestBody/content/application~1json/schema/allOf/0"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/events/subscription": {
      "post": {
        "summary": "Subscribe",
        "description": "Create a notification for your resources\n",
        "operationId": "notificationsServiceSubscriptionsSubscribe",
        "tags": [
          "Notifications Service"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "title": "Elastigroup/Stateful Node event",
                    "required": [
                      "subscription"
                    ],
                    "properties": {
                      "subscription": {
                        "type": "object",
                        "required": [
                          "resourceId",
                          "protocol",
                          "endpoint",
                          "eventType"
                        ],
                        "description": "Object defining the subscription parameters\n",
                        "properties": {
                          "resourceId": {
                            "type": "string",
                            "example": "sig-1234abcd",
                            "description": "Spot Resource ID (Elastigroup ID, Ocean ID or Stateful Node ID)\n"
                          },
                          "protocol": {
                            "type": "string",
                            "enum": [
                              "aws-sns",
                              "email",
                              "email-json",
                              "web"
                            ],
                            "example": "email",
                            "description": "The protocol to send the notification.\n\nThe following values are deprecated: http https\nYou can use the generic web protocol instead.\naws-sns is only supported with AWS provider\n"
                          },
                          "endpoint": {
                            "type": "string",
                            "example": "YOUR@EMAIL.COM",
                            "description": "The endpoint the notification will be sent to. url in case of http/https/web, email address in case of email/email-json and sns-topic-arn in case of aws-sns.\nFor example: YOUR@EMAIL.COM or https://YOUR_ENDPOINT.COM or SNS_TOPIC_ARN\n"
                          },
                          "eventType": {
                            "enum": [
                              "AWS_EC2_INSTANCE_TERMINATE",
                              "AWS_EC2_INSTANCE_TERMINATED",
                              "AWS_EC2_INSTANCE_LAUNCH",
                              "AWS_EC2_INSTANCE_READY_SIGNAL_TIMEOUT",
                              "SIGNAL_TIMEOUT_SHUTDOWN_SCRIPT",
                              "AWS_EC2_CANT_SPIN_OD",
                              "AWS_EC2_INSTANCE_UNHEALTHY_IN_ELB",
                              "GROUP_ROLL_FAILED",
                              "GROUP_ROLL_FINISHED",
                              "CANT_SCALE_UP_GROUP_MAX_CAPACITY",
                              "GROUP_UPDATED",
                              "AWS_EMR_PROVISION_TIMEOUT",
                              "GROUP_BEANSTALK_INIT_READY",
                              "AZURE_VM_TERMINATED",
                              "AZURE_VM_TERMINATE",
                              "AWS_EC2_MANAGED_INSTANCE_PAUSING",
                              "AWS_EC2_MANAGED_INSTANCE_RESUMING",
                              "AWS_EC2_MANAGED_INSTANCE_RECYCLING",
                              "AWS_EC2_MANAGED_INSTANCE_DELETING"
                            ],
                            "type": "string",
                            "example": "AWS_EC2_INSTANCE_TERMINATE",
                            "description": "The event to send the notification when triggered.\n"
                          },
                          "eventFormat": {
                            "type": "object",
                            "description": "The format of the notification content (JSON Format: Key + Value).\nThe keys can be renamed.\n",
                            "properties": {
                              "event": {
                                "type": "string",
                                "enum": [
                                  "%event%"
                                ],
                                "description": "Allow to get name of event that happened",
                                "example": "%event%"
                              },
                              "resourceId": {
                                "type": "string",
                                "enum": [
                                  "%resource-id%"
                                ],
                                "description": "Allow to get ID of resource where event happened",
                                "example": "%resource-id%"
                              },
                              "resourceName": {
                                "type": "string",
                                "enum": [
                                  "%resource-name%"
                                ],
                                "description": "Allow to get the name of resource (related to ID)",
                                "example": "%resource-name%"
                              },
                              "instanceId": {
                                "type": "string",
                                "enum": [
                                  "%instance-id%"
                                ],
                                "description": "Allow to get the instance ID which related to the event",
                                "example": "%instance-id%"
                              },
                              "myCustomKey": {
                                "type": "string",
                                "description": "Allow to use custom text in messages",
                                "example": "My content is set here"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "title": "Ocean event",
                    "required": [
                      "subscription"
                    ],
                    "properties": {
                      "subscription": {
                        "type": "object",
                        "required": [
                          "resourceId",
                          "protocol",
                          "endpoint",
                          "eventType"
                        ],
                        "description": "Object defining the subscription parameters\n",
                        "properties": {
                          "resourceId": {
                            "type": "string",
                            "example": "o-1234abcd",
                            "description": "Spot Resource ID (Elastigroup ID, Ocean ID or Stateful Node ID)\n"
                          },
                          "protocol": {
                            "type": "string",
                            "enum": [
                              "aws-sns",
                              "email",
                              "email-json",
                              "web"
                            ],
                            "example": "email",
                            "description": "The protocol to send the notification.\n\nThe following values are deprecated: http https\nYou can use the generic web protocol instead.\naws-sns is only supported with AWS provider\n"
                          },
                          "endpoint": {
                            "type": "string",
                            "example": "YOUR@EMAIL.COM",
                            "description": "The endpoint the notification will be sent to. url in case of http/https/web, email address in case of email/email-json and sns-topic-arn in case of aws-sns.\nFor example: YOUR@EMAIL.COM or https://YOUR_ENDPOINT.COM or SNS_TOPIC_ARN\n"
                          },
                          "eventType": {
                            "enum": [
                              "AWS_EC2_INSTANCE_TERMINATE",
                              "AWS_EC2_INSTANCE_TERMINATED",
                              "AWS_EC2_INSTANCE_LAUNCH",
                              "AWS_EC2_INSTANCE_READY_SIGNAL_TIMEOUT",
                              "SIGNAL_TIMEOUT_SHUTDOWN_SCRIPT",
                              "AWS_EC2_CANT_SPIN_OD",
                              "AWS_EC2_INSTANCE_UNHEALTHY_IN_ELB",
                              "GROUP_ROLL_FAILED",
                              "GROUP_ROLL_FINISHED",
                              "CANT_SCALE_UP_GROUP_MAX_CAPACITY",
                              "GROUP_UPDATED",
                              "AWS_EMR_PROVISION_TIMEOUT",
                              "GROUP_BEANSTALK_INIT_READY",
                              "AZURE_VM_TERMINATED",
                              "AZURE_VM_TERMINATE",
                              "AWS_EC2_MANAGED_INSTANCE_PAUSING",
                              "AWS_EC2_MANAGED_INSTANCE_RESUMING",
                              "AWS_EC2_MANAGED_INSTANCE_RECYCLING",
                              "AWS_EC2_MANAGED_INSTANCE_DELETING",
                              "CLUSTER_ROLL_FINISHED",
                              "CLUSTER_ROLL_FAILED",
                              "OCEAN_CANT_SCALE_UP_MAX_RESOURCES",
                              "OCEAN_LAUNCH_SPEC_CANT_SCALE_UP_MAX_INSTANCES",
                              "OCEAN_K8S_NODE_REMOVED"
                            ],
                            "type": "string",
                            "example": "OCEAN_K8S_NODE_REMOVED",
                            "description": "The event to send the notification when triggered. \\\nThe following event types are relevant for Ocean events only: \\\nCLUSTER_ROLL_FINISHED, \\\nCLUSTER_ROLL_FAILED, \\\nOCEAN_CANT_SCALE_UP_MAX_RESOURCES, \\\nOCEAN_LAUNCH_SPEC_CANT_SCALE_UP_MAX_INSTANCES, \\\nOCEAN_K8S_NODE_REMOVED\n"
                          },
                          "eventFormat": {
                            "type": "object",
                            "description": "The format of the notification content (JSON Format: Key + Value).\nThe keys can be renamed.\n",
                            "properties": {
                              "event": {
                                "type": "string",
                                "enum": [
                                  "%event%"
                                ],
                                "description": "Allow to get name of event that happened",
                                "example": "%event%"
                              },
                              "resourceId": {
                                "type": "string",
                                "enum": [
                                  "%resource-id%"
                                ],
                                "description": "Allow to get ID of resource where event happened",
                                "example": "%resource-id%"
                              },
                              "resourceName": {
                                "type": "string",
                                "enum": [
                                  "%resource-name%"
                                ],
                                "description": "Allow to get the name of resource (related to ID)",
                                "example": "%resource-name%"
                              },
                              "instanceId": {
                                "type": "string",
                                "enum": [
                                  "%instance-id%"
                                ],
                                "description": "Allow to get the instance ID which related to the event",
                                "example": "%instance-id%"
                              },
                              "launchSpecId": {
                                "type": "string",
                                "enum": [
                                  "%launchSpec-id%"
                                ],
                                "description": "Allow to get the Virtual Node Group ID which related to the event",
                                "example": "%launchSpec-id%"
                              },
                              "launchSpecName": {
                                "type": "string",
                                "enum": [
                                  "%launchSpec-name%"
                                ],
                                "description": "Allow to get the Virtual Node Group name which related to the event (relevant only for OCEAN_K8S_NODE_REMOVED)",
                                "example": "%launchSpec-name%"
                              },
                              "nodeName": {
                                "type": "string",
                                "enum": [
                                  "%node-name%"
                                ],
                                "description": "Allow to get the node name which related to the event (relevant only for OCEAN_K8S_NODE_REMOVED)",
                                "example": "%node-name%"
                              },
                              "runningPodsOnNode": {
                                "type": "string",
                                "enum": [
                                  "%running-pods-on-node%"
                                ],
                                "description": "Allow to get the running pods on the node which related to the event (relevant only for OCEAN_K8S_NODE_REMOVED)",
                                "example": "%running-pods-on-node%"
                              },
                              "myCustomKey": {
                                "type": "string",
                                "description": "Allow to use custom text in messages",
                                "example": "My content is set here"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1events~1subscription/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Subscriptions",
        "description": "List all subscriptions and their information\n",
        "operationId": "notificationsServiceSubscriptionsList",
        "tags": [
          "Notifications Service"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/events/subscription"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "sis-1234abcd"
                                  },
                                  "resourceId": {
                                    "type": "string",
                                    "example": "sig-1234abcd"
                                  },
                                  "resourceName": {
                                    "type": "string",
                                    "example": "myGroup"
                                  },
                                  "protocol": {
                                    "type": "string",
                                    "example": "email"
                                  },
                                  "endpoint": {
                                    "type": "string",
                                    "example": "YOUR@EMAIL.COM"
                                  },
                                  "eventType": {
                                    "type": "string",
                                    "example": "AWS_EC2_INSTANCE_TERMINATE"
                                  },
                                  "eventFormat": {
                                    "type": "object",
                                    "description": "The format of the notification content (JSON Format: Key + Value).\nThe keys can be renamed.\n",
                                    "properties": {
                                      "event": {
                                        "type": "string",
                                        "enum": [
                                          "%event%"
                                        ],
                                        "description": "Allow to get name of event that happened",
                                        "example": "%event%"
                                      },
                                      "resourceId": {
                                        "type": "string",
                                        "enum": [
                                          "%resource-id%"
                                        ],
                                        "description": "Allow to get ID of resource where event happened",
                                        "example": "%resource-id%"
                                      },
                                      "resourceName": {
                                        "type": "string",
                                        "enum": [
                                          "%resource-name%"
                                        ],
                                        "description": "Allow to get the name of resource (related to ID)",
                                        "example": "%resource-name%"
                                      },
                                      "instanceId": {
                                        "type": "string",
                                        "enum": [
                                          "%instance-id%"
                                        ],
                                        "description": "Allow to get the instance ID which related to the event",
                                        "example": "%instance-id%"
                                      },
                                      "myCustomKey": {
                                        "type": "string",
                                        "description": "Allow to use custom text in messages",
                                        "example": "My content is set here"
                                      }
                                    }
                                  },
                                  "updatedAt": {
                                    "type": "string",
                                    "example": "2015-08-04T12:31:26.000Z"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "example": "2015-08-04T12:31:26.000Z"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:subscription"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/events/subscription/{subscriptionId}": {
      "delete": {
        "summary": "Unsubscribe",
        "description": "Delete an existing page\n",
        "operationId": "notificationsServiceSubscriptionsUnsubscribe",
        "tags": [
          "Notifications Service"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/paths/~1events~1subscription~1%7BsubscriptionId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get Subscription",
        "description": "Get a specific notification and its information\n",
        "operationId": "notificationsServiceSubscriptionsGet",
        "tags": [
          "Notifications Service"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "path",
            "name": "subscriptionId",
            "example": "sis-1234abcd",
            "description": "The subscription ID to operate on.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1events~1subscription/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Subscription",
        "description": "Update existing notification\n",
        "operationId": "notificationsServiceSubscriptionsUpdate",
        "tags": [
          "Notifications Service"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/paths/~1events~1subscription~1%7BsubscriptionId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "subscription"
                    ],
                    "properties": {
                      "subscription": {
                        "type": "object",
                        "description": "Element that store all the subscription config",
                        "properties": {
                          "endpoint": {
                            "type": "string",
                            "description": "The endpoint the notification will be sent to. url in case of http/https/web, email address in case of email/email-json and sns-topic-arn in case of aws-sns",
                            "example": "SNS_TOPIC_ARN"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Subscription Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/events/subscription/sis-56879d5c?accountId=act-123abc",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "PUT",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                },
                                "affectedRows": {
                                  "type": "integer",
                                  "example": 1
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/insights/dataIntegration": {
      "post": {
        "summary": "Create Data Integration",
        "description": "Create a new data integration, an object representing a connection to a third-party vendor to export to and import data from.\n",
        "operationId": "DataIntegrationCreate",
        "tags": [
          "Insights Service"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dataIntegration": {
                    "type": "object",
                    "required": [
                      "vendor",
                      "name",
                      "config"
                    ],
                    "properties": {
                      "vendor": {
                        "type": "string",
                        "description": "The vendor for the data integration. This value affects the expected `config`.",
                        "enum": [
                          "s3",
                          "azureBlob"
                        ]
                      },
                      "name": {
                        "description": "The name of the data integration.",
                        "type": "string",
                        "example": "my-s3-integration"
                      },
                      "config": {
                        "description": "The config of this data integration. Depends on the value of `vendor`.",
                        "oneOf": [
                          {
                            "type": "object",
                            "title": "S3",
                            "required": [
                              "bucketName"
                            ],
                            "properties": {
                              "bucketName": {
                                "type": "string",
                                "description": "The name of the bucket to use. Your spot IAM Role policy needs to include s3:putObject permissions for this bucket.\n**Can't be null**.\n",
                                "example": "mybucket"
                              },
                              "subdir": {
                                "description": "The subdirectory in which your files will be stored within the bucket. Adds the prefix `subdir/` to new objects' keys.\n**Can't be null or contain '/'**.\n",
                                "type": "string",
                                "example": "dev"
                              }
                            }
                          },
                          {
                            "type": "object",
                            "title": "Azure Blob",
                            "required": [
                              "storageAccount",
                              "container"
                            ],
                            "properties": {
                              "storageAccount": {
                                "type": "string",
                                "description": "The name of the storage account to use.\n",
                                "example": "myStorageAccount"
                              },
                              "container": {
                                "description": "The container in which your files will be stored within the storage account.\n",
                                "type": "string",
                                "example": "dev"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create Data Integration Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/insights/dataIntegration"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1insights~1dataIntegration/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                              }
                            },
                            "kind": {
                              "example": "spotinst:dataIntegration"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Data Integration",
        "description": "List data integrations.\n",
        "operationId": "dataIntegrationList",
        "tags": [
          "Insights Service"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "vendor",
            "description": "The vendor of the data integrations to list.",
            "example": "s3",
            "schema": {
              "type": "string",
              "enum": [
                "s3",
                "azureBlob"
              ]
            }
          },
          {
            "in": "query",
            "name": "name",
            "description": "The name of the data integrations to list.",
            "example": "my-data-integration",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "status",
            "description": "The status of the data integrations to list.",
            "example": "enabled",
            "schema": {
              "type": "string",
              "enum": [
                "enabled",
                "disabled"
              ]
            }
          },
          {
            "in": "query",
            "name": "health",
            "description": "The health status of the data integrations to list.",
            "example": "valid",
            "schema": {
              "type": "string",
              "enum": [
                "valid",
                "invalid",
                "forbidden"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Data Integration Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/insights/dataIntegration"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "vendor",
                                  "name",
                                  "config"
                                ],
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The identifier of the data integration.",
                                    "example": "di-123"
                                  },
                                  "vendor": {
                                    "type": "string",
                                    "description": "The vendor for the data integration. This value affects the expected `config`.",
                                    "enum": [
                                      "s3",
                                      "azureBlob"
                                    ]
                                  },
                                  "name": {
                                    "description": "The name of the data integration.",
                                    "type": "string",
                                    "example": "my-s3-integration"
                                  },
                                  "status": {
                                    "type": "string",
                                    "description": "Determines if this data integration is on or off.",
                                    "enum": [
                                      "enabled",
                                      "disabled"
                                    ]
                                  },
                                  "health": {
                                    "type": "string",
                                    "description": "The health of this data integration.",
                                    "example": "valid"
                                  },
                                  "code": {
                                    "type": "integer",
                                    "description": "The HTTP status code representing the health.",
                                    "example": 200
                                  },
                                  "message": {
                                    "type": "string",
                                    "description": "The message received from the vendor in the last health update.",
                                    "example": "ok"
                                  },
                                  "lastHealthCheck": {
                                    "type": "string",
                                    "description": "The time the health was last updated in UTC.",
                                    "example": "2021-08-1T10:00:00.000Z"
                                  },
                                  "config": {
                                    "description": "The config of this data integration. Depends on the value of `vendor`.",
                                    "oneOf": [
                                      {
                                        "$ref": "#/paths/~1insights~1dataIntegration/post/requestBody/content/application~1json/schema/properties/dataIntegration/properties/config/oneOf/0"
                                      },
                                      {
                                        "$ref": "#/paths/~1insights~1dataIntegration/post/requestBody/content/application~1json/schema/properties/dataIntegration/properties/config/oneOf/1"
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:dataIntegration"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/insights/dataIntegration/{dataIntegrationId}": {
      "put": {
        "summary": "Update Data Integration",
        "description": "Update an existing data integration.\n",
        "operationId": "updateDataIntegration",
        "tags": [
          "Insights Service"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "dataIntegrationId",
            "example": "di-123abc",
            "description": "Identifier of the data integration.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dataIntegration": {
                    "type": "object",
                    "required": [
                      "vendor"
                    ],
                    "properties": {
                      "vendor": {
                        "type": "string",
                        "description": "The vendor for the data integration. This value affects the expected `config`.\n**This value is immutable and must be the same as the existing data integration.**\n",
                        "enum": [
                          "s3",
                          "azureBlob"
                        ]
                      },
                      "name": {
                        "description": "The name of the data integration.",
                        "type": "string",
                        "example": "my-s3-integration"
                      },
                      "status": {
                        "type": "string",
                        "description": "Determines if this data integration is on or off.",
                        "enum": [
                          "enabled",
                          "disabled"
                        ]
                      },
                      "config": {
                        "description": "The config of this data integration. Depends on the value of `vendor`.",
                        "oneOf": [
                          {
                            "type": "object",
                            "title": "S3",
                            "properties": {
                              "bucketName": {
                                "type": "string",
                                "description": "The name of the bucket to use. Your spot IAM Role policy needs to include s3:putObject permissions for this bucket.\n**Can't be null**.\n",
                                "example": "mybucket"
                              },
                              "subdir": {
                                "description": "The subdirectory in which your files will be stored within the bucket. Adds the prefix `subdir/` to new objects' keys.\n**Can't be null or contain '/'**.\n",
                                "type": "string",
                                "example": "dev"
                              }
                            }
                          },
                          {
                            "type": "object",
                            "title": "Azure Blob",
                            "properties": {
                              "storageAccount": {
                                "type": "string",
                                "description": "The name of the storage account to use.\n",
                                "example": "myStorageAccount"
                              },
                              "container": {
                                "description": "The container in which your files will be stored within the storage account.\n",
                                "type": "string",
                                "example": "dev"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Data Integration Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/insights/dataIntegration/di-123"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1insights~1dataIntegration/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                              }
                            },
                            "kind": {
                              "example": "spotinst:dataIntegration"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get Data Integration",
        "description": "Get an existing data integration.\n",
        "operationId": "dataIntegrationGet",
        "tags": [
          "Insights Service"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1insights~1dataIntegration~1%7BdataIntegrationId%7D/put/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Get Data Integration Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/insights/dataIntegration/di-123"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1insights~1dataIntegration/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                              }
                            },
                            "kind": {
                              "example": "spotinst:dataIntegration"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Data Integration",
        "description": "Delete an existing data integration.\n",
        "operationId": "dataIntegrationDelete",
        "tags": [
          "Insights Service"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1insights~1dataIntegration~1%7BdataIntegrationId%7D/put/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Data Integration Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/insights/dataIntegration/di-123"
                            },
                            "method": {
                              "example": "DELETE"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/account/{accountId}": {
      "put": {
        "summary": "Update Account",
        "description": "Update information in an account such as the account name and slack channel. To use this command, permissions for organization admin are required. Granular permissions will require access policies with the following actions: setup:updateAccount\n",
        "operationId": "OrganizationsAndAccountsUpdateAccount",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "example": "act-123456789",
            "description": "The ID of the account you want to update.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "account"
                    ],
                    "properties": {
                      "account": {
                        "type": "object",
                        "description": "Used for updating items in an account.",
                        "properties": {
                          "slackNotificationChannels": {
                            "type": "array",
                            "description": "List of strings containing the URLs of the slack channels to be added.",
                            "items": {
                              "type": "string",
                              "example": [
                                "https://hooks.slack.com/services/SLACK_ID",
                                "https://hooks.slack.com/services/SLACK_ID"
                              ]
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "The new name of the account. Cannot be null or empty.",
                            "example": "ACCOUNT_NAME"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Account Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/account/act-4fb595c6?accountId=act-4fb595c6",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "PUT",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Account",
        "description": "Delete a Spot Account. The Spot Account ID can be obtained from your Spot console via the following link: https://console.spotinst.com/#/settings/account/general . Note This cannot be undone – take caution. Only Organization Admins can perform this action. In case you want to delete your default Spot account which is the account visible when you first log in please contact Support.\n",
        "operationId": "OrganizationsAndAccountsDeleteAccount",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "example": "act-123456789",
            "description": "The ID of the account you want to delete.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Account Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/account/act-123456",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "DELETE",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/user": {
      "get": {
        "summary": "Get Users",
        "description": "Get all users in the organization, their details, and mapped accounts. Providing the optional account ID parameter will filter out all users not mapped to that account.\n",
        "operationId": "GetAccountsUsers",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account you would like to get retrieve users from\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Get Account Users Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/user?accountId=act-123456789",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group:log",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "anyOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "mappedAccountIds": {
                                            "type": "string",
                                            "description": "A list of account IDs",
                                            "example": [
                                              "act-0b18f123",
                                              "act-0b18f124",
                                              "act-0b18f125"
                                            ]
                                          },
                                          "userId": {
                                            "type": "string",
                                            "description": "User ID",
                                            "example": "u-19265"
                                          },
                                          "displayName": {
                                            "type": "string",
                                            "description": "The name",
                                            "example": "test"
                                          },
                                          "email": {
                                            "type": "string",
                                            "description": "Email",
                                            "example": "test@spot.io"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "mappedAccountIds": {
                                            "type": "string",
                                            "description": "A list of account IDs",
                                            "example": [
                                              "act-0b18f123",
                                              "act-0b18f124",
                                              "act-0b18f125"
                                            ]
                                          },
                                          "userId": {
                                            "type": "string",
                                            "description": "User ID",
                                            "example": "u-19266"
                                          },
                                          "displayName": {
                                            "type": "string",
                                            "description": "The name",
                                            "example": "test"
                                          },
                                          "email": {
                                            "type": "string",
                                            "description": "Email",
                                            "example": "abc@google.com"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "example": [
                                    {
                                      "mappedAccountIds": [
                                        "act-0b18f123",
                                        "act-0b18f124",
                                        "act-0b18f125"
                                      ],
                                      "userId": "u-19265",
                                      "displayName": "test",
                                      "email": "test@spot.io"
                                    },
                                    {
                                      "mappedAccountIds": [
                                        "act-0b18f123",
                                        "act-0b18f124",
                                        "act-0b18f125"
                                      ],
                                      "userId": "u-19266",
                                      "displayName": "test",
                                      "email": "abc@google.com"
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 2,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "summary": "Create User",
        "description": "Create a new user and link it to the creator's organization (the organization ID from the personal token attached to the API call). If the role is a viewer, the user is also linked to the default account for the organization.",
        "operationId": "OrganizationsAndAccountsCreateUser",
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "generateToken",
            "example": true,
            "description": "If `true`, then the response will include `personalAccessToken` string\n",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "firstName": {
                        "type": "string",
                        "description": "The first name of the user",
                        "example": "Test"
                      },
                      "lastName": {
                        "type": "string",
                        "description": "The last name of the user",
                        "example": "Test"
                      },
                      "email": {
                        "type": "string",
                        "description": "Email",
                        "example": "test@spot.io"
                      },
                      "password": {
                        "type": "string",
                        "description": "Password",
                        "example": "password1234"
                      },
                      "role": {
                        "type": "string",
                        "description": "User's role",
                        "example": "viewer"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create User Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/user/?generateToken=true",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:setup:user",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "object",
                                    "title": "spotinst:setup:user",
                                    "properties": {
                                      "id": {
                                        "type": "integer",
                                        "description": "User's old ID (DEPRECATED)",
                                        "example": 9056
                                      },
                                      "firstName": {
                                        "type": "string",
                                        "description": "First Name",
                                        "example": "Test"
                                      },
                                      "lastName": {
                                        "type": "string",
                                        "description": "Last Name",
                                        "example": "Test"
                                      },
                                      "displayName": {
                                        "type": "string",
                                        "description": "First Name + Last Name",
                                        "example": "Test Test"
                                      },
                                      "email": {
                                        "type": "string",
                                        "description": "Email",
                                        "example": "test@gmail.com"
                                      },
                                      "organizationId": {
                                        "type": "integer",
                                        "description": "ID of Organization in Spot Console",
                                        "example": 606079860000
                                      },
                                      "personalAccessToken": {
                                        "type": "integer",
                                        "description": "ID of Organization in Spot Console",
                                        "example": "..."
                                      },
                                      "userId": {
                                        "type": "string",
                                        "description": "User's ID",
                                        "example": "u-1a2b3c4d"
                                      }
                                    }
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/organization/user": {
      "get": {
        "summary": "Get Users",
        "description": "Get all the users of the organization.\n",
        "operationId": "GetOrganizationUsers",
        "tags": [
          "Organizations"
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "example": {
                                "id": "3ab3fdf7-3af3-46db-9e63-b88cfdac058c",
                                "url": "/setup/organization/user",
                                "method": "GET",
                                "timestamp": "2018-08-20T15:31:12.730Z"
                              }
                            },
                            "response": {
                              "properties": {
                                "kind": {
                                  "example": "spotinst:setup:organization:user"
                                },
                                "count": {
                                  "example": 2
                                },
                                "items": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "userId": {
                                        "type": "string",
                                        "description": "user id"
                                      },
                                      "username": {
                                        "type": "string",
                                        "description": "user name"
                                      },
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "personal",
                                          "programmatic"
                                        ],
                                        "description": "user type"
                                      },
                                      "email": {
                                        "type": "string",
                                        "description": "user's email"
                                      },
                                      "mfa": {
                                        "type": "boolean",
                                        "description": "is validated by mfa"
                                      },
                                      "groupNames": {
                                        "type": "array",
                                        "description": "A list of the groups names that the given user is registered to",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "example": [
                                    {
                                      "userId": "u-a1b2c3d4",
                                      "username": "John Doe",
                                      "type": "personal",
                                      "email": "john.doe@company.com",
                                      "mfa": "false",
                                      "groupNames": [
                                        "Developers",
                                        "DevOps"
                                      ]
                                    },
                                    {
                                      "userId": "u-4d3c2b1a",
                                      "userName": "Jane Doe",
                                      "type": "personal",
                                      "email": "jane.doe@company.com",
                                      "mfa": "true",
                                      "groupNames": [
                                        "DevOps",
                                        "IT"
                                      ]
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/organization/policy": {
      "get": {
        "summary": "Get Policies",
        "description": "Get all the policies of the organization.\n",
        "operationId": "GetOrganizationPolicies",
        "tags": [
          "Organizations"
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "example": {
                                "id": "3ab3fdf7-3af3-46db-9e63-b88cfdac058c",
                                "url": "/setup/organization/policy",
                                "method": "GET",
                                "timestamp": "2018-08-20T15:31:12.730Z"
                              }
                            },
                            "response": {
                              "properties": {
                                "kind": {
                                  "example": "spotinst:setup:organization:policy"
                                },
                                "count": {
                                  "example": 2
                                },
                                "items": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "policy id"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "policy name"
                                      },
                                      "description": {
                                        "type": "string",
                                        "description": "policy description"
                                      },
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "ACCOUNT",
                                          "ORGANIZATION"
                                        ],
                                        "description": "policy type"
                                      },
                                      "policyContent": {
                                        "type": "object",
                                        "properties": {
                                          "statements": {
                                            "type": "array",
                                            "description": "policy statements",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "effect": {
                                                  "type": "string",
                                                  "description": "ALLOW / DENY"
                                                },
                                                "actions": {
                                                  "type": "array",
                                                  "description": "actions that the policy covers (can be with regex expressions)",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "resources": {
                                                  "type": "array",
                                                  "description": "resources that the policy covers (can be with regex expressions)",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "example": [
                                    {
                                      "id": "pol-a1b2c3d4",
                                      "name": "Developers",
                                      "description": "A policy that contains permissions for developers",
                                      "type": "ORGANIZATION",
                                      "policyContent": {
                                        "statements": [
                                          {
                                            "effect": "ALLOW",
                                            "actions": [
                                              "elastigroup:createGroup",
                                              "elastigroup:updateGroup"
                                            ],
                                            "resources": [
                                              "*"
                                            ]
                                          }
                                        ]
                                      },
                                      "createdAt": "2021-12-19T13:44:13.000+0000",
                                      "updatedAt": "2022-01-02T22:04:29.000+0000"
                                    },
                                    {
                                      "id": "pol-87654321",
                                      "name": "DevOps",
                                      "description": "A policy that contains permissions for DevOps",
                                      "type": "ACCOUNT",
                                      "policyContent": {
                                        "statements": [
                                          {
                                            "effect": "ALLOW",
                                            "actions": [
                                              "setup:updatePolicy"
                                            ],
                                            "resources": [
                                              "*"
                                            ]
                                          }
                                        ]
                                      },
                                      "createdAt": "2021-12-19T13:44:13.000+0000",
                                      "updatedAt": "2022-01-02T22:04:29.000+0000"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/user/{userId}": {
      "get": {
        "summary": "Get User Details",
        "description": "Get all the details of a given user.\n",
        "operationId": "GetUserDetails",
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "example": "u-1234abcd",
            "description": "Identifier of a user.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "example": {
                                "id": "3ab3fdf7-3af3-46db-9e63-b88cfdac058c",
                                "url": "/setup/user/u-1234abcd",
                                "method": "GET",
                                "timestamp": "2018-08-20T15:31:12.730Z"
                              }
                            },
                            "response": {
                              "properties": {
                                "kind": {
                                  "example": "spotinst:setup:access:user"
                                },
                                "count": {
                                  "example": 1
                                },
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "userId": {
                                      "type": "string",
                                      "description": "user id"
                                    },
                                    "username": {
                                      "type": "string",
                                      "description": "user name"
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "personal",
                                        "programmatic"
                                      ],
                                      "description": "user type"
                                    },
                                    "email": {
                                      "type": "string",
                                      "description": "user's email"
                                    },
                                    "mfa": {
                                      "type": "boolean",
                                      "description": "is validated by mfa"
                                    },
                                    "groups": {
                                      "type": "array",
                                      "description": "the groups that the given user is registered to",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "user group id"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "user group name"
                                          },
                                          "policyNames": {
                                            "type": "array",
                                            "description": "The names of the policies registered under the given group",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "policies": {
                                      "type": "array",
                                      "description": "The policies registered under the given group",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "policyId": {
                                            "type": "string",
                                            "description": "the ID of the given policy"
                                          },
                                          "policyName": {
                                            "type": "string",
                                            "description": "the name of the given policy"
                                          },
                                          "policyType": {
                                            "type": "string",
                                            "description": "the type of the given policy"
                                          },
                                          "accountIds": {
                                            "type": "array",
                                            "description": "the IDs of the accounts registered under the given policy",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "tokens": {
                                      "type": "array",
                                      "description": "metadata of the tokens registered to the user",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the given token, given by the creating user"
                                          },
                                          "createdAt": {
                                            "type": "string",
                                            "description": "Datetime of token creation"
                                          },
                                          "tokenId": {
                                            "type": "integer",
                                            "description": "Serial identifier of given token"
                                          },
                                          "tokenLastDigits": {
                                            "type": "string",
                                            "description": "Last digits of given token value, to assist with identification"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "example": {
                                    "userId": "u-a1b2c3d4",
                                    "username": "John Doe",
                                    "type": "personal",
                                    "email": "john.doe@company.com",
                                    "mfa": "false",
                                    "groups": [
                                      {
                                        "id": "ugr-12345678",
                                        "name": "DevOps",
                                        "policyNames": [
                                          "DevOps-PROD",
                                          "DevOps-DEV",
                                          "IT"
                                        ]
                                      },
                                      {
                                        "id": "ugr-87654321",
                                        "name": "IT",
                                        "policyNames": [
                                          "IT"
                                        ]
                                      }
                                    ],
                                    "policies": [
                                      {
                                        "policyId": "pol-12345678",
                                        "policyName": "TriggerDeployment",
                                        "policyType": "ACCOUNT",
                                        "accountIds": [
                                          "act-12345678",
                                          "act-87654321"
                                        ]
                                      },
                                      {
                                        "policyId": "pol-87654321",
                                        "policyName": "UpdateScheduling",
                                        "policyType": "ORGANIZATION",
                                        "accountIds": []
                                      }
                                    ],
                                    "tokens": [
                                      {
                                        "name": "my_sweet_token",
                                        "createdAt": "2020-06-01T12:17:51.000+000",
                                        "tokenId": 11111,
                                        "tokenLastDigits": "2323"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete user",
        "description": "Delete a given user(console or programmatic) from organization.\n",
        "operationId": "DeleteUser",
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "example": "u-1234abcd or pu-87654321",
            "description": "Identifier of a user.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "example": {
                                "id": "3ab3fdf7-3af3-46db-9e63-b88cfdac058c",
                                "url": "/setup/user/u-1234abcd",
                                "method": "DELETE",
                                "timestamp": "2018-08-20T15:31:12.730Z"
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/user/{userId}/userGroupMapping": {
      "put": {
        "summary": "User - Update User Group Mapping",
        "description": "Update the mapping of a given user to user groups\n",
        "operationId": "userUpdateUserGroupMapping",
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1setup~1user~1%7BuserId%7D/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "userGroupIds": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "A list of the user groups to register the given user to (should be existing user groups only)"
                      }
                    },
                    "example": {
                      "userGroupIds": [
                        "ugr-12345678",
                        "ugr-87654321"
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "example": {
                                "id": "3ab3fdf7-3af3-46db-9e63-b88cfdac058c",
                                "url": "/setup/user/u-1234abcd/userGroupMapping",
                                "method": "PUT",
                                "timestamp": "2018-08-20T15:31:12.730Z"
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/user/{userId}/policyMapping": {
      "put": {
        "summary": "User - Update Policy Mapping",
        "description": "Update the mapping of a given user directly to policies\n",
        "operationId": "userUpdatePolicyMapping",
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1setup~1user~1%7BuserId%7D/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "policies": {
                        "type": "array",
                        "description": "The policies to register under the given user (should be existing policies only)",
                        "example": null,
                        "items": {
                          "type": "object",
                          "properties": {
                            "policyId": {
                              "type": "string",
                              "description": "A policy ID to register under the given user (should be existing policy only)"
                            },
                            "accountIds": {
                              "type": "array",
                              "description": "A list of account IDs to register with the assigned under the given user (should be existing accounts only)",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "example": {
                      "policies": [
                        {
                          "policyId": "pol-12345678",
                          "accountIds": [
                            "act-12345678"
                          ]
                        },
                        {
                          "policyId": "pol-87654321",
                          "accountIds": [
                            "act-12345678",
                            "act-87654321"
                          ]
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "example": {
                                "id": "3ab3fdf7-3af3-46db-9e63-b88cfdac058c",
                                "url": "/setup/user/u-1234abcd/policyMapping?accountId=act-567c21",
                                "method": "PUT",
                                "timestamp": "2018-08-20T15:31:12.730Z"
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/accountUserMapping": {
      "get": {
        "summary": "Get User",
        "description": "Get user's account mapping\n",
        "operationId": "OrganizationsAndAccountsGetUser",
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "userEmail",
            "example": "test@spot.io",
            "description": "Target user email address\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get User Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/accountUserMapping?userEmail=test@spot.io",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group:log",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "anyOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "accountId": {
                                            "type": "string",
                                            "description": "User's account ID",
                                            "example": "act-1234592"
                                          },
                                          "role": {
                                            "type": "string",
                                            "description": "Role identifies the scope of actions - user is able to perform",
                                            "example": "editor"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "accountId": {
                                            "type": "string",
                                            "description": "User's account ID",
                                            "example": "act-1234593"
                                          },
                                          "role": {
                                            "type": "string",
                                            "description": "Role identifies the scope of actions - user is able to perform",
                                            "example": "viewer"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "example": [
                                    {
                                      "accountId": "act-1234592",
                                      "role": "editor"
                                    },
                                    {
                                      "accountId": "act-1234593",
                                      "role": "viewer"
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 2,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "summary": "Assign Users to Accounts",
        "description": "Assign users to accounts in bulk. Only accounts under the creator's own organization are allowed. Creator's organization ID is taken from the personal token attached to the API call.\n",
        "operationId": "OrganizationsAndAccountsAssignUsersToAccounts",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "title": "Assign role based users",
                    "properties": {
                      "mappings": {
                        "type": "array",
                        "description": "Mappings objects include user, accountID and role.",
                        "items": {
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "userId": {
                                  "type": "string",
                                  "description": "One of userEmail / userId is required. identify user by its user ID",
                                  "example": "u-1234"
                                },
                                "accountId": {
                                  "type": "string",
                                  "description": "Account for which to provide the specified user with the specified role.",
                                  "example": "act-123abc"
                                },
                                "role": {
                                  "type": "string",
                                  "description": "Valid values \"viewer\", \"editor\". Required on permissionStrategy = ROLE_BASED",
                                  "example": "editor"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "userId": {
                                  "type": "string",
                                  "description": "One of userEmail / userId is required. identify user by its user ID",
                                  "example": "u-1234"
                                },
                                "accountId": {
                                  "type": "string",
                                  "description": "Account for which to provide the specified user with the specified role.",
                                  "example": "act-123abc"
                                },
                                "permissionStrategy": {
                                  "type": "string",
                                  "description": "Set the user permissions type, by role or by access policy. Valid values \"ROLE_BASED\", \"POLICY_BASED\"",
                                  "example": "ROLE_BASED"
                                },
                                "role": {
                                  "type": "string",
                                  "description": "Valid values \"viewer\", \"editor\". Required on permissionStrategy = ROLE_BASED",
                                  "example": "editor"
                                }
                              }
                            }
                          ]
                        },
                        "example": [
                          {
                            "userId": "u-1234",
                            "accountId": "act-123abc",
                            "role": "editor"
                          },
                          {
                            "userId": "u-1234",
                            "accountId": "act-123abc",
                            "permissionStrategy": "ROLE_BASED",
                            "role": "editor"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "type": "object",
                    "title": "Assign policy based users",
                    "properties": {
                      "mappings": {
                        "type": "array",
                        "description": "Mappings objects include user, accountID and role.",
                        "items": {
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "userId": {
                                  "type": "string",
                                  "description": "One of userEmail / userId is required. identify user by its user ID",
                                  "example": "u-1234"
                                },
                                "accountId": {
                                  "type": "string",
                                  "description": "Account for which to provide the specified user with the specified role.",
                                  "example": "act-123abc"
                                },
                                "permissionStrategy": {
                                  "type": "string",
                                  "description": "Set the user permissions type, by role or by access policy. Valid values \"ROLE_BASED\", \"POLICY_BASED\"",
                                  "example": "POLICY_BASED"
                                },
                                "policyIds": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "Set list of access policies IDs. Required on permissionStrategy = POLICY_BASED",
                                  "example": [
                                    "pol-c3e30574",
                                    "pol-c3e30575"
                                  ]
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "userEmail": {
                                  "type": "string",
                                  "description": "One of `userEmail` / `userId` is required. Email of the user, used as a unique identifier.",
                                  "example": "test@spot.io"
                                },
                                "accountId": {
                                  "type": "string",
                                  "description": "Account for which to provide the specified user with the specified role.",
                                  "example": "act-123abc"
                                },
                                "role": {
                                  "type": "string",
                                  "description": "Valid values `viewer`, `editor`. Required when `permissionStrategy = ROLE_BASED`.",
                                  "example": "viewer"
                                }
                              }
                            }
                          ]
                        },
                        "example": [
                          {
                            "userId": "u-1234",
                            "accountId": "act-123abc",
                            "permissionStrategy": "POLICY_BASED",
                            "policyIds": [
                              "pol-c3e30574",
                              "pol-c3e30575"
                            ]
                          },
                          {
                            "userEmail": "test@spot.io",
                            "accountId": "act-123abc",
                            "role": "viewer"
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Assign Users To Accounts Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/accountUserMapping?accountId=act-4fab9sc6",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/organization/{organizationId}": {
      "delete": {
        "summary": "Delete Organization",
        "description": "Delete a Spot Organization. ID of the organization can be obtained from your Spot console via the following link: https://console.spotinst.com/#/settings/organization/general > Note: This cannot be undone. Take caution.\n",
        "operationId": "OrganizationsAndAccountsDeleteOrganization",
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organizationId",
            "example": 606079812345,
            "description": "ID of the organization you would like to delete\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Organization Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/organization/606079812345",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "DELETE",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/account/{accountId}/user": {
      "put": {
        "summary": "Update User Permissions",
        "description": "Change the users' permissions for an account (only accounts under the creator's own organization are allowed). Creator's organization ID is taken from the personal token attached to the API call.\n",
        "operationId": "OrganizationsAndAccountsUpdateAUserPermission",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "title": "Update user permissions for editor role",
                    "properties": {
                      "userId": {
                        "type": "string",
                        "description": "One of userEmail / userId is required. identify user by its user ID",
                        "example": "u-1234"
                      },
                      "permissionStrategy": {
                        "type": "string",
                        "description": "Set the user permissions type, by role or by access policy. Valid values \"ROLE_BASED\", \"POLICY_BASED\"",
                        "example": "POLICY_BASED",
                        "default": "ROLE_BASED"
                      },
                      "role": {
                        "type": "string",
                        "description": "Valid values \"viewer\", \"editor\". Required on permissionStrategy = ROLE_BASED",
                        "example": "editor"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "title": "Update user permission with access policies",
                    "properties": {
                      "userId": {
                        "type": "string",
                        "description": "One of userEmail / userId is required. identify user by its user ID",
                        "example": "u-1234"
                      },
                      "permissionStrategy": {
                        "type": "string",
                        "description": "Set the user permissions type, by role or by access policy. Valid values \"ROLE_BASED\", \"POLICY_BASED\"",
                        "example": "POLICY_BASED",
                        "default": "ROLE_BASED"
                      },
                      "policyIds": {
                        "type": "string",
                        "description": "Policy IDs",
                        "example": [
                          "pol-c3e30574",
                          "pol-c3e30575"
                        ]
                      }
                    }
                  },
                  {
                    "type": "object",
                    "title": "Update user permission for viewer role",
                    "properties": {
                      "userId": {
                        "type": "string",
                        "description": "One of userEmail / userId is required. identify user by its user ID",
                        "example": "u-1234"
                      },
                      "role": {
                        "type": "string",
                        "description": "Valid values \"viewer\", \"editor\". Required on permissionStrategy = ROLE_BASED",
                        "example": "viewer"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update User Permissions Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/account/act-4fb595c6/user/",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "PUT",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Detach User",
        "description": "Detach a user from an account (only accounts under the creator's own organization are allowed). Creator's organization ID is taken from the personal token attached to the API call.\n",
        "operationId": "OrganizationsAndAccountsDetachUser",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "example": "act-123456789",
            "description": "The ID of the account you want to update.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "userEmail"
                    ],
                    "properties": {
                      "userEmail": {
                        "type": "string",
                        "description": "Email of the user that is going to be deleted",
                        "example": "test@gmail.com"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detach User Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/account/act-12345678/user/",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "DELETE",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "summary": "Set Existing User Permissions",
        "description": "Add a user to the account and set its permissions on the account. Creator's organization ID is taken from the personal token attached to the API call.\n",
        "operationId": "OrganizationsAndAccountsSetExistingUserPermissions",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "example": "act-123456789",
            "description": "The ID of the account you want to update.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "title": "Set user permissions for viewer role",
                    "properties": {
                      "userEmail": {
                        "type": "string",
                        "description": "One of userEmail / userId is required. identify user by its user ID",
                        "example": "test@spot.io"
                      },
                      "role": {
                        "type": "string",
                        "description": "Valid values - \"viewer\", \"editor\". Required on permissionStrategy = ROLE_BASED",
                        "example": "viewer"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "title": "Set user permissions for editor role",
                    "properties": {
                      "userEmail": {
                        "type": "string",
                        "description": "One of userEmail / userId is required. identify user by its user ID",
                        "example": "test@spot.io"
                      },
                      "role": {
                        "type": "string",
                        "description": "Valid values - \"viewer\", \"editor\". Required on permissionStrategy = ROLE_BASED",
                        "example": "editor"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Set Existing User Permissions Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/account/act-4fb765c6/user",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "PUT",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/user/programmatic": {
      "post": {
        "summary": "Create Programmatic User",
        "description": "This API creates a new programmatic user (not a human user). Use this API to provide privileges to an application that needs to interface with  Spot. Spot returns a token that the programmatic user can use to perform actions with. requires `accounts` or `policies`.",
        "operationId": "OrganizationsAndAccountsCreateProgrammaticUser",
        "tags": [
          "Organizations"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "Brief description of the user.",
                        "example": "test programmatic"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the programmatic user.",
                        "example": "testProgrammaticApi"
                      },
                      "accounts": {
                        "type": "array",
                        "description": "All the accounts the programmatic user will have access to. If used - Cannot be empty.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Account ID the programmatic user will have access to.\n",
                              "example": "act-123"
                            },
                            "role": {
                              "type": "string",
                              "description": "Role to be associated with the programmatic user for this account.\n",
                              "enum": [
                                "viewer",
                                "editor"
                              ],
                              "example": "viewer"
                            }
                          }
                        }
                      },
                      "policies": {
                        "type": "array",
                        "description": "All the policies the programmatic user will have access to. If used - Cannot be empty.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "policyId": {
                              "type": "string",
                              "description": "Policy ID the programmatic user will have access to.\n",
                              "example": "pol-123"
                            },
                            "accountIds": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "A list of the accounts that the policy should be enforced for the user.",
                              "example": [
                                "act-123",
                                "act-321"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create Programmatic User Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:setup:programmaticUser",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "token": {
                                        "type": "string",
                                        "description": "Token",
                                        "example": "f872e7b157866a36229d915aa21cf430f661234568703fd"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "Name",
                                        "example": "TestApi1"
                                      },
                                      "id": {
                                        "type": "string",
                                        "description": "ID",
                                        "example": "pu-6a6976ab"
                                      }
                                    }
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/organization": {
      "post": {
        "summary": "Create Organization",
        "description": "Create a Spot Organization.",
        "operationId": "OrganizationsAndAccountsCreateOrganization",
        "tags": [
          "Organizations"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "organization": {
                        "type": "object",
                        "description": "Organization",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Provide a name for your organization. The organization name must contain at least one character that is a-z or A-Z",
                            "example": "organizationName"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create Organization Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/organization",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:setup:organization",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "object",
                                    "title": "spotinst:setup:organization",
                                    "properties": {
                                      "organizationId": {
                                        "type": "integer",
                                        "description": "Organization ID",
                                        "example": 12345678
                                      },
                                      "organizationName": {
                                        "type": "string",
                                        "description": "Provide a name for your organization. The organization name must contain at least one character that is a-z or A-Z",
                                        "example": "organizationName"
                                      }
                                    }
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/access/policyAction": {
      "get": {
        "summary": "Get Access Policy Actions",
        "description": "Get actions for access policies.",
        "operationId": "OrganizationsAndAccountsGetAccessPolicyAction",
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "example": "ocean:updateCluster",
            "description": "The policy action Name that you would like to get the information for\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "service",
            "example": "ocean",
            "description": "The policy action service that you would like to get the information for\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "resourcePattern",
            "example": "ocean:o-*",
            "description": "The policy action resource pattern that you would like to get the information for\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "scope",
            "example": "account",
            "description": "The policy action scope that you would like to get the information for\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "category",
            "example": "update",
            "description": "The policy action category that you would like to get the information for\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "example": {
                                "id": "3ab3fdf7-3af3-46db-9e63-b88cfdac058c",
                                "url": "/setup/access/policyAction?service=ocean&resourcePattern=ocean:ols-*&category=update",
                                "method": "GET",
                                "timestamp": "2022-04-14T05:05:26.044Z"
                              }
                            },
                            "response": {
                              "properties": {
                                "kind": {
                                  "example": "spotinst:setup:policyAction"
                                },
                                "count": {
                                  "example": 3
                                },
                                "items": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "action name"
                                      },
                                      "service": {
                                        "type": "string",
                                        "description": "service name"
                                      },
                                      "resourcePattern": {
                                        "type": "string",
                                        "description": "resource pattern to use with policy action"
                                      },
                                      "scope": {
                                        "type": "string",
                                        "description": "permissions level for policy action"
                                      },
                                      "category": {
                                        "type": "string",
                                        "description": "kind of policy action"
                                      }
                                    }
                                  },
                                  "example": [
                                    {
                                      "name": "ocean:updateLaunchSpec",
                                      "service": "ocean",
                                      "resourcePattern": "ocean:ols-*",
                                      "scope": "ACCOUNT",
                                      "category": "UPDATE"
                                    },
                                    {
                                      "name": "ocean:launchNodesInLaunchSpec",
                                      "service": "ocean",
                                      "resourcePattern": "ocean:ols-*",
                                      "scope": "ACCOUNT",
                                      "category": "UPDATE"
                                    },
                                    {
                                      "name": "ocean:updateClusterLaunchSpec",
                                      "service": "ocean",
                                      "resourcePattern": "ocean:ols-*",
                                      "scope": "ACCOUNT",
                                      "category": "UPDATE"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/account": {
      "post": {
        "summary": "Create Account",
        "description": "Create a Spot account.",
        "operationId": "OrganizationsAndAccountsCreateAccount",
        "tags": [
          "Accounts"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "account": {
                        "type": "object",
                        "description": "Account",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Provide a name for your account. The account name must contain at least one character that is a-z or A-Z",
                            "example": "AccountName"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create Account Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/account",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:setup:account",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "object",
                                    "title": "spotinst:setup:account",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "Account ID",
                                        "example": "act-123456"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "Account Name",
                                        "example": "AccountName"
                                      },
                                      "organizationId": {
                                        "type": "string",
                                        "description": "Organization ID",
                                        "example": 606012341234
                                      }
                                    }
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Accounts",
        "description": "Get a list of Spot accounts in your organization.  When used without any parameters, the provided token must have Organization Admin permissions and the output will contain all the Organization's accounts. Note In case you want to list all the accounts associated with Organization you can use the below request URL without the cloudAccountId parameter, https://api.spotinst.io/setup/account",
        "operationId": "OrganizationsAndAccountsGetAccounts",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cloudAccountId",
            "schema": {
              "type": "string",
              "example": 634245686616,
              "description": "Will list only the Spot accounts connected to the specified account ID.\n"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Accounts Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/account?cloudAccountId=123456789",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:setup:account",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "anyOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "accountId": {
                                            "type": "string",
                                            "description": "Account ID",
                                            "example": "act-57765123"
                                          },
                                          "organizationId": {
                                            "type": "integer",
                                            "description": "Organization ID",
                                            "example": 606079861123
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "Name",
                                            "example": "test"
                                          },
                                          "providerExternalId": {
                                            "type": "string",
                                            "description": "Provider external ID",
                                            "example": 123456789
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "accountId": {
                                            "type": "string",
                                            "description": "Account ID",
                                            "example": "act-57765123"
                                          },
                                          "organizationId": {
                                            "type": "integer",
                                            "description": "Organization ID",
                                            "example": 606079861123
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "Name",
                                            "example": "prod"
                                          },
                                          "providerExternalId": {
                                            "type": "string",
                                            "description": "Provider external ID",
                                            "example": 123456789
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "example": [
                                    {
                                      "accountId": "act-57765123",
                                      "organizationId": 606079861123,
                                      "name": "test",
                                      "providerExternalId": 123456789
                                    },
                                    {
                                      "accountId": "act-57765123",
                                      "organizationId": 606079861123,
                                      "name": "prod",
                                      "providerExternalId": 123456789
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 2,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/access/policy": {
      "post": {
        "summary": "Create Access Policy",
        "description": "Create an access policy. access policy enables you to define the user's permissions on a granular level than the role-based permissions.",
        "operationId": "OrganizationsAndAccountsCreateAccessPolicy",
        "tags": [
          "Organizations"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "policy": {
                        "type": "object",
                        "description": "Set access policy settings. Example - Acme, Inc.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the Policy",
                            "example": "my policy"
                          },
                          "description": {
                            "type": "string",
                            "description": "Short description of policy",
                            "example": "description of my policy"
                          },
                          "policyContent": {
                            "type": "object",
                            "description": "Set permissions objects list",
                            "properties": {
                              "statements": {
                                "type": "array",
                                "description": "List of permissions statements",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "effect": {
                                          "type": "string",
                                          "description": "Valid values \"ALLOW\", \"DENY\"",
                                          "example": "ALLOW"
                                        },
                                        "actions": {
                                          "type": "array",
                                          "description": "Set a list of required actions for this permissions statement. full list of actions can be found - https://docs.spot.io/account-user-management/user-management/access-policies-actions/",
                                          "items": {
                                            "type": "string",
                                            "example": [
                                              "ocean:importCluster"
                                            ]
                                          }
                                        },
                                        "resources": {
                                          "type": "array",
                                          "description": "Set a list of resources IDs. In order to include all resources in this statement - use \"*\"",
                                          "items": {
                                            "type": "string",
                                            "example": [
                                              "*"
                                            ]
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "effect": {
                                          "type": "string",
                                          "description": "Valid values \"ALLOW\", \"DENY\"",
                                          "example": "ALLOW"
                                        },
                                        "actions": {
                                          "type": "array",
                                          "description": "Set a list of required actions for this permissions statement. full list of actions can be found - https://docs.spot.io/account-user-management/user-management/access-policies-actions/",
                                          "items": {
                                            "type": "string",
                                            "example": [
                                              "emr:scale"
                                            ]
                                          }
                                        },
                                        "resources": {
                                          "type": "array",
                                          "description": "Set a list of resources IDs. In order to include all resources in this statement - use \"*\"",
                                          "items": {
                                            "type": "string",
                                            "example": [
                                              "*"
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  ]
                                },
                                "example": [
                                  {
                                    "effect": "ALLOW",
                                    "actions": [
                                      "ocean:importCluster"
                                    ],
                                    "resources": [
                                      "*"
                                    ]
                                  },
                                  {
                                    "effect": "ALLOW",
                                    "actions": [
                                      "emr:scale"
                                    ],
                                    "resources": [
                                      "*"
                                    ]
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create Access Policy Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/access/policy?accountId=act-6sd665cs\"",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:setup:access:policy",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "object",
                                    "title": "spotinst:setup:access:policy",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "Set access policy name",
                                        "example": "my policy"
                                      },
                                      "description": {
                                        "type": "string",
                                        "description": "Set access policy description",
                                        "example": "description of my policy"
                                      },
                                      "policyContent": {
                                        "type": "array",
                                        "items": {
                                          "type": "object"
                                        },
                                        "description": "Set permissions objects list",
                                        "properties": {
                                          "statements": {
                                            "type": "array",
                                            "items": {
                                              "anyOf": [
                                                {
                                                  "$ref": "#/paths/~1setup~1access~1policy/post/requestBody/content/application~1json/schema/allOf/0/properties/policy/properties/policyContent/properties/statements/items/anyOf/0"
                                                },
                                                {
                                                  "$ref": "#/paths/~1setup~1access~1policy/post/requestBody/content/application~1json/schema/allOf/0/properties/policy/properties/policyContent/properties/statements/items/anyOf/1"
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "id": {
                                        "type": "string",
                                        "description": "ID",
                                        "example": "pol-de9716be"
                                      }
                                    }
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Access Policies",
        "description": "Get access policy settings.",
        "operationId": "OrganizationsAndAccountsGetAccountAccessPolicies",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Get Account Access Policies Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/access/policy?accountId=act-4fd325c3",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:setup:access:policy",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "object",
                                    "title": "spotinst:setup:access:policy",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "Set access policy name",
                                        "example": "my policy"
                                      },
                                      "description": {
                                        "type": "string",
                                        "description": "Set access policy description",
                                        "example": "description of my policy"
                                      },
                                      "policyContent": {
                                        "type": "object",
                                        "description": "Set permissions objects list",
                                        "properties": {
                                          "statements": {
                                            "type": "array",
                                            "items": {
                                              "anyOf": [
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "effect": {
                                                      "type": "string",
                                                      "description": "Valid values \"ALLOW\", \"DENY\"",
                                                      "example": "ALLOW"
                                                    },
                                                    "actions": {
                                                      "type": "array",
                                                      "description": "Set a list of required actions for this permissions statement. full list of actions can be found - https://docs.spot.io/account-user-management/user-management/access-policies-actions/",
                                                      "items": {
                                                        "type": "string",
                                                        "example": [
                                                          "ocean:importCluster"
                                                        ]
                                                      }
                                                    },
                                                    "resources": {
                                                      "type": "array",
                                                      "description": "Set a list of resources IDs. In order to include all resources in this statement - use \"*\"",
                                                      "items": {
                                                        "type": "string",
                                                        "example": [
                                                          "*"
                                                        ]
                                                      }
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "effect": {
                                                      "type": "string",
                                                      "description": "Valid values \"ALLOW\", \"DENY\"",
                                                      "example": "ALLOW"
                                                    },
                                                    "actions": {
                                                      "type": "array",
                                                      "description": "Set a list of required actions for this permissions statement. full list of actions can be found - https://docs.spot.io/account-user-management/user-management/access-policies-actions/",
                                                      "items": {
                                                        "type": "string",
                                                        "example": [
                                                          "emr:scale"
                                                        ]
                                                      }
                                                    },
                                                    "resources": {
                                                      "type": "array",
                                                      "description": "Set a list of resources IDs. In order to include all resources in this statement - use \"*\"",
                                                      "items": {
                                                        "type": "string",
                                                        "example": [
                                                          "*"
                                                        ]
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "id": {
                                        "type": "string",
                                        "description": "ID",
                                        "example": "pol-de9716be"
                                      },
                                      "createdAt": {
                                        "type": "string",
                                        "description": "Created At Date",
                                        "example": "2020-01-21T12:37:14.000+0000"
                                      },
                                      "updatedAt": {
                                        "type": "string",
                                        "description": "Updated At Date",
                                        "example": "2020-01-21T12:37:14.000+0000"
                                      }
                                    }
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/access/policy/{policyId}": {
      "put": {
        "summary": "Update Access Policy",
        "description": "Updates an access policy settings.",
        "operationId": "OrganizationsAndAccountsUpdateAccessPolicy",
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "policyId",
            "example": "pol-2344nn",
            "description": "The access policy ID to operate on\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "policy": {
                        "type": "object",
                        "description": "Set access policy settings",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Set access policy name",
                            "example": "A wonderful policy"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Access Policy Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/access/policy/pol-2344nn?accountId=act-4fbdvfc6",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "PUT",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Access Policy",
        "description": "Deletes an access policy settings.",
        "operationId": "OrganizationsAndAccountsDeleteAccessPolicy",
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1setup~1access~1policy~1%7BpolicyId%7D/put/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Access Policy Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/access/policy/pol-2344nn?accountId=act-123456789",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "DELETE",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/access/userGroup": {
      "get": {
        "summary": "List All User Groups",
        "description": "List all user-groups of your Spot organization\n",
        "operationId": "userGroupListAll",
        "tags": [
          "Organizations"
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "example": {
                                "id": "3ab3fdf7-3af3-46db-9e63-b88cfdac058c",
                                "url": "/setup/access/userGroup?accountId=act-567c21",
                                "method": "GET",
                                "timestamp": "2018-08-20T15:31:12.730Z"
                              }
                            },
                            "response": {
                              "properties": {
                                "kind": {
                                  "example": "spotinst:setup:access:userGroup"
                                },
                                "count": {
                                  "example": 2
                                },
                                "items": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "user group id"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "user group name"
                                      },
                                      "description": {
                                        "type": "string",
                                        "description": "user group description"
                                      },
                                      "createdAt": {
                                        "type": "string",
                                        "description": "user group creation timestamp"
                                      },
                                      "usersCount": {
                                        "type": "integer",
                                        "description": "the amount of users registered under the given group"
                                      },
                                      "policyNames": {
                                        "type": "array",
                                        "description": "The names of the policies registered under the given group",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "example": [
                                    {
                                      "id": "ugr-a1b2c3d4",
                                      "name": "Developers",
                                      "description": "managing permissions to my group of developers",
                                      "createdAt": "2020-11-04T11:29:10.000+0000",
                                      "usersCount": 10,
                                      "policyNames": [
                                        "TriggerDeployment"
                                      ]
                                    },
                                    {
                                      "id": "ugr-4d3c2b1a",
                                      "name": "DevOps",
                                      "description": "managing permissions to my group of DevOps",
                                      "createdAt": "2020-09-01T11:28:00.000+0000",
                                      "usersCount": 5,
                                      "policyNames": [
                                        "TriggerDeployment",
                                        "UpdateScaling",
                                        "UpdateScheduling"
                                      ]
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "summary": "Create a new User Group",
        "description": "Create a new user-group of your Spot organization\n",
        "operationId": "userGroupCreate",
        "tags": [
          "Organizations"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "user group id",
                        "example": "ugr-a1b2c3d4"
                      },
                      "name": {
                        "type": "string",
                        "description": "user group name",
                        "example": "Developers"
                      },
                      "description": {
                        "type": "string",
                        "description": "user group description",
                        "example": "managing permissions to my group of developers"
                      },
                      "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "description": "user group creation timestamp",
                        "example": "2020-11-04T11:29:10.000+0000"
                      },
                      "userIds": {
                        "type": "array",
                        "description": "The users to register under the created group (should be existing users only)",
                        "example": [
                          "u-12345678",
                          "pu-12345678"
                        ],
                        "items": {
                          "type": "string"
                        }
                      },
                      "policies": {
                        "type": "array",
                        "description": "The policies to register under the given group (should be existing policies only)",
                        "example": [
                          {
                            "policyId": "pol-12345678",
                            "accountIds": [
                              "act-12345678"
                            ]
                          },
                          {
                            "policyId": "pol-87654321",
                            "accountIds": [
                              "act-12345678",
                              "act-87654321"
                            ]
                          }
                        ],
                        "items": {
                          "type": "object",
                          "properties": {
                            "policyId": {
                              "type": "string",
                              "description": "A policy to register under the given group (should be existing policy only)"
                            },
                            "accounts": {
                              "type": "array",
                              "description": "A list of accounts to register with the assigned under the given group (should be existing accounts only)",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "example": {
                                "id": "3ab3fdf7-3af3-46db-9e63-b88cfdac058c",
                                "url": "/setup/access/userGroup?accountId=act-567c21",
                                "method": "POST",
                                "timestamp": "2018-08-20T15:31:12.730Z"
                              }
                            },
                            "response": {
                              "properties": {
                                "kind": {
                                  "example": "spotinst:setup:access:userGroup"
                                },
                                "count": {
                                  "example": 1
                                },
                                "items": {
                                  "$ref": "#/paths/~1setup~1access~1userGroup/post/requestBody/content/application~1json/schema/allOf/0"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/access/userGroup/{userGroupId}": {
      "get": {
        "summary": "Get User Group Details",
        "description": "Get the details of a user Group\n",
        "operationId": "userGroupGetDetails",
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userGroupId",
            "example": "ugr-1234abcd",
            "description": "Identifier of a user Group.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "example": {
                                "id": "3ab3fdf7-3af3-46db-9e63-b88cfdac058c",
                                "url": "/setup/access/userGroup/urg-1234abcd?accountId=act-567c21",
                                "method": "GET",
                                "timestamp": "2018-08-20T15:31:12.730Z"
                              }
                            },
                            "response": {
                              "properties": {
                                "kind": {
                                  "example": "spotinst:setup:access:userGroup"
                                },
                                "count": {
                                  "example": 1
                                },
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "user group id"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "user group name"
                                    },
                                    "description": {
                                      "type": "string",
                                      "description": "user group description"
                                    },
                                    "createdAt": {
                                      "type": "string",
                                      "description": "user group creation timestamp"
                                    },
                                    "users": {
                                      "type": "array",
                                      "description": "the users registered under the given group",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "userId": {
                                            "type": "string",
                                            "description": "the ID of the given user"
                                          },
                                          "userName": {
                                            "type": "string",
                                            "description": "the name of the given user"
                                          },
                                          "type": {
                                            "type": "string",
                                            "description": "the type of the given user",
                                            "enum": [
                                              "programmatic",
                                              "personal"
                                            ]
                                          }
                                        }
                                      }
                                    },
                                    "policies": {
                                      "type": "array",
                                      "description": "The policies registered under the given group",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "policyId": {
                                            "type": "string",
                                            "description": "the ID of the given policy"
                                          },
                                          "policyName": {
                                            "type": "string",
                                            "description": "the name of the given policy"
                                          },
                                          "policyType": {
                                            "type": "string",
                                            "description": "the type of the given policy"
                                          },
                                          "accountNames": {
                                            "type": "array",
                                            "description": "the names of the accounts registered under the given policy",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "example": {
                                    "id": "ugr-a1b2c3d4",
                                    "name": "Developers",
                                    "description": "managing permissions to my group of developers",
                                    "createdAt": "2020-11-04T11:29:10.000+0000",
                                    "users": [
                                      {
                                        "userId": "u-12345678",
                                        "userName": "Clark Kent",
                                        "type": "personal"
                                      },
                                      {
                                        "userId": "pu-87654321",
                                        "userName": "Superman",
                                        "type": "programmatic"
                                      }
                                    ],
                                    "policies": [
                                      {
                                        "policyId": "pol-12345678",
                                        "policyName": "TriggerDeployment",
                                        "policyType": "ACCOUNT",
                                        "accountIds": [
                                          "act-12345678",
                                          "act-87654321"
                                        ]
                                      },
                                      {
                                        "policyId": "pol-87654321",
                                        "policyName": "UpdateScheduling",
                                        "policyType": "ORGANIZATION"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update User Group Details",
        "description": "Update the details of a user Group\n",
        "operationId": "userGroupUpdateDetails",
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1setup~1access~1userGroup~1%7BuserGroupId%7D/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "user group name",
                        "minLength": 1,
                        "example": "Developers"
                      },
                      "description": {
                        "type": "string",
                        "description": "user group description",
                        "minLength": 1,
                        "example": "managing permissions to my group of developers"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "example": {
                                "id": "3ab3fdf7-3af3-46db-9e63-b88cfdac058c",
                                "url": "/setup/access/userGroup/urg-1234abcd?accountId=act-567c21",
                                "method": "PUT",
                                "timestamp": "2018-08-20T15:31:12.730Z"
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete User Group",
        "description": "Delete a user Group\n",
        "operationId": "userGroupDelete",
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1setup~1access~1userGroup~1%7BuserGroupId%7D/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "example": {
                                "id": "3ab3fdf7-3af3-46db-9e63-b88cfdac058c",
                                "url": "/setup/access/userGroup/urg-1234abcd?accountId=act-567c21",
                                "method": "DELETE",
                                "timestamp": "2018-08-20T15:31:12.730Z"
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/access/userGroup/{userGroupId}/userMapping": {
      "put": {
        "summary": "User Group - Update User Mapping",
        "description": "Update the mapping of a given user group to users\n",
        "operationId": "userGroupUpdateUserMapping",
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1setup~1access~1userGroup~1%7BuserGroupId%7D/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "userIds": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The users to register under the given user group (should be existing users only)"
                      }
                    },
                    "example": {
                      "userIds": [
                        "u-12345678",
                        "pu-12345678"
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "example": {
                                "id": "3ab3fdf7-3af3-46db-9e63-b88cfdac058c",
                                "url": "/setup/access/userGroup/urg-1234abcd/userMapping?accountId=act-567c21",
                                "method": "PUT",
                                "timestamp": "2018-08-20T15:31:12.730Z"
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/access/userGroup/{userGroupId}/policyMapping": {
      "put": {
        "summary": "User Group - Update Policy Mapping",
        "description": "Update the mapping of a given user group to policies\n",
        "operationId": "userGroupUpdatePolicyMapping",
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1setup~1access~1userGroup~1%7BuserGroupId%7D/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "policies": {
                        "type": "array",
                        "description": "The policies to register under the given user group (should be existing policies only)",
                        "example": null,
                        "items": {
                          "type": "object",
                          "properties": {
                            "policyId": {
                              "type": "string",
                              "description": "A policy to register under the given group (should be existing policy only)"
                            },
                            "accountIds": {
                              "type": "array",
                              "description": "A list of accounts to register with the assigned under the given group (should be existing accounts only)",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "example": {
                      "policies": [
                        {
                          "policyId": "pol-12345678",
                          "accountIds": [
                            "act-12345678"
                          ]
                        },
                        {
                          "policyId": "pol-87654321",
                          "accountIds": [
                            "act-12345678",
                            "act-87654321"
                          ]
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "example": {
                                "id": "3ab3fdf7-3af3-46db-9e63-b88cfdac058c",
                                "url": "/setup/access/userGroup/urg-1234abcd/policyMapping?accountId=act-567c21",
                                "method": "PUT",
                                "timestamp": "2018-08-20T15:31:12.730Z"
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/credentials/aws": {
      "post": {
        "summary": "Set Credentials for AWS",
        "description": "Link a Spot account to an AWS Cloud account. \\\nPlease create external id using spot api (see /setup/credentials/aws/externalId) \\\nand use it when creating the AWS role and then call this route with your AWS role's arn to link it to your spot account\n",
        "operationId": "OrganizationsAndAccountsSetCloudCredentialsForAWS",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "credentials": {
                        "type": "object",
                        "description": "Credentials details",
                        "required": [
                          "iamRole"
                        ],
                        "properties": {
                          "iamRole": {
                            "type": "string",
                            "description": "Provide the IAM Role ARN connected to another AWS account 922761411349 and with the latest Spot Policy - https://docs.spot.io/administration/api/spot-policy-in-aws",
                            "example": "arn:aws:iam::1234567890:role/Spot_Iam_Role"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Set Cloud Credentials For AWS Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/credentials/aws?accountId=act-123456",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/credentials/aws/externalId": {
      "post": {
        "summary": "Create AWS account external id",
        "description": "Create aws account external id \\\nYou should use the external id when creating your AWS role for your spot account \\\nand after you create the role you need to call [set-aws-credentials Set Credentials for AWS](https://docs.spot.io/api/#operation/OrganizationsAndAccountsSetCloudCredentialsForAWS) \\\nto link your AWS account with your spot account\n",
        "operationId": "OrganizationsAndAccountsCreateAWSAccountExternalId",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Create AWS Acccount External Id Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/credentials/aws/externalId?accountId=act-123456",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:setup:aws:externalId",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "object",
                                    "title": "spotinst:setup:aws:externalId",
                                    "properties": {
                                      "externalId": {
                                        "type": "string",
                                        "description": "Token",
                                        "example": "SpotinstAwsAccountExternalId"
                                      },
                                      "maxValidUntil": {
                                        "type": "string",
                                        "description": "Max Valid Until",
                                        "example": "2021-03-18T16:11:04.402Z"
                                      }
                                    }
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/setup/credentials": {
      "post": {
        "summary": "Set Credentials for GCP",
        "description": "Link a Spot account to a GCP Cloud account.",
        "operationId": "OrganizationsAndAccountsSetCloudCredentialsForGCP",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "serviceAccount": {
                        "type": "object",
                        "description": "Set service account for credentials",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Valid values - service_account",
                            "example": "service_account"
                          },
                          "project_id": {
                            "type": "string",
                            "description": "Name of project in GCP",
                            "example": "test-labs"
                          },
                          "private_key_id": {
                            "type": "string",
                            "description": "Private key ID of JSON key created during prerequisites stage",
                            "example": "XXXXXXXXXXXXXXXXX"
                          },
                          "private_key": {
                            "type": "string",
                            "description": "Private key of JSON key created during prerequisites stage",
                            "example": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
                          },
                          "client_email": {
                            "type": "string",
                            "description": "Email associated with service account",
                            "example": "test123@spot.io"
                          },
                          "client_id": {
                            "type": "string",
                            "description": "Client ID of service account",
                            "example": "XXXXXXXXXXXXXXXXXXXXX"
                          },
                          "auth_uri": {
                            "type": "string",
                            "description": "Authentication uri, Default - https://accounts.google.com/o/oauth2/auth",
                            "example": "https://accounts.google.com/o/oauth2/auth"
                          },
                          "token_uri": {
                            "type": "string",
                            "description": "Token uri, Default - https://oauth2.googleapis.com/token",
                            "example": "https://oauth2.googleapis.com/token"
                          },
                          "auth_provider_x509_cert_url": {
                            "type": "string",
                            "description": "Default - https://www.googleapis.com/oauth2/v1/certs",
                            "example": "https://www.googleapis.com/oauth2/v1/certs"
                          },
                          "client_x509_cert_url": {
                            "type": "string",
                            "description": "Should be in following format - \"https://www.googleapis.com/robot/v1/metadata/x509/\"",
                            "example": "https://www.googleapis.com/robot/v1/metadata/x509/test123%40test-labs.iam.gserviceaccount.com"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Set Cloud Credentials For GCP Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/gcp/setup/credentials?accountId=act-123456",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/setup/credentials/validation": {
      "post": {
        "summary": "Validate Credentials for GCP",
        "description": "Validate the credentials for connecting a Spot account to an GCP Cloud account. The validation will test the credentials without actually set it. Please notice to run the set credentials request to perform the set account credentials.",
        "operationId": "OrganizationsAndAccountsValidateCloudCredentialsForGCP",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "serviceAccount": {
                        "type": "object",
                        "description": "Set service account for credentials",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Valid values - service_account",
                            "example": "service_account"
                          },
                          "project_id": {
                            "type": "string",
                            "description": "Name of project in GCP",
                            "example": "test-labs"
                          },
                          "private_key_id": {
                            "type": "string",
                            "description": "Private key ID of JSON key created during prerequisites stage",
                            "example": "XXXXXXXXXXXXXXXXX"
                          },
                          "private_key": {
                            "type": "string",
                            "description": "Private key of JSON key created during prerequisites stage",
                            "example": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
                          },
                          "client_email": {
                            "type": "string",
                            "description": "Email associated with service account",
                            "example": "test123@spot.io"
                          },
                          "client_id": {
                            "type": "string",
                            "description": "Client ID of service account",
                            "example": "XXXXXXXXXXXXXXXXXXXXX"
                          },
                          "auth_uri": {
                            "type": "string",
                            "description": "Authentication uri, Default - https://accounts.google.com/o/oauth2/auth",
                            "example": "https://accounts.google.com/o/oauth2/auth"
                          },
                          "token_uri": {
                            "type": "string",
                            "description": "Token uri, Default - https://oauth2.googleapis.com/token",
                            "example": "https://oauth2.googleapis.com/token"
                          },
                          "auth_provider_x509_cert_url": {
                            "type": "string",
                            "description": "Default - https://www.googleapis.com/oauth2/v1/certs",
                            "example": "https://www.googleapis.com/oauth2/v1/certs"
                          },
                          "client_x509_cert_url": {
                            "type": "string",
                            "description": "Should be in following format - \"https://www.googleapis.com/robot/v1/metadata/x509/\"",
                            "example": "https://www.googleapis.com/robot/v1/metadata/x509/test123%40test-labs.iam.gserviceaccount.com"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Validate Cloud Credentials for GCP Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/gcp/setup/credentials/validate?accountId=act-123456",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/setup/credentials": {
      "post": {
        "summary": "Set Credentials for Azure",
        "description": "Link a Spot account to an Azure Cloud account.",
        "operationId": "OrganizationsAndAccountsSetCloudCredentialsForAzure",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "clientId",
                      "clientSecret",
                      "tenantId",
                      "subscriptionId"
                    ],
                    "properties": {
                      "clientId": {
                        "type": "string",
                        "description": "Set the application ID",
                        "example": 111111111
                      },
                      "clientSecret": {
                        "type": "string",
                        "description": "Set the key secret",
                        "example": "32431r2431434132"
                      },
                      "tenantId": {
                        "type": "string",
                        "description": "Set the directory ID",
                        "example": "1321e1e3123er23"
                      },
                      "subscriptionId": {
                        "type": "string",
                        "description": "Set the subscription ID",
                        "example": "234r3141131"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Set Cloud Credentials For Azure Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/azure/setup/credentials?accountId=act-123456",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/setup/credentials/validation": {
      "post": {
        "summary": "Validate Credentials for Azure",
        "description": "Validate the credentials for connecting a Spot account to an Azure Cloud account. The validation will test the credentials without actually set it. Please notice to run the set credentials request to perform the set Azure account credentials (https://docs.spot.io/connect-your-cloud-provider/azure-account) .",
        "operationId": "OrganizationsAndAccountsValidateCloudCredentialsForAzure",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "clientId": {
                        "type": "string",
                        "description": "Set the application ID",
                        "example": "111111111"
                      },
                      "clientSecret": {
                        "type": "string",
                        "description": "Set the key secret",
                        "example": "32431r2431434132"
                      },
                      "tenantId": {
                        "type": "string",
                        "description": "Set the directory ID",
                        "example": "1321e1e3123er23"
                      },
                      "subscriptionId": {
                        "type": "string",
                        "description": "Set the subscription ID",
                        "example": "234r3141131"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Validate Cloud Credentials for Azure Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/azure/setup/credentials/validation?accountId=act-123456",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/gcp/k8s/cluster": {
      "summary": "Ocean for GKE",
      "post": {
        "summary": "Create Cluster",
        "description": "## Prerequisites:\n  The Ocean Controller is used to monitor the cluster resources and report back to Ocean.|\n  To install the Ocean Controller, complete and run the following script on a machine with the kubectl command line tool installed and configured:\n\n```\n  #!/usr/bin/env bash\n  curl -fsSL http://spotinst-public.s3.amazonaws.com/integrations/kubernetes/cluster-controller/scripts/init.sh | \\\n  SPOTINST_TOKEN=<ENTER YOUR TOKEN HERE> \\\n  SPOTINST_ACCOUNT=<ENTER YOUR SPOTINST ACCOUNT ID HERE> \\\n  SPOTINST_CLUSTER_IDENTIFIER=<ENTER YOUR CLUSTER IDENTIFIER HERE> \\\n  bash\n```\nYou may need Kubernetes admin privileges for this script to work. To grant yourself admin privileges, run the following command:\n```\n  kubectl create clusterrolebinding <clusterName> --clusterrole=cluster-admin --user=<userEmail>\n```\nFor more information, refer to our [controller installation guides](https://docs.spot.io/ocean/tutorials/spot-kubernetes-controller/). You can install with Helm, Kubectl or Terraform.\nFor more about Ocean and the Ocean Controller, see the documentation [here](https://docs.spot.io/ocean/overview-kubernetes).\n",
        "operationId": "OceanGKEClusterCreate",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "cluster"
                    ],
                    "properties": {
                      "cluster": {
                        "type": "object",
                        "description": "The specification of the Ocean cluster.",
                        "required": [
                          "name",
                          "controllerClusterId",
                          "compute"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "readOnly": true,
                            "example": "o-abcd1234",
                            "description": "Ocean cluster identifier.\n"
                          },
                          "name": {
                            "type": "string",
                            "example": "test",
                            "description": "Add a name for the Ocean cluster.\n"
                          },
                          "controllerClusterId": {
                            "type": "string",
                            "example": "test-123124",
                            "description": "Enter the Ocean cluster identifier.\n"
                          },
                          "gke": {
                            "type": "object",
                            "required": [
                              "clusterName",
                              "masterLocation"
                            ],
                            "description": "Use existing GKE cluster.\n",
                            "properties": {
                              "clusterName": {
                                "type": "string",
                                "description": "Required for the cluster.gke object.\n",
                                "example": "test-cluster"
                              },
                              "masterLocation": {
                                "type": "string",
                                "description": "Required for the cluster.gke object.\n",
                                "example": "us-central1-a"
                              }
                            }
                          },
                          "autoScaler": {
                            "$ref": "#/paths/~1ocean~1gcp~1k8s~1cluster~1gke~1import/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/autoScaler"
                          },
                          "capacity": {
                            "$ref": "#/paths/~1ocean~1gcp~1k8s~1cluster~1gke~1import/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/capacity"
                          },
                          "strategy": {
                            "type": "object",
                            "title": "Ocean Strategy",
                            "properties": {
                              "drainingTimeout": {
                                "type": "integer",
                                "description": "The draining timeout (in seconds) before terminating the instance.\nIf no draining timeout is defined, the default draining timeout will be used.\n",
                                "example": 60
                              },
                              "provisioningModel": {
                                "type": "string",
                                "description": "Define the provisioning model of the launched instances\n",
                                "enum": [
                                  "SPOT",
                                  "PREEMPTIBLE"
                                ]
                              },
                              "preemptiblePercentage": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 100,
                                "default": 100,
                                "description": "The desired percentage of Spot/Preemptible instances out of all running instances.\\\nOnly available when the field is **not** set in any VNG directly (launchSpec.strategy.preemptiblePercentage).\n",
                                "example": 100
                              }
                            }
                          },
                          "scheduling": {
                            "type": "object",
                            "title": "Ocean GKE Scheduling",
                            "description": "Schedule an action such as a planned shutdown or a cluster roll.",
                            "properties": {
                              "shutdownHours": {
                                "type": "object",
                                "description": "Define time(s) for a scheduled shutdown.\n",
                                "required": [
                                  "timeWindows"
                                ],
                                "properties": {
                                  "isEnabled": {
                                    "type": "boolean",
                                    "description": "Flag to enable or disable the shutdown hours mechanism. When false, the mechanism is deactivated and the cluster remains in its current state.\n",
                                    "example": true
                                  },
                                  "timeWindows": {
                                    "type": "array",
                                    "description": "Set time windows for shutdown hours. Specify a list of timeWindows that includes at least one time window. Each string is in the format of - ddd:hh:mm-ddd:hh:mm ddd = day of week = Sun | Mon | Tue | Wed | Thu | Fri | Sat hh = hour 24 = 0 -23 mm = minute = 0 - 59. Time windows should not overlap. Required when cluster.scheduling.isEnabled = True.\n",
                                    "items": {
                                      "type": "string",
                                      "example": [
                                        "Fri:15:30-Wed:14:30",
                                        "Wed:15:30-Thu:18:30"
                                      ]
                                    }
                                  }
                                }
                              },
                              "tasks": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "title": "Task Definition",
                                  "required": [
                                    "isEnabled",
                                    "cronExpression",
                                    "taskType"
                                  ],
                                  "properties": {
                                    "isEnabled": {
                                      "type": "boolean",
                                      "example": true,
                                      "description": "Describes whether the task is enabled. When true, the task runs. When false, it does not run. Required for the cluster.scheduling.tasks object.\n"
                                    },
                                    "cronExpression": {
                                      "type": "string",
                                      "example": "0 1 * * *",
                                      "description": "A valid cron expression. For example : \" * * * * * \". The cron is running in UTC time zone and is in Unix cron format [Cron Expression Validator Script](http://www.unix.com/man-page/linux/5/crontab/). Frequency and cronExpression cannot be used at a time.\n"
                                    },
                                    "taskType": {
                                      "type": "string",
                                      "enum": [
                                        "clusterRoll"
                                      ],
                                      "example": "clusterRoll",
                                      "description": "Valid values: \"clusterRoll\". Required for the cluster.scheduling.tasks object.\n"
                                    },
                                    "parameters": {
                                      "type": "object",
                                      "properties": {
                                        "clusterRoll": {
                                          "type": "object",
                                          "properties": {
                                            "batchSizePercentage": {
                                              "type": "integer",
                                              "minimum": 0,
                                              "maximum": 100,
                                              "example": 20,
                                              "description": "Value as a percent to set the size of a batch in a roll. Valid values are 0-100.\n"
                                            },
                                            "comment": {
                                              "type": "string",
                                              "example": "This is why I deployed my cluster.",
                                              "description": "Add a comment description for the roll. The comment is limited to 256 chars\n"
                                            },
                                            "batchMinHealthyPercentage": {
                                              "type": "integer",
                                              "minimum": 1,
                                              "maximum": 100,
                                              "default": 50,
                                              "example": 100,
                                              "description": "Indicates the threshold of minimum healthy instances in single batch. If the amount of healthy instances in single batch is under the threshold, the cluster roll will fail. If exists, the parameter value will be in range of 1-100. In case of null as value, the default value in the backend will be 50%. Value of param should represent the number in percentage (%) of the batch.\n"
                                            },
                                            "respectPdb": {
                                              "type": "boolean",
                                              "description": "During the roll, if the parameter is set to true we honor PDB during the instance replacement.\n",
                                              "example": true,
                                              "default": false
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "security": {
                            "type": "object",
                            "title": "Security",
                            "properties": {
                              "containerImage": {
                                "type": "object",
                                "properties": {
                                  "approvedImages": {
                                    "type": "array",
                                    "description": "Set list of permitted repositories for container images.",
                                    "items": {
                                      "type": "string",
                                      "example": [
                                        "gce.io/*",
                                        "docker.*"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "compute": {
                            "type": "object",
                            "title": "Ocean Compute",
                            "required": [
                              "subnetname",
                              "launchSpecification",
                              "networkInterfaces",
                              "availabilityZones"
                            ],
                            "properties": {
                              "networkInterfaces": {
                                "type": "object",
                                "description": "Settings for network interfaces\n",
                                "required": [
                                  "accessConfigs",
                                  "network"
                                ],
                                "properties": {
                                  "network": {
                                    "type": "string",
                                    "example": "default"
                                  },
                                  "projectId": {
                                    "type": "string",
                                    "description": "Use a network resource from a different project. Set the project identifier to use its network resource. This parameter is relevant only if the network resource is in a different project.\n",
                                    "example": "test-project"
                                  },
                                  "accessConfigs": {
                                    "type": "object",
                                    "required": [
                                      "name",
                                      "type"
                                    ],
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "external-nat"
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "Possible values: ONE_TO_ONE_NAT\n",
                                        "example": "ONE_TO_ONE_NAT"
                                      }
                                    }
                                  },
                                  "aliasIpRanges": {
                                    "type": "object",
                                    "required": [
                                      "ipCidrRange",
                                      "subnetworkRangeName"
                                    ],
                                    "properties": {
                                      "ipCidrRange": {
                                        "type": "string",
                                        "description": "Required for the cluster.compute.networkInterfaces.aliasIpRanges object.\n",
                                        "example": "/24"
                                      },
                                      "subnetworkRangeName": {
                                        "type": "string",
                                        "description": "Required for the cluster.compute.networkInterfaces.aliasIpRanges object.\n",
                                        "example": "gke-test-native-vpc-pods-5cb557f7"
                                      }
                                    }
                                  }
                                }
                              },
                              "backendServices": {
                                "type": "object",
                                "description": "Settings for backend services.",
                                "required": [
                                  "backendServiceName"
                                ],
                                "properties": {
                                  "backendServiceName": {
                                    "type": "string",
                                    "description": "Required for the cluster.compute.backendServices object.",
                                    "example": "test-global-tcp"
                                  },
                                  "locationType": {
                                    "type": "string",
                                    "enum": [
                                      "regional",
                                      "global"
                                    ],
                                    "example": "regional"
                                  },
                                  "scheme": {
                                    "type": "string",
                                    "description": "Required if locationType is set to \"regional\".\n",
                                    "enum": [
                                      "EXTERNAL",
                                      "INTERNAL"
                                    ],
                                    "example": "EXTERNAL"
                                  },
                                  "namedPorts": {
                                    "type": "object",
                                    "required": [
                                      "name",
                                      "ports"
                                    ],
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "https"
                                      },
                                      "ports": {
                                        "type": "array",
                                        "items": {
                                          "type": "integer"
                                        },
                                        "example": [
                                          443,
                                          8443
                                        ]
                                      }
                                    }
                                  }
                                }
                              },
                              "subnetName": {
                                "type": "string",
                                "description": "Subnet identifier for the Ocean cluster",
                                "example": "default"
                              },
                              "availabilityZones": {
                                "type": "array",
                                "description": "Availability zone(s) used by the Ocean cluster.",
                                "items": {
                                  "type": "string",
                                  "example": "us-west1-a"
                                }
                              },
                              "instanceTypes": {
                                "type": "object",
                                "description": "The type of instances that may or may not be a part of the Ocean cluster.",
                                "properties": {
                                  "whitelist": {
                                    "type": "array",
                                    "description": "Instance types allowed in the Ocean cluster. Cannot be configured if a deny list is configured.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "example": [
                                      "n1-standard-2"
                                    ]
                                  },
                                  "blacklist": {
                                    "type": "array",
                                    "description": "Instance types to avoid launching in the Ocean cluster. Cannot be configured if a permit list is configured.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "example": [
                                      "n2d-highcpu-96"
                                    ]
                                  }
                                }
                              },
                              "launchSpecification": {
                                "type": "object",
                                "required": [
                                  "sourceImage",
                                  "tags",
                                  "metadata",
                                  "serviceAccount"
                                ],
                                "properties": {
                                  "sourceImage": {
                                    "type": "string",
                                    "description": "URL of the image used to launch the instances.",
                                    "example": "https://www.googleapis.com/compute/v1/projects/gke-node-images/global/images/gke-1117-gke12-cos-69-10895-138-0-v190225-pre"
                                  },
                                  "metadata": {
                                    "type": "object",
                                    "description": "Set array of cluster metadata.\n",
                                    "properties": {
                                      "key": {
                                        "type": "string",
                                        "description": "Key of metadata key pair.\n",
                                        "example": "example_key1"
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Value of metadata key pair.\n",
                                        "example": "exmample_value1"
                                      }
                                    }
                                  },
                                  "tags": {
                                    "type": "array",
                                    "description": "Every node launched from this configuration will be tagged with those tags.",
                                    "items": {
                                      "type": "string"
                                    },
                                    "example": [
                                      "gke-cluster-name-12345-node"
                                    ]
                                  },
                                  "ipForwarding": {
                                    "type": "boolean",
                                    "example": true
                                  },
                                  "minCpuPlatform": {
                                    "type": "string",
                                    "description": "Set instance CPU platform.\n",
                                    "example": "Intel Sandy Bridge"
                                  },
                                  "serviceAccount": {
                                    "type": "string",
                                    "example": "265168459660-compute@developer.gserviceaccount.com",
                                    "description": "The service account used by applications running on the VM to call GCP APIs.\n"
                                  },
                                  "labels": {
                                    "type": "array",
                                    "description": "Set labels on cluster. Can set up to 60 labels\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string",
                                          "example": "spotinst-gke-original-node-pool"
                                        },
                                        "value": {
                                          "type": "string",
                                          "example": "test-native-vpc__default-pool"
                                        }
                                      }
                                    }
                                  },
                                  "rootVolumeSizeInGb": {
                                    "type": "integer",
                                    "description": "Optionally set root size (GB). Value should be greater than or equal to 100.",
                                    "example": 100
                                  },
                                  "rootVolumeType": {
                                    "type": "string",
                                    "description": "Set the root volume disk type.",
                                    "example": "pd-standard",
                                    "enum": [
                                      "pd-standard",
                                      "pd-ssd"
                                    ]
                                  },
                                  "shieldedInstanceConfig": {
                                    "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec~1%7BoceanLaunchSpecId%7D/put/requestBody/content/application~1json/schema/properties/launchSpec/properties/shieldedInstanceConfig"
                                  },
                                  "useAsTemplateOnly": {
                                    "type": "boolean",
                                    "description": "The configuration specified on the Ocean object will function only as a template for virtual node groups.\n",
                                    "default": false
                                  }
                                }
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2021-03-17T08:13:08.000Z",
                            "description": "A timestamp of the Ocean creation.\n"
                          },
                          "updatedAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2021-03-17T15:06:13.000Z",
                            "description": "A timestamp of the latest Ocean update.\n"
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "cluster": {
                        "type": "object",
                        "required": [
                          "name"
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/gcp/k8s/cluster"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1gcp~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:gcp:k8s"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Clusters",
        "description": "List the configurations for all Ocean clusters in the specified account.\n",
        "operationId": "OceanGKEClusterList",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean GKE List Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/gcp/k8s/cluster"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1gcp~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:gcp:k8s"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/gcp/k8s/cluster/{oceanClusterId}": {
      "delete": {
        "summary": "Delete Cluster",
        "description": "Delete a specified Ocean cluster.\n",
        "operationId": "OceanGKEClusterDelete",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean GKE Delete Cluster Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/gcp/k8s/cluster/o-abcd1234"
                            },
                            "method": {
                              "example": "DELETE"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get Cluster",
        "description": "Get the configuration for a specified Ocean cluster.\n",
        "operationId": "OceanGKEClusterGet",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean GKE Get Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/gcp/k8s/cluster/o-abcd1234"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1gcp~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:gcp:k8s"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Cluster",
        "description": "All Ocean parameters are updatable, excluding the Name and controllerClusterId. <br /> This API supports partial updates, so specific fields can be updated separately.\n",
        "operationId": "OceanGKEClusterUpdate",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/paths/~1ocean~1gcp~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean GKE Update Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/gcp/k8s/cluster/o-abcd1234"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1gcp~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:gcp:k8s"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/gcp/k8s/cluster/{oceanClusterId}/reImport": {
      "put": {
        "summary": "Reimport Cluster",
        "description": "Reimport the cluster's configuration from GKE.\n",
        "operationId": "reImportGke",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Reimport cluster response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/gcp/k8s/cluster/o-12345abc/reImport"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "cluster": {
                                    "type": "object",
                                    "properties": {
                                      "oceanId": {
                                        "type": "string",
                                        "description": "The identifier of the Ocean cluster.\n",
                                        "example": "o-12345abc"
                                      },
                                      "associatedClusterName": {
                                        "type": "string",
                                        "description": "The name of the corresponding GKE cluster.\n",
                                        "example": "gke-cluster"
                                      },
                                      "isUpdated": {
                                        "type": "boolean",
                                        "description": "If `true`, then the Ocean's configuration was updated.\n",
                                        "example": true
                                      },
                                      "launchSpecs": {
                                        "type": "array",
                                        "description": "Shows the Ocean's virtual node groups and their update status.\n",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "launchSpecId": {
                                              "type": "string",
                                              "example": "ols-12345abc",
                                              "description": "The identifier of the virtual node group.\n"
                                            },
                                            "associatedNodePool": {
                                              "type": "string",
                                              "description": "The virtual node group's associated node pool in GKE.\n",
                                              "example": "default-pool"
                                            },
                                            "isUpdated": {
                                              "type": "boolean",
                                              "description": "If `true`, then the virtual node group's configuration was updated.\n",
                                              "example": true
                                            }
                                          }
                                        },
                                        "example": [
                                          {
                                            "launchSpecId": "ols-12345abc",
                                            "associatedNodePool": "default-pool",
                                            "isUpdated": true
                                          },
                                          {
                                            "launchSpecId": "ols-98765cba",
                                            "associatedNodePool": "pool-1",
                                            "isUpdated": false
                                          }
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:gcp:k8s"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/gcp/k8s/cluster/{oceanClusterId}/detachInstances": {
      "put": {
        "summary": "Detach Instances",
        "description": "Detach instances from your Ocean cluster.\n",
        "operationId": "oceanGkeDetachInstance",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "instancesToDetach"
                    ],
                    "properties": {
                      "instancesToDetach": {
                        "type": "array",
                        "description": "Array of instance identifiers to be detached.\n",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "sin-9d317117a0df-oesg-02cff6a8",
                          "sin-49784809d76a-oesg-02cff6a8"
                        ]
                      },
                      "shouldTerminateInstances": {
                        "type": "boolean",
                        "description": "Determines whether the detached instances should be terminated or not. (Default true)\n",
                        "example": true
                      },
                      "shouldDecrementTargetCapacity": {
                        "type": "boolean",
                        "description": "Determines whether the Ocean cluster's target capacity should be decremented. (Default false)\n",
                        "example": false
                      },
                      "drainingTimeout": {
                        "type": "integer",
                        "description": "(Applies only if shouldTerminateInstances is on) The draining timeout (in seconds) before terminating the instance.\n"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/gcp/k8s/cluster/o-4c794b06/detachInstances"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/gcp/k8s/cluster/{oceanClusterId}/log": {
      "summary": "Ocean for GKE",
      "get": {
        "summary": "Get Elastilog",
        "description": "Get group’s Elastilog by \n",
        "operationId": "oceanGkeFetchLog",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1mcs~1ecs~1cluster~1%7BclusterName%7D~1costs/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1mcs~1ecs~1cluster~1%7BclusterName%7D~1costs/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1log/get/parameters/4"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1log/get/parameters/5"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1log/get/parameters/6"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Get Log Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request": {
                      "type": "object",
                      "description": "Original request properties.\n",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "3213f42e-455e-4801-a185-cd3eb65fac5f",
                          "description": "Unique identifier associated with this request.\n"
                        },
                        "url": {
                          "type": "string",
                          "example": "/ocean/gcp/k8s/cluster/o-e0a2bd7c/log?fromDate=2020-10-06&toDate=2020-10-08&severity=ALL&limit=500",
                          "description": "The URL that was used for the request.\n"
                        },
                        "method": {
                          "type": "string",
                          "example": "GET",
                          "description": "The HTTP **METHOD** used for the request.\n"
                        },
                        "timestamp": {
                          "type": "string",
                          "example": "2020-10-05T16:20:38.579Z",
                          "description": "When the request was received by Spot.\n"
                        }
                      }
                    },
                    "response": {
                      "type": "object",
                      "description": "Response package that includes status, type, and any relevant data.\n",
                      "properties": {
                        "status": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "integer",
                              "example": "200",
                              "description": "HTTP status code assigned to this response.\n"
                            },
                            "message": {
                              "type": "string",
                              "example": "OK",
                              "description": "HTTP status message for the respective status code.\n"
                            }
                          }
                        },
                        "kind": {
                          "type": "string",
                          "example": "spotinst:ocean:cluster:log"
                        },
                        "items": {
                          "type": "array",
                          "description": "Array of data objects.\n",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              },
                              "severity": {
                                "type": "string"
                              },
                              "createdAt": {
                                "type": "string"
                              }
                            }
                          },
                          "example": [
                            {
                              "message": "Ocean o-e0a2bd7c successfully created.",
                              "severity": "INFO",
                              "createdAt": "2020-10-07T09:51:12.000Z"
                            }
                          ]
                        },
                        "count": {
                          "type": "integer",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/gcp/k8s/cluster/{oceanClusterId}/rightSizing/suggestion": {
      "post": {
        "summary": "Get Right Sizing Recommendations",
        "description": "Get right-sizing recommendations for an Ocean cluster and filter them according to namespace or label.\n",
        "operationId": "oceanGkeGetRightSizingRecommendationsWithFilter",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D~1rightSizing~1suggestion/post/requestBody/content/application~1json/schema/allOf/0"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean RightSizing Recommendation Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "integer",
                              "example": 200
                            },
                            "message": {
                              "type": "string",
                              "example": "OK"
                            }
                          }
                        },
                        "kind": {
                          "type": "string",
                          "example": "spotinst:ocean:aws:k8s:cluster:rightSizing:resourceSuggestion"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "resourceName": {
                                "type": "string",
                                "example": "dns-controller"
                              },
                              "resourceType": {
                                "type": "string",
                                "example": "deployment"
                              },
                              "namespace": {
                                "type": "string",
                                "example": "kube-system"
                              },
                              "suggestedCPU": {
                                "type": "integer",
                                "example": 1
                              },
                              "suggestedMemory": {
                                "type": "integer",
                                "example": 19
                              },
                              "requestedCPU": {
                                "type": "integer",
                                "example": 50
                              },
                              "requestedMemory": {
                                "type": "integer",
                                "example": 50
                              }
                            }
                          },
                          "example": [
                            {
                              "resourceName": "dns-controller",
                              "resourceType": "deployment",
                              "namespace": "kube-system",
                              "suggestedCPU": 1,
                              "suggestedMemory": 19,
                              "requestedCPU": 50,
                              "requestedMemory": 50
                            },
                            {
                              "resourceName": "kube-dns",
                              "resourceType": "daemonSet",
                              "namespace": "kube-system",
                              "suggestedCPU": 2,
                              "suggestedMemory": 20,
                              "requestedCPU": 10,
                              "requestedMemory": 30
                            }
                          ]
                        },
                        "count": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/gcp/k8s/cluster/{oceanClusterId}/aggregatedCosts": {
      "post": {
        "summary": "Get Cluster Aggregated Detailed Costs",
        "description": "Provides Kubernetes cluster resource usage and costs over a time interval which can be grouped and/or filtered by label/annotaion.\\\nFor example - application name (webapp, backend), environment (production, staging), version etc.\\\nThe response will contain a breakdown of the cluster resource costs($) in terms of compute (CPU, memory) and storage.\nThe response will group the cluster usage costs based on preselected default of application namespace or user selected label or annotation.\\\nWithin the group, resource costs are broken down per resource kind (Deployment, DaemonSet etc.).\n\nTime Rounding Down: The CostAnalysis API applies rounding down to the hours provided during the call.\\\nFor example, the value 1707004799099 (In GMT) representing Saturday, February 3, 2024, 23:59:59.099 is rounded down to Saturday, February 3, 2024, 23:00:00.000, resulting in the omission of one hour of cost.\n",
        "operationId": "oceanGkeK8sClusterAggregatedDetailedCosts",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "endTime",
                      "startTime"
                    ],
                    "properties": {
                      "startTime": {
                        "type": "string",
                        "example": "2018-06-20T11:35:02.745Z",
                        "description": "Beginning date value using either the date format \"yyyy-MM-dd'T'HH:mm:ss'Z'\" or ms \"1494751821472\".\n"
                      },
                      "endTime": {
                        "type": "string",
                        "example": "2018-06-22T11:30:01.745Z",
                        "description": "End date value using either the date format \"yyyy-MM-dd'T'HH:mm:ss'Z'\" or ms \"1494751821472\".\n"
                      },
                      "groupBy": {
                        "type": "string",
                        "description": "The parameter we want to group the costs by.\n",
                        "default": "namespace",
                        "example": "namespace.label.env",
                        "enum": [
                          "namespace",
                          "namespace.label.${labelKey}",
                          "resource.label.${labelKey}",
                          "resource.annotation.${annotationKey}",
                          "namespace.annotation.${annotationKey}"
                        ]
                      },
                      "filter": {
                        "type": "object",
                        "description": "Describe how to filter the costs. Optional field.",
                        "required": [
                          "scope",
                          "conditions"
                        ],
                        "properties": {
                          "scope": {
                            "type": "string",
                            "enum": [
                              "namespace",
                              "resource"
                            ]
                          },
                          "conditions": {
                            "type": "object",
                            "required": [
                              "anyMatch"
                            ],
                            "properties": {
                              "anyMatch": {
                                "type": "array",
                                "description": "Array of conditions set that OR operator is applied between them.\n",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "allMatch"
                                  ],
                                  "properties": {
                                    "allMatch": {
                                      "type": "array",
                                      "description": "Array of conditions that AND operator is applied between them.\\\nFor example, (label env equals prod) AND (label app exists)\n",
                                      "items": {
                                        "type": "object",
                                        "description": "The basic expression of a condition",
                                        "required": [
                                          "type",
                                          "key",
                                          "operator"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "label",
                                              "annotation"
                                            ]
                                          },
                                          "key": {
                                            "type": "string",
                                            "description": "May be any string, but shouldn't be empty.\n",
                                            "example": "env"
                                          },
                                          "operator": {
                                            "type": "string",
                                            "enum": [
                                              "equals",
                                              "notEquals",
                                              "exists",
                                              "notExists"
                                            ]
                                          },
                                          "value": {
                                            "type": "string",
                                            "description": "Required whenever the operator is \"equals\" or \"notEquals\".\n",
                                            "example": "prod"
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "example": [
                                  {
                                    "allMatch": [
                                      {
                                        "type": "label",
                                        "key": "env",
                                        "operator": "equals",
                                        "value": "prod"
                                      },
                                      {
                                        "type": "label",
                                        "key": "app",
                                        "operator": "exists"
                                      }
                                    ]
                                  },
                                  {
                                    "allMatch": [
                                      {
                                        "type": "annotation",
                                        "key": "meta.data",
                                        "operator": "exists"
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Cluster Aggregated Detailed Costs Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/gcp/k8s/cluster/o-abcd1234/aggregatedCosts"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "result": {
                                    "type": "object",
                                    "properties": {
                                      "totalForDuration": {
                                        "type": "object",
                                        "properties": {
                                          "startTime": {
                                            "type": "string",
                                            "example": "2018-06-20T11:35:01.745Z",
                                            "description": "Beginning date value using either the date format \"yyyy-MM-dd'T'HH:mm:ss'Z'\" or ms \"1494751821472\".\n"
                                          },
                                          "endTime": {
                                            "type": "string",
                                            "example": "2018-06-22T11:30:01.745Z",
                                            "description": "End date value using either the date format \"yyyy-MM-dd'T'HH:mm:ss'Z'\" or ms \"1494751821472\".\n"
                                          },
                                          "summary": {
                                            "type": "object",
                                            "properties": {
                                              "total": {
                                                "type": "number",
                                                "example": 41772.882658036,
                                                "description": "The total costs of cluster in a given time range"
                                              },
                                              "compute": {
                                                "type": "object",
                                                "properties": {
                                                  "total": {
                                                    "type": "number",
                                                    "example": 40668.1299631538,
                                                    "description": "The total compute costs of the cluster in a given time range"
                                                  },
                                                  "workloads": {
                                                    "type": "object",
                                                    "properties": {
                                                      "total": {
                                                        "type": "number",
                                                        "example": 40668.1299631538
                                                      }
                                                    }
                                                  },
                                                  "headroom": {
                                                    "type": "object",
                                                    "properties": {
                                                      "total": {
                                                        "type": "number",
                                                        "example": 0
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "storage": {
                                                "type": "object",
                                                "properties": {
                                                  "total": {
                                                    "type": "number",
                                                    "example": 1104.7526948819,
                                                    "description": "The total storage costs of the cluster in given time range"
                                                  },
                                                  "block": {
                                                    "type": "object",
                                                    "properties": {
                                                      "total": {
                                                        "type": "number",
                                                        "example": 1104.7526948819
                                                      },
                                                      "pdPv": {
                                                        "type": "object",
                                                        "properties": {
                                                          "total": {
                                                            "type": "number",
                                                            "example": 1104.7526948819
                                                          }
                                                        }
                                                      },
                                                      "pdBoot": {
                                                        "type": "object",
                                                        "properties": {
                                                          "total": {
                                                            "type": "number",
                                                            "example": 0
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "detailedCosts": {
                                            "type": "object",
                                            "properties": {
                                              "groupedBy": {
                                                "type": "string",
                                                "example": "n.l.name"
                                              },
                                              "aggregations": {
                                                "type": "object",
                                                "description": "Contains aggregation for each group by value.\n",
                                                "additionalProperties": {
                                                  "type": "object",
                                                  "description": "For example - if group by is namespace so each property name will a namesapce in the cluster.",
                                                  "properties": {
                                                    "summary": {
                                                      "type": "object",
                                                      "properties": {
                                                        "total": {
                                                          "type": "number",
                                                          "example": 425.23778
                                                        },
                                                        "compute": {
                                                          "type": "object",
                                                          "properties": {
                                                            "total": {
                                                              "type": "number",
                                                              "example": 125.23778
                                                            }
                                                          }
                                                        },
                                                        "storage": {
                                                          "type": "object",
                                                          "properties": {
                                                            "total": {
                                                              "type": "number",
                                                              "example": 300
                                                            },
                                                            "block": {
                                                              "type": "object",
                                                              "properties": {
                                                                "total": {
                                                                  "type": "number",
                                                                  "example": 300
                                                                },
                                                                "pdPv": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "total": {
                                                                      "type": "number",
                                                                      "example": 300
                                                                    }
                                                                  }
                                                                },
                                                                "pdBoot": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "total": {
                                                                      "type": "number",
                                                                      "example": 0
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "resources": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "metadata": {
                                                            "type": "object",
                                                            "properties": {
                                                              "name": {
                                                                "type": "string",
                                                                "example": "k8s-events"
                                                              },
                                                              "type": {
                                                                "type": "string",
                                                                "example": "Deployment"
                                                              },
                                                              "namespace": {
                                                                "type": "string",
                                                                "example": "kube-system"
                                                              }
                                                            }
                                                          },
                                                          "total": {
                                                            "type": "number",
                                                            "example": 1.655635222
                                                          },
                                                          "compute": {
                                                            "type": "object",
                                                            "properties": {
                                                              "total": {
                                                                "type": "number",
                                                                "example": 1.4213600158
                                                              }
                                                            }
                                                          },
                                                          "storage": {
                                                            "type": "object",
                                                            "properties": {
                                                              "total": {
                                                                "type": "number",
                                                                "example": 0.2342752062
                                                              },
                                                              "block": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "total": {
                                                                    "type": "number",
                                                                    "example": 0.2342752062
                                                                  },
                                                                  "pdPv": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                      "total": {
                                                                        "type": "number",
                                                                        "example": 0
                                                                      }
                                                                    }
                                                                  },
                                                                  "pdBoot": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                      "total": {
                                                                        "type": "number",
                                                                        "example": 0.2342752062
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "ocean:k8s:cluster:aggregatedCosts:detailed"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/gcp/k8s/cluster/{oceanClusterId}/aggregatedCosts/summary": {
      "post": {
        "summary": "Get Cluster Aggregated Summary Costs",
        "description": "Provides Kubernetes cluster summary usage and costs over a time interval which can be grouped and/or filtered by label/annotaion,\\\nfor example - application name (webapp, backend), environment (production, staging), version etc.\\\nThe response will contain a breakdown of the cluster resource costs($) in terms of compute (CPU, memory), storage (block, file, rootVolume).\nThe response will group the cluster usage costs based on preselected default of application namespace or user selected label or annotation.\n\nTime Rounding Down: The CostAnalysis API applies rounding down to the hours provided during the call.\\\nFor example, the value 1707004799099 (In GMT) representing Saturday, February 3, 2024, 23:59:59.099 is rounded down to Saturday, February 3, 2024, 23:00:00.000, resulting in the omission of one hour of cost.\n",
        "operationId": "oceanGkeK8sClusterAggregatedSummaryCosts",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "endTime",
                      "startTime"
                    ],
                    "properties": {
                      "startTime": {
                        "type": "string",
                        "example": "2023-07-20T11:35:01.745Z",
                        "description": "Beginning date value using either the date format \"yyyy-MM-dd'T'HH:mm:ss'Z'\" or ms \"1494751821472\".\n"
                      },
                      "endTime": {
                        "type": "string",
                        "example": "2023-07-22T11:30:01.745Z",
                        "description": "End date value using either the date format \"yyyy-MM-dd'T'HH:mm:ss'Z'\" or ms \"1494751821472\".\n"
                      },
                      "groupBy": {
                        "type": "string",
                        "description": "The parameter we want to group the costs by.\n",
                        "default": "namespace",
                        "example": "namespace.label.env",
                        "enum": [
                          "namespace",
                          "namespace.label.${labelKey}",
                          "resource.label.${labelKey}",
                          "resource.annotation.${annotationKey}",
                          "namespace.annotation.${annotationKey}"
                        ]
                      },
                      "filter": {
                        "type": "object",
                        "description": "Describe how to filter the costs. Optional field.",
                        "required": [
                          "scope",
                          "conditions"
                        ],
                        "properties": {
                          "scope": {
                            "type": "string",
                            "enum": [
                              "namespace",
                              "resource"
                            ]
                          },
                          "conditions": {
                            "type": "object",
                            "required": [
                              "anyMatch"
                            ],
                            "properties": {
                              "anyMatch": {
                                "type": "array",
                                "description": "Array of conditions set that OR operator is applied between them.\n",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "allMatch"
                                  ],
                                  "properties": {
                                    "allMatch": {
                                      "type": "array",
                                      "description": "Array of conditions that AND operator is applied between them.\\\nFor example, (label env equals prod) AND (label app exists)\n",
                                      "items": {
                                        "type": "object",
                                        "description": "The basic expression of a condition",
                                        "required": [
                                          "type",
                                          "key",
                                          "operator"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "label",
                                              "annotation"
                                            ]
                                          },
                                          "key": {
                                            "type": "string",
                                            "description": "May be any string, but shouldn't be empty.\n",
                                            "example": "env"
                                          },
                                          "operator": {
                                            "type": "string",
                                            "enum": [
                                              "equals",
                                              "notEquals",
                                              "exists",
                                              "notExists"
                                            ]
                                          },
                                          "value": {
                                            "type": "string",
                                            "description": "Required whenever the operator is \"equals\" or \"notEquals\".\n",
                                            "example": "prod"
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "example": [
                                  {
                                    "allMatch": [
                                      {
                                        "type": "label",
                                        "key": "env",
                                        "operator": "equals",
                                        "value": "prod"
                                      },
                                      {
                                        "type": "label",
                                        "key": "app",
                                        "operator": "exists"
                                      }
                                    ]
                                  },
                                  {
                                    "allMatch": [
                                      {
                                        "type": "annotation",
                                        "key": "meta.data",
                                        "operator": "exists"
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Cluster Aggregated Summary Costs Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/gcp/k8s/cluster/o-abcd1234/aggregatedCosts/summary"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "result": {
                                    "type": "object",
                                    "properties": {
                                      "totalForDuration": {
                                        "type": "object",
                                        "properties": {
                                          "startTime": {
                                            "type": "string",
                                            "example": "2023-07-20T11:35:01.745Z",
                                            "description": "Beginning date value using either the date format \"yyyy-MM-dd'T'HH:mm:ss'Z'\" or ms \"1494751821472\".\n"
                                          },
                                          "endTime": {
                                            "type": "string",
                                            "example": "2023-07-22T11:30:01.745Z",
                                            "description": "End date value using either the date format \"yyyy-MM-dd'T'HH:mm:ss'Z'\" or ms \"1494751821472\".\n"
                                          },
                                          "summary": {
                                            "type": "object",
                                            "properties": {
                                              "total": {
                                                "type": "number",
                                                "example": 41772.882658035785,
                                                "format": "float",
                                                "description": "The total costs of cluster in a given time range"
                                              },
                                              "compute": {
                                                "type": "object",
                                                "properties": {
                                                  "total": {
                                                    "type": "number",
                                                    "example": 40668.1299631538,
                                                    "format": "float",
                                                    "description": "The total compute costs of the cluster in a given time range"
                                                  },
                                                  "workloads": {
                                                    "type": "object",
                                                    "properties": {
                                                      "total": {
                                                        "type": "number",
                                                        "example": 39882.13803327978,
                                                        "format": "float"
                                                      }
                                                    }
                                                  },
                                                  "headroom": {
                                                    "type": "object",
                                                    "properties": {
                                                      "total": {
                                                        "type": "number",
                                                        "example": 0,
                                                        "format": "float"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "storage": {
                                                "type": "object",
                                                "properties": {
                                                  "total": {
                                                    "type": "number",
                                                    "example": 1104.7526948819868,
                                                    "format": "float",
                                                    "description": "The total storage costs of the cluster in given time range"
                                                  },
                                                  "block": {
                                                    "type": "object",
                                                    "properties": {
                                                      "total": {
                                                        "type": "number",
                                                        "example": 1104.7526948819868,
                                                        "format": "float"
                                                      },
                                                      "pdPv": {
                                                        "type": "object",
                                                        "properties": {
                                                          "total": {
                                                            "type": "number",
                                                            "example": 1104.7526948819868,
                                                            "format": "float"
                                                          }
                                                        }
                                                      },
                                                      "pdBoot": {
                                                        "type": "object",
                                                        "properties": {
                                                          "total": {
                                                            "type": "number",
                                                            "example": 0,
                                                            "format": "float"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "ocean:k8s:cluster:aggregatedCosts:summary"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/gcp/k8s/launchSpec": {
      "summary": "Ocean for GKE",
      "post": {
        "summary": "Create VNG",
        "description": "Create a virtual node group.\n",
        "operationId": "OceanGKELaunchSpecCreate",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "launchSpec"
                    ],
                    "properties": {
                      "launchSpec": {
                        "type": "object",
                        "description": "Ocean Cluster Virtual Node Group (VNG).\n",
                        "required": [
                          "oceanId",
                          "sourceImage"
                        ],
                        "properties": {
                          "oceanId": {
                            "type": "string",
                            "example": "o-1fff54ed",
                            "description": "The Ocean cluster identifier. Required to create the virtual node group.\n"
                          },
                          "name": {
                            "type": "string",
                            "example": "lp_name",
                            "description": "Set the name for the virtual node group.\n"
                          },
                          "sourceImage": {
                            "type": "string",
                            "example": "https://www.googleapis.com/compute/v1/projects/gke-node-images/global/images/container-v1-3-v20160517",
                            "description": "Set the image URL. Can be null.\n"
                          },
                          "serviceAccount": {
                            "type": "string",
                            "example": "265168459660-compute@developer.gserviceaccount.com",
                            "description": "The account used by applications running on the VM to call GCP APIs.\n"
                          },
                          "rootVolumeSize": {
                            "type": "integer",
                            "description": "Set root volume size (in GB).",
                            "example": 8
                          },
                          "rootVolumeType": {
                            "type": "string",
                            "description": "Set the root volume disk type.",
                            "example": "pd-standard",
                            "enum": [
                              "pd-standard",
                              "pd-ssd"
                            ]
                          },
                          "metadata": {
                            "type": "array",
                            "required": [
                              "key",
                              "value"
                            ],
                            "description": "Add metadata to the cluster.\n",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string",
                                  "description": "Set the metadata key. Required for launchSpec.metadata.",
                                  "example": "key1"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Set the metadata name. Required for launchSpec.metadata.",
                                  "example": "value1"
                                }
                              }
                            },
                            "example": [
                              {
                                "key": "key1",
                                "value": "value1"
                              },
                              {
                                "key": "key2",
                                "value": "value2"
                              }
                            ]
                          },
                          "instanceTypes": {
                            "type": "array",
                            "description": "An array of supported machine types for the virtual node group. Can be null.\n",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "n1-standard-1",
                              "n1-standard-2"
                            ]
                          },
                          "availabilityZones": {
                            "type": "array",
                            "description": "An array holding availability zones, this configures the availability zones the Ocean may launch instances in per VNG. Can be null.\n",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "us-central1-a",
                              "us-central1-b"
                            ]
                          },
                          "tags": {
                            "type": "array",
                            "description": "Every node launched from this VNG will have those tags. If the value is null, the nodes will have the tags configured at the cluster level.\n",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "gke-cluster-name-12345-node",
                              "network-tag-1"
                            ]
                          },
                          "taints": {
                            "type": "array",
                            "description": "Add taints to the virtual node group.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string",
                                  "description": "Set taint key."
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Set taint value."
                                },
                                "effect": {
                                  "type": "string",
                                  "description": "Set taint effect."
                                }
                              }
                            },
                            "example": [
                              {
                                "key": "taintKey",
                                "value": "taintValue",
                                "effect": "NoSchedule"
                              }
                            ]
                          },
                          "labels": {
                            "type": "array",
                            "description": "An array of labels to add to the virtual node group. Only custom user labels are allowed, and not Kubernetes built-in labels or Spot internal labels.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string",
                                  "description": "Set label key.\\\nThe following are not allowed:\n* \"kubernetes.io/hostname\"\n* \"failure-domain.beta.kubernetes.io/zone\"\n* \"topology.kubernetes.io/zone\"\n* \"failure-domain.beta.kubernetes.io/region\"\n* \"topology.kubernetes.io/region\"\n* \"beta.kubernetes.io/instance-type\"\n* \"node.kubernetes.io/instance-type\"\n* \"beta.kubernetes.io/os\"\n* \"kubernetes.io/os\"\n* \"beta.kubernetes.io/arch\"\n* \"kubernetes.io/arch\"\n* \"spotinst.io/node-lifecycle\"\n* \"spotinst.io/gpu-type\"\n"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Set label value."
                                }
                              }
                            },
                            "example": [
                              {
                                "key": "env",
                                "value": "test"
                              }
                            ]
                          },
                          "autoScale": {
                            "type": "object",
                            "description": "Object specifying the automatic scaling of an Ocean VNG.\n",
                            "properties": {
                              "headrooms": {
                                "type": "array",
                                "description": "Set custom headroom per virtual node group. Provide a list of launchSpec.autoScale.headroom objects.\n",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "cpuPerUnit": {
                                      "type": "integer",
                                      "description": "Configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.\n",
                                      "example": 1000
                                    },
                                    "memoryPerUnit": {
                                      "type": "integer",
                                      "description": "Configure the amount of memory (MiB) to allocate the headroom.\n",
                                      "example": 2048
                                    },
                                    "gpuPerUnit": {
                                      "type": "integer",
                                      "description": "The amount of GPU to allocate per headroom unit.\n",
                                      "example": 0
                                    },
                                    "numOfUnits": {
                                      "type": "integer",
                                      "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n",
                                      "example": 3
                                    }
                                  }
                                }
                              },
                              "autoHeadroomPercentage": {
                                "type": "integer",
                                "description": "Number between 0-200 to control the headroom % of the specific Virtual Node Group. Effective when cluster.autoScaler.isAutoConfig=true is set on the Ocean cluster\n",
                                "example": 20
                              },
                              "down": {
                                "type": "object",
                                "description": "Autoscaling scale down operations.\n",
                                "properties": {
                                  "maxScaleDownPercentage": {
                                    "type": "number",
                                    "format": "double",
                                    "minimum": 0.1,
                                    "maximum": 100,
                                    "description": "The maximum percentage allowed to scale down in a single scaling action on the nodes running in a specific VNG. Allowed only if maxScaleDownPercentage is set to null at the cluster level.\n",
                                    "example": 30
                                  }
                                }
                              }
                            }
                          },
                          "resourceLimits": {
                            "type": "object",
                            "properties": {
                              "maxInstanceCount": {
                                "description": "Option to set a maximum number of instances per virtual node group. Can be null. If set, the value must be greater than or equal to 0.\n",
                                "type": "integer",
                                "example": 5
                              },
                              "minInstanceCount": {
                                "description": "Option to set a minimum number of instances per virtual node group.\\\nCan be null. If set, value must be greater than or equal to 0.\n",
                                "type": "integer",
                                "example": 2
                              }
                            }
                          },
                          "restrictScaleDown": {
                            "type": "boolean",
                            "description": "When set to True, VNG nodes will be treated as if all pods running have the [restrict-scale-down label](https://docs.spot.io/ocean/features/labels-and-taints).\nTherefore, Ocean will not scale nodes down unless they are empty.\n",
                            "example": false
                          },
                          "shieldedInstanceConfig": {
                            "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec~1%7BoceanLaunchSpecId%7D/put/requestBody/content/application~1json/schema/properties/launchSpec/properties/shieldedInstanceConfig"
                          },
                          "strategy": {
                            "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec~1%7BoceanLaunchSpecId%7D/put/requestBody/content/application~1json/schema/properties/launchSpec/properties/strategy"
                          },
                          "storage": {
                            "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec~1%7BoceanLaunchSpecId%7D/put/requestBody/content/application~1json/schema/properties/launchSpec/properties/storage"
                          },
                          "scheduling": {
                            "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec~1%7BoceanLaunchSpecId%7D/put/requestBody/content/application~1json/schema/properties/launchSpec/properties/scheduling"
                          },
                          "createdAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2019-06-03T08:13:08.000Z"
                          },
                          "updatedAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2019-06-10T15:06:13.000Z"
                          },
                          "networkInterfaces": {
                            "type": "array",
                            "required": [
                              "accessConfigs",
                              "network"
                            ],
                            "description": "Settings for network interfaces\n",
                            "items": {
                              "type": "object",
                              "properties": {
                                "network": {
                                  "type": "string",
                                  "description": "The name of the network.\n",
                                  "example": "default"
                                },
                                "projectId": {
                                  "type": "string",
                                  "description": "Use a network resource from a different project. Set the project identifier to use its network resource. This parameter is relevant only if the network resource is in a different project.\n",
                                  "example": "test-project"
                                },
                                "accessConfigs": {
                                  "type": "array",
                                  "description": "The network protocol of the VNG.\n",
                                  "required": [
                                    "name",
                                    "type"
                                  ],
                                  "items": {
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "The name of the access configuration.\n",
                                        "example": "external-nat"
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "The type of the access configuration.\n",
                                        "enum": [
                                          "ONE_TO_ONE_NAT"
                                        ],
                                        "example": "ONE_TO_ONE_NAT"
                                      }
                                    }
                                  }
                                },
                                "aliasIpRanges": {
                                  "type": "array",
                                  "required": [
                                    "ipCidrRange",
                                    "subnetworkRangeName"
                                  ],
                                  "description": "use the imported node pool’s associated aliasIpRange to assign secondary IP addresses to the nodes. Cannot be changed after VNG creation.",
                                  "items": {
                                    "properties": {
                                      "ipCidrRange": {
                                        "type": "string",
                                        "description": "specify the IP address range in CIDR notation that can be used for the alias IP addresses associated with the imported node pool.\n",
                                        "example": "/24"
                                      },
                                      "subnetworkRangeName": {
                                        "type": "string",
                                        "description": "specify the IP address range for the subnet secondary IP range.\n",
                                        "example": "gke-test-native-vpc-pods-5cb557f7"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Virtual Node Group Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/gcp/k8s/launchSpec"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec/post/requestBody/content/application~1json/schema/allOf/0/properties/launchSpec"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:gcp:k8s:launchSpec"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List VNGs",
        "operationId": "OceanGKELaunchSpecList",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "oceanId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "o-12345abc",
            "description": "Identifier of the Ocean cluster.\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Virtual Node Group Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/gcp/k8s/launchSpec"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec/post/requestBody/content/application~1json/schema/allOf/0/properties/launchSpec"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:gcp:k8s:launchSpec"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/gcp/k8s/launchSpec/import": {
      "summary": "Ocean for GKE",
      "post": {
        "summary": "Import GKE Node Pool To VNG",
        "description": "Returns an Ocean Virtual Node Group (VNG) configuration based on a given GCP GKE Cluster Node Pool.\\\nThe returned value (\"Imported VNG\") can then be used as input to the Create VNG API in order to create an actual VNG in your Ocean cluster.\n",
        "operationId": "oceanGkeImportNodePoolToLaunchSpec",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec/get/parameters/1"
          },
          {
            "in": "query",
            "name": "nodePoolName",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "test",
            "description": "Name of the Node Pool.\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Virtual Node Group Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/gcp/k8s/launchSpec/import"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Ocean Cluster Virtual Node Group (VNG).\n",
                                "required": [
                                  "oceanId",
                                  "sourceImage"
                                ],
                                "properties": {
                                  "oceanId": {
                                    "type": "string",
                                    "example": "o-1fff54ed",
                                    "description": "The Ocean cluster identifier. Required to create the virtual node group.\n"
                                  },
                                  "sourceImage": {
                                    "type": "string",
                                    "example": "https://www.googleapis.com/compute/v1/projects/gke-node-images/global/images/container-v1-3-v20160517",
                                    "description": "Set the image URL. Can be null.\n"
                                  },
                                  "serviceAccount": {
                                    "type": "string",
                                    "example": "265168459660-compute@developer.gserviceaccount.com",
                                    "description": "The account used by applications running on the VM to call GCP APIs.\n"
                                  },
                                  "rootVolumeType": {
                                    "type": "string",
                                    "description": "Set the root volume disk type.",
                                    "example": "pd-standard",
                                    "enum": [
                                      "pd-standard",
                                      "pd-ssd"
                                    ]
                                  },
                                  "metadata": {
                                    "type": "array",
                                    "required": [
                                      "key",
                                      "value"
                                    ],
                                    "description": "Add metadata to the cluster.\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string",
                                          "description": "Set the metadata key. Required for launchSpec.metadata.",
                                          "example": "key1"
                                        },
                                        "value": {
                                          "type": "string",
                                          "description": "Set the metadata name. Required for launchSpec.metadata.",
                                          "example": "value1"
                                        }
                                      }
                                    },
                                    "example": [
                                      {
                                        "key": "key1",
                                        "value": "value1"
                                      },
                                      {
                                        "key": "key2",
                                        "value": "value2"
                                      }
                                    ]
                                  },
                                  "availabilityZones": {
                                    "type": "array",
                                    "description": "An array holding availability zones, this configures the availability zones the Ocean may launch instances in per VNG. Can be null.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "example": [
                                      "us-central1-a",
                                      "us-central1-b"
                                    ]
                                  },
                                  "tags": {
                                    "type": "array",
                                    "description": "Every node launched from this VNG will have those tags. If the value is null, the nodes will have the tags configured at the cluster level.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "example": [
                                      "gke-cluster-name-12345-node",
                                      "network-tag-1"
                                    ]
                                  },
                                  "taints": {
                                    "type": "array",
                                    "description": "Add taints to the virtual node group.",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string",
                                          "description": "Set taint key."
                                        },
                                        "value": {
                                          "type": "string",
                                          "description": "Set taint value."
                                        },
                                        "effect": {
                                          "type": "string",
                                          "description": "Set taint effect."
                                        }
                                      }
                                    },
                                    "example": [
                                      {
                                        "key": "taintKey",
                                        "value": "taintValue",
                                        "effect": "NoSchedule"
                                      }
                                    ]
                                  },
                                  "labels": {
                                    "type": "array",
                                    "description": "An array of labels to add to the virtual node group. Only custom user labels are allowed, and not Kubernetes built-in labels or Spot internal labels.",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string",
                                          "description": "Set label key.\\\nThe following are not allowed:\n* \"kubernetes.io/hostname\"\n* \"failure-domain.beta.kubernetes.io/zone\"\n* \"topology.kubernetes.io/zone\"\n* \"failure-domain.beta.kubernetes.io/region\"\n* \"topology.kubernetes.io/region\"\n* \"beta.kubernetes.io/instance-type\"\n* \"node.kubernetes.io/instance-type\"\n* \"beta.kubernetes.io/os\"\n* \"kubernetes.io/os\"\n* \"beta.kubernetes.io/arch\"\n* \"kubernetes.io/arch\"\n* \"spotinst.io/node-lifecycle\"\n* \"spotinst.io/gpu-type\"\n"
                                        },
                                        "value": {
                                          "type": "string",
                                          "description": "Set label value."
                                        }
                                      }
                                    },
                                    "example": [
                                      {
                                        "key": "env",
                                        "value": "test"
                                      }
                                    ]
                                  },
                                  "shieldedInstanceConfig": {
                                    "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec~1%7BoceanLaunchSpecId%7D/put/requestBody/content/application~1json/schema/properties/launchSpec/properties/shieldedInstanceConfig"
                                  },
                                  "storage": {
                                    "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec~1%7BoceanLaunchSpecId%7D/put/requestBody/content/application~1json/schema/properties/launchSpec/properties/storage"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:gcp:k8s:launchSpec"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/gcp/k8s/launchSpec/{oceanLaunchSpecId}": {
      "summary": "Ocean for GKE",
      "delete": {
        "summary": "Delete VNG",
        "description": "Delete a specified virtual node group in an Ocean cluster.\n",
        "operationId": "OceanGKELaunchSpecDelete",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec~1%7BoceanLaunchSpecId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1launchSpec~1%7BoceanLaunchSpecId%7D/delete/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Virtual Node Group Delete Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/gcp/k8s/launchSpec/ols-12345abc"
                            },
                            "method": {
                              "example": "DELETE"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update VNG",
        "description": "All Ocean parameters in a virtual node group are updatable.\n",
        "operationId": "OceanGKELaunchSpecUpdate",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec~1%7BoceanLaunchSpecId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "launchSpec"
                ],
                "properties": {
                  "launchSpec": {
                    "type": "object",
                    "title": "GKE Cluster",
                    "properties": {
                      "oceanId": {
                        "type": "string",
                        "example": "o-1fff54ed",
                        "description": "The Ocean cluster identifier. Required to create the virtual node group.\n"
                      },
                      "name": {
                        "type": "string",
                        "example": "lp_name",
                        "description": "Set name for the virtual node group.\n"
                      },
                      "sourceImage": {
                        "type": "string",
                        "example": "https://www.googleapis.com/compute/v1/projects/gke-node-images/global/images/container-v1-3-v20160517",
                        "description": "Set image URL. Can be null.\n"
                      },
                      "rootVolumeSize": {
                        "type": "integer",
                        "description": "Set root volume size (in GB).",
                        "example": 8
                      },
                      "metadata": {
                        "type": "array",
                        "required": [
                          "key",
                          "value"
                        ],
                        "description": "Add metadata to the cluster.\n",
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "Set the metadata key. Required for launchSpec.metadata.",
                              "example": "key1"
                            },
                            "value": {
                              "type": "string",
                              "description": "Set the metadata name. Required for launchSpec.metadata.",
                              "example": "value1"
                            }
                          }
                        },
                        "example": [
                          {
                            "key": "key1",
                            "value": "value1"
                          },
                          {
                            "key": "key2",
                            "value": "value2"
                          }
                        ]
                      },
                      "instanceTypes": {
                        "type": "array",
                        "description": "An array of supported machine types for the virtual node group. Can be null.\n",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "n1-standard-1",
                          "n1-standard-2"
                        ]
                      },
                      "availabilityZones": {
                        "type": "array",
                        "description": "An array holding availability zones, this configures the availability zones the Ocean may launch instances in per VNG. Can be null.\n",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "us-central1-a",
                          "us-central1-b"
                        ]
                      },
                      "tags": {
                        "type": "array",
                        "description": "Every node launched from this VNG will have those tags. If the value is null, the nodes will have the tags configured at the cluster level.\n",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "gke-cluster-name-12345-node",
                          "network-tag-1"
                        ]
                      },
                      "taints": {
                        "type": "array",
                        "description": "Add taints to virtual node group.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "Set taint key."
                            },
                            "value": {
                              "type": "string",
                              "description": "Set taint value."
                            },
                            "effect": {
                              "type": "string",
                              "description": "Set taint effect."
                            }
                          }
                        },
                        "example": [
                          {
                            "key": "taintKey",
                            "value": "taintValue",
                            "effect": "NoSchedule"
                          }
                        ]
                      },
                      "labels": {
                        "type": "array",
                        "description": "An array of labels to add to the virtual node group. Only custom user labels are allowed, and not Kubernetes built-in labels or Spot internal labels.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "Set label key.\\\nThe following are not allowed:\n* \"kubernetes.io/hostname\"\n* \"failure-domain.beta.kubernetes.io/zone\"\n* \"topology.kubernetes.io/zone\"\n* \"failure-domain.beta.kubernetes.io/region\"\n* \"topology.kubernetes.io/region\"\n* \"beta.kubernetes.io/instance-type\"\n* \"node.kubernetes.io/instance-type\"\n* \"beta.kubernetes.io/os\"\n* \"kubernetes.io/os\"\n* \"beta.kubernetes.io/arch\"\n* \"kubernetes.io/arch\"\n* \"spotinst.io/node-lifecycle\"\n* \"spotinst.io/gpu-type\"\n"
                            },
                            "value": {
                              "type": "string",
                              "description": "Set label value."
                            }
                          }
                        },
                        "example": [
                          {
                            "key": "env",
                            "value": "test"
                          }
                        ]
                      },
                      "autoScale": {
                        "type": "object",
                        "description": "Object specifying the automatic scaling of an Ocean VNG.\n",
                        "properties": {
                          "headroom": {
                            "type": "object",
                            "description": "Set custom headroom per virtual node group. Provide a list of launchSpec.autoScale.headroom objects.\n",
                            "properties": {
                              "cpuPerUnit": {
                                "type": "integer",
                                "description": "Configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.\n",
                                "example": 1000
                              },
                              "memoryPerUnit": {
                                "type": "integer",
                                "description": "Configure the amount of memory (MiB) to allocate the headroom.\n",
                                "example": 2048
                              },
                              "gpuPerUnit": {
                                "type": "integer",
                                "description": "The amount of GPU allocate per headroom unit.\n",
                                "example": 0
                              },
                              "numOfUnits": {
                                "type": "integer",
                                "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n",
                                "example": 3
                              }
                            }
                          },
                          "autoHeadroomPercentage": {
                            "type": "integer",
                            "description": "Number between 0-200 to control the headroom % of the specific Virtual Node Group. Effective when cluster.autoScaler.isAutoConfig=true is set on the Ocean cluster.\n",
                            "example": 20
                          },
                          "down": {
                            "type": "object",
                            "description": "Autoscaling scale down operations.\n",
                            "properties": {
                              "maxScaleDownPercentage": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0.1,
                                "maximum": 100,
                                "description": "The maximum percentage allowed to scale down in a single scaling action on the nodes running in a specific VNG. Allowed only if maxScaleDownPercentage is set to null at the cluster level.\n",
                                "example": 30
                              }
                            }
                          }
                        }
                      },
                      "resourceLimits": {
                        "type": "object",
                        "properties": {
                          "maxInstanceCount": {
                            "description": "Option to set a maximum number of nodes per virtual node group. Can be null. If set, the value must be greater than or equal to 0.\n",
                            "type": "integer",
                            "example": 5
                          },
                          "minInstanceCount": {
                            "description": "Option to set a minimum number of instances per virtual node group.\\\nCan be null. If set, value must be greater than or equal to 0.\n",
                            "type": "integer",
                            "example": 2
                          }
                        }
                      },
                      "restrictScaleDown": {
                        "type": "boolean",
                        "description": "When set to True, VNG nodes will be treated as if all pods running have the [restrict-scale-down label](https://docs.spot.io/ocean/features/labels-and-taints).\nTherefore, Ocean will not scale nodes down unless they are empty.\n",
                        "example": false
                      },
                      "shieldedInstanceConfig": {
                        "type": "object",
                        "title": "shielded-instance-config",
                        "description": "The Ocean shielded instance configuration object.\n",
                        "properties": {
                          "enableSecureBoot": {
                            "type": "boolean",
                            "description": "Enable the secure boot parameter on the GCP instances.\n",
                            "example": true
                          },
                          "enableIntegrityMonitoring": {
                            "type": "boolean",
                            "description": "Enable the integrity monitoring parameter on the GCP instances.\n",
                            "example": true
                          }
                        }
                      },
                      "strategy": {
                        "type": "object",
                        "title": "strategy",
                        "description": "The Ocean virtual node group strategy object.\n",
                        "properties": {
                          "preemptiblePercentage": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 100,
                            "default": 100,
                            "description": "The desired percentage of Spot/Preemptible instances out of all running instances for this VNG.\\\nOnly available when the field is **not** set in the cluster directly (cluster.strategy.preemptiblePercentage).\n",
                            "example": 80
                          }
                        }
                      },
                      "storage": {
                        "type": "object",
                        "title": "storage",
                        "description": "The Ocean virtual node group storage object.\n",
                        "properties": {
                          "localSsdCount": {
                            "type": "integer",
                            "description": "Defines the number of local SSDs to be attached per node for this VNG.\n\nIf instanceTypes are configured in this VNG, **all of them** must support the value of localSsdCount.\nOtherwise, if the Ocean cluster has instanceTypes on a permit list, **at least one** must support the value of localSsdCount.\n\nFor more information about local SSDs, it is recommended to review the GCP documentation:\n* [GCP Local SSD](https://cloud.google.com/compute/docs/disks#localssds)\n* [Local SSDs and machine types](https://cloud.google.com/compute/docs/disks#local_ssd_machine_type_restrictions)\n* [GKE Using local SSDs](https://cloud.google.com/kubernetes-engine/docs/how-to/persistent-volumes/local-ssd#use)\n",
                            "example": 2
                          }
                        }
                      },
                      "scheduling": {
                        "type": "object",
                        "description": "An object used to define scheduled tasks such as a manual headroom update.\n",
                        "title": "Ocean Scheduling",
                        "properties": {
                          "tasks": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Task Definition",
                              "required": [
                                "isEnabled",
                                "cronExpression",
                                "taskType"
                              ],
                              "properties": {
                                "isEnabled": {
                                  "type": "boolean",
                                  "example": true,
                                  "description": "Describes whether the task is enabled. When True, the task runs. When False, it does not run. Required for launchSpec.scheduling.tasks. In case automatic headroom is configured, please make sure to set autoScaler.enableAutomaticAndManualHeadroom on Ocean level to true in order to make sure that the manual headroom would be affective.\n"
                                },
                                "cronExpression": {
                                  "type": "string",
                                  "example": "0 1 * * *",
                                  "description": "A valid cron expression. For example : \" * * * * * \". The cron job runs in UTC time and is in Unix cron format. (See the Cron Expression Validator Script.)\n"
                                },
                                "taskType": {
                                  "type": "string",
                                  "example": "manualHeadroomUpdate",
                                  "enum": [
                                    "manualHeadroomUpdate"
                                  ],
                                  "description": "The activity that you are scheduling. Valid values: \"manualHeadroomUpdate\". Required for launchSpec.scheduling.tasks.\n"
                                },
                                "config": {
                                  "description": "The config of this scheduled task. Depends on the value of `taskType`.",
                                  "oneOf": [
                                    {
                                      "type": "object",
                                      "title": "manualHeadroomUpdate",
                                      "required": [
                                        "headrooms"
                                      ],
                                      "properties": {
                                        "headrooms": {
                                          "description": "Set custom headroom per VNG. Provide a list of launchSpec.autoscale.headroom objects.\n",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "cpuPerUnit": {
                                                "description": "Configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.\n",
                                                "type": "integer"
                                              },
                                              "memoryPerUnit": {
                                                "description": "Configure the amount of memory (MiB) to allocate the headroom.\n",
                                                "type": "integer"
                                              },
                                              "numOfUnits": {
                                                "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n",
                                                "type": "integer"
                                              },
                                              "gpuPerUnit": {
                                                "type": "integer",
                                                "description": "Amont of GPU to allocate for headroom unit.\n"
                                              }
                                            }
                                          },
                                          "example": [
                                            {
                                              "cpuPerUnit": 1024,
                                              "memoryPerUnit": 512,
                                              "gpuPerUnit": 0,
                                              "numOfUnits": 1
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Virtual Node Group Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/gcp/k8s/launchSpec/ols-12345abc"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec/post/requestBody/content/application~1json/schema/allOf/0/properties/launchSpec"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:gcp:k8s:launchSpec"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get VNG",
        "operationId": "OceanGKELaunchSpecGet",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec~1%7BoceanLaunchSpecId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Virtual Node Group Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/gcp/k8s/launchSpec/ols-12345abc"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec/post/requestBody/content/application~1json/schema/allOf/0/properties/launchSpec"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:gcp:k8s:launchSpec"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/gcp/k8s/cluster/{oceanClusterId}/roll": {
      "summary": "Ocean for GKE",
      "post": {
        "summary": "Initiate Roll",
        "description": "Roll an entire Ocean cluster or roll subsets of the cluster by specifying launchSpecIds or instanceNames. Performing this request will start the roll immediately, and the roll will take place according to defined batches. <br /> <br /> Note that the first response for a successful request will notify about the start of a roll. In order to check the status of a roll, you can use the GET Cluster Roll API using the roll identifier.\n",
        "operationId": "oceanGkeRollInit",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "roll": {
                    "type": "object",
                    "description": "Settings for roll operation\n",
                    "properties": {
                      "batchSizePercentage": {
                        "type": "integer",
                        "description": "Value in % to set the size of the batches in the roll. Valid values are 0-100\n",
                        "example": 20
                      },
                      "comment": {
                        "description": "Add a breif description or comment about the roll. The comment should be limited to 256 chars.\n",
                        "type": "string",
                        "example": "This is why I deployed my cluster."
                      },
                      "respectPdb": {
                        "type": "boolean",
                        "example": true,
                        "default": false,
                        "description": "During the roll, if the parameter is set to true we honor PDB during the instance replacement.\n"
                      },
                      "batchMinHealthyPercentage": {
                        "type": "integer",
                        "description": "Indicates the threshold of minimum healthy instances in single batch. If the amount of healthy instances in single batch is under the threshold, the cluster roll will fail. If exists, the parameter value will be in range of 1-100. In case of null as value, the default value in the backend will be 50%. Value of param should represent the number in percentage (%) of the batch.\n",
                        "example": 100,
                        "default": 50
                      },
                      "launchSpecIds": {
                        "type": "array",
                        "description": "List of virtual node group identifiers to be rolled. Each identifier is a string. Can be null. Cannot be used together with instanceName.\n",
                        "items": {
                          "type": "string",
                          "example": [
                            "ols-76694a7d",
                            "ols-56694a76"
                          ]
                        }
                      },
                      "instanceNames": {
                        "type": "array",
                        "description": "List of instance names to be rolled. Each name is a string. instanceNames can be null. Cannot be used together with launchSpecIds.\n",
                        "items": {
                          "type": "string",
                          "example": [
                            "i-0003a99ffb566f039",
                            "i-0567a99ffb566f765"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cluster Roll Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rollId": {
                      "type": "string",
                      "example": "roll-1234"
                    },
                    "oceanId": {
                      "type": "string",
                      "example": "o-12e31234"
                    },
                    "status": {
                      "type": "string",
                      "example": "IN_PROGRESS",
                      "enum": [
                        "IN_PROGRESS",
                        "COMPLETED",
                        "FAILED",
                        "STOPPED"
                      ]
                    },
                    "batchNumber": {
                      "type": "integer",
                      "example": 1
                    },
                    "numOfBatches": {
                      "type": "integer",
                      "example": 5
                    },
                    "comment": {
                      "type": "string",
                      "example": "This is why I deployed my cluster."
                    },
                    "respectPdb": {
                      "type": "boolean",
                      "example": true
                    },
                    "progress": {
                      "type": "object",
                      "properties": {
                        "unit": {
                          "type": "string",
                          "example": "percentage"
                        },
                        "value": {
                          "type": "integer",
                          "example": 0
                        },
                        "detailedStatus": {
                          "type": "object",
                          "properties": {
                            "oldInstances": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "instanceName": {
                                    "type": "string"
                                  },
                                  "status": {
                                    "type": "string"
                                  }
                                }
                              },
                              "example": [
                                {
                                  "instanceName": "sin-0a4becc0-sig-1234abcd",
                                  "status": "REPLACED"
                                },
                                {
                                  "instanceName": "sin-1a4becc0-sig-1234abcd",
                                  "status": "TO_BE_REPLACED"
                                },
                                {
                                  "instanceName": "sin-2a4becc0-sig-1234abcd",
                                  "status": "COULD_NOT_BE_REPLACED"
                                },
                                {
                                  "instanceName": "sin-3a4becc0-sig-1234abcd",
                                  "status": "NOT_REPLACED_DUE_TO_PDB"
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "instanceNames": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "sin-0a4becc0-sig-6952238d",
                        "sin-0542ecc0-sig-695223r4"
                      ]
                    },
                    "launchSpecIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "ols-76694a7d",
                        "ols-56694a76"
                      ]
                    },
                    "batchMinHealthyPercentage": {
                      "type": "integer",
                      "example": 100
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2019-03-24T15:46:09.000Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "example": "2019-03-24T15:46:09.000Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Rolls",
        "description": "Get status for all rolls of an Ocean cluster.\n",
        "operationId": "oceanGkeRollList",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Get List Of Rolls Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "integer",
                              "example": 200
                            },
                            "message": {
                              "type": "string",
                              "example": "OK"
                            }
                          }
                        },
                        "kind": {
                          "type": "string",
                          "example": "spotinst:ocean:aws:k8s:cluster:roll"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "scr-5aaf854e"
                              },
                              "status": {
                                "type": "string",
                                "example": "IN_PROGRESS",
                                "enum": [
                                  "IN_PROGRESS",
                                  "COMPLETED",
                                  "FAILED",
                                  "STOPPED"
                                ]
                              },
                              "currentBatch": {
                                "type": "integer",
                                "example": 2
                              },
                              "numOfBatches": {
                                "type": "integer",
                                "example": 2
                              },
                              "comment": {
                                "type": "string",
                                "example": "This is why I deployed my cluster."
                              },
                              "progress": {
                                "type": "object",
                                "properties": {
                                  "unit": {
                                    "type": "string",
                                    "example": "percentage"
                                  },
                                  "value": {
                                    "type": "integer",
                                    "example": 0
                                  },
                                  "detailedStatus": {
                                    "type": "object",
                                    "properties": {
                                      "oldInstances": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "instanceName": {
                                              "type": "string"
                                            },
                                            "status": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "example": [
                                          {
                                            "instanceName": "sin-0a4becc0-sig-1234abcd",
                                            "status": "REPLACED"
                                          },
                                          {
                                            "instanceName": "sin-1a4becc0-sig-1234abcd",
                                            "status": "TO_BE_REPLACED"
                                          },
                                          {
                                            "instanceName": "sin-2a4becc0-sig-1234abcd",
                                            "status": "COULD_NOT_BE_REPLACED"
                                          },
                                          {
                                            "instanceName": "sin-3a4becc0-sig-1234abcd",
                                            "status": "NOT_REPLACED_DUE_TO_PDB"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                }
                              },
                              "batchMinHealthyPercentage": {
                                "type": "integer",
                                "example": 100
                              },
                              "oceanId": {
                                "type": "string",
                                "example": "o-30681b13"
                              },
                              "launchSpecIds": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "example": [
                                    "ols-76694a7d",
                                    "ols-56694a76"
                                  ]
                                }
                              },
                              "respectPdb": {
                                "type": "boolean",
                                "example": true
                              },
                              "createdAt": {
                                "type": "string",
                                "example": "2019-03-24T15:46:09.000Z"
                              },
                              "updatedAt": {
                                "type": "string",
                                "example": "2019-03-24T15:46:09.000Z"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/gcp/k8s/cluster/{oceanClusterId}/roll/{ROLL_ID}": {
      "summary": "Ocean for GKE",
      "put": {
        "summary": "Update Roll",
        "description": "Update a roll of an Ocean cluster.\n\n*Performing the request will stop the next batch in a roll.*\n",
        "operationId": "oceanGkeRollUpdate",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll~1%7BROLL_ID%7D/put/parameters/2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "roll": {
                    "type": "object",
                    "description": "Object that specifies the parameters of a roll (also called a deployment).\n",
                    "properties": {
                      "status": {
                        "type": "string",
                        "enum": [
                          "STOPPED"
                        ],
                        "description": "Set status of a roll. Valid values: \"STOPPED\"\n",
                        "example": "STOPPED"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cluster Roll Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rollId": {
                      "type": "string",
                      "example": "roll-1234"
                    },
                    "status": {
                      "type": "string",
                      "example": "STOPPED",
                      "enum": [
                        "STOPPED"
                      ]
                    },
                    "batchNumber": {
                      "type": "integer",
                      "example": 1
                    },
                    "numOfBatches": {
                      "type": "integer",
                      "example": 5
                    },
                    "progress": {
                      "type": "object",
                      "properties": {
                        "unit": {
                          "type": "string",
                          "example": "percentage"
                        },
                        "value": {
                          "type": "integer",
                          "example": 0
                        },
                        "detailedStatus": {
                          "type": "object",
                          "properties": {
                            "oldInstances": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "instanceName": {
                                    "type": "string"
                                  },
                                  "status": {
                                    "type": "string"
                                  }
                                }
                              },
                              "example": [
                                {
                                  "instanceName": "sin-0a4becc0-sig-1234abcd",
                                  "status": "REPLACED"
                                },
                                {
                                  "instanceName": "sin-1a4becc0-sig-1234abcd",
                                  "status": "TO_BE_REPLACED"
                                },
                                {
                                  "instanceName": "sin-2a4becc0-sig-1234abcd",
                                  "status": "COULD_NOT_BE_REPLACED"
                                },
                                {
                                  "instanceName": "sin-3a4becc0-sig-1234abcd",
                                  "status": "NOT_REPLACED_DUE_TO_PDB"
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "batchMinHealthyPercentage": {
                      "type": "integer",
                      "example": 100
                    },
                    "oceanId": {
                      "type": "string",
                      "example": "o-12e31234"
                    },
                    "respectPdb": {
                      "type": "boolean",
                      "example": true
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2019-03-24T15:46:09.000Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "example": "2019-03-24T15:46:09.000Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get Roll",
        "description": "Get status for roll of an Ocean cluster.\n",
        "operationId": "oceanGkeRollGetSingleRoll",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll~1%7BROLL_ID%7D/put/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1gcp~1k8s~1cluster~1%7BoceanClusterId%7D~1roll/post/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/gcp/k8s/cluster/{oceanClusterId}/nodes": {
      "get": {
        "summary": "Get Cluster Nodes",
        "description": "Get nodes data of an Ocean cluster.\n",
        "operationId": "oceanGkeGetNodes",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D~1nodes/get/parameters/2"
          },
          {
            "in": "query",
            "name": "instanceName",
            "schema": {
              "type": "string"
            },
            "example": "sin-123",
            "description": "Get a specific node by instance name."
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean GKE Nodes Data Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/gcp/k8s/cluster/o-12345abc/nodes"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Ocean node data",
                                "description": "Node data of Ocean cluster.",
                                "properties": {
                                  "instanceName": {
                                    "type": "string",
                                    "example": "sin-123",
                                    "description": "The GCP instance name of this node.\n"
                                  },
                                  "instanceType": {
                                    "type": "string",
                                    "example": "n1-standard-2",
                                    "description": "The GCP instance type of this node.\n"
                                  },
                                  "availabilityZone": {
                                    "type": "string",
                                    "example": "us-central1-b",
                                    "description": "The GCP availability zone of this node.\n"
                                  },
                                  "launchSpecId": {
                                    "type": "string",
                                    "example": "ols-123",
                                    "description": "The node's Virtual Node Group id.\n"
                                  },
                                  "launchSpecName": {
                                    "type": "string",
                                    "example": "dev-launchSpec",
                                    "description": "The node's Virtual Node Group name.\n"
                                  },
                                  "lifeCycle": {
                                    "type": "string",
                                    "enum": [
                                      "Preemtible",
                                      "OD",
                                      "Spot"
                                    ],
                                    "example": "Preemtible",
                                    "description": "The GCP lifeCycle of this node.\n"
                                  },
                                  "publicIp": {
                                    "type": "string",
                                    "example": "1.2.3.4",
                                    "description": "This node's public ip.\n"
                                  },
                                  "workloadRequestedMilliCpu": {
                                    "type": "number",
                                    "format": "double",
                                    "example": 1320,
                                    "description": "The amount of milli cpus requested by the kubernetes workload.\n"
                                  },
                                  "workloadRequestedMemoryInMiB": {
                                    "type": "number",
                                    "example": 500,
                                    "description": "The amount of memory in MiB requested by the kubernetes workload.\n"
                                  },
                                  "workloadRequestedGpu": {
                                    "type": "number",
                                    "example": 1,
                                    "description": "The amount of gpus requested by the kubernetes workload.\n"
                                  },
                                  "headroomRequestedMilliCpu": {
                                    "type": "number",
                                    "example": 1320,
                                    "description": "The amount of milli cpus saved for headroom.\n"
                                  },
                                  "headroomRequestedMemoryInMiB": {
                                    "type": "number",
                                    "example": 512,
                                    "description": "The amount of memory in MiB saved for headroom.\n"
                                  },
                                  "headroomRequestedGpu": {
                                    "type": "number",
                                    "example": 1,
                                    "description": "The amount of gpus saved for headroom.\n"
                                  },
                                  "allocatableMilliCpu": {
                                    "type": "number",
                                    "example": 2000,
                                    "description": "The amount of allocatable milli cpus as registered in kubernetes.\n"
                                  },
                                  "allocatableMemoryInMiB": {
                                    "type": "number",
                                    "example": 3646.1,
                                    "description": "The amount of allocatable memory in MiB as registered in kubernetes.\n"
                                  },
                                  "allocatableGpu": {
                                    "type": "number",
                                    "example": 1,
                                    "description": "The amount of allocatable gpus as registered in kubernetes.\n"
                                  },
                                  "nodeName": {
                                    "type": "string",
                                    "example": "node-1",
                                    "description": "The kubernetes node name.\n"
                                  },
                                  "registrationStatus": {
                                    "type": "string",
                                    "enum": [
                                      "Registered",
                                      "Registering",
                                      "Failed"
                                    ],
                                    "example": "Registered",
                                    "description": "The registration status of this node.\n"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "example": "2021-10-01T05:51:06.000Z",
                                    "description": "When was this node's instance was created at.\n"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:gcp:k8s:nodes"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/gcp/k8s/cluster/import": {
      "post": {
        "summary": "Upgrade Elastigroup To Ocean",
        "description": "\n**Prerequisites** | Perform the following validations prior to upgrade executions: | * Group identifier cannot be null. * Group identifier exists in Elastigroup. * Group should be a GKE Elastigroup with defined scaling policy. * Group identifier is already managed by Ocean.\n",
        "operationId": "oceanGkeUpgradeElastigroup",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1import/post/parameters/0"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "e1aba6b3-d1be-419f-b19a-9542e09716a5"
                        },
                        "url": {
                          "type": "string",
                          "example": "/ocean/gcp/k8s/cluster/import?groupId=o-210e0c0b?accountId=act-7461862f"
                        },
                        "method": {
                          "type": "string",
                          "example": "GET"
                        },
                        "timestamp": {
                          "type": "string",
                          "example": "2019-03-05T15:43:16.306Z"
                        }
                      }
                    },
                    "response": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "integer",
                              "example": 200
                            },
                            "message": {
                              "type": "string",
                              "example": "OK"
                            }
                          }
                        },
                        "kind": {
                          "type": "string",
                          "example": "spotinst:ocean:gcp:k8s"
                        },
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "o-9aa80ccb"
                            },
                            "name": {
                              "type": "string",
                              "example": "ocean test"
                            },
                            "controllerClusterId": {
                              "type": "string",
                              "example": "Test-5837c8ad1"
                            },
                            "gke": {
                              "type": "object",
                              "properties": {
                                "clusterName": {
                                  "type": "string",
                                  "example": "test-native-vpc"
                                },
                                "masterLocation": {
                                  "type": "string",
                                  "example": "us-central1-a"
                                }
                              }
                            },
                            "capacity": {
                              "$ref": "#/paths/~1ocean~1gcp~1k8s~1cluster~1gke~1import/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/capacity"
                            },
                            "compute": {
                              "type": "object",
                              "properties": {
                                "networkInterfaces": {
                                  "type": "object",
                                  "description": "Settings for network interfaces.\n",
                                  "properties": {
                                    "network": {
                                      "type": "string",
                                      "example": "default"
                                    },
                                    "accessConfigs": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "example": "external-nat"
                                        },
                                        "type": {
                                          "type": "string",
                                          "description": "Possible values: ONE_TO_ONE_NAT\n",
                                          "example": "ONE_TO_ONE_NAT"
                                        }
                                      }
                                    },
                                    "aliasIpRanges": {
                                      "type": "object",
                                      "properties": {
                                        "ipCidrRange": {
                                          "type": "string",
                                          "description": "Required for the cluster.compute.networkInterfaces.aliasIpRanges object.\n",
                                          "example": "/24"
                                        },
                                        "subnetworkRangeName": {
                                          "type": "string",
                                          "description": "Required for the cluster.compute.networkInterfaces.aliasIpRanges object.\n",
                                          "example": "gke-test-native-vpc-pods-5cb557f7"
                                        }
                                      }
                                    }
                                  }
                                },
                                "subnetName": {
                                  "type": "string",
                                  "description": "Subnet identifier for the Ocean cluster.",
                                  "example": "default"
                                },
                                "instanceTypes": {
                                  "type": "object",
                                  "description": "The type of instances that may or may not be a part of the Ocean cluster.",
                                  "properties": {
                                    "whitelist": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "Instance types allowed in the Ocean cluster.\n",
                                      "example": [
                                        "n1-standard-2"
                                      ]
                                    }
                                  }
                                },
                                "launchSpecification": {
                                  "type": "object",
                                  "properties": {
                                    "sourceImage": {
                                      "type": "string",
                                      "description": "URL of the image used to launch the instances.",
                                      "example": "https://www.googleapis.com/compute/v1/projects/gke-node-images/global/images/gke-1117-gke12-cos-69-10895-138-0-v190225-pre"
                                    },
                                    "metadata": {
                                      "type": "object",
                                      "description": "Set array of cluster metadata.\n",
                                      "properties": {
                                        "key": {
                                          "type": "string",
                                          "description": "Key of metadata key-pair.\n",
                                          "example": "example_key1"
                                        },
                                        "value": {
                                          "type": "string",
                                          "description": "Value of metadata key-pair.\n",
                                          "example": "exmample_value1"
                                        }
                                      }
                                    },
                                    "tags": {
                                      "type": "array",
                                      "description": "Every node launched from this configuration will be tagged with those tags.",
                                      "items": {
                                        "type": "string"
                                      },
                                      "example": [
                                        "gke-cluster-name-12345-node"
                                      ]
                                    },
                                    "ipForwarding": {
                                      "type": "boolean",
                                      "example": true
                                    },
                                    "serviceAccount": {
                                      "type": "string",
                                      "example": "265168459660-compute@developer.gserviceaccount.com"
                                    },
                                    "labels": {
                                      "type": "array",
                                      "description": "Set labels on cluster. You can set up to 60 labels.\n",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "key": {
                                            "type": "string",
                                            "example": "spotinst-gke-original-node-pool"
                                          },
                                          "value": {
                                            "type": "string",
                                            "example": "test-native-vpc__default-pool"
                                          }
                                        }
                                      }
                                    },
                                    "rootVolumeSizeInGb": {
                                      "type": "integer",
                                      "description": "Optionally set root size (GB). Value should be greater than or equal to 100.",
                                      "example": 100
                                    }
                                  }
                                },
                                "availabilityZones": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "example": [
                                      "us-central1-a"
                                    ]
                                  }
                                }
                              }
                            },
                            "createdAt": {
                              "type": "string",
                              "example": "2018-11-05T12:55:50.000+0000"
                            },
                            "updatedAt": {
                              "type": "string",
                              "example": "2018-11-05T12:58:15.000+0000"
                            }
                          }
                        },
                        "count": {
                          "type": "integer",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/gcp/k8s/cluster/gke/import": {
      "summary": "Ocean for GKE",
      "post": {
        "summary": "Import GKE Cluster To Ocean",
        "description": "Returns an Ocean Cluster configuration, and optionally Virtual Node Group (VNG) configurations based on a given GKE Cluster and its Node Pools.\\\nThe returned values (\"Imported Cluster/VNGs\") can then be used as inputs to the Create Cluster/VNG APIs in order to create the respectful resources.\n",
        "operationId": "oceanGkeImportGkeToOcean",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "location",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "us-central1-a",
            "description": "Location GKE Cluster Master.\n"
          },
          {
            "in": "query",
            "name": "clusterName",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "test-gke",
            "description": "Name of the GKE Cluster.\n"
          },
          {
            "in": "query",
            "name": "nodePoolName",
            "schema": {
              "type": "string"
            },
            "example": "test",
            "description": "Name of the Node Pool to use as a default for the Cluster configuration.\n"
          },
          {
            "in": "query",
            "name": "includeLaunchSpecs",
            "example": true,
            "description": "When set to \"true\", GKE cluster node pools will be imported to Ocean custom VNG (\"customLaunchSpec\") configurations.\n",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "cluster"
                    ],
                    "properties": {
                      "cluster": {
                        "type": "object",
                        "description": "The specification of the Ocean cluster.",
                        "required": [
                          "name",
                          "compute"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "test",
                            "description": "Add a name for the Ocean cluster.\n"
                          },
                          "controllerClusterId": {
                            "type": "string",
                            "example": "test-123124",
                            "description": "Enter the Ocean cluster identifier.\n"
                          },
                          "capacity": {
                            "type": "object",
                            "title": "Capacity Units",
                            "description": "Capacity specifications for the Ocean cluster.",
                            "properties": {
                              "minimum": {
                                "type": "integer",
                                "example": 0,
                                "description": "The bottom limit of instances that the cluster can scale down to.\n"
                              },
                              "maximum": {
                                "type": "integer",
                                "default": 1000,
                                "example": 3,
                                "description": "The upper limit of instances that the cluster can scale up to.\n"
                              },
                              "target": {
                                "type": "integer",
                                "example": 3,
                                "description": "Number of instances to launch and maintain in the cluster.\n"
                              }
                            }
                          },
                          "instanceTypes": {
                            "type": "object",
                            "description": "The type of instances that may or may not be a part of the Ocean cluster.",
                            "properties": {
                              "whitelist": {
                                "type": "array",
                                "description": "Instance types allowed in the Ocean cluster. Cannot be configured if a deny list is configured.\n",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "n1-standard-2"
                                ]
                              },
                              "blacklist": {
                                "type": "array",
                                "description": "Instance types to avoid launching in the Ocean cluster. Cannot be configured if a permit list is configured.\n",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "n2d-highcpu-96"
                                ]
                              }
                            }
                          },
                          "autoScaler": {
                            "type": "object",
                            "title": "auto-scaler",
                            "description": "The Ocean Kubernetes Autoscaler object.",
                            "properties": {
                              "isEnabled": {
                                "type": "boolean",
                                "description": "Enable the Ocean Kubernetes Autoscaler.",
                                "default": true,
                                "example": true
                              },
                              "cooldown": {
                                "type": "integer",
                                "description": "Cooldown period between scaling actions.",
                                "default": null,
                                "minimum": 180,
                                "example": 180
                              },
                              "resourceLimits": {
                                "type": "object",
                                "description": "Optionally set upper and lower bounds on the resource usage of the cluster.",
                                "properties": {
                                  "maxMemoryGib": {
                                    "type": "integer",
                                    "description": "The maximum memory in GiB units that can be allocated to the cluster.",
                                    "example": 1500
                                  },
                                  "maxVcpu": {
                                    "type": "integer",
                                    "description": "The maximum CPU in vCPU units that can be allocated to the cluster.",
                                    "example": 750
                                  }
                                }
                              },
                              "down": {
                                "type": "object",
                                "description": "Autoscaling scale down operations.",
                                "properties": {
                                  "evaluationPeriods": {
                                    "type": "integer",
                                    "minimum": 3,
                                    "description": "Number of minutes a node should be eligible for scale down before it is scaled down.",
                                    "example": 3
                                  },
                                  "maxScaleDownPercentage": {
                                    "type": "integer",
                                    "minimum": 1,
                                    "maximum": 100,
                                    "description": "The maximum percentage allowed to scale down in a single scaling action.",
                                    "example": 30
                                  },
                                  "aggressiveScaleDown": {
                                    "type": "object",
                                    "description": "Enable and customize the Aggressive Scale Down feature. This allows nodes to be promptly scaled down by the Ocean Autoscaler as soon as they become eligible, without any waiting period.",
                                    "properties": {
                                      "isEnabled": {
                                        "type": "boolean",
                                        "description": "When set to 'true', the Aggressive Scale Down feature is enabled",
                                        "default": false
                                      }
                                    }
                                  }
                                }
                              },
                              "headRoom": {
                                "type": "object",
                                "description": "Spare resource capacity management enabling fast assignment of pods without waiting for new resources to launch.\n",
                                "properties": {
                                  "cpuPerUnit": {
                                    "type": "integer",
                                    "description": "Optionally configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores where 1000 millicores = 1 vCPU.\n",
                                    "example": 0
                                  },
                                  "memoryPerUnit": {
                                    "type": "integer",
                                    "description": "Optionally configure the amount of memory (MiB) to allocate the headroom.",
                                    "example": 0
                                  },
                                  "gpuPerUnit": {
                                    "type": "integer",
                                    "description": "How much GPU to allocate to a headroom unit.",
                                    "example": 0
                                  },
                                  "numOfUnit": {
                                    "type": "integer",
                                    "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n",
                                    "example": 0
                                  }
                                }
                              },
                              "isAutoConfig": {
                                "type": "boolean",
                                "description": "Use automatic headroom. When set to true, the values under cluster.autoScaler.headroom are not effective, as Ocean configures and optimizes headroom automatically.\n",
                                "default": true,
                                "example": false
                              },
                              "autoHeadroomPercentage": {
                                "type": "integer",
                                "description": "Optionally set the auto headroom percentage. Set a number between 0-200 to control the headroom percent of the cluster. Relevant when isAutoConfig=true.\n",
                                "example": null
                              },
                              "enableAutomaticAndManualHeadroom": {
                                "type": "boolean",
                                "description": "When set to true, both automatic and per-VNG manual headroom to be saved concurrently and independently in the cluster. prerequisite: isAutoConfig must be true\n",
                                "example": true
                              }
                            }
                          },
                          "availabilityZones": {
                            "type": "array",
                            "description": "An array holding availability zones, this configures the availability zones the Ocean may launch instances in per VNG. Can be null.\n",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "us-central1-a",
                              "us-central1-b"
                            ]
                          },
                          "backendServices": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "backendServiceName"
                              ],
                              "properties": {
                                "backendServiceName": {
                                  "type": "string",
                                  "example": "bserv-2"
                                },
                                "locationType": {
                                  "type": "string",
                                  "enum": [
                                    "regional",
                                    "global"
                                  ],
                                  "example": "regional"
                                },
                                "scheme": {
                                  "type": "string",
                                  "description": "Required if locationType is set to \"regional\".\n",
                                  "enum": [
                                    "EXTERNAL",
                                    "INTERNAL"
                                  ],
                                  "example": "EXTERNAL"
                                },
                                "namedPorts": {
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "ports"
                                  ],
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "example": "https"
                                    },
                                    "ports": {
                                      "type": "array",
                                      "items": {
                                        "type": "integer"
                                      },
                                      "example": [
                                        443,
                                        8443
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean CKE Cluster Import Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/gcp/k8s/cluster/gke/import"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "cluster": {
                                    "type": "object",
                                    "description": "The specification of the Ocean cluster.",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "test",
                                        "description": "Add a name for the Ocean cluster.\n"
                                      },
                                      "controllerClusterId": {
                                        "type": "string",
                                        "example": "test-123124",
                                        "description": "Enter the Ocean cluster identifier.\n"
                                      },
                                      "gke": {
                                        "type": "object",
                                        "required": [
                                          "clusterName",
                                          "masterLocation"
                                        ],
                                        "description": "Use existing GKE cluster.\n",
                                        "properties": {
                                          "clusterName": {
                                            "type": "string",
                                            "description": "Required for the cluster.gke object.\n",
                                            "example": "test-cluster"
                                          },
                                          "masterLocation": {
                                            "type": "string",
                                            "description": "Required for the cluster.gke object.\n",
                                            "example": "us-central1-a"
                                          }
                                        }
                                      },
                                      "autoScaler": {
                                        "$ref": "#/paths/~1ocean~1gcp~1k8s~1cluster~1gke~1import/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/autoScaler"
                                      },
                                      "capacity": {
                                        "$ref": "#/paths/~1ocean~1gcp~1k8s~1cluster~1gke~1import/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/capacity"
                                      },
                                      "compute": {
                                        "$ref": "#/paths/~1ocean~1gcp~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/compute"
                                      }
                                    }
                                  },
                                  "customLaunchSpecs": {
                                    "type": "array",
                                    "items": {
                                      "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec~1import/post/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:gcp:k8s"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/gcp/k8s/launchSpec/{oceanLaunchSpecId}/launchNodes": {
      "put": {
        "summary": "Launch Nodes In VNG",
        "description": "Launch nodes in virtual node group.\n",
        "operationId": "oceanGkeLaunchSpecLaunchNodes",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec~1%7BoceanLaunchSpecId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "launchRequest": {
                        "type": "object",
                        "title": "Ocean GKE Virtual Node Group Launch Request",
                        "required": [
                          "amount"
                        ],
                        "properties": {
                          "amount": {
                            "description": "The number of nodes to launch.\n",
                            "type": "integer",
                            "example": 5
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Virtual Node Group Launch Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/gcp/k8s/launchSpec/ols-12345abc/launchNodes"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "launchSpecId": {
                              "type": "string",
                              "example": "ols-f73821bc"
                            },
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "newInstances": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "instanceName": {
                                          "type": "string",
                                          "example": "sin-00b61aa5dde4-oesg-97499562",
                                          "description": "Name of the node launched.\n"
                                        },
                                        "availabilityZone": {
                                          "type": "string",
                                          "example": "us-west-2b",
                                          "description": "The availability zone the node is launched in.\n"
                                        },
                                        "instanceType": {
                                          "type": "string",
                                          "example": "c3.xlarge",
                                          "description": "Type of the launched node.\n"
                                        },
                                        "lifeCycle": {
                                          "type": "string",
                                          "example": "Preemptible",
                                          "description": "Preemptible or On Demand.\n"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:gcp:k8s:launchSpec:launchNodes"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/azure/np/cluster": {
      "summary": "Ocean for AKS",
      "post": {
        "summary": "Create Cluster",
        "description": "Creates an Ocean entity according to a given specification.\n\n<p>Notes:<br></p>\n\nIt is recommended to import all necessary information from the existing AKS cluster using the Ocean [AKS Cluster Import](https://docs.spot.io/api/#operation/oceanAKSClusterImport) API call and use its output to create a fully configured Ocean cluster.\n\n<p>The Ocean Controller is used to monitor the cluster resources and report back to Ocean SaaS. <b>A properly functioning controller is mandatory for Ocean to operate.</b><br>\nThe controller can be installed on the cluster using Kubectl or Helm.<br>\nTo install the Controller using Kubectl, run the following script on a machine with kubectl command line tool installed and configured:</p>\n\n```bash\n#!/usr/bin/env bash\ncurl -fsSL http://spotinst-public.s3.amazonaws.com/integrations/kubernetes/cluster-controller/scripts/init.sh | \\\nSPOTINST_TOKEN=<ENTER YOUR TOKEN HERE> \\\nSPOTINST_ACCOUNT=<ENTER YOUR SPOTINST ACCOUNT ID HERE> \\\nSPOTINST_CLUSTER_IDENTIFIER=<ENTER YOUR CLUSTER IDENTIFIER HERE> \\\nENABLE_OCEAN_METRIC_EXPORTER=false \\\nbash\n```\n\nTo install the Controller using Helm 3.x:\n   * For installation using Helm 2.x additional step is needed to grant Tiller access. [View documentation](https://docs.spot.io/ocean/tutorials/spot-kubernetes-controller/install-with-helm)\n   * Please configure all chart's values using the set command line argument or a values. yaml file. [Ocean controller help chart artifact](https://artifacthub.io/packages/helm/spotinst/spotinst-kubernetes-cluster-controller).\n\n```bash\nhelm repo add spotinst https://spotinst.github.io/spotinst-kubernetes-helm-charts \\\n&& helm repo update\n\nhelm install ocean-controller spotinst/spotinst-kubernetes-cluster-controller \\\n--set spotinst.token=<ENTER YOUR TOKEN HERE> \\\n--set spotinst.account=<ENTER YOUR SPOTINST ACCOUNT ID HERE> \\\n--set spotinst.clusterIdentifier=<ENTER YOUR CLUSTER IDENTIFIER HERE> \\\n--set metrics-server.deployChart=false \\\n--create-namespace \\\n--namespace=\"spot-ocean\" \\\n--set namespace=\"spot-ocean\"\n```\n",
        "operationId": "oceanAKSClusterCreate",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "cluster"
                    ],
                    "properties": {
                      "cluster": {
                        "type": "object",
                        "description": "The Ocean cluster.\n",
                        "required": [
                          "name",
                          "controllerClusterId",
                          "aks",
                          "virtualNodeGroupTemplate"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "readOnly": true,
                            "example": "o-134abcd",
                            "description": "Ocean cluster identifier.\n"
                          },
                          "name": {
                            "type": "string",
                            "example": "test",
                            "description": "Add a name for the Ocean cluster.\n"
                          },
                          "controllerClusterId": {
                            "type": "string",
                            "example": "test-123124",
                            "description": "Enter a unique Ocean cluster identifier. Cannot be updated.\n"
                          },
                          "aks": {
                            "type": "object",
                            "title": "Ocean AKS - AKS Cluster Configuration",
                            "required": [
                              "clusterName",
                              "resourceGroupName",
                              "region",
                              "infrastructureResourceGroupName"
                            ],
                            "description": "AKS cluster configuration. Cannot be updated.\n",
                            "properties": {
                              "clusterName": {
                                "type": "string",
                                "description": "The name  of the AKS Cluster.\n",
                                "example": "test-cluster"
                              },
                              "resourceGroupName": {
                                "type": "string",
                                "description": "The name of the cluster's resource group.\n",
                                "example": "TestResourceGroup"
                              },
                              "region": {
                                "type": "string",
                                "description": "The cluster's region.\n",
                                "example": "eastus"
                              },
                              "infrastructureResourceGroupName": {
                                "type": "string",
                                "description": "The name of the cluster's infrastructure resource group.\n",
                                "example": "MC_TestResourceGroup_test-cluster_eastus"
                              }
                            }
                          },
                          "autoScaler": {
                            "type": "object",
                            "title": "Ocean AKS Autoscaler",
                            "description": "The Ocean Kubernetes Autoscaler object.\n",
                            "properties": {
                              "isEnabled": {
                                "type": "boolean",
                                "description": "Enable the Ocean Kubernetes Autoscaler.\n",
                                "example": true
                              },
                              "resourceLimits": {
                                "type": "object",
                                "description": "Optionally set upper and lower bounds on the resource usage of the cluster.\n",
                                "properties": {
                                  "maxVCpu": {
                                    "type": "integer",
                                    "description": "The maximum cpu in vCpu units that can be allocated to the cluster.\n",
                                    "example": 750
                                  },
                                  "maxMemoryGib": {
                                    "type": "integer",
                                    "description": "The maximum memory in GiB units that can be allocated to the cluster.\n",
                                    "example": 1500
                                  }
                                }
                              },
                              "down": {
                                "type": "object",
                                "description": "Autoscaling scale down operations.\n",
                                "properties": {
                                  "maxScaleDownPercentage": {
                                    "type": "number",
                                    "format": "double",
                                    "minimum": 1,
                                    "maximum": 100,
                                    "description": "The maximum percentage allowed to scale down in a single scaling action.",
                                    "example": 30
                                  }
                                }
                              },
                              "headroom": {
                                "type": "object",
                                "description": "Spare resource capacity management enabling fast assignment of pods without waiting for new resources to launch.\n",
                                "properties": {
                                  "automatic": {
                                    "type": "object",
                                    "description": "Automatic headroom configuration.\n",
                                    "properties": {
                                      "isEnabled": {
                                        "type": "boolean",
                                        "description": "Enable automatic headroom. When set to True, Ocean configures and optimizes headroom automatically.\n"
                                      },
                                      "percentage": {
                                        "type": "integer",
                                        "description": "Optionally set a number between 0-100 to control the percentage of total cluster resources dedicated to headroom.\n",
                                        "example": 5,
                                        "minimum": 0,
                                        "maximum": 100
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "scheduling": {
                            "type": "object",
                            "description": "An object used to specify times when the cluster will turn off. Once the shutdown time will be over, the cluster will return to its previous state.\n",
                            "title": "Ocean AKS Scheduling",
                            "properties": {
                              "shutdownHours": {
                                "type": "object",
                                "description": "An object used to specify times that the nodes in the cluster will be taken down.\n",
                                "title": "Shutdown Hours",
                                "properties": {
                                  "timeWindows": {
                                    "type": "array",
                                    "description": "The times that the shutdown hours will apply. Required if isEnabled is true.\n",
                                    "items": {
                                      "type": "string",
                                      "example": "Sat:08:00-Sun:08:00"
                                    }
                                  },
                                  "isEnabled": {
                                    "type": "boolean",
                                    "example": true,
                                    "description": "Flag to enable or disable the shutdown hours mechanism. When False, the mechanism is deactivated, and the cluster remains in its current state.\n"
                                  }
                                }
                              },
                              "tasks": {
                                "type": "array",
                                "description": "A list of scheduling tasks to preform on the cluster at a specific cron time.\n",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "isEnabled",
                                    "cronExpression",
                                    "taskType"
                                  ],
                                  "properties": {
                                    "isEnabled": {
                                      "type": "boolean",
                                      "description": "Flag to enable or disable the scheduling task.\n"
                                    },
                                    "cronExpression": {
                                      "type": "string",
                                      "description": "A valid cron expression. The cron is running in UTC time zone and is in Unix cron format of Cron Expression Validator Script.\n",
                                      "example": "0 1 * * *"
                                    },
                                    "taskType": {
                                      "type": "string",
                                      "description": "The type of the scheduling task.\n",
                                      "enum": [
                                        "clusterRoll"
                                      ],
                                      "example": "clusterRoll"
                                    },
                                    "parameters": {
                                      "type": "object",
                                      "description": "The parameters of the scheduling task. Each task type will have properties relevant only to it.\n",
                                      "properties": {
                                        "clusterRoll": {
                                          "type": "object",
                                          "description": "The parameters of the cluster roll scheduling task.\n",
                                          "properties": {
                                            "batchSizePercentage": {
                                              "type": "integer",
                                              "minimum": 1,
                                              "maximum": 100,
                                              "description": "The percentage of the cluster that will be rolled at each batch.\n",
                                              "example": 20
                                            },
                                            "comment": {
                                              "type": "string",
                                              "description": "A comment to be added to the cluster roll.\n",
                                              "example": "Scheduled cluster roll"
                                            },
                                            "respectPdb": {
                                              "type": "boolean",
                                              "description": "During the roll, if the parameter is set to true we honor PDB during the instance replacement.\n",
                                              "example": true
                                            },
                                            "respectRestrictScaleDown": {
                                              "type": "boolean",
                                              "description": "During the roll, if the parameter is set to true we honor Restrict Scale Down label during the nodes replacement.\n",
                                              "example": true
                                            },
                                            "batchMinHealthyPercentage": {
                                              "type": "integer",
                                              "minimum": 1,
                                              "maximum": 100,
                                              "description": "The minimum percentage of the scaled nodes that should be healthy at each batch.\n",
                                              "example": 80
                                            },
                                            "vngIds": {
                                              "type": "array",
                                              "description": "List of Virtual Node Group IDs to be rolled. If not set or set to null, cluster roll will be applied.\n",
                                              "items": {
                                                "type": "string"
                                              },
                                              "example": [
                                                "vng-123456"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "logging": {
                            "type": "object",
                            "title": "Ocean AKS Logging",
                            "description": "The Ocean AKS Logging object.",
                            "required": [
                              "export"
                            ],
                            "properties": {
                              "export": {
                                "type": "object",
                                "title": "The Ocean AKS Logging Export",
                                "description": "The Ocean AKS Logging Export object.",
                                "required": [
                                  "azureBlob"
                                ],
                                "properties": {
                                  "azureBlob": {
                                    "type": "object",
                                    "title": "The Ocean AKS Logging Azure Blob Export",
                                    "description": "Exports your cluster's logs to the storage account and container configured on the storage account [data integration](/#operation/DataIntegrationCreate) given.\nEach file contains logs of 3 minutes where each log is separated by a new line and saved as a JSON.\nThe file formats are `container`/`accountId`_`oceanId`_`oceanName`_`startTime`.log\n",
                                    "required": [
                                      "id"
                                    ],
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "The identifier of The Azure Blob data integration to export the logs to.",
                                        "example": "di-123"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "health": {
                            "type": "object",
                            "title": "Ocean AKS Health",
                            "description": "The Ocean AKS Health object.\n",
                            "properties": {
                              "gracePeriod": {
                                "type": "integer",
                                "example": 600,
                                "description": "The amount of time to wait, in seconds, from the moment the instance has launched until monitoring of its health checks begins.\n"
                              }
                            }
                          },
                          "virtualNodeGroupTemplate": {
                            "type": "object",
                            "title": "Ocean AKS Virtual Node Group Template",
                            "required": [
                              "availabilityZones"
                            ],
                            "properties": {
                              "availabilityZones": {
                                "type": "array",
                                "description": "An Array holding Availability Zones, this configures the availability zones the Ocean may launch nodes in per VNG.\\\nSelect zone 0 if you have a workload that requires no availability zone redundancy (AZ=null). You can select this option either alone or together with other availability zones.\\\nIn case zone 0 is selected together with other availability zones, nodes of zone 0 will be scaled only for workloads that demand it.\n",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "0",
                                  "1",
                                  "2",
                                  "3"
                                ]
                              },
                              "nodePoolProperties": {
                                "$ref": "#/paths/~1ocean~1azure~1np~1virtualNodeGroup/post/requestBody/content/application~1json/schema/allOf/0/properties/virtualNodeGroup/properties/nodePoolProperties"
                              },
                              "nodeCountLimits": {
                                "$ref": "#/paths/~1ocean~1azure~1np~1virtualNodeGroup~1%7BvirtualNodeGroupId%7D/put/requestBody/content/application~1json/schema/properties/virtualNodeGroup/properties/nodeCountLimits"
                              },
                              "strategy": {
                                "$ref": "#/paths/~1ocean~1azure~1np~1virtualNodeGroup~1%7BvirtualNodeGroupId%7D/put/requestBody/content/application~1json/schema/properties/virtualNodeGroup/properties/strategy"
                              },
                              "autoScale": {
                                "$ref": "#/paths/~1ocean~1azure~1np~1virtualNodeGroup~1%7BvirtualNodeGroupId%7D/put/requestBody/content/application~1json/schema/properties/virtualNodeGroup/properties/autoScale"
                              },
                              "labels": {
                                "type": "object",
                                "description": "key-value pairs of labels to add to the virtual node group.\\\nOnly custom user labels are allowed, and not Kubernetes built-in labels or Spot internal labels.\\\nThe following are not allowed:\n* \"kubernetes.azure.com/agentpool\"\n* \"kubernetes.io/arch\"* \"kubernetes.io/os\"\n* \"node.kubernetes.io/instance-type\"\n* \"topology.kubernetes.io/region\"\n* \"topology.kubernetes.io/zone\"\n* \"kubernetes.azure.com/cluster\"\n* \"kubernetes.azure.com/mode\"\n* \"kubernetes.azure.com/role\"\n* \"kubernetes.azure.com/scalesetpriority\"\n* \"kubernetes.io/hostname\"\n* \"kubernetes.azure.com/storageprofile\"\n* \"kubernetes.azure.com/storagetier\"\n* \"kubernetes.azure.com/instance-sku\"\n* \"kubernetes.azure.com/node-image-version\"\n* \"kubernetes.azure.com/subnet\"\n* \"kubernetes.azure.com/vnet\"\n* \"kubernetes.azure.com/ppg\"\n* \"kubernetes.azure.com/encrypted-set\"\n* \"kubernetes.azure.com/accelerator\"\n* \"kubernetes.azure.com/fips_enabled\"\n* \"kubernetes.azure.com/os-sku\"\n",
                                "example": {
                                  "key": "value"
                                }
                              },
                              "taints": {
                                "type": "array",
                                "description": "Add taints to a virtual node group.\n",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string",
                                      "description": "Set taint key.\nThe following are not allowed:\n* \"kubernetes.azure.com/scalesetpriority\"\n"
                                    },
                                    "value": {
                                      "type": "string",
                                      "description": "Set taint value.\n"
                                    },
                                    "effect": {
                                      "type": "string",
                                      "description": "Set taint effect.\n",
                                      "enum": [
                                        "NoSchedule",
                                        "PreferNoSchedule",
                                        "NoExecute",
                                        "PreferNoExecute"
                                      ]
                                    }
                                  }
                                },
                                "example": [
                                  {
                                    "key": "taintKey",
                                    "value": "taintValue",
                                    "effect": "NoSchedule"
                                  }
                                ]
                              },
                              "tags": {
                                "type": "object",
                                "description": "A maximum of 10 unique key-value pairs for VM tags in the virtual node group.\n"
                              },
                              "vmSizes": {
                                "$ref": "#/paths/~1ocean~1azure~1np~1virtualNodeGroup~1%7BvirtualNodeGroupId%7D/put/requestBody/content/application~1json/schema/properties/virtualNodeGroup/properties/vmSizes"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean AKS Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/np/cluster"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1azure~1np~1cluster/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:np"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Clusters",
        "description": "List the configurations for all Ocean clusters in the specified account.\n",
        "operationId": "oceanAKSClusterList",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean AKS Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/np/cluster"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "The Ocean cluster.\n",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "o-134abcd",
                                    "description": "Ocean cluster identifier.\n"
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "test",
                                    "description": "Add a name for the Ocean cluster.\n"
                                  },
                                  "controllerClusterId": {
                                    "type": "string",
                                    "example": "test-123124",
                                    "description": "Enter a unique Ocean cluster identifier. Cannot be updated.\n"
                                  },
                                  "aks": {
                                    "type": "object",
                                    "title": "Ocean AKS - AKS Cluster Configuration",
                                    "required": [
                                      "clusterName",
                                      "resourceGroupName",
                                      "region",
                                      "infrastructureResourceGroupName"
                                    ],
                                    "description": "AKS cluster configuration. Cannot be updated.\n",
                                    "properties": {
                                      "clusterName": {
                                        "type": "string",
                                        "description": "The name  of the AKS Cluster.\n",
                                        "example": "test-cluster"
                                      },
                                      "resourceGroupName": {
                                        "type": "string",
                                        "description": "The name of the cluster's resource group.\n",
                                        "example": "TestResourceGroup"
                                      },
                                      "region": {
                                        "type": "string",
                                        "description": "The cluster's region.\n",
                                        "example": "eastus"
                                      },
                                      "infrastructureResourceGroupName": {
                                        "type": "string",
                                        "description": "The name of the cluster's infrastructure resource group.\n",
                                        "example": "MC_TestResourceGroup_test-cluster_eastus"
                                      }
                                    }
                                  },
                                  "autoScaler": {
                                    "$ref": "#/paths/~1ocean~1azure~1np~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/autoScaler"
                                  },
                                  "scheduling": {
                                    "$ref": "#/paths/~1ocean~1azure~1np~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/scheduling"
                                  },
                                  "logging": {
                                    "$ref": "#/paths/~1ocean~1azure~1np~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/logging"
                                  },
                                  "health": {
                                    "$ref": "#/paths/~1ocean~1azure~1np~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/health"
                                  },
                                  "virtualNodeGroupTemplate": {
                                    "type": "object",
                                    "title": "Ocean AKS Virtual Node Group Template",
                                    "properties": {
                                      "availabilityZones": {
                                        "type": "array",
                                        "description": "An Array holding Availability Zones, this configures the availability zones the Ocean may launch instances in per VNG.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "example": [
                                          "1",
                                          "2",
                                          "3"
                                        ]
                                      },
                                      "nodePoolProperties": {
                                        "$ref": "#/paths/~1ocean~1azure~1np~1virtualNodeGroup/post/requestBody/content/application~1json/schema/allOf/0/properties/virtualNodeGroup/properties/nodePoolProperties"
                                      },
                                      "nodeCountLimits": {
                                        "$ref": "#/paths/~1ocean~1azure~1np~1virtualNodeGroup~1%7BvirtualNodeGroupId%7D/put/requestBody/content/application~1json/schema/properties/virtualNodeGroup/properties/nodeCountLimits"
                                      },
                                      "strategy": {
                                        "$ref": "#/paths/~1ocean~1azure~1np~1virtualNodeGroup~1%7BvirtualNodeGroupId%7D/put/requestBody/content/application~1json/schema/properties/virtualNodeGroup/properties/strategy"
                                      },
                                      "autoScale": {
                                        "$ref": "#/paths/~1ocean~1azure~1np~1virtualNodeGroup~1%7BvirtualNodeGroupId%7D/put/requestBody/content/application~1json/schema/properties/virtualNodeGroup/properties/autoScale"
                                      },
                                      "labels": {
                                        "type": "object",
                                        "description": "key-value pairs of labels to add to the virtual node group.\\\nOnly custom user labels are allowed, and not Kubernetes built-in labels or Spot internal labels.\\\nThe following are not allowed:\n* \"kubernetes.azure.com/agentpool\"\n* \"kubernetes.io/arch\"* \"kubernetes.io/os\"\n* \"node.kubernetes.io/instance-type\"\n* \"topology.kubernetes.io/region\"\n* \"topology.kubernetes.io/zone\"\n* \"kubernetes.azure.com/cluster\"\n* \"kubernetes.azure.com/mode\"\n* \"kubernetes.azure.com/role\"\n* \"kubernetes.azure.com/scalesetpriority\"\n* \"kubernetes.io/hostname\"\n* \"kubernetes.azure.com/storageprofile\"\n* \"kubernetes.azure.com/storagetier\"\n* \"kubernetes.azure.com/instance-sku\"\n* \"kubernetes.azure.com/node-image-version\"\n* \"kubernetes.azure.com/subnet\"\n* \"kubernetes.azure.com/vnet\"\n* \"kubernetes.azure.com/ppg\"\n* \"kubernetes.azure.com/encrypted-set\"\n* \"kubernetes.azure.com/accelerator\"\n* \"kubernetes.azure.com/fips_enabled\"\n* \"kubernetes.azure.com/os-sku\"\n",
                                        "example": {
                                          "key": "value"
                                        }
                                      },
                                      "taints": {
                                        "type": "array",
                                        "description": "Add taints to a virtual node group.\n",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "key": {
                                              "type": "string",
                                              "description": "Set taint key.\nThe following are not allowed:\n* \"kubernetes.azure.com/scalesetpriority\"\n"
                                            },
                                            "value": {
                                              "type": "string",
                                              "description": "Set taint value.\n"
                                            },
                                            "effect": {
                                              "type": "string",
                                              "description": "Set taint effect.\n",
                                              "enum": [
                                                "NoSchedule",
                                                "PreferNoSchedule",
                                                "NoExecute",
                                                "PreferNoExecute"
                                              ]
                                            }
                                          }
                                        },
                                        "example": [
                                          {
                                            "key": "taintKey",
                                            "value": "taintValue",
                                            "effect": "NoSchedule"
                                          }
                                        ]
                                      },
                                      "tags": {
                                        "type": "object",
                                        "description": "A maximum of 10 unique key-value pairs for VM tags in the virtual node group.\n"
                                      },
                                      "vmSizes": {
                                        "$ref": "#/paths/~1ocean~1azure~1np~1virtualNodeGroup~1%7BvirtualNodeGroupId%7D/put/requestBody/content/application~1json/schema/properties/virtualNodeGroup/properties/vmSizes"
                                      }
                                    }
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "readOnly": true,
                                    "format": "date-time",
                                    "example": "2021-03-17T08:13:08.000Z",
                                    "description": "A timestamp of the Ocean creation.\n"
                                  },
                                  "updatedAt": {
                                    "type": "string",
                                    "readOnly": true,
                                    "format": "date-time",
                                    "example": "2021-03-17T15:06:13.000Z",
                                    "description": "A timestamp of the latest Ocean update.\n"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:np"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/azure/np/cluster/{oceanClusterId}": {
      "get": {
        "summary": "Get Cluster",
        "description": "Get the configurations for a specified Ocean cluster.\n",
        "operationId": "oceanAKSClusterGet",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean AKS Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/np/cluster/o-12345abc"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1azure~1np~1cluster/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:np"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Cluster",
        "description": "Update a specified Ocean cluster.\n<br />\nThis API supports partial updates, so specific fields can be updated separately.\n\nNotes:\n<br />\nWhen labels, tags and taints are updated in the VNG template, all <b>existing</b> nodes from VNGs that inherit these properties\nfrom the tamplate will be updated as well.\n",
        "operationId": "oceanAKSClusterUpdate",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "cluster"
                    ],
                    "properties": {
                      "cluster": {
                        "type": "object",
                        "description": "The Ocean cluster.\n",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "test",
                            "description": "A name for the Ocean cluster.\n"
                          },
                          "autoScaler": {
                            "$ref": "#/paths/~1ocean~1azure~1np~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/autoScaler"
                          },
                          "scheduling": {
                            "$ref": "#/paths/~1ocean~1azure~1np~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/scheduling"
                          },
                          "logging": {
                            "$ref": "#/paths/~1ocean~1azure~1np~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/logging"
                          },
                          "health": {
                            "$ref": "#/paths/~1ocean~1azure~1np~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/health"
                          },
                          "virtualNodeGroupTemplate": {
                            "type": "object",
                            "title": "Ocean AKS Virtual Node Group Template",
                            "properties": {
                              "availabilityZones": {
                                "type": "array",
                                "description": "An Array holding Availability Zones, this configures the availability zones the Ocean may launch instances in per VNG.\n",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "1",
                                  "2",
                                  "3"
                                ]
                              },
                              "nodePoolProperties": {
                                "$ref": "#/paths/~1ocean~1azure~1np~1virtualNodeGroup~1%7BvirtualNodeGroupId%7D/put/requestBody/content/application~1json/schema/properties/virtualNodeGroup/properties/nodePoolProperties"
                              },
                              "nodeCountLimits": {
                                "$ref": "#/paths/~1ocean~1azure~1np~1virtualNodeGroup~1%7BvirtualNodeGroupId%7D/put/requestBody/content/application~1json/schema/properties/virtualNodeGroup/properties/nodeCountLimits"
                              },
                              "strategy": {
                                "$ref": "#/paths/~1ocean~1azure~1np~1virtualNodeGroup~1%7BvirtualNodeGroupId%7D/put/requestBody/content/application~1json/schema/properties/virtualNodeGroup/properties/strategy"
                              },
                              "autoScale": {
                                "$ref": "#/paths/~1ocean~1azure~1np~1virtualNodeGroup~1%7BvirtualNodeGroupId%7D/put/requestBody/content/application~1json/schema/properties/virtualNodeGroup/properties/autoScale"
                              },
                              "labels": {
                                "type": "object",
                                "description": "key-value pairs of labels to add to the virtual node group.\\\nOnly custom user labels are allowed, and not Kubernetes built-in labels or Spot internal labels.\\\nThe following are not allowed:\n* \"kubernetes.azure.com/agentpool\"\n* \"kubernetes.io/arch\"* \"kubernetes.io/os\"\n* \"node.kubernetes.io/instance-type\"\n* \"topology.kubernetes.io/region\"\n* \"topology.kubernetes.io/zone\"\n* \"kubernetes.azure.com/cluster\"\n* \"kubernetes.azure.com/mode\"\n* \"kubernetes.azure.com/role\"\n* \"kubernetes.azure.com/scalesetpriority\"\n* \"kubernetes.io/hostname\"\n* \"kubernetes.azure.com/storageprofile\"\n* \"kubernetes.azure.com/storagetier\"\n* \"kubernetes.azure.com/instance-sku\"\n* \"kubernetes.azure.com/node-image-version\"\n* \"kubernetes.azure.com/subnet\"\n* \"kubernetes.azure.com/vnet\"\n* \"kubernetes.azure.com/ppg\"\n* \"kubernetes.azure.com/encrypted-set\"\n* \"kubernetes.azure.com/accelerator\"\n* \"kubernetes.azure.com/fips_enabled\"\n* \"kubernetes.azure.com/os-sku\"\n",
                                "example": {
                                  "key": "value"
                                }
                              },
                              "taints": {
                                "type": "array",
                                "description": "Add taints to a virtual node group.\n",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string",
                                      "description": "Set taint key.\nThe following are not allowed:\n* \"kubernetes.azure.com/scalesetpriority\"\n"
                                    },
                                    "value": {
                                      "type": "string",
                                      "description": "Set taint value.\n"
                                    },
                                    "effect": {
                                      "type": "string",
                                      "description": "Set taint effect.\n",
                                      "enum": [
                                        "NoSchedule",
                                        "PreferNoSchedule",
                                        "NoExecute",
                                        "PreferNoExecute"
                                      ]
                                    }
                                  }
                                },
                                "example": [
                                  {
                                    "key": "taintKey",
                                    "value": "taintValue",
                                    "effect": "NoSchedule"
                                  }
                                ]
                              },
                              "tags": {
                                "type": "object",
                                "description": "A maximum of 10 unique key-value pairs for VM tags in the virtual node group.\n"
                              },
                              "vmSizes": {
                                "$ref": "#/paths/~1ocean~1azure~1np~1virtualNodeGroup~1%7BvirtualNodeGroupId%7D/put/requestBody/content/application~1json/schema/properties/virtualNodeGroup/properties/vmSizes"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean AKS Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/np/cluster/o-12345abc"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1azure~1np~1cluster/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:np"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Cluster",
        "description": "Delete a specified Ocean cluster.\n",
        "operationId": "oceanAKSClusterDelete",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean AKS Delete Cluster Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/np/cluster/o-12345abc"
                            },
                            "method": {
                              "example": "DELETE"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/azure/np/cluster/aks/import": {
      "post": {
        "summary": "Import Cluster",
        "description": "The Import Cluster API call returns a JSON formatted Ocean cluster specification for a given AKS cluster and import identifier.\nThe returned specification is ready to use in the [Ocean AKS Cluster Create](https://docs.spot.io/api/#operation/oceanAKSClusterCreate) API call.\n",
        "operationId": "oceanAKSClusterImport",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "resourceGroupName",
            "example": "test-clust_group",
            "description": "The name of the resource group of the AKS cluster.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "aksClusterName",
            "example": "test-cluster",
            "description": "The name of the aks cluster.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean AKS Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/np/cluster/aks/import"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "cluster": {
                                    "type": "object",
                                    "description": "The Ocean cluster.\n",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "readOnly": true,
                                        "example": "o-134abcd",
                                        "description": "Ocean cluster identifier.\n"
                                      },
                                      "name": {
                                        "type": "string",
                                        "example": "test",
                                        "description": "Add a name for the Ocean cluster.\n"
                                      },
                                      "controllerClusterId": {
                                        "type": "string",
                                        "example": "test-123124",
                                        "description": "Enter a unique Ocean cluster identifier. Cannot be updated.\n"
                                      },
                                      "aks": {
                                        "type": "object",
                                        "title": "Ocean AKS - AKS Cluster Configuration",
                                        "required": [
                                          "clusterName",
                                          "resourceGroupName",
                                          "region",
                                          "infrastructureResourceGroupName"
                                        ],
                                        "description": "AKS cluster configuration. Cannot be updated.\n",
                                        "properties": {
                                          "clusterName": {
                                            "type": "string",
                                            "description": "The name  of the AKS Cluster.\n",
                                            "example": "test-cluster"
                                          },
                                          "resourceGroupName": {
                                            "type": "string",
                                            "description": "The name of the cluster's resource group.\n",
                                            "example": "TestResourceGroup"
                                          },
                                          "region": {
                                            "type": "string",
                                            "description": "The cluster's region.\n",
                                            "example": "eastus"
                                          },
                                          "infrastructureResourceGroupName": {
                                            "type": "string",
                                            "description": "The name of the cluster's infrastructure resource group.\n",
                                            "example": "MC_TestResourceGroup_test-cluster_eastus"
                                          }
                                        }
                                      },
                                      "autoScaler": {
                                        "$ref": "#/paths/~1ocean~1azure~1np~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/autoScaler"
                                      },
                                      "scheduling": {
                                        "$ref": "#/paths/~1ocean~1azure~1np~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/scheduling"
                                      },
                                      "health": {
                                        "$ref": "#/paths/~1ocean~1azure~1np~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/health"
                                      },
                                      "virtualNodeGroupTemplate": {
                                        "type": "object",
                                        "title": "Ocean AKS Virtual Node Group Template",
                                        "properties": {
                                          "availabilityZones": {
                                            "type": "array",
                                            "description": "An Array holding Availability Zones, this configures the availability zones the Ocean may launch instances in per VNG.\n",
                                            "items": {
                                              "type": "string"
                                            },
                                            "example": [
                                              "1",
                                              "2",
                                              "3"
                                            ]
                                          },
                                          "nodePoolProperties": {
                                            "$ref": "#/paths/~1ocean~1azure~1np~1virtualNodeGroup/post/requestBody/content/application~1json/schema/allOf/0/properties/virtualNodeGroup/properties/nodePoolProperties"
                                          },
                                          "nodeCountLimits": {
                                            "$ref": "#/paths/~1ocean~1azure~1np~1virtualNodeGroup~1%7BvirtualNodeGroupId%7D/put/requestBody/content/application~1json/schema/properties/virtualNodeGroup/properties/nodeCountLimits"
                                          },
                                          "strategy": {
                                            "$ref": "#/paths/~1ocean~1azure~1np~1virtualNodeGroup~1%7BvirtualNodeGroupId%7D/put/requestBody/content/application~1json/schema/properties/virtualNodeGroup/properties/strategy"
                                          },
                                          "labels": {
                                            "type": "object",
                                            "description": "key-value pairs of labels to add to the virtual node group.\\\nOnly custom user labels are allowed, and not Kubernetes built-in labels or Spot internal labels.\\\nThe following are not allowed:\n* \"kubernetes.azure.com/agentpool\"\n* \"kubernetes.io/arch\"* \"kubernetes.io/os\"\n* \"node.kubernetes.io/instance-type\"\n* \"topology.kubernetes.io/region\"\n* \"topology.kubernetes.io/zone\"\n* \"kubernetes.azure.com/cluster\"\n* \"kubernetes.azure.com/mode\"\n* \"kubernetes.azure.com/role\"\n* \"kubernetes.azure.com/scalesetpriority\"\n* \"kubernetes.io/hostname\"\n* \"kubernetes.azure.com/storageprofile\"\n* \"kubernetes.azure.com/storagetier\"\n* \"kubernetes.azure.com/instance-sku\"\n* \"kubernetes.azure.com/node-image-version\"\n* \"kubernetes.azure.com/subnet\"\n* \"kubernetes.azure.com/vnet\"\n* \"kubernetes.azure.com/ppg\"\n* \"kubernetes.azure.com/encrypted-set\"\n* \"kubernetes.azure.com/accelerator\"\n* \"kubernetes.azure.com/fips_enabled\"\n* \"kubernetes.azure.com/os-sku\"\n",
                                            "example": {
                                              "key": "value"
                                            }
                                          },
                                          "taints": {
                                            "type": "array",
                                            "description": "Add taints to a virtual node group.\n",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "key": {
                                                  "type": "string",
                                                  "description": "Set taint key.\nThe following are not allowed:\n* \"kubernetes.azure.com/scalesetpriority\"\n"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "description": "Set taint value.\n"
                                                },
                                                "effect": {
                                                  "type": "string",
                                                  "description": "Set taint effect.\n",
                                                  "enum": [
                                                    "NoSchedule",
                                                    "PreferNoSchedule",
                                                    "NoExecute",
                                                    "PreferNoExecute"
                                                  ]
                                                }
                                              }
                                            },
                                            "example": [
                                              {
                                                "key": "taintKey",
                                                "value": "taintValue",
                                                "effect": "NoSchedule"
                                              }
                                            ]
                                          },
                                          "tags": {
                                            "type": "object",
                                            "description": "A maximum of 10 unique key-value pairs for VM tags in the virtual node group.\n"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:np"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/azure/np/cluster/launchNewNodes": {
      "put": {
        "summary": "Launch New Nodes",
        "description": "Launch new nodes for a cluster.\n",
        "operationId": "oceanAKSClusterLaunchNodes",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Ocean AKS Launch Request",
                "required": [
                  "oceanId",
                  "adjustment"
                ],
                "properties": {
                  "oceanId": {
                    "type": "string",
                    "example": "o-134abcd",
                    "description": "Ocean cluster identifier.\n"
                  },
                  "vngIds": {
                    "type": "array",
                    "minimum": 1,
                    "items": {
                      "type": "string",
                      "example": "vng-12345abc",
                      "description": "Virtual node group identifier.\n"
                    }
                  },
                  "preferredLifecycle": {
                    "type": "string",
                    "enum": [
                      "Spot",
                      "Regular"
                    ],
                    "description": "The preferred life cycle to launch the node.\nIf not specified, the life cycle is chosen accoring to the scaled VNG.\n",
                    "example": "Spot"
                  },
                  "availabilityZones": {
                    "type": "array",
                    "description": "An Array holding Availability Zones, this configures the availability zones the Ocean may launch instances in per VNG.\n",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "1",
                      "2",
                      "3"
                    ]
                  },
                  "adjustment": {
                    "type": "integer",
                    "description": "The number of nodes to launch.\n",
                    "example": 2,
                    "minimum": 1
                  },
                  "minCoresPerNode": {
                    "type": "integer",
                    "description": "Minimum number of core per node.",
                    "example": 2,
                    "minimum": 2
                  },
                  "minMemoryGiBPerNode": {
                    "type": "number",
                    "format": "float",
                    "description": "Minimum memory per node.",
                    "example": 2,
                    "minimum": 2
                  },
                  "applicableVmSizes": {
                    "type": "array",
                    "minimum": 1,
                    "items": {
                      "type": "string",
                      "description": "Applicable VM sizes.\n"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Cluster Launch Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/np/cluster/launchNewNodes"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "vngScalingUpResults": {
                                    "type": "array",
                                    "description": "Virtual node group identifier.\n",
                                    "items": {
                                      "type": "object",
                                      "description": "vng scaling up results\n",
                                      "properties": {
                                        "vngId": {
                                          "type": "string",
                                          "example": "vng-12345abc"
                                        },
                                        "scaleNodePoolName": {
                                          "type": "string",
                                          "example": "omnp9e26aa3e"
                                        },
                                        "vmSizeName": {
                                          "type": "string",
                                          "example": "standard_d2as_v5"
                                        },
                                        "zones": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "example": [
                                            "1"
                                          ]
                                        },
                                        "lifeCycle": {
                                          "type": "string",
                                          "example": "Spot"
                                        },
                                        "numOfNewScaleNodes": {
                                          "type": "integer",
                                          "example": 1
                                        }
                                      }
                                    }
                                  },
                                  "nodesLeftToScale": {
                                    "type": "integer",
                                    "description": "The number of nodes left to scale.\n",
                                    "example": 0
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:np:cluster:launchNodes"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/azure/np/cluster/detachNodes": {
      "put": {
        "summary": "Detach Nodes",
        "description": "Detach Nodes nodes for a cluster.\n",
        "operationId": "oceanAKSV2ClusterDetachNodes",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Ocean AKS Detach Request",
                "required": [
                  "oceanId",
                  "nodeNamesToDetach"
                ],
                "properties": {
                  "oceanId": {
                    "type": "string",
                    "example": "o-134abcd",
                    "description": "Ocean cluster identifier.\n"
                  },
                  "nodeNamesToDetach": {
                    "type": "array",
                    "minimum": 1,
                    "description": "Node names to detach from the Ocean cluster.\n",
                    "items": {
                      "type": "string",
                      "example": "aks-omnpf52d2a6b-36204769-vmss000012"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detach ocean nodes response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/np/cluster/detachNodes"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "oceanId": {
                                    "type": "string",
                                    "example": "o-134abcd",
                                    "description": "Ocean cluster identifier.\n"
                                  },
                                  "detachedNodeNames": {
                                    "type": "array",
                                    "minimum": 1,
                                    "description": "Node names to detach from the Ocean cluster.\n",
                                    "items": {
                                      "type": "string",
                                      "example": "aks-omnpf52d2a6b-36204769-vmss000012"
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:np:cluster:detachNodes"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/azure/np/virtualNodeGroup": {
      "post": {
        "summary": "Create Virtual Node Group",
        "description": "Create a virtual node group.\n",
        "operationId": "oceanAKSVirtualNodeGroupCreate",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "virtualNodeGroup"
                    ],
                    "properties": {
                      "virtualNodeGroup": {
                        "type": "object",
                        "title": "Ocean AKS Virtual Node Group",
                        "required": [
                          "oceanId",
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "testVng",
                            "description": "Enter a name for the virtual node group.\n"
                          },
                          "oceanId": {
                            "type": "string",
                            "example": "o-134abcd",
                            "description": "Ocean cluster identifier.\n"
                          },
                          "availabilityZones": {
                            "type": "array",
                            "description": "An Array holding Availability Zones, this configures the availability zones the Ocean may launch nodes in per VNG.\\\nSelect zone 0 if you have a workload that requires no availability zone redundancy (AZ=null). You can select this option either alone or together with other availability zones.\\\nIn case zone 0 is selected together with other availability zones, nodes of zone 0 will be scaled only for workloads that demand it.\n",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "0",
                              "1",
                              "2",
                              "3"
                            ]
                          },
                          "nodePoolProperties": {
                            "type": "object",
                            "title": "Ocean AKS Node Pool Properties",
                            "description": "The Ocean Node Pool Properties.\n",
                            "properties": {
                              "maxPodsPerNode": {
                                "type": "integer",
                                "description": "The maximum number of pods per node in the node pools.\n",
                                "minimum": 0,
                                "maximum": 250,
                                "example": 30,
                                "default": 110
                              },
                              "enableNodePublicIP": {
                                "description": "enable node public IP.\n",
                                "type": "boolean",
                                "example": true,
                                "default": false
                              },
                              "osDiskSizeGB": {
                                "type": "integer",
                                "description": "The size of the OS disk in GB. \nFor Linux OS, the minimum size is 32GB and for Windows OS the minimum is 128GB.\n",
                                "maximum": 1023,
                                "example": 64,
                                "default": 128
                              },
                              "osDiskType": {
                                "type": "string",
                                "description": "The type of the OS disk.\n",
                                "enum": [
                                  "Managed",
                                  "Ephemeral"
                                ],
                                "example": "Managed",
                                "default": "Managed"
                              },
                              "osType": {
                                "type": "string",
                                "description": "The OS type of the OS disk.\n",
                                "enum": [
                                  "Linux",
                                  "Windows"
                                ],
                                "example": "Linux"
                              },
                              "osSKU": {
                                "type": "string",
                                "description": "The OS SKU of the OS type. Must correlate with the os type.\n",
                                "enum": [
                                  "Ubuntu",
                                  "AzureLinux",
                                  "CBLMariner",
                                  "Windows2019",
                                  "Windows2022"
                                ],
                                "example": "Ubuntu",
                                "default": "Ubuntu"
                              },
                              "kubernetesVersion": {
                                "type": "string",
                                "description": "The desired Kubernetes version of the launched nodes.\nIn case the value is null, the Kubernetes version of the control plane\nis used.\n",
                                "example": 1.26
                              },
                              "vnetSubnetIDs": {
                                "type": "array",
                                "description": "The IDs of subnets in an existing VNet into which to assign nodes in the cluster (requires azure network-plugin).\n",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "/subscriptions/123456-1234-1234-1234-123456789/resourceGroups/ExampleResourceGroup/providers/Microsoft.Network/virtualNetworks/ExampleVirtualNetwork/subnets/default"
                                ]
                              },
                              "podSubnetIDs": {
                                "type": "array",
                                "description": "The IDs of subnets in an existing VNet into which to assign pods in the cluster (requires azure network-plugin).\n",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "/subscriptions/123456-1234-1234-1234-123456789/resourceGroups/ExampleResourceGroup/providers/Microsoft.Network/virtualNetworks/ExampleVirtualNetwork/subnets/default"
                                ]
                              },
                              "linuxOSConfig": {
                                "$ref": "#/paths/~1ocean~1azure~1np~1virtualNodeGroup~1%7BvirtualNodeGroupId%7D/put/requestBody/content/application~1json/schema/properties/virtualNodeGroup/properties/nodePoolProperties/properties/linuxOSConfig"
                              }
                            }
                          },
                          "nodeCountLimits": {
                            "$ref": "#/paths/~1ocean~1azure~1np~1virtualNodeGroup~1%7BvirtualNodeGroupId%7D/put/requestBody/content/application~1json/schema/properties/virtualNodeGroup/properties/nodeCountLimits"
                          },
                          "strategy": {
                            "$ref": "#/paths/~1ocean~1azure~1np~1virtualNodeGroup~1%7BvirtualNodeGroupId%7D/put/requestBody/content/application~1json/schema/properties/virtualNodeGroup/properties/strategy"
                          },
                          "autoScale": {
                            "$ref": "#/paths/~1ocean~1azure~1np~1virtualNodeGroup~1%7BvirtualNodeGroupId%7D/put/requestBody/content/application~1json/schema/properties/virtualNodeGroup/properties/autoScale"
                          },
                          "labels": {
                            "type": "object",
                            "description": "key-value pairs of labels to add to the virtual node group.\\\nOnly custom user labels are allowed, and not Kubernetes built-in labels or Spot internal labels.\\\nThe following are not allowed:\n* \"kubernetes.azure.com/agentpool\"\n* \"kubernetes.io/arch\"* \"kubernetes.io/os\"\n* \"node.kubernetes.io/instance-type\"\n* \"topology.kubernetes.io/region\"\n* \"topology.kubernetes.io/zone\"\n* \"kubernetes.azure.com/cluster\"\n* \"kubernetes.azure.com/mode\"\n* \"kubernetes.azure.com/role\"\n* \"kubernetes.azure.com/scalesetpriority\"\n* \"kubernetes.io/hostname\"\n* \"kubernetes.azure.com/storageprofile\"\n* \"kubernetes.azure.com/storagetier\"\n* \"kubernetes.azure.com/instance-sku\"\n* \"kubernetes.azure.com/node-image-version\"\n* \"kubernetes.azure.com/subnet\"\n* \"kubernetes.azure.com/vnet\"\n* \"kubernetes.azure.com/ppg\"\n* \"kubernetes.azure.com/encrypted-set\"\n* \"kubernetes.azure.com/accelerator\"\n* \"kubernetes.azure.com/fips_enabled\"\n* \"kubernetes.azure.com/os-sku\"\n",
                            "example": {
                              "key": "value"
                            }
                          },
                          "taints": {
                            "type": "array",
                            "description": "Add taints to a virtual node group.\n",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string",
                                  "description": "Set taint key.\nThe following are not allowed:\n* \"kubernetes.azure.com/scalesetpriority\"\n"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Set taint value.\n"
                                },
                                "effect": {
                                  "type": "string",
                                  "description": "Set taint effect.\n",
                                  "enum": [
                                    "NoSchedule",
                                    "PreferNoSchedule",
                                    "NoExecute",
                                    "PreferNoExecute"
                                  ]
                                }
                              }
                            },
                            "example": [
                              {
                                "key": "taintKey",
                                "value": "taintValue",
                                "effect": "NoSchedule"
                              }
                            ]
                          },
                          "tags": {
                            "type": "object",
                            "description": "A maximum of 10 unique key-value pairs for VM tags in the virtual node group.\n"
                          },
                          "vmSizes": {
                            "$ref": "#/paths/~1ocean~1azure~1np~1virtualNodeGroup~1%7BvirtualNodeGroupId%7D/put/requestBody/content/application~1json/schema/properties/virtualNodeGroup/properties/vmSizes"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Virtual Node Group Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/np/virtualNodeGroup"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1azure~1np~1virtualNodeGroup/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:np:virtualNodeGroup"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Virtual Node Groups",
        "description": "List the configurations for all virtual node groups in the account or in a specified cluster.\n",
        "operationId": "oceanAKSVirtualNodeGroupList",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Virtual Node Group Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/np/virtualNodeGroup"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Ocean AKS Virtual Node Group",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Virtual Node Group identifier.\n",
                                    "example": "vng-134abcd"
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "testVng",
                                    "description": "Enter a name for the virtual node group.\n"
                                  },
                                  "oceanId": {
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "o-134abcd",
                                    "description": "Ocean cluster identifier.\n"
                                  },
                                  "availabilityZones": {
                                    "type": "array",
                                    "description": "An Array holding Availability Zones, this configures the availability zones the Ocean may launch instances in per VNG.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "example": [
                                      "1",
                                      "2",
                                      "3"
                                    ]
                                  },
                                  "nodePoolProperties": {
                                    "$ref": "#/paths/~1ocean~1azure~1np~1virtualNodeGroup/post/requestBody/content/application~1json/schema/allOf/0/properties/virtualNodeGroup/properties/nodePoolProperties"
                                  },
                                  "nodeCountLimits": {
                                    "$ref": "#/paths/~1ocean~1azure~1np~1virtualNodeGroup~1%7BvirtualNodeGroupId%7D/put/requestBody/content/application~1json/schema/properties/virtualNodeGroup/properties/nodeCountLimits"
                                  },
                                  "strategy": {
                                    "$ref": "#/paths/~1ocean~1azure~1np~1virtualNodeGroup~1%7BvirtualNodeGroupId%7D/put/requestBody/content/application~1json/schema/properties/virtualNodeGroup/properties/strategy"
                                  },
                                  "autoScale": {
                                    "$ref": "#/paths/~1ocean~1azure~1np~1virtualNodeGroup~1%7BvirtualNodeGroupId%7D/put/requestBody/content/application~1json/schema/properties/virtualNodeGroup/properties/autoScale"
                                  },
                                  "labels": {
                                    "type": "object",
                                    "description": "key-value pairs of labels to add to the virtual node group.\\\nOnly custom user labels are allowed, and not Kubernetes built-in labels or Spot internal labels.\\\nThe following are not allowed:\n* \"kubernetes.azure.com/agentpool\"\n* \"kubernetes.io/arch\"* \"kubernetes.io/os\"\n* \"node.kubernetes.io/instance-type\"\n* \"topology.kubernetes.io/region\"\n* \"topology.kubernetes.io/zone\"\n* \"kubernetes.azure.com/cluster\"\n* \"kubernetes.azure.com/mode\"\n* \"kubernetes.azure.com/role\"\n* \"kubernetes.azure.com/scalesetpriority\"\n* \"kubernetes.io/hostname\"\n* \"kubernetes.azure.com/storageprofile\"\n* \"kubernetes.azure.com/storagetier\"\n* \"kubernetes.azure.com/instance-sku\"\n* \"kubernetes.azure.com/node-image-version\"\n* \"kubernetes.azure.com/subnet\"\n* \"kubernetes.azure.com/vnet\"\n* \"kubernetes.azure.com/ppg\"\n* \"kubernetes.azure.com/encrypted-set\"\n* \"kubernetes.azure.com/accelerator\"\n* \"kubernetes.azure.com/fips_enabled\"\n* \"kubernetes.azure.com/os-sku\"\n",
                                    "example": {
                                      "key": "value"
                                    }
                                  },
                                  "taints": {
                                    "type": "array",
                                    "description": "Add taints to a virtual node group.\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string",
                                          "description": "Set taint key.\nThe following are not allowed:\n* \"kubernetes.azure.com/scalesetpriority\"\n"
                                        },
                                        "value": {
                                          "type": "string",
                                          "description": "Set taint value.\n"
                                        },
                                        "effect": {
                                          "type": "string",
                                          "description": "Set taint effect.\n",
                                          "enum": [
                                            "NoSchedule",
                                            "PreferNoSchedule",
                                            "NoExecute",
                                            "PreferNoExecute"
                                          ]
                                        }
                                      }
                                    },
                                    "example": [
                                      {
                                        "key": "taintKey",
                                        "value": "taintValue",
                                        "effect": "NoSchedule"
                                      }
                                    ]
                                  },
                                  "tags": {
                                    "type": "object",
                                    "description": "A maximum of 10 unique key-value pairs for VM tags in the virtual node group.\n"
                                  },
                                  "vmSizes": {
                                    "$ref": "#/paths/~1ocean~1azure~1np~1virtualNodeGroup~1%7BvirtualNodeGroupId%7D/put/requestBody/content/application~1json/schema/properties/virtualNodeGroup/properties/vmSizes"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "readOnly": true,
                                    "format": "date-time",
                                    "example": "2021-03-17T08:13:08.000Z",
                                    "description": "A timestamp of the Ocean creation.\n"
                                  },
                                  "updatedAt": {
                                    "type": "string",
                                    "readOnly": true,
                                    "format": "date-time",
                                    "example": "2021-03-17T15:06:13.000Z",
                                    "description": "A timestamp of the latest Ocean update.\n"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:np:virtualNodeGroup"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/azure/np/virtualNodeGroup/{virtualNodeGroupId}": {
      "get": {
        "summary": "Get Virtual Node Group",
        "description": "Get the configuration of a specified virtual node group.\n",
        "operationId": "oceanAKSVirtualNodeGroupGet",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "virtualNodeGroupId",
            "example": "vng-12345abc",
            "description": "Ocean Virtual Node Group identifier.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Virtual Node Group Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/np/virtualNodeGroup/vng-12345abc"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1azure~1np~1virtualNodeGroup/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:np:virtualNodeGroup"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Virtual Node Group",
        "description": "Update a specified virtual node group in an Ocean cluster.\n<br />\nThis API supports partial updates, so specific fields can be updated separately.\n\nNotes:\n<br />\nWhen labels, tags and taints are updated the <b>existing</b> nodes are updated as well.\n",
        "operationId": "oceanAKSVirtualNodeGroupUpdate",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1azure~1np~1virtualNodeGroup~1%7BvirtualNodeGroupId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "virtualNodeGroup"
                ],
                "properties": {
                  "virtualNodeGroup": {
                    "type": "object",
                    "title": "Ocean AKS Virtual Node Group",
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "testVng",
                        "description": "Enter a name for the virtual node group.\n"
                      },
                      "availabilityZones": {
                        "type": "array",
                        "description": "An Array holding Availability Zones, this configures the availability zones the Ocean may launch instances in per VNG.\n",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "1",
                          "2",
                          "3"
                        ]
                      },
                      "nodePoolProperties": {
                        "type": "object",
                        "title": "Ocean AKS Node Pool Properties",
                        "description": "The Ocean Node Pool Properties.\n",
                        "properties": {
                          "maxPodsPerNode": {
                            "type": "integer",
                            "description": "The maximum number of pods per node in the node pools.\n",
                            "minimum": 0,
                            "maximum": 250,
                            "example": 30
                          },
                          "enableNodePublicIP": {
                            "description": "enable node public IP.\n",
                            "type": "boolean",
                            "example": true
                          },
                          "osDiskSizeGB": {
                            "type": "integer",
                            "description": "The size of the OS disk in GB. \nFor Linux OS, the minimum size is 32GB and for Windows OS the minimum is 128GB.\n",
                            "maximum": 1023,
                            "example": 64
                          },
                          "osDiskType": {
                            "type": "string",
                            "description": "The type of the OS disk.\n",
                            "enum": [
                              "Managed",
                              "Ephemeral"
                            ],
                            "example": "Managed"
                          },
                          "osSKU": {
                            "type": "string",
                            "description": "The OS SKU of the OS type. Must correlate with the os type.\n",
                            "enum": [
                              "Ubuntu",
                              "AzureLinux",
                              "CBLMariner",
                              "Windows2019",
                              "Windows2022"
                            ],
                            "example": "Ubuntu"
                          },
                          "kubernetesVersion": {
                            "type": "string",
                            "description": "The desired Kubernetes version of the luanched nodes.\nIn case the value is null, the Kubernetes version of the control plane\nis used.\n",
                            "example": 1.26
                          },
                          "vnetSubnetIDs": {
                            "type": "array",
                            "description": "The IDs of subnets in an existing VNet into which to assign nodes in the cluster (requires azure network-plugin).\n",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "/subscriptions/123456-1234-1234-1234-123456789/resourceGroups/ExampleResourceGroup/providers/Microsoft.Network/virtualNetworks/ExampleVirtualNetwork/subnets/default"
                            ]
                          },
                          "podSubnetIDs": {
                            "type": "array",
                            "description": "The IDs of subnets in an existing VNet into which to assign pods in the cluster (requires azure network-plugin).\n",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "/subscriptions/123456-1234-1234-1234-123456789/resourceGroups/ExampleResourceGroup/providers/Microsoft.Network/virtualNetworks/ExampleVirtualNetwork/subnets/default"
                            ]
                          },
                          "linuxOSConfig": {
                            "type": "object",
                            "title": "Ocean AKS Linux OS Config",
                            "description": "Custom Linux OS configuration\n",
                            "properties": {
                              "sysctls": {
                                "type": "object",
                                "properties": {
                                  "vmMaxMapCount": {
                                    "type": "integer",
                                    "description": "Maximum number of memory map areas a process may have.\nCan be configured only if OS type is Linux.\n",
                                    "example": 79550,
                                    "minimum": 65530,
                                    "maximum": 262144
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "nodeCountLimits": {
                        "type": "object",
                        "title": "Ocean AKS Node Count Limits",
                        "description": "Limit the number of nodes in a VNG.\n",
                        "properties": {
                          "minCount": {
                            "description": "Minimum node count limit.\n",
                            "type": "integer",
                            "minimum": 0,
                            "example": 1,
                            "default": 0
                          },
                          "maxCount": {
                            "description": "Maximum node count limit.\n",
                            "type": "integer",
                            "minimum": 0,
                            "example": 100,
                            "default": 1000
                          }
                        }
                      },
                      "strategy": {
                        "type": "object",
                        "title": "Ocean AKS Strategy",
                        "description": "The Ocean AKS Strategy object.\n",
                        "properties": {
                          "spotPercentage": {
                            "type": "integer",
                            "description": "Percentage of spot VMs to maintain.\n",
                            "example": 50,
                            "minimum": 0,
                            "maximum": 100
                          },
                          "fallbackToOd": {
                            "type": "boolean",
                            "description": "If no spot instance markets are available, enable Ocean to launch on-demand instances instead.\n",
                            "example": true
                          }
                        }
                      },
                      "autoScale": {
                        "type": "object",
                        "description": "Object specifying the automatic scaling of an Ocean VNG.\n",
                        "title": "Ocean AKS Auto Scale",
                        "properties": {
                          "headrooms": {
                            "type": "array",
                            "description": "Specify the custom headroom per VNG. Provide a list of headroom objects.\n",
                            "title": "Headrooms",
                            "items": {
                              "type": "object",
                              "properties": {
                                "cpuPerUnit": {
                                  "description": "Configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.\n",
                                  "type": "integer",
                                  "example": 1024,
                                  "default": 0
                                },
                                "memoryPerUnit": {
                                  "description": "Configure the amount of memory (MiB) to allocate the headroom.\n",
                                  "type": "integer",
                                  "example": 512,
                                  "default": 0
                                },
                                "gpuPerUnit": {
                                  "type": "integer",
                                  "description": "Amont of GPU to allocate for headroom unit.\n",
                                  "example": 0,
                                  "default": 0
                                },
                                "numOfUnits": {
                                  "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n",
                                  "type": "integer",
                                  "example": 2,
                                  "default": 0
                                }
                              }
                            }
                          }
                        }
                      },
                      "labels": {
                        "type": "object",
                        "description": "key-value pairs of labels to add to the virtual node group.\\\nOnly custom user labels are allowed, and not Kubernetes built-in labels or Spot internal labels.\\\nThe following are not allowed:\n* \"kubernetes.azure.com/agentpool\"\n* \"kubernetes.io/arch\"* \"kubernetes.io/os\"\n* \"node.kubernetes.io/instance-type\"\n* \"topology.kubernetes.io/region\"\n* \"topology.kubernetes.io/zone\"\n* \"kubernetes.azure.com/cluster\"\n* \"kubernetes.azure.com/mode\"\n* \"kubernetes.azure.com/role\"\n* \"kubernetes.azure.com/scalesetpriority\"\n* \"kubernetes.io/hostname\"\n* \"kubernetes.azure.com/storageprofile\"\n* \"kubernetes.azure.com/storagetier\"\n* \"kubernetes.azure.com/instance-sku\"\n* \"kubernetes.azure.com/node-image-version\"\n* \"kubernetes.azure.com/subnet\"\n* \"kubernetes.azure.com/vnet\"\n* \"kubernetes.azure.com/ppg\"\n* \"kubernetes.azure.com/encrypted-set\"\n* \"kubernetes.azure.com/accelerator\"\n* \"kubernetes.azure.com/fips_enabled\"\n* \"kubernetes.azure.com/os-sku\"\n",
                        "example": {
                          "key": "value"
                        }
                      },
                      "taints": {
                        "type": "array",
                        "description": "Add taints to a virtual node group.\n",
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "Set taint key.\nThe following are not allowed:\n* \"kubernetes.azure.com/scalesetpriority\"\n"
                            },
                            "value": {
                              "type": "string",
                              "description": "Set taint value.\n"
                            },
                            "effect": {
                              "type": "string",
                              "description": "Set taint effect.\n",
                              "enum": [
                                "NoSchedule",
                                "PreferNoSchedule",
                                "NoExecute",
                                "PreferNoExecute"
                              ]
                            }
                          }
                        },
                        "example": [
                          {
                            "key": "taintKey",
                            "value": "taintValue",
                            "effect": "NoSchedule"
                          }
                        ]
                      },
                      "tags": {
                        "type": "object",
                        "description": "A maximum of 10 unique key-value pairs for VM tags in the virtual node group.\n"
                      },
                      "vmSizes": {
                        "type": "object",
                        "title": "Ocean AKS VM Sizes",
                        "description": "The Ocean AKS VM Sizes object.\n",
                        "properties": {
                          "filters": {
                            "type": "object",
                            "description": "Filters for the VM sizes that can be launched from the virtual node group.\n",
                            "properties": {
                              "minVCpu": {
                                "description": "Minimum number of vcpus available.\n",
                                "type": "integer",
                                "minimum": 2,
                                "example": 2
                              },
                              "maxVCpu": {
                                "description": "Maximum number of vcpus available.\n",
                                "type": "integer",
                                "minimum": 2,
                                "example": 16
                              },
                              "minMemoryGiB": {
                                "description": "Minimum amount of Memory (GiB).\n",
                                "type": "number",
                                "format": "float",
                                "minimum": 4,
                                "example": 8
                              },
                              "maxMemoryGiB": {
                                "description": "Maximum amount of Memory (GiB).\n",
                                "type": "number",
                                "format": "float",
                                "minimum": 0,
                                "example": 16
                              },
                              "architectures": {
                                "type": "array",
                                "description": "The filtered vm sizes will support at least one of the architectures from this list.\nx86_64 includes both intel64 and amd64.\n",
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "X86_64",
                                    "INTEL64",
                                    "AMD64",
                                    "ARM64"
                                  ]
                                },
                                "example": [
                                  "x86_64"
                                ]
                              },
                              "series": {
                                "type": "array",
                                "description": "Only vm sizes belonging to a series from the list will be available for scaling.\n",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "D v3",
                                  "F",
                                  "E v4"
                                ]
                              },
                              "excludeSeries": {
                                "type": "array",
                                "description": "Vm sizes belonging to a series from the list will not be available for scaling.\n",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "Bs",
                                  "Da v4"
                                ]
                              },
                              "minDisk": {
                                "description": "Minimum number of data disks available.\n",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 64,
                                "example": 1
                              },
                              "minGpu": {
                                "description": "Minimum number of GPUs available.\n",
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "maximum": 8,
                                "example": 1
                              },
                              "maxGpu": {
                                "description": "Maximum number of GPUs available.\n",
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "maximum": 8,
                                "example": 2
                              },
                              "diskPerformance": {
                                "type": "string",
                                "description": "The filtered vm sizes will support at least one of the classes from this list.\n",
                                "enum": [
                                  "Standard",
                                  "Premium"
                                ],
                                "example": "Standard"
                              },
                              "acceleratedNetworking": {
                                "type": "string",
                                "description": "In case acceleratedNetworking is set to Enabled, accelerated networking applies only to the VM that enables it.\n",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "example": "Enabled"
                              },
                              "minNICs": {
                                "description": "Minimum number of network interfaces.\n",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 16,
                                "example": 4
                              },
                              "vmTypes": {
                                "type": "array",
                                "description": "The filtered vm types will belong to one of the vm types from this list.\n",
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "generalPurpose",
                                    "memoryOptimized",
                                    "computeOptimized",
                                    "highPerformanceCompute",
                                    "storageOptimized",
                                    "GPU"
                                  ]
                                },
                                "example": [
                                  "memoryOptimized"
                                ]
                              },
                              "gpuTypes": {
                                "type": "array",
                                "description": "The filtered gpu types will belong to one of the gpu types from this list.\n",
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "nvidia-tesla-v100",
                                    "amd-radeon-instinct-mi25",
                                    "nvidia-a10",
                                    "nvidia-tesla-a100",
                                    "nvidia-tesla-k80",
                                    "nvidia-tesla-m60",
                                    "nvidia-tesla-p100",
                                    "nvidia-tesla-p40",
                                    "nvidia-tesla-t4",
                                    "nvidia-tesla-h100"
                                  ],
                                  "example": [
                                    "nvidia-tesla-t4"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Virtual Node Group Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/np/virtualNodeGroup/vng-12345abc"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1azure~1np~1virtualNodeGroup/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:np:virtualNodeGroup"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Virtual Node Group",
        "description": "Delete a specified virtual node group in an Ocean cluster.\n",
        "operationId": "oceanAKSVirtualNodeGroupDelete",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1azure~1np~1virtualNodeGroup~1%7BvirtualNodeGroupId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1launchSpec~1%7BoceanLaunchSpecId%7D/delete/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean AKS Virtual Node Group Delete Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/np/virtualNodeGroup/vng-12345abc"
                            },
                            "method": {
                              "example": "DELETE"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/azure/np/virtualNodeGroup/import": {
      "post": {
        "summary": "Import Virtual Node Group",
        "description": "The Import Ocean Virtual Node Group (VNG) returns a JSON formatted Ocean Virtual Node Group specification based on a given AKS Node Pool.\nThe returned specification is ready to use in the [Ocean AKS Virtual Node Group Create](https://docs.spot.io/api/#operation/oceanAKSVirtualNodeGroupCreate) API call.\n",
        "operationId": "oceanAKSVirtualNodeGroupImport",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec/get/parameters/1"
          },
          {
            "in": "query",
            "name": "nodePoolName",
            "description": "The name of the Node Pool.\n",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "nodePoolNameTest"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean AKS Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/np/virtualNodeGroup/import"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "virtualNodeGroup": {
                                    "type": "object",
                                    "title": "Ocean AKS Virtual Node Group",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "testVng",
                                        "description": "Enter a name for the virtual node group.\n"
                                      },
                                      "oceanId": {
                                        "type": "string",
                                        "readOnly": true,
                                        "example": "o-134abcd",
                                        "description": "Ocean cluster identifier.\n"
                                      },
                                      "availabilityZones": {
                                        "type": "array",
                                        "description": "An Array holding Availability Zones, this configures the availability zones the Ocean may launch instances in per VNG.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "example": [
                                          "1",
                                          "2",
                                          "3"
                                        ]
                                      },
                                      "nodePoolProperties": {
                                        "$ref": "#/paths/~1ocean~1azure~1np~1virtualNodeGroup/post/requestBody/content/application~1json/schema/allOf/0/properties/virtualNodeGroup/properties/nodePoolProperties"
                                      },
                                      "nodeCountLimits": {
                                        "$ref": "#/paths/~1ocean~1azure~1np~1virtualNodeGroup~1%7BvirtualNodeGroupId%7D/put/requestBody/content/application~1json/schema/properties/virtualNodeGroup/properties/nodeCountLimits"
                                      },
                                      "strategy": {
                                        "$ref": "#/paths/~1ocean~1azure~1np~1virtualNodeGroup~1%7BvirtualNodeGroupId%7D/put/requestBody/content/application~1json/schema/properties/virtualNodeGroup/properties/strategy"
                                      },
                                      "labels": {
                                        "type": "object",
                                        "description": "key-value pairs of labels to add to the virtual node group.\\\nOnly custom user labels are allowed, and not Kubernetes built-in labels or Spot internal labels.\\\nThe following are not allowed:\n* \"kubernetes.azure.com/agentpool\"\n* \"kubernetes.io/arch\"* \"kubernetes.io/os\"\n* \"node.kubernetes.io/instance-type\"\n* \"topology.kubernetes.io/region\"\n* \"topology.kubernetes.io/zone\"\n* \"kubernetes.azure.com/cluster\"\n* \"kubernetes.azure.com/mode\"\n* \"kubernetes.azure.com/role\"\n* \"kubernetes.azure.com/scalesetpriority\"\n* \"kubernetes.io/hostname\"\n* \"kubernetes.azure.com/storageprofile\"\n* \"kubernetes.azure.com/storagetier\"\n* \"kubernetes.azure.com/instance-sku\"\n* \"kubernetes.azure.com/node-image-version\"\n* \"kubernetes.azure.com/subnet\"\n* \"kubernetes.azure.com/vnet\"\n* \"kubernetes.azure.com/ppg\"\n* \"kubernetes.azure.com/encrypted-set\"\n* \"kubernetes.azure.com/accelerator\"\n* \"kubernetes.azure.com/fips_enabled\"\n* \"kubernetes.azure.com/os-sku\"\n",
                                        "example": {
                                          "key": "value"
                                        }
                                      },
                                      "taints": {
                                        "type": "array",
                                        "description": "Add taints to a virtual node group.\n",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "key": {
                                              "type": "string",
                                              "description": "Set taint key.\nThe following are not allowed:\n* \"kubernetes.azure.com/scalesetpriority\"\n"
                                            },
                                            "value": {
                                              "type": "string",
                                              "description": "Set taint value.\n"
                                            },
                                            "effect": {
                                              "type": "string",
                                              "description": "Set taint effect.\n",
                                              "enum": [
                                                "NoSchedule",
                                                "PreferNoSchedule",
                                                "NoExecute",
                                                "PreferNoExecute"
                                              ]
                                            }
                                          }
                                        },
                                        "example": [
                                          {
                                            "key": "taintKey",
                                            "value": "taintValue",
                                            "effect": "NoSchedule"
                                          }
                                        ]
                                      },
                                      "tags": {
                                        "type": "object",
                                        "description": "A maximum of 10 unique key-value pairs for VM tags in the virtual node group.\n"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:np"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/azure/np/virtualNodeGroup/vmSizes": {
      "get": {
        "summary": "Get Virtual Node Group Allowed VM Sizes",
        "description": "Get the allowed VM sizes that can be launched according to the virtual node group properties and selected VM size filters.\n",
        "operationId": "oceanAKSVirtualNodeGroupVmSizes",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "virtualNodeGroupId",
            "example": "vng-12345abc",
            "required": true,
            "description": "Ocean Virtual Node Group identifier.\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Cluster Launch Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/np/virtualNodeGroup/vmSizes"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "allowedVmSizes": {
                                    "type": "array",
                                    "description": "A list of the allowed VM sizes that can be launched.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "example": [
                                      "standard_d2",
                                      "standard_d2_v2",
                                      "standard_d2_v3",
                                      "standard_d2_v4",
                                      "standard_d2_v5"
                                    ]
                                  },
                                  "numOfAllowedVmSizes": {
                                    "type": "number",
                                    "description": "The number of allowed VM sizes that can be launched.\n",
                                    "example": 5
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:k8s:np:virtualNodeGroup:allowedVmSizes"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/azure/np/cluster/{oceanClusterId}/roll": {
      "summary": "Ocean for AKS",
      "post": {
        "summary": "Initiate Roll",
        "description": "Roll an entire Ocean cluster or roll subsets of the cluster by specifying vngIds, nodePoolNames or nodeNames. Performing this request will start the roll immediately and run it in defined batches. Note that the first response for a successful request will indicate the start of a roll. In order to check the status of a roll, you can use the GET Roll API.\n",
        "operationId": "oceanAksRollInit",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "title": "Roll",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "batchSizePercentage": {
                            "type": "integer",
                            "description": "Value as a percent to set the size of a batch in a roll. Valid values are 0-100. In case of null as value, the default value in the backend will be 20%.\n",
                            "example": 25
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "comment": {
                            "type": "string",
                            "description": "Add a comment description for the roll. The comment is limited to 256 chars and optional.\n",
                            "example": "This is why I deployed my cluster."
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "respectPdb": {
                            "type": "boolean",
                            "description": "During the roll, if the parameter is set to true we honor PDB during the nodes replacement.\n",
                            "example": false,
                            "default": true
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "respectRestrictScaleDown": {
                            "type": "boolean",
                            "description": "During the roll, if the parameter is set to true we honor Restrict Scale Down label during the nodes replacement.\n",
                            "example": true,
                            "default": false
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "batchMinHealthyPercentage": {
                            "type": "integer",
                            "description": "Indicates the threshold of minimum healthy nodes in single batch. If the amount of healthy nodes in single batch is under the threshold, the roll will fail. If exists, the parameter value will be in range of 1-100. In case of null as value, the default value in the backend will be 50%. Value of param should represent the number in percentage (%) of the batch.\n",
                            "example": 100,
                            "default": 50
                          }
                        }
                      }
                    ]
                  },
                  {
                    "type": "object",
                    "title": "Roll with node names",
                    "allOf": [
                      {
                        "$ref": "#/paths/~1ocean~1azure~1np~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/allOf/0"
                      },
                      {
                        "$ref": "#/paths/~1ocean~1azure~1np~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/allOf/1"
                      },
                      {
                        "$ref": "#/paths/~1ocean~1azure~1np~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/allOf/2"
                      },
                      {
                        "$ref": "#/paths/~1ocean~1azure~1np~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/allOf/3"
                      },
                      {
                        "$ref": "#/paths/~1ocean~1azure~1np~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/allOf/4"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "nodeNames": {
                            "type": "array",
                            "description": "List of node names to be rolled. Each identifier is a string. nodeNames can be null, and cannot be used together with nodePoolNames and vngIds.\n",
                            "items": {
                              "type": "string",
                              "example": [
                                "aks-omnpbc2ebdb1-15563275-vmss00000g",
                                "aks-omnpe9429a2f-26725402-vmss000015"
                              ]
                            }
                          }
                        }
                      }
                    ]
                  },
                  {
                    "type": "object",
                    "title": "Roll with node pool names",
                    "allOf": [
                      {
                        "$ref": "#/paths/~1ocean~1azure~1np~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/allOf/0"
                      },
                      {
                        "$ref": "#/paths/~1ocean~1azure~1np~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/allOf/1"
                      },
                      {
                        "$ref": "#/paths/~1ocean~1azure~1np~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/allOf/2"
                      },
                      {
                        "$ref": "#/paths/~1ocean~1azure~1np~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/allOf/3"
                      },
                      {
                        "$ref": "#/paths/~1ocean~1azure~1np~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/allOf/4"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "nodePoolNames": {
                            "type": "array",
                            "description": "List of node pools to be rolled. Each node pool name is a string. nodePoolNames can be null, and cannot be used together with nodeNames and vngIds.\n",
                            "items": {
                              "type": "string",
                              "example": [
                                "omnp35f6cccb",
                                "omnp55bd559b"
                              ]
                            }
                          }
                        }
                      }
                    ]
                  },
                  {
                    "type": "object",
                    "title": "Roll with virtual node group ids",
                    "allOf": [
                      {
                        "$ref": "#/paths/~1ocean~1azure~1np~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/allOf/0"
                      },
                      {
                        "$ref": "#/paths/~1ocean~1azure~1np~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/allOf/1"
                      },
                      {
                        "$ref": "#/paths/~1ocean~1azure~1np~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/allOf/2"
                      },
                      {
                        "$ref": "#/paths/~1ocean~1azure~1np~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/allOf/3"
                      },
                      {
                        "$ref": "#/paths/~1ocean~1azure~1np~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/allOf/4"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "vngIds": {
                            "type": "array",
                            "description": "List of virtual node group identifiers to be rolled. Each identifier is a string. vngIds can be null, and cannot be used together with nodeNames and nodePoolNames.\n",
                            "items": {
                              "type": "string",
                              "example": [
                                "vng-69dc457b",
                                "vng-175947a4"
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean AKS Create Cluster Roll Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/np/cluster/o-12345abc/roll"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "allOf": [
                                  {
                                    "$ref": "#/paths/~1ocean~1azure~1np~1cluster~1%7BoceanClusterId%7D~1roll/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "status": {
                                        "example": "IN_PROGRESS"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "progress": {
                                        "example": {
                                          "detailedStatus": {
                                            "rollNodes": [
                                              {
                                                "nodeName": "aks-omnpbc2ebdb1-15563275-vmss00000q",
                                                "status": "IN_PROGRESS"
                                              },
                                              {
                                                "nodeName": "aks-omnpbc2ebdb1-15563275-vmss000008",
                                                "status": "TO_BE_REPLACED"
                                              },
                                              {
                                                "nodeName": "aks-omnpbc2ebdb1-15563275-vmss00000r",
                                                "status": "TO_BE_REPLACED"
                                              },
                                              {
                                                "nodeName": "aks-omnpe9429a2f-26725402-vmss00000z",
                                                "status": "IN_PROGRESS"
                                              },
                                              {
                                                "nodeName": "aks-omnp0c85c2c2-26833420-vmss000001",
                                                "status": "IN_PROGRESS"
                                              },
                                              {
                                                "nodeName": "aks-omnp0c85c2c2-26833420-vmss000003",
                                                "status": "TO_BE_REPLACED"
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:np:roll"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Rolls",
        "description": "Get status for all rolls of an Ocean cluster.\n",
        "operationId": "oceanAksRollList",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean AKS Get Cluster Roll Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/np/cluster/o-12345abc/roll"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The identifier of the cluster roll.\n",
                                    "example": "scr-12345abc"
                                  },
                                  "oceanId": {
                                    "type": "string",
                                    "description": "The identifier of the ocean cluster being rolled.\n",
                                    "example": "o-12e31234"
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The type of the trigger for the cluster roll\n",
                                    "enum": [
                                      "scheduled",
                                      "manual"
                                    ],
                                    "example": "manual"
                                  },
                                  "scope": {
                                    "type": "string",
                                    "enum": [
                                      "Cluster",
                                      "Vng",
                                      "Node Pool",
                                      "Node"
                                    ],
                                    "example": "Cluster"
                                  },
                                  "status": {
                                    "type": "string",
                                    "description": "The status of the roll.\n",
                                    "enum": [
                                      "IN_PROGRESS",
                                      "COMPLETED",
                                      "PARTLY_COMPLETED",
                                      "FAILED",
                                      "STOPPED"
                                    ],
                                    "example": "COMPLETED"
                                  },
                                  "currentBatch": {
                                    "type": "integer",
                                    "description": "The current batch being handled by the roll.\n",
                                    "example": 1
                                  },
                                  "numOfBatches": {
                                    "type": "integer",
                                    "description": "The total number of batches in the roll.\n",
                                    "example": 2
                                  },
                                  "comment": {
                                    "type": "string",
                                    "example": "This is why I deployed my cluster."
                                  },
                                  "progress": {
                                    "type": "object",
                                    "properties": {
                                      "progressPercentage": {
                                        "type": "integer",
                                        "example": 0
                                      },
                                      "detailedStatus": {
                                        "type": "object",
                                        "description": "An object containing detailed information about the progress of the roll.\n",
                                        "properties": {
                                          "rollNodes": {
                                            "type": "array",
                                            "description": "An array of objects containing detailed information about each node handled by the roll.\n",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "nodeName": {
                                                  "type": "string"
                                                },
                                                "status": {
                                                  "description": "The status of the node according to the roll.\n",
                                                  "type": "string",
                                                  "enum": [
                                                    "REPLACED",
                                                    "TO_BE_REPLACED",
                                                    "COULD_NOT_BE_REPLACED",
                                                    "NOT_REPLACED_DUE_TO_PDB",
                                                    "DID_NOT_REPLACE",
                                                    "IN_PROGRESS"
                                                  ]
                                                }
                                              }
                                            },
                                            "example": [
                                              {
                                                "nodeName": "aks-omnpbc2ebdb1-15563275-vmss00000q",
                                                "status": "REPLACED"
                                              },
                                              {
                                                "nodeName": "aks-omnpbc2ebdb1-15563275-vmss000008",
                                                "status": "TO_BE_REPLACED"
                                              },
                                              {
                                                "nodeName": "aks-omnpbc2ebdb1-15563275-vmss00000r",
                                                "status": "COULD_NOT_BE_REPLACED"
                                              },
                                              {
                                                "nodeName": "aks-omnpe9429a2f-26725402-vmss00000z",
                                                "status": "NOT_REPLACED_DUE_TO_PDB"
                                              },
                                              {
                                                "nodeName": "aks-omnp0c85c2c2-26833420-vmss000001",
                                                "status": "IN_PROGRESS"
                                              },
                                              {
                                                "nodeName": "aks-omnp0c85c2c2-26833420-vmss000003",
                                                "status": "DID_NOT_REPLACE"
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "respectPdb": {
                                    "type": "boolean",
                                    "example": true
                                  },
                                  "respectRestrictScaleDown": {
                                    "type": "boolean",
                                    "example": false
                                  },
                                  "batchMinHealthyPercentage": {
                                    "type": "integer",
                                    "example": 70
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "description": "The creation timestamp of the roll.\n",
                                    "example": "2019-03-24T15:46:09.000Z"
                                  },
                                  "updatedAt": {
                                    "type": "string",
                                    "description": "The latest update timestamp of the roll.\n",
                                    "example": "2019-03-24T15:46:09.000Z"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:np:roll"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/azure/np/cluster/{oceanClusterId}/roll/{rollId}": {
      "summary": "Ocean for AKS",
      "get": {
        "summary": "Get Roll",
        "description": "Get status for a roll of an Ocean cluster.\n",
        "operationId": "oceanAksGetSingleRoll",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "in": "path",
            "name": "rollId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "acr-12345abc",
            "description": "Ocean cluster roll identifier.\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean AKS Get Roll Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/np/cluster/o-12345abc/roll/scr-12345abc"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1azure~1np~1cluster~1%7BoceanClusterId%7D~1roll/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:np:roll"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/azure/np/cluster/{oceanClusterId}/roll/{rollId}/stop": {
      "summary": "Ocean for AKS",
      "put": {
        "summary": "Stop Roll",
        "description": "Stop a roll of an Ocean cluster.\n\n*Performing the request will stop the next batch in a roll.*\n",
        "operationId": "oceanAksRollStop",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1azure~1np~1cluster~1%7BoceanClusterId%7D~1roll~1%7BrollId%7D/get/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean AKS STOP Cluster Roll Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/np/cluster/o-12345abc/roll/scr-12345abc/stop"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "allOf": [
                                  {
                                    "$ref": "#/paths/~1ocean~1azure~1np~1cluster~1%7BoceanClusterId%7D~1roll/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "status": {
                                        "example": "STOPPED"
                                      },
                                      "progress": {
                                        "example": {
                                          "detailedStatus": {
                                            "progressPercentage": 50,
                                            "rollNodes": [
                                              {
                                                "nodeName": "aks-omnpbc2ebdb1-15563275-vmss00000q",
                                                "status": "REPLACED"
                                              },
                                              {
                                                "nodeName": "aks-omnpbc2ebdb1-15563275-vmss000008",
                                                "status": "DID_NOT_REPLACE"
                                              },
                                              {
                                                "nodeName": "aks-omnpbc2ebdb1-15563275-vmss00000r",
                                                "status": "DID_NOT_REPLACE"
                                              },
                                              {
                                                "nodeName": "aks-omnpe9429a2f-26725402-vmss00000z",
                                                "status": "REPLACED"
                                              },
                                              {
                                                "nodeName": "aks-omnp0c85c2c2-26833420-vmss000001",
                                                "status": "REPLACED"
                                              },
                                              {
                                                "nodeName": "aks-omnp0c85c2c2-26833420-vmss000003",
                                                "status": "DID_NOT_REPLACE"
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:np:roll"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/azure/np/cluster/{oceanClusterId}/migration/discovery": {
      "get": {
        "summary": "Get Migration Discovery",
        "description": "Get information about nodes which can be migrated into Ocean.\n",
        "operationId": "oceanAksGetMigrationDiscovery",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "in": "query",
            "name": "shouldFetchPods",
            "example": "true",
            "description": "Should fetch data about running pods for each node.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Migration Discovery Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "ocean/azure/np/cluster/o-abcd1234/migration/discovery"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "title": "Workload migration discovery details",
                                "description": "Information about available nodes which can be migrated to the Ocean cluster",
                                "type": "object",
                                "properties": {
                                  "nodeName": {
                                    "type": "string",
                                    "description": "The node name.",
                                    "example": "aks-mynodepool-18735776-vmss000001"
                                  },
                                  "nodePoolName": {
                                    "type": "string",
                                    "description": "The NodePool Name.",
                                    "example": "mynodepool"
                                  },
                                  "runningPods": {
                                    "type": "integer",
                                    "description": "The number of running pods on the node (appears if shouldFetchPods was true).",
                                    "example": "6"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:k8s:np:nodePoolUnmanaged"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/azure/np/cluster/{oceanClusterId}/migration": {
      "summary": "Ocean for AKS",
      "post": {
        "summary": "Create Migration",
        "description": "Migrate to ocean workloads that run on unmanaged nodes by specifying nodePoolNames or nodeNames. Performing this request will start the migration immediately and run it in defined batches. Note that the first response for a successful request will indicate the start of a migration. In order to check the status of a migration, you can use the GET migration API.\n",
        "operationId": "oceanAksCreateMigration",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "title": "Migration with node names",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "batchSizePercentage": {
                            "type": "integer",
                            "description": "Value as a percent to set the size of a batch in a migration. Valid values are 0-100. In case of null as value, the default value in the backend will be 20%.\n",
                            "minimum": 1,
                            "maximum": 100,
                            "example": 25
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "comment": {
                            "type": "string",
                            "description": "Add a comment description for the migration. The comment is limited to 256 chars and optional.\n",
                            "example": "This is why I deployed my cluster."
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "respectPdb": {
                            "type": "boolean",
                            "description": "During the migration, if the parameter is set to true we honor PDB during the nodes replacement.\n",
                            "example": false,
                            "default": true
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "respectRestrictScaleDown": {
                            "type": "boolean",
                            "description": "During the migration, if the parameter is set to true we honor Restrict Scale Down label during the nodes replacement.\n",
                            "example": true,
                            "default": false
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "shouldTerminateNodes": {
                            "type": "boolean",
                            "description": "If the parameter is set to true we will terminate the node after the migration has finished successfully. If the parameter is set to false we will leave the nodes.    example: true\n",
                            "default": true
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "shouldEvictStandalonePods": {
                            "type": "boolean",
                            "description": "If the parameter is set to true we will evict all standalone pods during the migration.\n",
                            "example": true,
                            "default": true
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "batchMinHealthyPercentage": {
                            "type": "integer",
                            "description": "Indicates the threshold of minimum healthy nodes in single batch. If the amount of healthy nodes in single batch is under the threshold, the migration will fail. If exists, the parameter value will be in range of 1-100. In case of null as value, the default value in the backend will be 50%. Value of param should represent the number in percentage (%) of the batch.\n",
                            "minimum": 1,
                            "maximum": 100,
                            "example": 100,
                            "default": 50
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "nodeNames": {
                            "type": "array",
                            "description": "List of node names to be migrated. Each identifier is a string. nodeNames can be null, and cannot be used together with nodePoolNames.\n",
                            "items": {
                              "type": "string",
                              "example": [
                                "aks-omnpbc2ebdb1-15563275-vmss00000g",
                                "aks-omnpe9429a2f-26725402-vmss000015"
                              ]
                            }
                          }
                        }
                      }
                    ]
                  },
                  {
                    "type": "object",
                    "title": "Migration with node pool names",
                    "allOf": [
                      {
                        "$ref": "#/paths/~1ocean~1azure~1np~1cluster~1%7BoceanClusterId%7D~1migration/post/requestBody/content/application~1json/schema/oneOf/0/allOf/0"
                      },
                      {
                        "$ref": "#/paths/~1ocean~1azure~1np~1cluster~1%7BoceanClusterId%7D~1migration/post/requestBody/content/application~1json/schema/oneOf/0/allOf/1"
                      },
                      {
                        "$ref": "#/paths/~1ocean~1azure~1np~1cluster~1%7BoceanClusterId%7D~1migration/post/requestBody/content/application~1json/schema/oneOf/0/allOf/2"
                      },
                      {
                        "$ref": "#/paths/~1ocean~1azure~1np~1cluster~1%7BoceanClusterId%7D~1migration/post/requestBody/content/application~1json/schema/oneOf/0/allOf/3"
                      },
                      {
                        "$ref": "#/paths/~1ocean~1azure~1np~1cluster~1%7BoceanClusterId%7D~1migration/post/requestBody/content/application~1json/schema/oneOf/0/allOf/4"
                      },
                      {
                        "$ref": "#/paths/~1ocean~1azure~1np~1cluster~1%7BoceanClusterId%7D~1migration/post/requestBody/content/application~1json/schema/oneOf/0/allOf/5"
                      },
                      {
                        "$ref": "#/paths/~1ocean~1azure~1np~1cluster~1%7BoceanClusterId%7D~1migration/post/requestBody/content/application~1json/schema/oneOf/0/allOf/6"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "nodePoolNames": {
                            "type": "array",
                            "description": "List of node pools to be migrated. Each node pool name is a string. nodePoolNames can be null, and cannot be used together with nodeNames.\n",
                            "items": {
                              "type": "string",
                              "example": [
                                "omnp35f6cccb",
                                "omnp55bd559b"
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean AKS Create Migration Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/np/cluster/o-12345abc/migration"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "allOf": [
                                  {
                                    "$ref": "#/paths/~1ocean~1azure~1np~1cluster~1%7BoceanClusterId%7D~1migration/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                                  }
                                ]
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:np:migration"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Migrations",
        "description": "Get status for all migrations of an Ocean cluster.\n",
        "operationId": "oceanAksMigrationsList",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean AKS Get Migration Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/np/cluster/o-12345abc/migration"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The identifier of the migration.\n",
                                    "example": "scr-12345abc"
                                  },
                                  "oceanId": {
                                    "type": "string",
                                    "description": "The identifier of the ocean cluster.\n",
                                    "example": "o-12e31234"
                                  },
                                  "status": {
                                    "type": "string",
                                    "description": "The status of the migration.\n",
                                    "enum": [
                                      "IN_PROGRESS",
                                      "COMPLETED",
                                      "PARTLY_COMPLETED",
                                      "FAILED",
                                      "STOPPED"
                                    ],
                                    "example": "COMPLETED"
                                  },
                                  "currentBatch": {
                                    "type": "integer",
                                    "description": "The current batch being handled by the migration.\n",
                                    "example": 1
                                  },
                                  "numOfBatches": {
                                    "type": "integer",
                                    "description": "The total number of batches in the migration.\n",
                                    "example": 2
                                  },
                                  "comment": {
                                    "type": "string",
                                    "example": "migration comment."
                                  },
                                  "migrationProgress": {
                                    "type": "object",
                                    "properties": {
                                      "progressPercentage": {
                                        "type": "number",
                                        "example": 0
                                      },
                                      "detailedStatus": {
                                        "type": "object",
                                        "description": "An object containing detailed information about the progress of the migration.\n",
                                        "properties": {
                                          "oldNodes": {
                                            "type": "array",
                                            "description": "An array of objects containing detailed information about old nodes that are being replaced.\n",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "nodeName": {
                                                  "type": "string"
                                                },
                                                "nodePoolName": {
                                                  "type": "string"
                                                },
                                                "vngId": {
                                                  "type": "string"
                                                },
                                                "vngName": {
                                                  "type": "string"
                                                },
                                                "status": {
                                                  "description": "The status of the node according to the migration.\n",
                                                  "type": "string",
                                                  "enum": [
                                                    "REPLACED",
                                                    "TO_BE_REPLACED",
                                                    "COULD_NOT_BE_REPLACED",
                                                    "NOT_REPLACED_DUE_TO_PDB",
                                                    "DID_NOT_REPLACE",
                                                    "IN_PROGRESS"
                                                  ]
                                                },
                                                "podDetails": {
                                                  "type": "array",
                                                  "description": "An array of objects of all pods currently running on the node that is being replaced.\n",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "podName": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "runningPods": {
                                                  "type": "integer"
                                                }
                                              }
                                            },
                                            "example": [
                                              {
                                                "nodeName": "aks-omnpbc2ebdb1-15563275-vmss00000q",
                                                "nodePoolName": "omnpbc2ebdb1",
                                                "status": "REPLACED",
                                                "podDetails": [
                                                  {
                                                    "podName": "pod-example-name1"
                                                  }
                                                ],
                                                "runningPods": 1
                                              },
                                              {
                                                "nodeName": "aks-omnpbc2ebdb1-15563275-vmss000008",
                                                "nodePoolName": "omnpbc2ebdb1",
                                                "status": "TO_BE_REPLACED",
                                                "podDetails": [
                                                  {
                                                    "podName": "pod-example-name2"
                                                  },
                                                  {
                                                    "podName": "pod-example-name3"
                                                  }
                                                ],
                                                "runningPods": 2
                                              },
                                              {
                                                "nodeName": "aks-omnpbc2ebdb1-15563275-vmss00000r",
                                                "nodePoolName": "omnpbc2ebdb1",
                                                "status": "COULD_NOT_BE_REPLACED",
                                                "podDetails": [
                                                  {
                                                    "podName": "pod-example-name4"
                                                  },
                                                  {
                                                    "podName": "pod-example-name5"
                                                  }
                                                ],
                                                "runningPods": 2
                                              },
                                              {
                                                "nodeName": "aks-omnpe9429a2f-26725402-vmss00000z",
                                                "nodePoolName": "omnpe9429a2f",
                                                "status": "NOT_REPLACED_DUE_TO_PDB",
                                                "podDetails": [
                                                  {
                                                    "podName": "pod-example-name6"
                                                  }
                                                ],
                                                "runningPods": 1
                                              },
                                              {
                                                "nodeName": "aks-omnp0c85c2c2-26833420-vmss000001",
                                                "nodePoolName": "omnp0c85c2c2",
                                                "status": "IN_PROGRESS",
                                                "podDetails": [
                                                  {
                                                    "podName": "pod-example-name7"
                                                  }
                                                ],
                                                "runningPods": 1
                                              },
                                              {
                                                "nodeName": "aks-omnp0c85c2c2-26833420-vmss000003",
                                                "nodePoolName": "omnp0c85c2c2",
                                                "status": "DID_NOT_REPLACE",
                                                "podDetails": [
                                                  {
                                                    "podName": "pod-example-name8"
                                                  }
                                                ],
                                                "runningPods": 1
                                              }
                                            ]
                                          },
                                          "scaleNodePools": {
                                            "type": "array",
                                            "description": "An array of objects containing detailed information about all node pools that were scaled during the migration process.\n",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "nodePoolName": {
                                                  "type": "string"
                                                },
                                                "newNodes": {
                                                  "type": "integer"
                                                },
                                                "vngId": {
                                                  "type": "string"
                                                },
                                                "vngName": {
                                                  "type": "string"
                                                },
                                                "migrationStatus": {
                                                  "description": "The status of the node pool's scaling operation according to the migration.\n",
                                                  "type": "string",
                                                  "enum": [
                                                    "SCALING",
                                                    "COMPLETED",
                                                    "FAILED",
                                                    "PARTIAL_SUCCESS"
                                                  ]
                                                }
                                              }
                                            },
                                            "example": [
                                              {
                                                "nodePoolName": "omnp12340",
                                                "newNodes": 2,
                                                "vngId": "vng-1234",
                                                "vngName": "vng2",
                                                "status": "Scaling"
                                              },
                                              {
                                                "nodePoolName": "omnp12345",
                                                "newNodes": 10,
                                                "vngId": "vng-1234",
                                                "vngName": "vng2",
                                                "status": "Completed"
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "respectPdb": {
                                    "type": "boolean",
                                    "example": true
                                  },
                                  "respectRestrictScaleDown": {
                                    "type": "boolean",
                                    "example": false
                                  },
                                  "shouldTerminateNodes": {
                                    "type": "boolean",
                                    "example": true
                                  },
                                  "shouldEvictStandalonePods": {
                                    "type": "boolean",
                                    "example": false
                                  },
                                  "batchMinHealthyPercentage": {
                                    "type": "integer",
                                    "example": 70
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "description": "The creation timestamp of the migration.\n",
                                    "example": "2019-03-24T15:46:09.000Z"
                                  },
                                  "erredAt": {
                                    "type": "string",
                                    "description": "The timestamp of the migration error.\n",
                                    "example": "2019-03-24T15:46:09.000Z"
                                  },
                                  "stoppedAt": {
                                    "type": "string",
                                    "description": "The stopping timestamp of the migration.\n",
                                    "example": "2019-03-24T15:46:09.000Z"
                                  },
                                  "completedAt": {
                                    "type": "string",
                                    "description": "The completion timestamp of the migration.\n",
                                    "example": "2019-03-24T15:46:09.000Z"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:ocean:workloadMigration"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/azure/np/cluster/{oceanClusterId}/migration/{migrationId}": {
      "summary": "Ocean for AKS",
      "get": {
        "summary": "Get Migration",
        "description": "Get status for a migration of an Ocean cluster.\n",
        "operationId": "oceanAksGetMigration",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "in": "path",
            "name": "migrationId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "scr-12345abc",
            "description": "Ocean cluster workload migration identifier.\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean AKS Get Migration Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/np/cluster/o-12345abc/migration/scr-12345abc"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1azure~1np~1cluster~1%7BoceanClusterId%7D~1migration/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:ocean:workloadMigration"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/azure/np/cluster/{oceanClusterId}/migration/{migrationId}/stop": {
      "summary": "Ocean for AKS",
      "put": {
        "summary": "Stop Migration",
        "description": "Stop a migration of an Ocean cluster.\n\n*Performing the request will stop the next batch in a migration.*\n",
        "operationId": "oceanAksMigrationStop",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1azure~1np~1cluster~1%7BoceanClusterId%7D~1migration~1%7BmigrationId%7D/get/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean AKS Stop Migration Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/np/cluster/o-12345abc/migration/scr-12345abc"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "allOf": [
                                  {
                                    "$ref": "#/paths/~1ocean~1azure~1np~1cluster~1%7BoceanClusterId%7D~1migration/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "status": {
                                        "example": "STOPPED"
                                      },
                                      "progress": {
                                        "example": {
                                          "detailedStatus": {
                                            "progressPercentage": 50,
                                            "oldNodes": [
                                              {
                                                "nodeName": "aks-omnpbc2ebdb1-15563275-vmss00000q",
                                                "status": "REPLACED"
                                              },
                                              {
                                                "nodeName": "aks-omnpbc2ebdb1-15563275-vmss000008",
                                                "status": "DID_NOT_REPLACE"
                                              },
                                              {
                                                "nodeName": "aks-omnpbc2ebdb1-15563275-vmss00000r",
                                                "status": "DID_NOT_REPLACE"
                                              },
                                              {
                                                "nodeName": "aks-omnpe9429a2f-26725402-vmss00000z",
                                                "status": "REPLACED"
                                              },
                                              {
                                                "nodeName": "aks-omnp0c85c2c2-26833420-vmss000001",
                                                "status": "REPLACED"
                                              },
                                              {
                                                "nodeName": "aks-omnp0c85c2c2-26833420-vmss000003",
                                                "status": "DID_NOT_REPLACE"
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:ocean:workloadMigration"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/azure/np/cluster/{oceanClusterId}/rightSizing/suggestion": {
      "post": {
        "summary": "Fetch Right Sizing Recommendations",
        "description": "Get right-sizing recommendations for an Ocean cluster and filter them according to namespace or label.\n",
        "operationId": "oceanAKSFilterRightSizingWithFilter",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D~1rightSizing~1suggestion/post/requestBody/content/application~1json/schema/allOf/0"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean RightSizing Recommendation Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/np/cluster/o-abcd1234/rightSizing/suggestion"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "resourceName": {
                                    "type": "string"
                                  },
                                  "resourceType": {
                                    "type": "string"
                                  },
                                  "namespace": {
                                    "type": "string"
                                  },
                                  "suggestedCPU": {
                                    "type": "integer"
                                  },
                                  "suggestedMemory": {
                                    "type": "integer"
                                  },
                                  "requestedCPU": {
                                    "type": "integer"
                                  },
                                  "requestedMemory": {
                                    "type": "integer"
                                  },
                                  "containers": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "requestedCPU": {
                                          "type": "integer"
                                        },
                                        "suggestedCPU": {
                                          "type": "integer"
                                        },
                                        "requestedMemory": {
                                          "type": "integer"
                                        },
                                        "suggestedMemory": {
                                          "type": "integer"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "example": [
                                {
                                  "resourceName": "redis-controller",
                                  "resourceType": "deployment",
                                  "namespace": "kube-system",
                                  "suggestedCPU": 4,
                                  "suggestedMemory": 19,
                                  "requestedCPU": 50,
                                  "requestedMemory": 50,
                                  "containers": [
                                    {
                                      "name": "dnsmasq",
                                      "requestedCPU": 10,
                                      "suggestedCPU": 2,
                                      "requestedMemory": 40,
                                      "suggestedMemory": 15
                                    },
                                    {
                                      "name": "sidecar",
                                      "requestedCPU": 40,
                                      "suggestedCPU": 2,
                                      "requestedMemory": 10,
                                      "suggestedMemory": 4
                                    }
                                  ]
                                },
                                {
                                  "resourceName": "test-redis",
                                  "resourceType": "deployment",
                                  "namespace": "sparkSpace",
                                  "suggestedCPU": 2,
                                  "suggestedMemory": 20,
                                  "requestedCPU": 50,
                                  "requestedMemory": 30,
                                  "containers": [
                                    {
                                      "name": "dns-controller",
                                      "requestedCPU": 20,
                                      "suggestedCPU": 1,
                                      "requestedMemory": 20,
                                      "suggestedMemory": 15
                                    },
                                    {
                                      "name": "kubedns",
                                      "requestedCPU": 30,
                                      "suggestedCPU": 1,
                                      "requestedMemory": 10,
                                      "suggestedMemory": 5
                                    }
                                  ]
                                }
                              ]
                            },
                            "count": {
                              "example": 2
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:k8s:cluster:rightSizing:suggestion"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/azure/np/cluster/{oceanClusterId}/log": {
      "summary": "Ocean for AKS",
      "get": {
        "summary": "Fetch Elastilogs",
        "description": "Fetch the log of an Ocean cluster.\n",
        "operationId": "oceanAKSClusterFetchLog",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1mcs~1ecs~1cluster~1%7BclusterName%7D~1costs/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1mcs~1ecs~1cluster~1%7BclusterName%7D~1costs/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1log/get/parameters/4"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1log/get/parameters/5"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1log/get/parameters/6"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Get Log Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request": {
                      "type": "object",
                      "description": "Original request properties\n",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "3213f42e-455e-4801-a185-cd3eb65fac5f",
                          "description": "Unique identifier associated with this request\n"
                        },
                        "url": {
                          "type": "string",
                          "example": "/ocean/azure/np/cluster/o-e0a2bd7c/log?fromDate=2020-10-06&toDate=2020-10-08&severity=ALL&limit=500",
                          "description": "The URL that was used for the request\n"
                        },
                        "method": {
                          "type": "string",
                          "example": "GET",
                          "description": "The HTTP **METHOD** used for the request\n"
                        },
                        "timestamp": {
                          "type": "string",
                          "example": "2020-10-05T16:20:38.579Z",
                          "description": "When the request was received by Spot\n"
                        }
                      }
                    },
                    "response": {
                      "type": "object",
                      "description": "Response payload that includes status, type, and any relevant data.\n",
                      "properties": {
                        "status": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "integer",
                              "example": "200",
                              "description": "HTTP status code assigned to this response.\n"
                            },
                            "message": {
                              "type": "string",
                              "example": "OK",
                              "description": "HTTP status message for the respective status code.\n"
                            }
                          }
                        },
                        "kind": {
                          "type": "string",
                          "example": "spotinst:ocean:azure:k8s:cluster:logs"
                        },
                        "items": {
                          "type": "array",
                          "description": "Array of data objects\n",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              },
                              "severity": {
                                "type": "string"
                              },
                              "createdAt": {
                                "type": "string"
                              }
                            }
                          },
                          "example": [
                            {
                              "message": "Ocean o-e0a2bd7c successfully created.",
                              "severity": "INFO",
                              "createdAt": "2020-10-07T09:51:12.000Z"
                            }
                          ]
                        },
                        "count": {
                          "type": "integer",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/azure/k8s/cluster/{oceanClusterId}/aggregatedCosts": {
      "post": {
        "summary": "Get Cluster Aggregated Detailed Costs",
        "description": "Provides Kubernetes cluster resource usage and costs over a time interval which can be grouped and/or filtered by label/annotaion,\\\nfor example - application name (webapp, backend), environment (production, staging), version etc.\\\nThe response will contain a breakdown of the cluster resource costs($) in terms of compute (CPU, memory) and storage.\nThe response will group the cluster usage costs based on preselected default of application namespace or user selected label or annotation.\\\nWithin the group, resource costs are broken down per resource kind (Deployment, DaemonSet etc.).\n\nTime Rounding Down: The CostAnalysis API applies rounding down to the hours provided during the call.\\\nFor example, the value 1707004799099 (In GMT) representing Saturday, February 3, 2024, 23:59:59.099 is rounded down to Saturday, February 3, 2024, 23:00:00.000, resulting in the omission of one hour of cost.\n",
        "operationId": "oceanAksK8sClusterAggregatedDetailedCosts",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "endTime",
                      "startTime"
                    ],
                    "properties": {
                      "startTime": {
                        "type": "string",
                        "example": "2023-07-20T11:35:01.745Z",
                        "description": "Beginning date value using either the date format \"yyyy-MM-dd'T'HH:mm:ss'Z'\" or ms \"1494751821472\".\n"
                      },
                      "endTime": {
                        "type": "string",
                        "example": "2023-07-22T11:30:01.745Z",
                        "description": "End date value using either the date format \"yyyy-MM-dd'T'HH:mm:ss'Z'\" or ms \"1494751821472\".\n"
                      },
                      "groupBy": {
                        "type": "string",
                        "description": "The parameter we want to group the costs by.\n",
                        "default": "namespace",
                        "example": "namespace.label.env",
                        "enum": [
                          "namespace",
                          "namespace.label.${labelKey}",
                          "resource.label.${labelKey}",
                          "resource.annotation.${annotationKey}",
                          "namespace.annotation.${annotationKey}"
                        ]
                      },
                      "filter": {
                        "type": "object",
                        "description": "Describe how to filter the costs. Optional field.",
                        "required": [
                          "scope",
                          "conditions"
                        ],
                        "properties": {
                          "scope": {
                            "type": "string",
                            "enum": [
                              "namespace",
                              "resource"
                            ]
                          },
                          "conditions": {
                            "type": "object",
                            "required": [
                              "anyMatch"
                            ],
                            "properties": {
                              "anyMatch": {
                                "type": "array",
                                "description": "Array of conditions set that OR operator is applied between them.\n",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "allMatch"
                                  ],
                                  "properties": {
                                    "allMatch": {
                                      "type": "array",
                                      "description": "Array of conditions that AND operator is applied between them.\\\nFor example, (label env equals prod) AND (label app exists)\n",
                                      "items": {
                                        "type": "object",
                                        "description": "The basic expression of a condition",
                                        "required": [
                                          "type",
                                          "key",
                                          "operator"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "label",
                                              "annotation"
                                            ]
                                          },
                                          "key": {
                                            "type": "string",
                                            "description": "May be any string, but shouldn't be empty.\n",
                                            "example": "env"
                                          },
                                          "operator": {
                                            "type": "string",
                                            "enum": [
                                              "equals",
                                              "notEquals",
                                              "exists",
                                              "notExists"
                                            ]
                                          },
                                          "value": {
                                            "type": "string",
                                            "description": "Required whenever the operator is \"equals\" or \"notEquals\".\n",
                                            "example": "prod"
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "example": [
                                  {
                                    "allMatch": [
                                      {
                                        "type": "label",
                                        "key": "env",
                                        "operator": "equals",
                                        "value": "prod"
                                      },
                                      {
                                        "type": "label",
                                        "key": "app",
                                        "operator": "exists"
                                      }
                                    ]
                                  },
                                  {
                                    "allMatch": [
                                      {
                                        "type": "annotation",
                                        "key": "meta.data",
                                        "operator": "exists"
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Cluster Aggregated Detailed Costs Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/k8s/cluster/o-abcd1234/aggregatedCosts"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "result": {
                                    "type": "object",
                                    "properties": {
                                      "totalForDuration": {
                                        "type": "object",
                                        "properties": {
                                          "startTime": {
                                            "type": "string",
                                            "example": "2023-07-20T11:35:01.745Z",
                                            "description": "Beginning date value using either the date format \"yyyy-MM-dd'T'HH:mm:ss'Z'\" or ms \"1494751821472\".\n"
                                          },
                                          "endTime": {
                                            "type": "string",
                                            "example": "2023-07-22T11:30:01.745Z",
                                            "description": "End date value using either the date format \"yyyy-MM-dd'T'HH:mm:ss'Z'\" or ms \"1494751821472\".\n"
                                          },
                                          "summary": {
                                            "type": "object",
                                            "properties": {
                                              "total": {
                                                "type": "number",
                                                "example": 41772.882658036,
                                                "format": "float",
                                                "description": "The total costs of cluster in a given time range"
                                              },
                                              "compute": {
                                                "type": "object",
                                                "properties": {
                                                  "total": {
                                                    "type": "number",
                                                    "example": 40668.1299631538,
                                                    "format": "float",
                                                    "description": "The total compute costs of the cluster in a given time range"
                                                  },
                                                  "workloads": {
                                                    "type": "object",
                                                    "properties": {
                                                      "total": {
                                                        "type": "number",
                                                        "example": 40668.1299631538,
                                                        "format": "float"
                                                      }
                                                    }
                                                  },
                                                  "headroom": {
                                                    "type": "object",
                                                    "properties": {
                                                      "total": {
                                                        "type": "number",
                                                        "example": 0,
                                                        "format": "float"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "storage": {
                                                "type": "object",
                                                "properties": {
                                                  "total": {
                                                    "type": "number",
                                                    "example": 1104.7526948819,
                                                    "format": "float",
                                                    "description": "The total storage costs of the cluster in given time range"
                                                  },
                                                  "block": {
                                                    "type": "object",
                                                    "properties": {
                                                      "total": {
                                                        "type": "number",
                                                        "example": 1104.7526948819,
                                                        "format": "float"
                                                      },
                                                      "azureDisk": {
                                                        "type": "object",
                                                        "properties": {
                                                          "total": {
                                                            "type": "number",
                                                            "example": 1104.7526948819,
                                                            "format": "float"
                                                          }
                                                        }
                                                      },
                                                      "osDisk": {
                                                        "type": "object",
                                                        "properties": {
                                                          "total": {
                                                            "type": "number",
                                                            "example": 0,
                                                            "format": "float"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "detailedCosts": {
                                            "type": "object",
                                            "properties": {
                                              "groupedBy": {
                                                "type": "string",
                                                "example": "n.l.name"
                                              },
                                              "aggregations": {
                                                "type": "object",
                                                "description": "Contains aggregation for each group by value.\n",
                                                "additionalProperties": {
                                                  "type": "object",
                                                  "description": "For example - if group by is namespace so each property name will a namesapce in the cluster.",
                                                  "properties": {
                                                    "summary": {
                                                      "type": "object",
                                                      "properties": {
                                                        "total": {
                                                          "type": "number",
                                                          "example": 425.23778,
                                                          "format": "float"
                                                        },
                                                        "compute": {
                                                          "type": "object",
                                                          "properties": {
                                                            "total": {
                                                              "type": "number",
                                                              "example": 125.23778,
                                                              "format": "float"
                                                            }
                                                          }
                                                        },
                                                        "storage": {
                                                          "type": "object",
                                                          "properties": {
                                                            "total": {
                                                              "type": "number",
                                                              "example": 300,
                                                              "format": "float"
                                                            },
                                                            "block": {
                                                              "type": "object",
                                                              "properties": {
                                                                "total": {
                                                                  "type": "number",
                                                                  "example": 300,
                                                                  "format": "float"
                                                                },
                                                                "azureDisk": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "total": {
                                                                      "type": "number",
                                                                      "example": 300,
                                                                      "format": "float"
                                                                    }
                                                                  }
                                                                },
                                                                "osDisk": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "total": {
                                                                      "type": "number",
                                                                      "example": 0,
                                                                      "format": "float"
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "resources": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "metadata": {
                                                            "type": "object",
                                                            "properties": {
                                                              "name": {
                                                                "type": "string",
                                                                "example": "k8s-events"
                                                              },
                                                              "type": {
                                                                "type": "string",
                                                                "example": "Deployment"
                                                              },
                                                              "namespace": {
                                                                "type": "string",
                                                                "example": "kube-system"
                                                              }
                                                            }
                                                          },
                                                          "total": {
                                                            "type": "number",
                                                            "example": 1.655635222,
                                                            "format": "float"
                                                          },
                                                          "compute": {
                                                            "type": "object",
                                                            "properties": {
                                                              "total": {
                                                                "type": "number",
                                                                "example": 1.4213600158,
                                                                "format": "float"
                                                              }
                                                            }
                                                          },
                                                          "storage": {
                                                            "type": "object",
                                                            "properties": {
                                                              "total": {
                                                                "type": "number",
                                                                "example": 0.2342752062,
                                                                "format": "float"
                                                              },
                                                              "block": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "total": {
                                                                    "type": "number",
                                                                    "example": 0.2342752062,
                                                                    "format": "float"
                                                                  },
                                                                  "azureDisk": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                      "total": {
                                                                        "type": "number",
                                                                        "example": 0,
                                                                        "format": "float"
                                                                      }
                                                                    }
                                                                  },
                                                                  "osDisk": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                      "total": {
                                                                        "type": "number",
                                                                        "example": 0.2342752062,
                                                                        "format": "float"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "ocean:k8s:cluster:aggregatedCosts:detailed"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/azure/k8s/cluster/{oceanClusterId}/aggregatedCosts/summary": {
      "post": {
        "summary": "Get Cluster Aggregated Summary Costs",
        "description": "Provides Kubernetes cluster summary usage and costs over a time interval which can be grouped and/or filtered by label/annotaion,\\\nfor example - application name (webapp, backend), environment (production, staging), version etc.\\\nThe response will contain a breakdown of the cluster resource costs($) in terms of compute (CPU, memory), storage (block, file, rootVolume).\nThe response will group the cluster usage costs based on preselected default of application namespace or user selected label or annotation.\n\nTime Rounding Down: The CostAnalysis API applies rounding down to the hours provided during the call.\\\nFor example, the value 1707004799099 (In GMT) representing Saturday, February 3, 2024, 23:59:59.099 is rounded down to Saturday, February 3, 2024, 23:00:00.000, resulting in the omission of one hour of cost.\n",
        "operationId": "oceanAksK8sClusterAggregatedSummaryCosts",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "endTime",
                      "startTime"
                    ],
                    "properties": {
                      "startTime": {
                        "type": "string",
                        "example": "2023-07-20T11:35:01.745Z",
                        "description": "Beginning date value using either the date format \"yyyy-MM-dd'T'HH:mm:ss'Z'\" or ms \"1494751821472\".\n"
                      },
                      "endTime": {
                        "type": "string",
                        "example": "2023-07-22T11:30:01.745Z",
                        "description": "End date value using either the date format \"yyyy-MM-dd'T'HH:mm:ss'Z'\" or ms \"1494751821472\".\n"
                      },
                      "groupBy": {
                        "type": "string",
                        "description": "The parameter we want to group the costs by.\n",
                        "default": "namespace",
                        "example": "namespace.label.env",
                        "enum": [
                          "namespace",
                          "namespace.label.${labelKey}",
                          "resource.label.${labelKey}",
                          "resource.annotation.${annotationKey}",
                          "namespace.annotation.${annotationKey}"
                        ]
                      },
                      "filter": {
                        "type": "object",
                        "description": "Describe how to filter the costs. Optional field.",
                        "required": [
                          "scope",
                          "conditions"
                        ],
                        "properties": {
                          "scope": {
                            "type": "string",
                            "enum": [
                              "namespace",
                              "resource"
                            ]
                          },
                          "conditions": {
                            "type": "object",
                            "required": [
                              "anyMatch"
                            ],
                            "properties": {
                              "anyMatch": {
                                "type": "array",
                                "description": "Array of conditions set that OR operator is applied between them.\n",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "allMatch"
                                  ],
                                  "properties": {
                                    "allMatch": {
                                      "type": "array",
                                      "description": "Array of conditions that AND operator is applied between them.\\\nFor example, (label env equals prod) AND (label app exists)\n",
                                      "items": {
                                        "type": "object",
                                        "description": "The basic expression of a condition",
                                        "required": [
                                          "type",
                                          "key",
                                          "operator"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "label",
                                              "annotation"
                                            ]
                                          },
                                          "key": {
                                            "type": "string",
                                            "description": "May be any string, but shouldn't be empty.\n",
                                            "example": "env"
                                          },
                                          "operator": {
                                            "type": "string",
                                            "enum": [
                                              "equals",
                                              "notEquals",
                                              "exists",
                                              "notExists"
                                            ]
                                          },
                                          "value": {
                                            "type": "string",
                                            "description": "Required whenever the operator is \"equals\" or \"notEquals\".\n",
                                            "example": "prod"
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "example": [
                                  {
                                    "allMatch": [
                                      {
                                        "type": "label",
                                        "key": "env",
                                        "operator": "equals",
                                        "value": "prod"
                                      },
                                      {
                                        "type": "label",
                                        "key": "app",
                                        "operator": "exists"
                                      }
                                    ]
                                  },
                                  {
                                    "allMatch": [
                                      {
                                        "type": "annotation",
                                        "key": "meta.data",
                                        "operator": "exists"
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Cluster Aggregated Summary Costs Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/k8s/cluster/o-abcd1234/aggregatedCosts/summary"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "result": {
                                    "type": "object",
                                    "properties": {
                                      "totalForDuration": {
                                        "type": "object",
                                        "properties": {
                                          "startTime": {
                                            "type": "string",
                                            "example": "2023-07-20T11:35:01.745Z",
                                            "description": "Beginning date value using either the date format \"yyyy-MM-dd'T'HH:mm:ss'Z'\" or ms \"1494751821472\".\n"
                                          },
                                          "endTime": {
                                            "type": "string",
                                            "example": "2023-07-22T11:30:01.745Z",
                                            "description": "End date value using either the date format \"yyyy-MM-dd'T'HH:mm:ss'Z'\" or ms \"1494751821472\".\n"
                                          },
                                          "summary": {
                                            "type": "object",
                                            "properties": {
                                              "total": {
                                                "type": "number",
                                                "example": 41772.882658035785,
                                                "format": "float",
                                                "description": "The total costs of cluster in a given time range"
                                              },
                                              "compute": {
                                                "type": "object",
                                                "properties": {
                                                  "total": {
                                                    "type": "number",
                                                    "example": 40668.1299631538,
                                                    "format": "float",
                                                    "description": "The total compute costs of the cluster in a given time range"
                                                  },
                                                  "workloads": {
                                                    "type": "object",
                                                    "properties": {
                                                      "total": {
                                                        "type": "number",
                                                        "example": 39882.13803327978,
                                                        "format": "float"
                                                      }
                                                    }
                                                  },
                                                  "headroom": {
                                                    "type": "object",
                                                    "properties": {
                                                      "total": {
                                                        "type": "number",
                                                        "example": 0,
                                                        "format": "float"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "storage": {
                                                "type": "object",
                                                "properties": {
                                                  "total": {
                                                    "type": "number",
                                                    "example": 1104.7526948819868,
                                                    "format": "float",
                                                    "description": "The total storage costs of the cluster in given time range"
                                                  },
                                                  "block": {
                                                    "type": "object",
                                                    "properties": {
                                                      "total": {
                                                        "type": "number",
                                                        "example": 1104.7526948819868,
                                                        "format": "float"
                                                      },
                                                      "azureDisk": {
                                                        "type": "object",
                                                        "properties": {
                                                          "total": {
                                                            "type": "number",
                                                            "example": 1104.7526948819868,
                                                            "format": "float"
                                                          }
                                                        }
                                                      },
                                                      "osDisk": {
                                                        "type": "object",
                                                        "properties": {
                                                          "total": {
                                                            "type": "number",
                                                            "example": 0,
                                                            "format": "float"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "ocean:k8s:cluster:aggregatedCosts:summary"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/launchSpec/{oceanLaunchSpecId}/launchNodes": {
      "put": {
        "summary": "Launch Nodes in VNG",
        "description": "Launch nodes in Virtual Node Group.\n",
        "operationId": "OceanAWSK8sLaunchSpecLaunchNodes",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec~1%7BoceanLaunchSpecId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "launchRequest"
                ],
                "properties": {
                  "launchRequest": {
                    "type": "object",
                    "title": "Ocean AWS Virtual Node Group Launch Request",
                    "description": "Object specifying the details for the launch request.\n",
                    "required": [
                      "amount"
                    ],
                    "properties": {
                      "amount": {
                        "description": "The number of nodes to launch.\n",
                        "type": "integer",
                        "example": 5
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Virtual Node Group Launch Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/k8s/launchSpec/ols-12345abc/launchNodes"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "launchSpecId": {
                                    "type": "string",
                                    "example": "ols-f73821bc"
                                  },
                                  "newInstances": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "instanceId": {
                                          "type": "string",
                                          "example": "i-08d53d2a1dcede08f",
                                          "description": "Identifier of the launched instance\n"
                                        },
                                        "availabilityZone": {
                                          "type": "string",
                                          "example": "us-west-2b",
                                          "description": "The availability zone where the instance is launched\n"
                                        },
                                        "instanceType": {
                                          "type": "string",
                                          "example": "c3.xlarge",
                                          "description": "Type of the instance to be launched\n"
                                        },
                                        "lifeCycle": {
                                          "type": "string",
                                          "example": "spot"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:k8s:launchSpec:launchNodes"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/launchSpec/{oceanLaunchSpecId}/launchContainerInstances": {
      "put": {
        "summary": "Launch Container Instances In VNG",
        "description": "Launch container instances in virtual node group.\n",
        "operationId": "OceanAWSEcsLaunchSpecLaunchNodes",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec~1%7BoceanLaunchSpecId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "launchRequest"
                ],
                "properties": {
                  "launchRequest": {
                    "type": "object",
                    "title": "Ocean ECS VNG Launch Request",
                    "required": [
                      "amount"
                    ],
                    "properties": {
                      "amount": {
                        "description": "The number of container instances to launch.\n",
                        "type": "integer",
                        "example": 5
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean VNG Launch Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/ecs/launchSpec/ols-12345abc/launchContainerInstances"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "launchSpecId": {
                              "type": "string",
                              "example": "ols-f73821bc"
                            },
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "newInstances": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "instanceId": {
                                          "type": "string",
                                          "example": "i-08d53d2a1dcede08f",
                                          "description": "identifier of the launched instance.\n"
                                        },
                                        "availabilityZone": {
                                          "type": "string",
                                          "example": "us-west-2b",
                                          "description": "The availability zone that the instance launched in.\n"
                                        },
                                        "instanceType": {
                                          "type": "string",
                                          "example": "c3.xlarge",
                                          "description": "Type of the launched instance.\n"
                                        },
                                        "lifeCycle": {
                                          "type": "string",
                                          "example": "spot",
                                          "description": "Spot or on-demand.\n"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:ecs:launchSpec:launchContainerInstances"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/k8s/extendedResourceDefinition": {
      "summary": "Ocean extended resource definition",
      "post": {
        "summary": "Create Extended Resource Definition",
        "description": "Creates an Ocean extended resource definition entity.\n",
        "operationId": "oceanK8sExtendedResourceDefinitionCreate",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "extendedResourceDefinition"
                    ],
                    "properties": {
                      "extendedResourceDefinition": {
                        "type": "object",
                        "description": "The Ocean extended resource definition.\n",
                        "title": "Ocean Extended Resource Definition",
                        "required": [
                          "name",
                          "mapping"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "readOnly": true,
                            "example": "erd-123abc",
                            "description": "Ocean extended resource definition identifier.\n"
                          },
                          "name": {
                            "type": "string",
                            "example": "example.com/name",
                            "description": "The extended resource name as should be requested by your pods and registered to the nodes. Cannot be updated.</br>\nThe name should be a valid [Kubernetes extended resource name](https://kubernetes.io/docs/tasks/configure-pod-container/extended-resource/#assign-an-extended-resource-to-a-pod).\n"
                          },
                          "mapping": {
                            "type": "object",
                            "title": "AWS mapping",
                            "description": "A mapping between AWS instanceType or `*` as default and its value for the given extended resource.\n",
                            "example": {
                              "c3.large": "2Ki",
                              "c3.xlarge": "4Ki",
                              "c3.2xlarge": "8Mi"
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2021-03-17T08:13:08.000Z",
                            "description": "A timestamp of the extended resource definition creation.\n"
                          },
                          "updatedAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2021-03-17T15:06:13.000Z",
                            "description": "A timestamp of the latest extended resource definition update.\n"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Create Extended Resource Definition Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/k8s/extendedResourceDefinition"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1k8s~1extendedResourceDefinition/post/requestBody/content/application~1json/schema/allOf/0/properties/extendedResourceDefinition"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:k8s:extendedResourceDefinition"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Extended Resource Definitions",
        "description": "List the configurations for all Ocean extended resource definitions in the specified account.\n",
        "operationId": "oceanK8sExtendedResourceDefinitionList",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Extended Resource Definition Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/k8s/extendedResourceDefinition"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1k8s~1extendedResourceDefinition/post/requestBody/content/application~1json/schema/allOf/0/properties/extendedResourceDefinition"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:k8s:extendedResourceDefinition"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/k8s/extendedResourceDefinition/{oceanExtendedResourceDefinitionId}": {
      "get": {
        "summary": "Get Extended Resource Definition",
        "description": "Get the configurations for a specified Ocean extended resource definition.\n",
        "operationId": "oceanK8sExtendedResourceDefinitionGet",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "oceanExtendedResourceDefinitionId",
            "example": "erd-12345abc",
            "description": "Identifier of the Ocean extended resource definition.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Extended Resource Definition Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/k8s/extendedResourceDefinition/erd-12345abc"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1k8s~1extendedResourceDefinition/post/requestBody/content/application~1json/schema/allOf/0/properties/extendedResourceDefinition"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:k8s:extendedResourceDefinition"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Extended Resource Definition",
        "description": "Only the mapping parameter is updatable for extended resource definition.\n",
        "operationId": "oceanK8sExtendedResourceDefinitionUpdate",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1k8s~1extendedResourceDefinition~1%7BoceanExtendedResourceDefinitionId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/paths/~1ocean~1k8s~1extendedResourceDefinition/post/requestBody/content/application~1json/schema/allOf/0"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Update Extended Resource Definition Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/k8s/extendedResourceDefinition/erd-12345abc"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1k8s~1extendedResourceDefinition/post/requestBody/content/application~1json/schema/allOf/0/properties/extendedResourceDefinition"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:k8s:extendedResourceDefinition"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Extended Resource Definition",
        "description": "Delete a specified Ocean extended resource definition.\n",
        "operationId": "oceanK8sExtendedResourceDefinitionDelete",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1k8s~1extendedResourceDefinition~1%7BoceanExtendedResourceDefinitionId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Delete Extended Resource Definition Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/k8s/extendedResourceDefinition/erd-12345abc"
                            },
                            "method": {
                              "example": "DELETE"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/cluster/{oceanClusterId}/migration/discovery": {
      "summary": "Ocean for AWS",
      "get": {
        "summary": "Get Migration Discovery",
        "description": "Get information about nodes which can be migrated into Ocean.\n",
        "operationId": "oceanAwsGetMigrationDiscovery",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "in": "query",
            "name": "shouldFetchPods",
            "example": "true",
            "description": "Should fetch data about running pods for each node.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Migration Discovery Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "ocean/aws/k8s/cluster/o-abcd1234/migration/discovery"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "title": "Workload migration discovery details",
                                "type": "object",
                                "properties": {
                                  "instances": {
                                    "type": "array",
                                    "description": "List of information about available nodes which can be migrated to the Ocean cluster.",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "k8sNodeName": {
                                          "type": "string",
                                          "description": "The kubernetes node name.",
                                          "example": "ip-111-11-11-111.us-west-1.compute.internal"
                                        },
                                        "asgName": {
                                          "type": "string",
                                          "description": "The ASG name the node belongs.",
                                          "example": "asg-name"
                                        },
                                        "instanceId": {
                                          "type": "string",
                                          "description": "The instance id.",
                                          "example": "i-asdfjk3989"
                                        },
                                        "launchSpecId": {
                                          "type": "string",
                                          "description": "The best match of Virtual Node Group to which the node could belong.",
                                          "example": "ols-1234ascv"
                                        },
                                        "runningPods": {
                                          "type": "integer",
                                          "description": "The number of running pods on the node (appears if shouldFetchPods was true).",
                                          "example": "6"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:k8s:cluster:migration:discovery"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/cluster/{oceanClusterId}/migration": {
      "summary": "Ocean for AWS",
      "post": {
        "summary": "Create Migration",
        "description": "Create a migration for a given existing instances.\n",
        "operationId": "oceanAwsPostMigration",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "migration"
                    ],
                    "properties": {
                      "migration": {
                        "type": "object",
                        "description": "Migration update configuration.\n",
                        "required": [
                          "instanceIds",
                          "shouldTerminateDrainedNodes",
                          "shouldEvictStandAlonePods",
                          "forcePodEvictionOnPdbFailure",
                          "batchSizePercentage"
                        ],
                        "properties": {
                          "instanceIds": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "A list of instance ids that should be migrated to the Ocean cluster.",
                            "example": [
                              "i-a12345",
                              "i-b12345"
                            ]
                          },
                          "shouldTerminateDrainedNodes": {
                            "type": "boolean",
                            "example": true,
                            "description": "Ocean will terminate the old instances once the pods that reside on them are migrated, and the old instances are fully drained.\n"
                          },
                          "shouldEvictStandAlonePods": {
                            "type": "boolean",
                            "example": true,
                            "description": "Ocean will terminate pods that do not belong to a Kubernetes deployment. This means that you would need to launch the pod manually (after the migration) due to the fact that there is no object that would do it automatically.\n"
                          },
                          "forcePodEvictionOnPdbFailure": {
                            "type": "boolean",
                            "example": true,
                            "description": "Ocean will force the Pod eviction from the instance, even if the distributed budget is not satisfied.\n"
                          },
                          "batchSizePercentage": {
                            "type": "integer",
                            "example": 50,
                            "description": "Indicates (in percentage) the batch size of the migration (meaning, how many nodes to migrate in each batch).\\\nCannot be null.\n",
                            "minimum": 1,
                            "maximum": 50
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Migration Create",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "ocean/aws/k8s/cluster/o-1234567/migration"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "properties": {
                                  "id": {
                                    "example": "owm-6e3819ae",
                                    "description": "The migration identifier of a specific migration.\n",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:k8s:cluster:migration"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Migrations summary",
        "description": "Get summary of migrations history for an Ocean cluster.\n",
        "operationId": "oceanAwsGetMigrations",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Migrations Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "ocean/aws/k8s/cluster/o-1234567/migration"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Workload migration summary",
                                "description": "Workload migration summary of Ocean cluster.",
                                "properties": {
                                  "Id": {
                                    "type": "string",
                                    "example": "owm-1234567",
                                    "description": "The migration id.\n"
                                  },
                                  "state": {
                                    "type": "string",
                                    "description": "The latest state of this migration.\n",
                                    "enum": [
                                      "STARTING",
                                      "AWAIT_REPLACEMENTS",
                                      "HANDLE_UNSCHEDULE",
                                      "DRAIN_NODES",
                                      "VALIDATE_DRAIN",
                                      "STOPPING",
                                      "ERROR",
                                      "RESCHEDULE_NODES",
                                      "TERMINATE_NODES",
                                      "AWAIT_TERMINATION",
                                      "FINISHED_ERROR",
                                      "STOPPED",
                                      "FINISHED"
                                    ],
                                    "example": "FINISHED"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "example": "2021-10-01T05:51:06.000Z",
                                    "description": "When this migration was created.\n"
                                  },
                                  "completedAt": {
                                    "type": "string",
                                    "example": "2021-10-01T05:51:06.000Z",
                                    "description": "When this migration was completed.\n"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:k8s:cluster:migration"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/cluster/{oceanClusterId}/migration/{migrationId}": {
      "summary": "Ocean for AWS",
      "get": {
        "summary": "Get Migration Status",
        "description": "Get Migration full info and status for an Ocean cluster.\n",
        "operationId": "oceanAwsGetMigrationStatus",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "in": "path",
            "name": "migrationId",
            "example": "owm-6e3819ae",
            "description": "The migration identifier of a specific migration.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Migration Status Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "ocean/aws/k8s/cluster/o-abcd1234/migration/owm-abcd1234"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Workload migration",
                                "description": "Workload migration status of Ocean cluster.",
                                "properties": {
                                  "Id": {
                                    "type": "string",
                                    "example": "owm-1234567",
                                    "description": "The migration id.\n"
                                  },
                                  "oceanId": {
                                    "type": "string",
                                    "example": "o-abcd1234",
                                    "description": "The Ocean cluster identifier. Required for Virtual Node Group creation.\n"
                                  },
                                  "status": {
                                    "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D~1migration/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/state"
                                  },
                                  "newInstances": {
                                    "type": "array",
                                    "title": "Workload migration details",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "instanceId": {
                                          "type": "string",
                                          "description": "The instance ID.",
                                          "example": "i-asdfjk3989"
                                        },
                                        "k8sNodeName": {
                                          "type": "string",
                                          "description": "The kubernetes node name.",
                                          "example": "ip-111-11-11-111.us-west-1.compute.internal"
                                        },
                                        "asgName": {
                                          "type": "string",
                                          "description": "The ASG name the node belongs.",
                                          "example": "asg-name"
                                        },
                                        "state": {
                                          "type": "string",
                                          "description": "The instance state.",
                                          "example": "RUNNING"
                                        },
                                        "podDetails": {
                                          "type": "array",
                                          "description": "in case migration instance status is \"REQUIRES_MANUAL_MIGRATION\" then the following pod data will appear.",
                                          "items": {
                                            "properties": {
                                              "id": {
                                                "type": "string",
                                                "description": "The pod ID.",
                                                "example": "abc123-abc123-abc123-abc123"
                                              },
                                              "name": {
                                                "type": "string",
                                                "description": "The pod name.",
                                                "example": "podName"
                                              },
                                              "kind": {
                                                "type": "string",
                                                "description": "The pod kind, currently divided into STAND_ALONE_POD & UNKNOWN",
                                                "example": "STAND_ALONE_POD"
                                              }
                                            }
                                          }
                                        },
                                        "runningPods": {
                                          "type": "integer",
                                          "description": "The number of running pods.",
                                          "example": "6"
                                        }
                                      }
                                    }
                                  },
                                  "oldInstances": {
                                    "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D~1migration~1%7BmigrationId%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/newInstances"
                                  },
                                  "unscheduledPodIds": {
                                    "type": "string",
                                    "example": "o-abcd1234",
                                    "description": "List of the unscedueled pod ids.\n"
                                  },
                                  "newUnscheduledPodIds": {
                                    "type": "string",
                                    "example": "o-abcd1234",
                                    "description": "List of the new unscedueled pod ids.\n"
                                  },
                                  "migrationConfig": {
                                    "type": "object",
                                    "description": "The object specifying the configuration flags when migration created.\n",
                                    "properties": {
                                      "shouldTerminateDrainedNodes": {
                                        "type": "boolean",
                                        "example": true,
                                        "description": "Ocean will terminate the old instances once the pods that reside on them are migrated, and the old instances are fully drained.\n"
                                      },
                                      "shouldEvictStandAlonePods": {
                                        "type": "boolean",
                                        "example": true,
                                        "description": "Ocean will terminate pods that do not belong to a Kubernetes deployment. This means that you would need to launch the pod manually (after the migration) due to the fact that there is no object that would do it automatically.\n"
                                      }
                                    }
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "example": "2021-10-01T05:51:06.000Z",
                                    "description": "When this migration was created.\n"
                                  },
                                  "erroredAt": {
                                    "type": "string",
                                    "example": "2021-10-01T05:51:06.000Z",
                                    "description": "When this migration received an error.\n"
                                  },
                                  "stoppedAt": {
                                    "type": "string",
                                    "example": "2021-10-01T05:51:06.000Z",
                                    "description": "When this migration was stopped.\n"
                                  },
                                  "completedAt": {
                                    "type": "string",
                                    "example": "2021-10-01T05:51:06.000Z",
                                    "description": "When this migration was completed.\n"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:k8s:cluster:migration"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Stop Migration",
        "description": "Stop an ongoing Workload Migration.\n",
        "operationId": "oceanAwsPutMigration",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D~1migration~1%7BmigrationId%7D/get/parameters/2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "migration"
                    ],
                    "properties": {
                      "migration": {
                        "required": [
                          "state"
                        ],
                        "type": "object",
                        "description": "Migration update configuration.\n",
                        "properties": {
                          "shouldTerminateDrainedNodes": {
                            "type": "boolean",
                            "example": true,
                            "default": false,
                            "description": "Ocean will terminate the old instances once the pods that reside on them are migrated, and the old instances are fully drained.\n"
                          },
                          "state": {
                            "type": "string",
                            "description": "The only allowed state to update is to \"STOPPED\". This state will stop a running migration.\n",
                            "example": "STOPPED"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Migrations Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "ocean/aws/k8s/cluster/o-1234567/migration/owm-abc1234"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "properties": {
                                  "id": {
                                    "example": "owm-6e3819ae",
                                    "description": "The migration identifier of a specific migration.\n",
                                    "type": "string"
                                  },
                                  "oceanId": {
                                    "type": "string",
                                    "description": "The identifier of the ocean cluster belong the migration.\n",
                                    "example": "o-12e31234"
                                  },
                                  "state": {
                                    "type": "string",
                                    "description": "if update succeeded, the return value should be \"STOPPED\".\n",
                                    "example": "STOPPED"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:k8s:cluster:migration"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/insights/k8s/cluster": {
      "summary": "Ocean Insights",
      "post": {
        "summary": "Create Cluster",
        "description": "Creates an Ocean Insight entity according to a given specification.\n\nPrerequisite:\n\nThe Ocean Controller is used to monitor the cluster resources and report back to Ocean. The Ocean Controller is required for Ocean Insights.<br />\n\nTo install the Ocean Controller, complete and run the following script on a machine with the kubectl command line tool installed and configured:\n\n```\n#!/usr/bin/env bash\ncurl -fsSL http://spotinst-public.s3.amazonaws.com/integrations/kubernetes/cluster-controller/scripts/init.sh | \\\nSPOTINST_TOKEN=<ENTER YOUR TOKEN HERE> \\\nSPOTINST_ACCOUNT=<ENTER YOUR SPOTINST ACCOUNT ID HERE> \\\nSPOTINST_CLUSTER_IDENTIFIER=<ENTER YOUR CLUSTER IDENTIFIER HERE> \\\nbash\n```\n",
        "operationId": "OceanInsightsClusterCreate",
        "tags": [
          "Ocean Insights"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "cluster"
                    ],
                    "properties": {
                      "cluster": {
                        "type": "object",
                        "title": "Ocean Insight",
                        "required": [
                          "name",
                          "controllerClusterId"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "oic-12345abc",
                            "readOnly": true,
                            "description": "Ocean Insight Cluster ID.\n"
                          },
                          "name": {
                            "type": "string",
                            "example": "Ocean::my-ocean-insight-name",
                            "description": "Add a name for the Ocean Insight cluster.\n"
                          },
                          "controllerClusterId": {
                            "type": "string",
                            "example": "oceanInsight.k8s",
                            "description": "The reporting identifier for the Ocean Controller.\n"
                          },
                          "createdAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2019-06-03T08:13:08.000Z",
                            "description": "A timestamp of the Ocean insight creation.\n"
                          },
                          "updatedAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2019-06-10T15:06:13.000Z",
                            "description": "A timestamp of the latest Ocean insight update.\n"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Insight Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/insight/k8s/cluster"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1insights~1k8s~1cluster/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:insight:k8s"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Clusters",
        "description": "Get the configurations for all Ocean Insights clusters in the specified account.\n",
        "operationId": "OceanInsightsClusterList",
        "tags": [
          "Ocean Insights"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Insight Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/insight/k8s/cluster"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "The Ocean Insight cluster.\n",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "o-134abcd",
                                    "description": "Ocean Insight cluster ID.\n"
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "test",
                                    "description": "Ocean Insight cluster name.\n"
                                  },
                                  "controllerClusterId": {
                                    "type": "string",
                                    "example": "test-123124",
                                    "description": "The reporting identifier for the Ocean Controller.\n"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "readOnly": true,
                                    "format": "date-time",
                                    "example": "2021-03-17T08:13:08.000Z",
                                    "description": "A timestamp of the Ocean creation.\n"
                                  },
                                  "updatedAt": {
                                    "type": "string",
                                    "readOnly": true,
                                    "format": "date-time",
                                    "example": "2021-03-17T15:06:13.000Z",
                                    "description": "A timestamp of the latest Ocean update.\n"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:insight:k8s"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/insights/k8s/cluster/{OCEAN_INSIGHT_ID}": {
      "get": {
        "summary": "Get Cluster",
        "description": "Get the configurations for a specified Ocean Insight cluster.\n",
        "operationId": "OceanInsightsClusterGet",
        "tags": [
          "Ocean Insights"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "OCEAN_INSIGHT_ID",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "oic-abcd1234",
            "description": "The ID of the Ocean Insight cluster.\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Insight Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/insight/k8s/cluster/oic-12345abc"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1insights~1k8s~1cluster/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:insight:k8s"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Cluster",
        "description": "Delete a specified Ocean Insight cluster.\n",
        "operationId": "OceanInsightClusterDelete",
        "tags": [
          "Ocean Insights"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1insights~1k8s~1cluster~1%7BOCEAN_INSIGHT_ID%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Insight Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/insight/k8s/cluster/oic-12345abc"
                            },
                            "method": {
                              "example": "DELETE"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/cd/cluster": {
      "summary": "Ocean CD",
      "get": {
        "summary": "List Ocean CD Clusters",
        "description": "List all Ocean CD clusters.\n",
        "operationId": "OceanCDClusterList",
        "tags": [
          "Ocean CD"
        ],
        "responses": {
          "200": {
            "description": "Ocean CD Cluster Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "required": [
                                      "cluster"
                                    ],
                                    "properties": {
                                      "lastHeartbeatTime": {
                                        "type": "string",
                                        "example": "2018-11-05T12:55:50.000Z",
                                        "description": "Time stamp of latest time the controller sent heartbeat.\n"
                                      },
                                      "clusterInfo": {
                                        "type": "object",
                                        "title": "Ocean CD Cluster Info",
                                        "description": "Contains OceanCD cluster detailed information.\n",
                                        "properties": {
                                          "kubernetesVersion": {
                                            "type": "string"
                                          },
                                          "cloudProvider": {
                                            "type": "string"
                                          },
                                          "kubernetesOrchestrator": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "operatorInfo": {
                                        "type": "object",
                                        "title": "Ocean CD Operator Info",
                                        "description": "Contains OceanCD operator detailed information.\n",
                                        "properties": {
                                          "kubernetesVersion": {
                                            "type": "string"
                                          },
                                          "nodeName": {
                                            "type": "string"
                                          },
                                          "operatorVersion": {
                                            "type": "string"
                                          },
                                          "podName": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "operatorMetadata": {
                                        "type": "object",
                                        "title": "Ocean CD Operator Metadata",
                                        "description": "Contains OceanCD operator metadata information.\n",
                                        "properties": {
                                          "lastHeartbeatTime": {
                                            "type": "string",
                                            "example": "2018-11-05T12:55:50.000Z",
                                            "description": "Time stamp of latest time the operator controller sent heartbeat.\n"
                                          }
                                        }
                                      },
                                      "omInfo": {
                                        "type": "object",
                                        "title": "Ocean CD Operator Manager Info",
                                        "description": "Contains OceanCD operator manager detailed information.\n",
                                        "properties": {
                                          "kubernetesVersion": {
                                            "type": "string"
                                          },
                                          "nodeName": {
                                            "type": "string"
                                          },
                                          "operatorVersion": {
                                            "type": "string"
                                          },
                                          "podName": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "omMetadata": {
                                        "type": "object",
                                        "title": "Ocean CD Operator Maanager Metadata",
                                        "description": "Contains OceanCD operator manager metadata information.\n",
                                        "properties": {
                                          "lastHeartbeatTime": {
                                            "type": "string",
                                            "example": "2018-11-05T12:55:50.000Z",
                                            "description": "Time stamp of latest time the operator manager controller sent heartbeat.\n"
                                          }
                                        }
                                      },
                                      "argoRolloutInfo": {
                                        "type": "object",
                                        "title": "Argo Rollouts Metadata",
                                        "description": "Contains Argo Rollouts metadata information.\n",
                                        "properties": {
                                          "argoRolloutVersion": {
                                            "type": "string"
                                          },
                                          "lastHeartbeatTime": {
                                            "type": "string",
                                            "example": "2018-11-05T12:55:50.000Z",
                                            "description": "Time stamp of latest time the operator controller sent heartbeat.\n"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "example": "oceanCluster"
                                      },
                                      "createdAt": {
                                        "type": "string",
                                        "example": "2018-11-05T12:55:50.000Z"
                                      },
                                      "updatedAt": {
                                        "type": "string",
                                        "example": "2018-11-05T12:58:15.000Z"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/cd/cluster/{clusterId}": {
      "summary": "Ocean CD",
      "get": {
        "summary": "Get Ocean CD Cluster",
        "description": "Get an existing Ocean CD cluster.\n",
        "operationId": "OceanCDClusterGet",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "clusterId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "cluster-prod",
            "description": "The identifier of the Ocean CD cluster\n"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1cd~1cluster/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/cd/verificationProvider": {
      "summary": "Ocean CD",
      "post": {
        "summary": "Create Ocean CD Verification Provider",
        "description": "Create Ocean CD Verification Provider. Only one provider type can be defined\n",
        "operationId": "OceanCDVerificationProviderCreate",
        "tags": [
          "Ocean CD"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Ocean CD Verification Provider Request",
                    "description": "Ocean CD Verification Provider request entity.\n",
                    "required": [
                      "verificationProvider"
                    ],
                    "properties": {
                      "verificationProvider": {
                        "type": "object",
                        "$ref": "#/paths/~1ocean~1cd~1verificationProvider/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/0"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1cd~1verificationProvider/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Ocean CD Verification Providers",
        "description": "List all Ocean CD Verification Providers.\n",
        "operationId": "OceanCDVerificationProviderList",
        "tags": [
          "Ocean CD"
        ],
        "responses": {
          "200": {
            "description": "Ocean CD Verification Provider Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "required": [
                                      "name",
                                      "clusterIds"
                                    ],
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "Identifier name for Ocean CD Verification Provider. Must be unique",
                                        "example": "datadog-prod"
                                      },
                                      "clusterIds": {
                                        "description": "List of cluster IDs that this Verification Provider will be applied to",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "example": [
                                          "prod-cluster-1",
                                          "prod-cluster-2"
                                        ]
                                      },
                                      "prometheus": {
                                        "type": "object",
                                        "required": [
                                          "address"
                                        ],
                                        "title": "Ocean CD Verification Provider Prometheus",
                                        "properties": {
                                          "address": {
                                            "type": "string",
                                            "description": "The address which the Prometheus server available on",
                                            "example": "http://localhost:9090"
                                          }
                                        }
                                      },
                                      "datadog": {
                                        "type": "object",
                                        "required": [
                                          "address",
                                          "apiKey",
                                          "appKey"
                                        ],
                                        "title": "Ocean CD Verification Provider Datadog",
                                        "properties": {
                                          "address": {
                                            "type": "string",
                                            "description": "DataDog API URL",
                                            "example": "https://api.datadoghq.eu"
                                          },
                                          "apiKey": {
                                            "type": "string",
                                            "description": "API key required by the Datadog Agent to submit metrics and events to Datadog",
                                            "example": "AUO32RN20oUMD-40283"
                                          },
                                          "appKey": {
                                            "type": "string",
                                            "description": "API key that gives users access to Datadog’s programmatic API",
                                            "example": "APP-113ndsKlfmaoN"
                                          }
                                        }
                                      },
                                      "newRelic": {
                                        "type": "object",
                                        "required": [
                                          "personalApiKey",
                                          "accountId"
                                        ],
                                        "title": "Ocean CD Verification Provider NewRelic",
                                        "properties": {
                                          "personalApiKey": {
                                            "type": "string",
                                            "description": "The NewRelic user key",
                                            "example": "AUO32RN20oUMD-40283"
                                          },
                                          "accountId": {
                                            "type": "string",
                                            "description": "The ID number New Relic assigns to their account",
                                            "example": "account-0189718"
                                          },
                                          "region": {
                                            "type": "string",
                                            "description": "A region which the account is attached to. Default is \"us\"",
                                            "example": "eu"
                                          },
                                          "baseUrlRest": {
                                            "type": "string",
                                            "description": "The base URL of the New Relic REST API for a proxy",
                                            "example": "https://rest.api.newrelic.eu"
                                          },
                                          "baseUrlNerdGraph": {
                                            "type": "string",
                                            "description": "The base URL for NerdGraph for a proxy",
                                            "example": "https://nerdgraph.api.newrelic.eu"
                                          }
                                        }
                                      },
                                      "cloudWatch": {
                                        "type": "object",
                                        "required": [
                                          "iamArn"
                                        ],
                                        "title": "Ocean CD Verification Provider CloudWatch",
                                        "properties": {
                                          "iamArn": {
                                            "type": "string",
                                            "description": "AWS resource that has permissions for cloudwatch:GetMetricData",
                                            "example": "arn:aws:iam::123456789012:role/GetMetricData"
                                          }
                                        }
                                      },
                                      "jenkins": {
                                        "type": "object",
                                        "required": [
                                          "baseUrl",
                                          "username",
                                          "apiToken"
                                        ],
                                        "title": "Ocean CD Verification Provider Jenkins",
                                        "properties": {
                                          "baseUrl": {
                                            "type": "string",
                                            "description": "The address of the Jenkins server within the cluster.",
                                            "example": "http://localhost:9090"
                                          },
                                          "username": {
                                            "type": "string",
                                            "description": "The Jenkins server’s access username.",
                                            "example": "admin"
                                          },
                                          "apiToken": {
                                            "type": "string",
                                            "description": "The Jenkins server’s access apiToken.",
                                            "example": "AbCDeeFFGG"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "$ref": "#/paths/~1ocean~1cd~1strategy/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/1"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/cd/verificationProvider/{name}": {
      "summary": "Ocean CD",
      "get": {
        "summary": "Get Ocean CD Verification Provider",
        "description": "Get an existing Ocean CD Verification Provider.\n",
        "operationId": "OceanCDVerificationProviderGet",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "datadog-prod",
            "description": "The identifier of the Ocean CD Verification Provider\n"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1cd~1verificationProvider/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Ocean CD Verification Provider",
        "description": "Full Update of Ocean CD Verification Provider configuration.\n*All non included fields will be nullified*\n",
        "operationId": "OceanCDVerificationProviderUpdate",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "datadog-prod",
            "description": "The identifier name of the Ocean CD Verification Provider\n"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Ocean CD Verification Provider Request",
                    "description": "Ocean CD Verification Provider request entity.\n",
                    "required": [
                      "verificationProvider"
                    ],
                    "properties": {
                      "verificationProvider": {
                        "type": "object",
                        "required": [
                          "clusterIds"
                        ],
                        "properties": {
                          "clusterIds": {
                            "description": "List of cluster ids that this Verification Provider will be applied to",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "prod-cluster-1",
                              "prod-cluster-2"
                            ]
                          },
                          "prometheus": {
                            "type": "object",
                            "$ref": "#/paths/~1ocean~1cd~1verificationProvider/post/requestBody/content/application~1json/schema/allOf/0/properties/verificationProvider/properties/prometheus"
                          },
                          "datadog": {
                            "type": "object",
                            "$ref": "#/paths/~1ocean~1cd~1verificationProvider/post/requestBody/content/application~1json/schema/allOf/0/properties/verificationProvider/properties/datadog"
                          },
                          "newRelic": {
                            "type": "object",
                            "$ref": "#/paths/~1ocean~1cd~1verificationProvider/post/requestBody/content/application~1json/schema/allOf/0/properties/verificationProvider/properties/newRelic"
                          },
                          "cloudWatch": {
                            "type": "object",
                            "$ref": "#/paths/~1ocean~1cd~1verificationProvider/post/requestBody/content/application~1json/schema/allOf/0/properties/verificationProvider/properties/cloudWatch"
                          },
                          "jenkins": {
                            "type": "object",
                            "$ref": "#/paths/~1ocean~1cd~1verificationProvider/post/requestBody/content/application~1json/schema/allOf/0/properties/verificationProvider/properties/jenkins"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "patch": {
        "summary": "Patch Ocean CD Verification Provider",
        "description": "Partial update Ocean CD Verification Provider configuration.\n",
        "operationId": "OceanCDVerificationProviderPatch",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "datadog-prod",
            "description": "The identifier name of the Ocean CD Verification Provider\n"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Ocean CD Verification Provider Request",
                    "description": "Ocean CD Verification Provider request entity.\n",
                    "required": [
                      "verificationProvider"
                    ],
                    "properties": {
                      "verificationProvider": {
                        "type": "object",
                        "title": "Ocean CD Verification Provider",
                        "description": "Ocean CD Verification Provider spec entity.\n",
                        "properties": {
                          "clusterIds": {
                            "description": "List of cluster ids that this Verification Provider will be applied to",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "prod-cluster-1",
                              "prod-cluster-2"
                            ]
                          },
                          "prometheus": {
                            "type": "object",
                            "$ref": "#/paths/~1ocean~1cd~1verificationProvider/post/requestBody/content/application~1json/schema/allOf/0/properties/verificationProvider/properties/prometheus"
                          },
                          "datadog": {
                            "type": "object",
                            "$ref": "#/paths/~1ocean~1cd~1verificationProvider/post/requestBody/content/application~1json/schema/allOf/0/properties/verificationProvider/properties/datadog"
                          },
                          "newRelic": {
                            "type": "object",
                            "$ref": "#/paths/~1ocean~1cd~1verificationProvider/post/requestBody/content/application~1json/schema/allOf/0/properties/verificationProvider/properties/newRelic"
                          },
                          "cloudWatch": {
                            "type": "object",
                            "$ref": "#/paths/~1ocean~1cd~1verificationProvider/post/requestBody/content/application~1json/schema/allOf/0/properties/verificationProvider/properties/cloudWatch"
                          },
                          "jenkins": {
                            "type": "object",
                            "$ref": "#/paths/~1ocean~1cd~1verificationProvider/post/requestBody/content/application~1json/schema/allOf/0/properties/verificationProvider/properties/jenkins"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Ocean CD Verification Provider",
        "description": "Delete an existing Ocean CD Verification Provider.\n",
        "operationId": "OceanCDVerificationProviderDelete",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "datadog-prod",
            "description": "The identifier name of the Ocean CD Verification Provider\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/cd/verificationTemplate": {
      "summary": "Ocean CD",
      "post": {
        "summary": "Create Ocean CD Verification Template",
        "description": "Create Ocean CD Verification Template.\n",
        "operationId": "OceanCDVerificationTemplateCreate",
        "tags": [
          "Ocean CD"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Ocean CD Verification Template Request",
                    "description": "Ocean CD Verification Template request entity.\n",
                    "required": [
                      "verificationTemplate"
                    ],
                    "properties": {
                      "verificationTemplate": {
                        "type": "object",
                        "$ref": "#/paths/~1ocean~1cd~1verificationTemplate/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/0"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1cd~1verificationTemplate/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Ocean CD Verification Templates",
        "description": "List all Ocean CD Verification Templates.\n",
        "operationId": "OceanCDVerificationTemplateList",
        "tags": [
          "Ocean CD"
        ],
        "responses": {
          "200": {
            "description": "Ocean CD Verification Template Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "required": [
                                      "name",
                                      "metrics"
                                    ],
                                    "description": "The object specifying a set of metrics that need to be analyzed during the rollout, and the values that are considered successful or failed",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "latency-validation",
                                        "description": "Identifier name for Ocean CD Verification Template. Must be a unique name"
                                      },
                                      "args": {
                                        "description": "List of verification arguments. You may specify either `value` OR `valueFrom` but not both. In case `args`:`value` is already defined in the RolloutSpec entity, there is no need to also specify it in the VerificationTemplate entity",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "title": "Ocean CD Verification Template argument",
                                          "required": [
                                            "name"
                                          ],
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "example": "root-password",
                                              "description": "Name of an argument"
                                            },
                                            "value": {
                                              "type": "string",
                                              "example": 12345678,
                                              "description": "String representation of data"
                                            },
                                            "valueFrom": {
                                              "type": "object",
                                              "title": "Ocean CD Verification Template argument",
                                              "properties": {
                                                "secretKeyRef": {
                                                  "type": "object",
                                                  "$ref": "#/paths/~1ocean~1cd~1rollout~1%7BrolloutId%7D~1definition/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/properties/phaseVerifications/items/allOf/0/properties/args/items/properties/valueFrom/properties/secretKeyRef"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "metrics": {
                                        "description": "List of verification metrics",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "$ref": "#/paths/~1ocean~1cd~1rollout~1%7BrolloutId%7D~1definition/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/properties/phaseVerifications/items/allOf/0/properties/metrics/items"
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "$ref": "#/paths/~1ocean~1cd~1strategy/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/1"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/cd/verificationTemplate/{name}": {
      "summary": "Ocean CD",
      "get": {
        "summary": "Get Ocean CD Verification Template",
        "description": "Get an existing Ocean CD Verification Template.\n",
        "operationId": "OceanCDVerificationTemplateGet",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "latency-validation",
            "description": "The identifier of the Ocean CD Verification Template\n"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1cd~1verificationTemplate/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Ocean CD Verification Template",
        "description": "Full update of Ocean CD Verification Template configuration.\n*All non included fields will be nullified*\n",
        "operationId": "OceanCDVerificationTemplateUpdate",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "latency-validation",
            "description": "The identifier name of the Ocean CD Verification Template\n"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Ocean CD Verification Template Request",
                    "description": "Ocean CD Verification Template request entity.\n",
                    "required": [
                      "verificationTemplate"
                    ],
                    "properties": {
                      "verificationTemplate": {
                        "type": "object",
                        "required": [
                          "metrics"
                        ],
                        "properties": {
                          "args": {
                            "description": "List of verification arguments",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "$ref": "#/paths/~1ocean~1cd~1verificationTemplate/post/requestBody/content/application~1json/schema/allOf/0/properties/verificationTemplate/properties/args/items"
                            }
                          },
                          "metrics": {
                            "description": "List of verification metrics",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "$ref": "#/paths/~1ocean~1cd~1rollout~1%7BrolloutId%7D~1definition/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/properties/phaseVerifications/items/allOf/0/properties/metrics/items"
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "patch": {
        "summary": "Patch Ocean CD Verification Template",
        "description": "Partial update Ocean CD Verification Template configuration.\n",
        "operationId": "OceanCDVerificationTemplatePatch",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "latency-validation",
            "description": "The identifier name of the Ocean CD Verification Template\n"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Ocean CD Verification Template Request",
                    "description": "Ocean CD Verification Template request entity.\n",
                    "required": [
                      "verificationTemplate"
                    ],
                    "properties": {
                      "verificationTemplate": {
                        "type": "object",
                        "title": "Ocean CD Verification Template",
                        "description": "Ocean CD Verification Template spec entity.\n",
                        "required": [
                          "metrics"
                        ],
                        "properties": {
                          "args": {
                            "description": "List of verification arguments",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "$ref": "#/paths/~1ocean~1cd~1verificationTemplate/post/requestBody/content/application~1json/schema/allOf/0/properties/verificationTemplate/properties/args/items"
                            }
                          },
                          "metrics": {
                            "description": "List of verification metrics",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "$ref": "#/paths/~1ocean~1cd~1rollout~1%7BrolloutId%7D~1definition/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/properties/phaseVerifications/items/allOf/0/properties/metrics/items"
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Ocean CD Verification Template",
        "description": "Delete an existing Ocean CD Verification Template.\n",
        "operationId": "OceanCDVerificationTemplateDelete",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "latency-validation",
            "description": "The identifier name of the Ocean CD Verification Template\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/cd/strategy": {
      "summary": "Ocean CD",
      "post": {
        "summary": "Create Ocean CD Strategy",
        "description": "Create Ocean CD Strategy.\n",
        "operationId": "OceanCDStrategyCreate",
        "tags": [
          "Ocean CD"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Ocean CD Strategy Request",
                    "description": "Ocean CD strategy request.\n",
                    "required": [
                      "strategy"
                    ],
                    "properties": {
                      "strategy": {
                        "type": "object",
                        "title": "Ocean CD Strategy",
                        "description": "Ocean CD strategy. Use in RolloutSpec to decide what strategy to use when applying `SpotDeployment`\n",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Identifier name for Ocean CD Strategy. Must be unique",
                            "example": "service-strategy"
                          },
                          "canary": {
                            "type": "object",
                            "title": "Ocean CD Strategy Canary",
                            "description": "Represents Canary strategy\n",
                            "properties": {
                              "backgroundVerification": {
                                "type": "object",
                                "title": "Ocean CD Strategy Background Verification",
                                "description": "A list of background verifications",
                                "properties": {
                                  "templateNames": {
                                    "description": "List of Verification Template names",
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "description": "Name of a Verification Template",
                                      "example": "verification-template-name"
                                    }
                                  }
                                },
                                "required": [
                                  "templateNames"
                                ]
                              },
                              "steps": {
                                "type": "array",
                                "description": "A set of separate conditions of rollout processing",
                                "items": {
                                  "type": "object",
                                  "title": "Ocean CD Strategy Canary Step",
                                  "description": "Defines a step of the canary strategy\n",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The name of a step",
                                      "example": "first-step"
                                    },
                                    "setWeight": {
                                      "type": "integer",
                                      "description": "Defines the percentage that the new version should receive",
                                      "example": 20
                                    },
                                    "setCanaryScale": {
                                      "type": "object",
                                      "title": "Ocean CD Strategy Canary Step Scale",
                                      "description": "Defines how to scale the version without traffic weight changing\n",
                                      "properties": {
                                        "weight": {
                                          "type": "integer",
                                          "description": "Sets the percentage of replicas the new version should have",
                                          "example": 20
                                        },
                                        "replicas": {
                                          "type": "integer",
                                          "description": "Sets the number of replicas the new version should have",
                                          "example": 20
                                        },
                                        "matchTrafficWeight": {
                                          "type": "boolean",
                                          "description": "Defines whether a rollout should match the current canary's setWeight step",
                                          "example": true
                                        }
                                      }
                                    },
                                    "verification": {
                                      "type": "object",
                                      "title": "Ocean CD Strategy Step Verification",
                                      "description": "Represents the list of verifications to run in a step\n",
                                      "properties": {
                                        "templateNames": {
                                          "description": "List of Verification Template names",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "example": [
                                            "5xx-errors"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "templateNames"
                                      ]
                                    },
                                    "pause": {
                                      "type": "object",
                                      "title": "Ocean CD Strategy Step Pause",
                                      "description": "Defines the duration of time to freeze the rollout\n",
                                      "properties": {
                                        "duration": {
                                          "type": "string",
                                          "description": "The amount of time to wait before moving to the next step",
                                          "example": "5m"
                                        }
                                      }
                                    },
                                    "setHeaderRoute": {
                                      "type": "object",
                                      "title": "Ocean CD Strategy Canary Step Header",
                                      "description": "Defines the list of HeaderRoutes to add to the Rollout\n",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the HeaderRoute group",
                                          "example": "set-header-1"
                                        },
                                        "match": {
                                          "type": "array",
                                          "description": "The matching rules for the header route",
                                          "items": {
                                            "type": "object",
                                            "title": "Ocean CD Strategy Canary Step Header Match",
                                            "description": "Defines a single header to add to the Rollout\n",
                                            "properties": {
                                              "headerName": {
                                                "type": "string",
                                                "description": "The name of the header",
                                                "example": "User-Agent"
                                              },
                                              "headerValue": {
                                                "type": "object",
                                                "title": "Ocean CD Strategy Canary Step Header Match Value",
                                                "description": "Defines a single header to add to the Rollout.\n<p style=color:red>Must be only one initialized from the following (exact, prefix, regex).</p>\n",
                                                "properties": {
                                                  "exact": {
                                                    "type": "string",
                                                    "description": "The exact header value",
                                                    "example": "Mozilla"
                                                  },
                                                  "prefix": {
                                                    "type": "string",
                                                    "description": "The prefix of the value",
                                                    "example": "Mozilla-"
                                                  },
                                                  "regex": {
                                                    "type": "string",
                                                    "description": "The value in a regex format",
                                                    "example": "Mozilla(.*)"
                                                  }
                                                }
                                              }
                                            },
                                            "required": [
                                              "headerName",
                                              "headerValue"
                                            ]
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "match"
                                      ]
                                    }
                                  }
                                }
                              }
                            },
                            "required": [
                              "steps"
                            ]
                          },
                          "rolling": {
                            "type": "object",
                            "title": "Ocean CD Strategy Rolling Update",
                            "description": "Represents Rolling Update strategy\n",
                            "properties": {
                              "steps": {
                                "type": "array",
                                "description": "A set of separate conditions of rollout processing",
                                "items": {
                                  "type": "object",
                                  "title": "Ocean CD Strategy Rolling Update Step",
                                  "description": "Defines a step of the rolling update strategy\n",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The name of a step",
                                      "example": "first-step"
                                    },
                                    "verification": {
                                      "$ref": "#/paths/~1ocean~1cd~1strategy/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/0/properties/canary/properties/steps/items/properties/verification"
                                    },
                                    "pause": {
                                      "$ref": "#/paths/~1ocean~1cd~1strategy/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/0/properties/canary/properties/steps/items/properties/pause"
                                    }
                                  }
                                }
                              }
                            },
                            "required": [
                              "steps"
                            ]
                          }
                        },
                        "required": [
                          "name"
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1cd~1strategy/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Ocean CD Strategies",
        "description": "List all Ocean CD strategies.\n",
        "operationId": "OceanCDStrategyList",
        "tags": [
          "Ocean CD"
        ],
        "responses": {
          "200": {
            "description": "Ocean CD Strategy Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "allOf": [
                                  {
                                    "$ref": "#/paths/~1ocean~1cd~1strategy/post/requestBody/content/application~1json/schema/allOf/0/properties/strategy"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "createdAt": {
                                        "type": "string",
                                        "description": "The time when the entity was created",
                                        "example": "2018-11-05T12:55:50.000Z"
                                      },
                                      "updatedAt": {
                                        "type": "string",
                                        "description": "The last time when the entity was updated",
                                        "example": "2018-11-05T12:58:15.000Z"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/cd/strategy/{strategyName}": {
      "summary": "Ocean CD",
      "get": {
        "summary": "Get Ocean CD Strategy",
        "description": "Get an existing Ocean CD Strategy.\n",
        "operationId": "oceanCDStrategyGet",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "strategyName",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "canary-prod",
            "description": "The identifier name of the Ocean CD Strategy\n"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1cd~1strategy/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Ocean CD Strategy",
        "description": "Full update of Ocean CD strategy configuration.\n*All non included fields will be nullified*\n",
        "operationId": "OceanCDStrategyUpdate",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "strategyName",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "canary-prod",
            "description": "The identifier name of the Ocean CD Strategy\n"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "strategy"
                    ],
                    "properties": {
                      "strategy": {
                        "type": "object",
                        "title": "Ocean CD Strategy",
                        "description": "Ocean CD strategy. Use in RolloutSpec to decide what strategy to use when applying `SpotDeployment`\n",
                        "properties": {
                          "canary": {
                            "$ref": "#/paths/~1ocean~1cd~1strategy/post/requestBody/content/application~1json/schema/allOf/0/properties/strategy/properties/canary"
                          },
                          "rolling": {
                            "$ref": "#/paths/~1ocean~1cd~1strategy/post/requestBody/content/application~1json/schema/allOf/0/properties/strategy/properties/rolling"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "patch": {
        "summary": "Patch Ocean CD Strategy",
        "description": "Partial update of Ocean CD strategy configuration.\n",
        "operationId": "OceanCDStrategyPatch",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "strategyName",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "canary-prod",
            "description": "The identifier name of the Ocean CD Strategy\n"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "strategy"
                    ],
                    "properties": {
                      "strategy": {
                        "type": "object",
                        "title": "Ocean CD Strategy",
                        "description": "Ocean CD strategy. Use in RolloutSpec to decide what strategy to use when applying `SpotDeployment`\n",
                        "properties": {
                          "canary": {
                            "$ref": "#/paths/~1ocean~1cd~1strategy/post/requestBody/content/application~1json/schema/allOf/0/properties/strategy/properties/canary"
                          },
                          "rolling": {
                            "$ref": "#/paths/~1ocean~1cd~1strategy/post/requestBody/content/application~1json/schema/allOf/0/properties/strategy/properties/rolling"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Ocean CD Strategy",
        "description": "Delete an existing Ocean CD strategy.\n",
        "operationId": "OceanCDStrategyDelete",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "strategyName",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "canary-prod",
            "description": "The identifier name of the Ocean CD Strategy\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/cd/rolloutSpec": {
      "summary": "Ocean CD",
      "post": {
        "summary": "Create Ocean CD Rollout Spec",
        "description": "Create Ocean CD Rollout Spec.\n",
        "operationId": "OceanCDRolloutSpecCreate",
        "tags": [
          "Ocean CD"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Ocean CD Rollout Spec Request",
                    "description": "Ocean CD Rollout Spec request entity.\n",
                    "properties": {
                      "rolloutSpec": {
                        "type": "object",
                        "title": "Ocean CD Rollout Spec",
                        "description": "Ocean CD Rollout Spec entity.\n",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The identifier name for Ocean CD Rollout Spec. Must be unique",
                            "example": "my-rolloutspec"
                          },
                          "spotDeployment": {
                            "type": "object",
                            "title": "Ocean CD Spot Deployment Selector",
                            "description": "Represents the SpotDeployment selector",
                            "properties": {
                              "clusterId": {
                                "type": "string",
                                "description": "Ocean CD cluster identifier for the references `SpotDeployment`",
                                "example": "aws-cluster"
                              },
                              "namespace": {
                                "type": "string",
                                "description": "The namespace which the `SpotDeployment` resource exists within",
                                "example": "us-region"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the `SpotDeployment` resource",
                                "example": "us-app"
                              }
                            }
                          },
                          "spotDeployments": {
                            "type": "array",
                            "description": "You must specify either `spotDeployment` OR `spotDeployments` but not both. Every SpotDeployment has to be unique. If more than one `SpotDeployment` has been configured, no `traffic` managers can be set as part of the RolloutSpec. For such case ensure that each of the chosen SpotDeployments are being exposed with different Kubernetes services",
                            "items": {
                              "$ref": "#/paths/~1ocean~1cd~1rolloutSpec/post/requestBody/content/application~1json/schema/allOf/0/properties/rolloutSpec/properties/spotDeployment"
                            }
                          },
                          "strategy": {
                            "type": "object",
                            "title": "Ocean CD Rollout Spec Strategy",
                            "description": "Determines the Ocean CD strategy\n",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Ocean CD strategy name identifier",
                                "example": "canary-strategy"
                              },
                              "args": {
                                "type": "array",
                                "description": "Arguments defined in Verification Templates",
                                "items": {
                                  "type": "object",
                                  "title": "Ocean CD Verification argument",
                                  "description": "Represents Verification argument to inject to verification templates when running\n",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Name of an argument",
                                      "example": "app"
                                    },
                                    "value": {
                                      "type": "string",
                                      "description": "Value of an argument",
                                      "example": "my-application"
                                    },
                                    "valueFrom": {
                                      "type": "object",
                                      "title": "Ocean CD Verification argument value from",
                                      "description": "Defines from where to get the value of an argument\n",
                                      "required": [
                                        "fieldRef"
                                      ],
                                      "properties": {
                                        "fieldRef": {
                                          "type": "object",
                                          "title": "Ocean CD Verification argument value from field ref",
                                          "description": "Defines the field path from where to get the value of an argument\n",
                                          "properties": {
                                            "fieldPath": {
                                              "type": "string",
                                              "description": "Path to SpotDeployment's field from where to get the value of an argument",
                                              "example": "metadata.labels['app']"
                                            }
                                          },
                                          "required": [
                                            "fieldPath"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "name"
                            ]
                          },
                          "traffic": {
                            "type": "object",
                            "title": "Ocean CD Rollout Spec Traffic",
                            "description": "Hosts all of the supported service meshes needed to enable more fine-grained traffic routing. In case `SpotDeployments` contains more than one SpotDeployment the `traffic` manager may not be configured\n",
                            "properties": {
                              "canaryService": {
                                "type": "string",
                                "description": "The canary service name",
                                "example": "canary-service"
                              },
                              "stableService": {
                                "type": "string",
                                "description": "The stable service name",
                                "example": "stable-service"
                              },
                              "istio": {
                                "type": "object",
                                "title": "Ocean CD Rollout Spec Traffic Istio",
                                "description": "Holds Istio specific configuration to route traffic\n",
                                "properties": {
                                  "virtualServices": {
                                    "type": "array",
                                    "description": "Defines a set of traffic routing rules to apply when a host is addressed",
                                    "items": {
                                      "type": "object",
                                      "title": "Ocean CD Rollout Spec Traffic Istio Virtual Service",
                                      "description": "Holds Istio specific configuration to route traffic\n",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "Holds the name of the VirtualService",
                                          "example": "service"
                                        },
                                        "routes": {
                                          "description": "A list of HTTP routes within VirtualService",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "example": [
                                            "http-primary"
                                          ]
                                        },
                                        "tlsRoutes": {
                                          "type": "array",
                                          "description": "A list of HTTPS routes within VirtualService",
                                          "items": {
                                            "type": "object",
                                            "title": "Ocean CD Rollout Spec Traffic Istio Virtual Service TLS routes",
                                            "description": "Holds Istio specific configuration to route traffic\n",
                                            "properties": {
                                              "port": {
                                                "type": "integer",
                                                "description": "The port of the TLS Route desired to be matched in the given Istio VirtualService",
                                                "example": 443
                                              },
                                              "sniHosts": {
                                                "description": "A list of all the SNI Hosts of the TLS Route desired to be matched in the given Istio VirtualService",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "example": [
                                                  "spot.io"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "required": [
                                        "name"
                                      ]
                                    }
                                  },
                                  "destinationRule": {
                                    "type": "object",
                                    "title": "Ocean CD Rollout Spec Traffic Istio Destination rule",
                                    "description": "It references to an Istio DestinationRule to modify and shape traffic.  `DestinationRule` field belongs only to the Subset Level approach\n",
                                    "required": [
                                      "name",
                                      "canarySubsetName",
                                      "stableSubsetName"
                                    ],
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "rollout-destrule",
                                        "description": "Holds the name of the DestinationRule"
                                      },
                                      "canarySubsetName": {
                                        "type": "string",
                                        "example": "canary-subset",
                                        "description": "The subset name to modify labels with the canary version"
                                      },
                                      "stableSubsetName": {
                                        "type": "string",
                                        "example": "stable-subset",
                                        "description": "The subset name to modify labels with the stable version"
                                      }
                                    }
                                  }
                                },
                                "required": [
                                  "virtualServices"
                                ]
                              },
                              "nginx": {
                                "type": "object",
                                "title": "Ocean CD Rollout Spec Traffic Nginx",
                                "description": "Holds Nginx Ingress specific configuration to route traffic\n",
                                "properties": {
                                  "annotationPrefix": {
                                    "type": "string",
                                    "example": "customingress.nginx.ingress.kubernetes.io",
                                    "description": "Has to match the configured annotation prefix on the Nginx ingress controller"
                                  },
                                  "stableIngress": {
                                    "type": "string",
                                    "example": "rollouts-demo-ingress-nginx",
                                    "description": "Refers to the name of an `Ingress` resource in the same namespace as the `SpotDeployment`"
                                  },
                                  "additionalIngressAnnotations": {
                                    "type": "object",
                                    "description": "Provides additional features to add to the canary ingress (such as routing by header, cookie, etc). You can add these Kubernetes annotations to specific Ingress objects to customize their behavior. Above are found examples of accepted k8s keys. For the full list of supported keys, you may reach the following documentation - https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/#canary",
                                    "properties": {
                                      "canary-by-header": {
                                        "type": "string",
                                        "example": "X-Canary",
                                        "description": "Allows customizing the header value instead of using hardcoded values"
                                      },
                                      "key1": {
                                        "type": "string",
                                        "example": "value1",
                                        "description": "Any of supported annotations"
                                      }
                                    }
                                  }
                                },
                                "required": [
                                  "stableIngress"
                                ]
                              },
                              "alb": {
                                "type": "object",
                                "title": "Ocean CD Rollout Spec Traffic ALB",
                                "description": "Holds ALB Ingress specific configuration to route traffic\n",
                                "properties": {
                                  "ingress": {
                                    "type": "string",
                                    "example": "rollouts-demo-ingress",
                                    "description": "Refers to the name of an `Ingress` resource in the same namespace as the `SpotDeployment`"
                                  },
                                  "servicePort": {
                                    "type": "integer",
                                    "example": 80,
                                    "description": "Refers to the port that the Ingress action should route traffic to"
                                  },
                                  "rootService": {
                                    "type": "string",
                                    "example": "rollouts-demo-root",
                                    "description": "References the service in the ingress to the controller should add the action to"
                                  },
                                  "stickinessConfig": {
                                    "type": "object",
                                    "title": "Ocean CD Rollout Spec Traffic ALB Stickiness config",
                                    "description": "Allows to specify further settings on the ForwardConfig\n",
                                    "properties": {
                                      "enabled": {
                                        "type": "boolean",
                                        "description": "Enables the load balancer to bind a user's session to a specific target.",
                                        "example": true
                                      },
                                      "durationSeconds": {
                                        "type": "integer",
                                        "description": "Defines how long the load balancer should consistently route the user's request to the same target",
                                        "example": 3600
                                      }
                                    }
                                  },
                                  "annotationPrefix": {
                                    "type": "string",
                                    "example": "custom.alb.ingress.kubernetes.io",
                                    "description": "Has to match the configured annotation prefix on the alb ingress controller"
                                  }
                                },
                                "required": [
                                  "ingress",
                                  "servicePort",
                                  "rootService"
                                ]
                              },
                              "smi": {
                                "type": "object",
                                "title": "Ocean CD Rollout Spec Traffic SMI",
                                "description": "Holds TrafficSplit specific configuration to route traffic\n",
                                "properties": {
                                  "rootService": {
                                    "type": "string",
                                    "example": "rollouts-demo-root",
                                    "description": "Holds the name of service that clients use to communicate"
                                  },
                                  "trafficSplitName": {
                                    "type": "string",
                                    "example": "rollout-example-traffic-split",
                                    "description": "Holds the name of the TrafficSplit"
                                  }
                                }
                              },
                              "ambassador": {
                                "type": "object",
                                "title": "Ocean CD Rollout Spec Traffic Ambassador",
                                "description": "Holds specific configuration to use Ambassador to route traffic\n",
                                "properties": {
                                  "mappings": {
                                    "description": "A list of names of the Ambassador Mappings used to route traffic to the service",
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "description": "The name of the Ambassador Mappings used to route traffic to the service",
                                      "example": "stable-mapping"
                                    }
                                  }
                                },
                                "required": [
                                  "mappings"
                                ]
                              },
                              "pingPong": {
                                "type": "object",
                                "title": "Ocean CD Rollout Spec Traffic PingPong",
                                "description": "Holds the ping and pong services. You can use `pingPong` field only when using ALB as a traffic manager with the IP Mode approach\n",
                                "properties": {
                                  "pingService": {
                                    "type": "string",
                                    "example": "rollouts-demo-canary",
                                    "description": "Holds the name of the ping service"
                                  },
                                  "pongService": {
                                    "type": "string",
                                    "example": "rollouts-demo-stable",
                                    "description": "Holds the name of the pong service"
                                  }
                                },
                                "required": [
                                  "pingService",
                                  "pongService"
                                ]
                              }
                            }
                          },
                          "failurePolicy": {
                            "type": "object",
                            "title": "Ocean CD Rollout Spec Failure Policy",
                            "description": "Holds information on how to react when failure happens\n",
                            "properties": {
                              "action": {
                                "type": "string",
                                "description": "Choose an action to perform on failure. Default is `abort`",
                                "enum": [
                                  "abort",
                                  "pause",
                                  "promote"
                                ],
                                "example": "abort"
                              }
                            },
                            "required": [
                              "action"
                            ]
                          }
                        },
                        "required": [
                          "name",
                          "strategy"
                        ]
                      }
                    },
                    "required": [
                      "rolloutSpec"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1cd~1rolloutSpec/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Ocean CD Rollout Specs",
        "description": "List all Ocean CD Rollout Specs.\n",
        "operationId": "OceanCDRolloutSpecList",
        "tags": [
          "Ocean CD"
        ],
        "responses": {
          "200": {
            "description": "Ocean CD Rollout Spec Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "allOf": [
                                  {
                                    "$ref": "#/paths/~1ocean~1cd~1rolloutSpec/post/requestBody/content/application~1json/schema/allOf/0/properties/rolloutSpec"
                                  },
                                  {
                                    "$ref": "#/paths/~1ocean~1cd~1strategy/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/1"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/cd/rolloutSpec/{rolloutSpecName}": {
      "summary": "Ocean CD",
      "get": {
        "summary": "Get Ocean CD Rollout Spec",
        "description": "Get the configuration of an existing Ocean CD Rollout Spec.\n",
        "operationId": "oceanCDRolloutSpecGet",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "rolloutSpecName",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "app-rolloutspec",
            "description": "The identifier name of the Ocean CD Rollout Spec"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1cd~1rolloutSpec/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Ocean CD Rollout Spec",
        "description": "Full update Ocean CD Rollout Spec configuration.\n*All non included fields will be nullified*\n",
        "operationId": "OceanCDRolloutSpecUpdate",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "rolloutSpecName",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "app-rolloutspec",
            "description": "The identifier name of the Ocean CD Rollout Spec\n"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Ocean CD Rollout Spec Update Request",
                    "description": "Ocean CD rollout spec UPDATE request entity.\n",
                    "properties": {
                      "rolloutSpec": {
                        "type": "object",
                        "title": "Ocean CD Rollout Spec",
                        "description": "Ocean CD rollout spec entity\n",
                        "properties": {
                          "spotDeployment": {
                            "$ref": "#/paths/~1ocean~1cd~1rolloutSpec/post/requestBody/content/application~1json/schema/allOf/0/properties/rolloutSpec/properties/spotDeployment"
                          },
                          "spotDeployments": {
                            "type": "array",
                            "description": "You must specify either `SpotDeployment` OR `SpotDeployments` but not both. Every SpotDeployment has to be unique. If more than one `SpotDeployment` has been configured, no `traffic` managers can be set as part of the RolloutSpec. For such case ensure that each of the chosen SpotDeployments are being exposed with different Kubernetes services",
                            "items": {
                              "$ref": "#/paths/~1ocean~1cd~1rolloutSpec/post/requestBody/content/application~1json/schema/allOf/0/properties/rolloutSpec/properties/spotDeployment"
                            }
                          },
                          "strategy": {
                            "$ref": "#/paths/~1ocean~1cd~1rolloutSpec/post/requestBody/content/application~1json/schema/allOf/0/properties/rolloutSpec/properties/strategy"
                          },
                          "traffic": {
                            "$ref": "#/paths/~1ocean~1cd~1rolloutSpec/post/requestBody/content/application~1json/schema/allOf/0/properties/rolloutSpec/properties/traffic"
                          },
                          "failurePolicy": {
                            "$ref": "#/paths/~1ocean~1cd~1rolloutSpec/post/requestBody/content/application~1json/schema/allOf/0/properties/rolloutSpec/properties/failurePolicy"
                          }
                        },
                        "required": [
                          "strategy"
                        ]
                      }
                    },
                    "required": [
                      "rolloutSpec"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "patch": {
        "summary": "Patch Ocean CD Rollout Spec",
        "description": "Partial update Ocean CD Rollout Spec configuration.\n",
        "operationId": "OceanCDRolloutSpecPatch",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "rolloutSpecName",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "app-rolloutspec",
            "description": "The identifier name of the Ocean CD Rollout Spec\n"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Ocean CD Rollout Spec Patch Request",
                    "description": "Ocean CD rollout spec PATCH request entity.\n",
                    "properties": {
                      "rolloutSpec": {
                        "type": "object",
                        "title": "Ocean CD Rollout Spec",
                        "description": "Ocean CD rollout spec entity\n",
                        "properties": {
                          "spotDeployment": {
                            "$ref": "#/paths/~1ocean~1cd~1rolloutSpec/post/requestBody/content/application~1json/schema/allOf/0/properties/rolloutSpec/properties/spotDeployment"
                          },
                          "spotDeployments": {
                            "type": "array",
                            "description": "You must specify either `SpotDeployment` OR `SpotDeployments` but not both. Every SpotDeployment has to be unique. If more than one `SpotDeployment` has been configured, no `traffic` managers can be set as part of the RolloutSpec. For such case ensure that each of the chosen SpotDeployments are being exposed with different Kubernetes services",
                            "items": {
                              "$ref": "#/paths/~1ocean~1cd~1rolloutSpec/post/requestBody/content/application~1json/schema/allOf/0/properties/rolloutSpec/properties/spotDeployment"
                            }
                          },
                          "strategy": {
                            "$ref": "#/paths/~1ocean~1cd~1rolloutSpec/post/requestBody/content/application~1json/schema/allOf/0/properties/rolloutSpec/properties/strategy"
                          },
                          "traffic": {
                            "$ref": "#/paths/~1ocean~1cd~1rolloutSpec/post/requestBody/content/application~1json/schema/allOf/0/properties/rolloutSpec/properties/traffic"
                          },
                          "failurePolicy": {
                            "$ref": "#/paths/~1ocean~1cd~1rolloutSpec/post/requestBody/content/application~1json/schema/allOf/0/properties/rolloutSpec/properties/failurePolicy"
                          }
                        },
                        "required": [
                          "strategy"
                        ]
                      }
                    },
                    "required": [
                      "rolloutSpec"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Ocean CD Rollout Spec",
        "description": "Delete an existing Ocean CD Rollout Spec.\n",
        "operationId": "OceanCDRolloutSpecDelete",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "rolloutSpecName",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "app-rolloutspec",
            "description": "The identifier name of the Ocean CD Rollout Spec\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/cd/rollout/{rolloutId}": {
      "summary": "Ocean CD",
      "get": {
        "summary": "Get Ocean CD Rollout by ID",
        "description": "Get Ocean CD rollout by ID.",
        "operationId": "OceanCDRolloutSingle",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "rolloutId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "rol-123456",
            "description": "The identifier name of the Ocean CD rollout\n"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1cd~1rollout/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Ocean CD Rollout Actions",
        "description": "Execute action on an existing Ocean CD rollout.",
        "operationId": "OceanCDRolloutActions",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "rolloutId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "rol-123456",
            "description": "The identifier name of the Ocean CD rollout\n"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Ocean CD Rollout Update Request",
                    "description": "Ocean CD rollout update request entity.\n",
                    "properties": {
                      "action": {
                        "type": "string",
                        "description": "An action that might be applied to a rollout",
                        "enum": [
                          "promote",
                          "promoteFull",
                          "pause",
                          "abort",
                          "retry"
                        ]
                      }
                    },
                    "required": [
                      "action"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/cd/rollout": {
      "summary": "Ocean CD",
      "get": {
        "summary": "List Ocean CD Rollouts",
        "description": "List Ocean CD rollouts.\n",
        "operationId": "OceanCDRolloutList",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "fromDate",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "1656622800000",
            "description": "The timestamp indicating the starting point from which only rollouts initiated thereafter will be listed\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean CD Rollout List Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "title": "Ocean CD Rollout",
                                    "description": "Determines the Ocean CD rollout\n",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "The identifier name of the rollout",
                                        "example": "rol-56789000"
                                      },
                                      "spotDeployment": {
                                        "type": "object",
                                        "title": "Ocean CD Rollout SpotDeployment Base",
                                        "description": "The associated SpotDeployment's info",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the associated SpotDeployment",
                                            "example": "example-12345"
                                          },
                                          "isLiveApplied": {
                                            "type": "boolean",
                                            "description": "Indicates whether the applied version is the same that currently running",
                                            "example": false
                                          },
                                          "revision": {
                                            "type": "integer",
                                            "description": "The field specifying the SpotDeployment revision rollback to",
                                            "example": 3
                                          },
                                          "$ref": "#/paths/~1ocean~1cd~1rollout~1%7BrolloutId%7D~1resource/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/spotDeployment/properties",
                                          "spotDeploymentDeletedAt": {
                                            "type": "string",
                                            "example": "2018-11-05T12:55:50.000Z",
                                            "description": "Time stamp of when the SpotDeployment the rollout belongs to was deleted.\n"
                                          }
                                        }
                                      },
                                      "namespace": {
                                        "type": "string",
                                        "description": "The Kubernetes namespace in which the rollout is running",
                                        "example": "oceancd"
                                      },
                                      "clusterId": {
                                        "type": "string",
                                        "description": "The identifier name of Ocean CD cluster",
                                        "example": "oceancd-cluster"
                                      },
                                      "originalRolloutId": {
                                        "type": "string",
                                        "description": "If the rollout was triggered based on another rollout, this field specifies the ID of the original rollout",
                                        "example": "rol-1000550"
                                      },
                                      "newRolloutId": {
                                        "type": "string",
                                        "description": "If the rollout triggered another rollout, this field specifies the ID of the new rollout",
                                        "example": "rol-1000551"
                                      },
                                      "strategyType": {
                                        "type": "string",
                                        "description": "Defines the type of applied deployment strategy",
                                        "example": "canary"
                                      },
                                      "strategyName": {
                                        "type": "string",
                                        "description": "An identifier name of the associated Ocean CD Strategy",
                                        "example": "4-steps-verification"
                                      },
                                      "status": {
                                        "$ref": "#/paths/~1ocean~1cd~1workload~1%7BworkloadName%7D~1namespace~1%7Bnamespace%7D~1graph/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/0/properties/status"
                                      },
                                      "startTime": {
                                        "type": "string",
                                        "description": "The timestamp representing the start time of the rollout",
                                        "example": "2018-11-05T12:55:50.000Z"
                                      },
                                      "endTime": {
                                        "type": "string",
                                        "description": "The timestamp representing the end time of the rollout",
                                        "example": "2018-11-05T12:58:15.000Z"
                                      },
                                      "rolloutSpec": {
                                        "type": "string",
                                        "description": "An identifier name of the associated Ocean CD RolloutSpec",
                                        "example": "canary-nginx-rolloutspec"
                                      },
                                      "cloudProvider": {
                                        "type": "string",
                                        "description": "The cloud provider where the associated cluster exists",
                                        "example": "aws"
                                      },
                                      "clusterDeletedAt": {
                                        "type": "string",
                                        "example": "2018-11-05T12:55:50.000Z",
                                        "description": "Time stamp of when the cluster the rollout belongs to was deleted.\n"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/cd/rollout/{rolloutId}/status": {
      "summary": "Ocean CD",
      "get": {
        "summary": "Get Ocean CD Rollout Status",
        "description": "Get Ocean CD rollout status.\n",
        "operationId": "OceanCDRolloutStatus",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "rolloutId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "rol-1234567890",
            "description": "The identifier name of the Ocean CD rollout\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean CD Rollout Status Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "allOf": [
                                  {
                                    "$ref": "#/paths/~1ocean~1cd~1rollout~1latest/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/0"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/cd/rollout/latest": {
      "summary": "Ocean CD",
      "get": {
        "summary": "Get Ocean CD Latest Rollouts",
        "description": "Get Ocean CD latest rollout(s).",
        "operationId": "OceanCDRolloutLatest",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "spotDeployment",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "spotDeployment-name",
            "description": "The identifier name of the associated SpotDeployment"
          },
          {
            "in": "query",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "namespace-name",
            "description": "The Kubernetes namespace in which the rollout is running"
          },
          {
            "in": "query",
            "name": "clusterId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "cluster-id",
            "description": "The identifier name of Ocean CD cluster"
          },
          {
            "in": "query",
            "name": "count",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": 1,
            "description": "Number of intended responses, sorted from the last one down"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean CD Rollout List Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "title": "Ocean CD Rollout Detailed",
                                    "description": "Contains detailed info about a rollout",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "The identifier name of the rollout",
                                        "example": "rol-56789000"
                                      },
                                      "status": {
                                        "$ref": "#/paths/~1ocean~1cd~1workload~1%7BworkloadName%7D~1namespace~1%7Bnamespace%7D~1graph/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/0/properties/status"
                                      },
                                      "spotDeployment": {
                                        "type": "string",
                                        "description": "The identifier name of the associated SpotDeployment",
                                        "example": "oceancd-spotdeployment-1"
                                      },
                                      "originalRolloutId": {
                                        "type": "string",
                                        "description": "If the rollout was triggered based on another rollout, this field specifies the ID of the original rollout",
                                        "example": "rol-1000550"
                                      },
                                      "newRolloutId": {
                                        "type": "string",
                                        "description": "If the rollout triggered another rollout, this field specifies the ID of the new rollout",
                                        "example": "rol-1000551"
                                      },
                                      "startTime": {
                                        "type": "string",
                                        "description": "The timestamp representing the start time of the rollout",
                                        "example": "2018-11-05T12:55:50.000Z"
                                      },
                                      "endTime": {
                                        "type": "string",
                                        "description": "The timestamp representing the end time of the rollout",
                                        "example": "2018-11-05T12:58:15.000Z"
                                      },
                                      "clusterId": {
                                        "type": "string",
                                        "description": "The identifier name of Ocean CD cluster",
                                        "example": "oceancd-cluster"
                                      },
                                      "namespace": {
                                        "type": "string",
                                        "description": "The Kubernetes namespace in which the rollout is running",
                                        "example": "oceancd"
                                      },
                                      "strategy": {
                                        "type": "string",
                                        "description": "Defines the type of applied deployment strategy",
                                        "example": "canary"
                                      },
                                      "hasBackgroundVerification": {
                                        "type": "boolean",
                                        "description": "Defines if any background verification was applied to the rollout",
                                        "example": true
                                      },
                                      "failureReason": {
                                        "type": "string",
                                        "description": "An error text describing its cause",
                                        "example": "Triggering failure policy. Phase 2 failed due to Metric assessed"
                                      },
                                      "newVersionStatus": {
                                        "type": "object",
                                        "title": "Ocean CD Rollout Detailed Version Status",
                                        "description": "Contains information about a version",
                                        "properties": {
                                          "version": {
                                            "type": "string",
                                            "description": "The version of the used image",
                                            "example": "nginx:1.10"
                                          },
                                          "k8sService": {
                                            "type": "string",
                                            "description": "The name of the associated service",
                                            "example": "service-example"
                                          },
                                          "trafficPercentage": {
                                            "type": "integer",
                                            "description": "The percentage of traffic directed to the current version",
                                            "example": 80
                                          },
                                          "replicas": {
                                            "type": "object",
                                            "title": "Ocean CD Rollout Detailed Version Replicas Status",
                                            "description": "Contains information about the version replicas",
                                            "properties": {
                                              "desired": {
                                                "type": "integer",
                                                "description": "Desired number of the application replicas",
                                                "example": 4
                                              },
                                              "ready": {
                                                "type": "integer",
                                                "description": "Number of replicas that are available",
                                                "example": 2
                                              },
                                              "inProgress": {
                                                "type": "integer",
                                                "description": "Number of replicas that are progressing",
                                                "example": 1
                                              },
                                              "failed": {
                                                "type": "integer",
                                                "description": "Number of replicas that are failed",
                                                "example": 1
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "stableVersionStatus": {
                                        "$ref": "#/paths/~1ocean~1cd~1rollout~1latest/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/0/properties/newVersionStatus"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/cd/rollout/ongoing": {
      "summary": "Ocean CD",
      "get": {
        "summary": "Get Ocean CD Ongoing Rollouts Number",
        "description": "Get Ocean CD ongoing rollouts number.",
        "operationId": "OceanCDRolloutsOngoing",
        "tags": [
          "Ocean CD"
        ],
        "responses": {
          "200": {
            "description": "Ocean CD Rollout Ongoing Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body",
                          "properties": {
                            "items": {
                              "items": {
                                "properties": {
                                  "rollouts": {
                                    "type": "integer",
                                    "format": "int64",
                                    "example": 1,
                                    "description": "The number of ongoing rollouts"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/cd/rollout/{rolloutId}/verification": {
      "summary": "Ocean CD",
      "get": {
        "summary": "Get Ocean CD Rollout Verification",
        "description": "Get Ocean CD rollout verification.\n",
        "operationId": "OceanCDRolloutVerification",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "rolloutId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "rol-123456",
            "description": "The identifier name of the Ocean CD Rollout Verification\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean CD Rollout Verification Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "title": "Ocean CD Rollout Verification Result",
                                    "description": "Ocean CD rollout verification result entity\n",
                                    "properties": {
                                      "metricName": {
                                        "type": "string",
                                        "description": "The identifier name of the metric",
                                        "example": "prometheus-metric"
                                      },
                                      "startTime": {
                                        "type": "string",
                                        "description": "The timestamp representing the start time of verification",
                                        "example": "2018-11-05T12:55:50.000Z"
                                      },
                                      "status": {
                                        "type": "string",
                                        "enum": [
                                          "pending",
                                          "running",
                                          "inProgress",
                                          "successful",
                                          "failed",
                                          "error"
                                        ],
                                        "description": "The status of the verification",
                                        "example": "successful"
                                      },
                                      "message": {
                                        "type": "string",
                                        "description": "The message of the verification",
                                        "example": "Failed to get data"
                                      },
                                      "failureCondition": {
                                        "type": "string",
                                        "description": "The expression which determines if a measurement is failed",
                                        "example": "result[0] >= 1000000"
                                      },
                                      "successCondition": {
                                        "type": "string",
                                        "description": "The expression which determines if a measurement is successful",
                                        "example": "result[0] < 1000000"
                                      },
                                      "query": {
                                        "type": "string",
                                        "description": "The query that will provide the result to check with the failure/success condition",
                                        "example": "sum(container_cpu_usage_seconds_total{namespace=\"analysis-namespace\", endpoint=\"https-metrics\"})"
                                      },
                                      "failureLimit": {
                                        "type": "integer",
                                        "description": "The maximum number of times the measurement is allowed to fail before the entire metric is considered failed. The default is 0",
                                        "example": 1
                                      },
                                      "interval": {
                                        "type": "string",
                                        "description": "The interval between each verification measurement",
                                        "example": "5s"
                                      },
                                      "count": {
                                        "type": "integer",
                                        "example": 3,
                                        "description": "The number of times the measurement has to run"
                                      },
                                      "dataPoints": {
                                        "type": "array",
                                        "description": "The info about the verification measurements",
                                        "items": {
                                          "type": "object",
                                          "title": "Ocean CD Verification DataPoint",
                                          "description": "Represents object of Verification DataPoint",
                                          "properties": {
                                            "timestamp": {
                                              "type": "string",
                                              "example": "2018-11-05T12:55:50.000Z",
                                              "description": "The timestamp of the dataPoint"
                                            },
                                            "value": {
                                              "type": "string",
                                              "description": "The value of the dataPoint",
                                              "example": "[11.374236757]"
                                            },
                                            "status": {
                                              "type": "string",
                                              "example": "Successful",
                                              "description": "The status of the dataPoint"
                                            },
                                            "message": {
                                              "type": "string",
                                              "example": "failure message",
                                              "description": "The message of the dataPoint"
                                            }
                                          }
                                        }
                                      },
                                      "provider": {
                                        "type": "string",
                                        "description": "The name of the chosen monitoring tool for the metric",
                                        "enum": [
                                          "datadog",
                                          "newRelic",
                                          "prometheus",
                                          "cloudWatch",
                                          "web",
                                          "job"
                                        ],
                                        "example": "prometheus"
                                      },
                                      "step": {
                                        "type": "string",
                                        "description": "The step where the failure/success comes from",
                                        "example": "1"
                                      },
                                      "baseline": {
                                        "type": "object",
                                        "description": "Describe baseline metric such as metric, threshold and result",
                                        "title": "Ocean CD Verification Baseline",
                                        "properties": {
                                          "baselineResult": {
                                            "type": "number",
                                            "format": "double",
                                            "example": 2.453,
                                            "description": "describe the baseline metric result"
                                          },
                                          "metric": {
                                            "type": "object",
                                            "description": "describe the baseline metric",
                                            "title": "Ocean CD Verification Baseline Metric",
                                            "properties": {
                                              "threshold": {
                                                "type": "string",
                                                "example": "<",
                                                "description": "represent the baseline threshold",
                                                "enum": [
                                                  "<",
                                                  "<=",
                                                  ">",
                                                  ">=",
                                                  "=",
                                                  "range"
                                                ]
                                              },
                                              "provider": {
                                                "description": "represent the baseline provider.",
                                                "type": "object",
                                                "title": "Ocean CD Verification Baseline Metric Provider",
                                                "properties": {
                                                  "prometheus": {
                                                    "type": "object",
                                                    "$ref": "#/paths/~1ocean~1cd~1verificationTemplate/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/0/properties/metrics/items/properties/provider/properties/prometheus"
                                                  },
                                                  "newRelic": {
                                                    "type": "object",
                                                    "$ref": "#/paths/~1ocean~1cd~1verificationTemplate/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/0/properties/metrics/items/properties/provider/properties/newRelic"
                                                  },
                                                  "datadog": {
                                                    "type": "object",
                                                    "$ref": "#/paths/~1ocean~1cd~1verificationTemplate/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/0/properties/metrics/items/properties/provider/properties/datadog"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "providerDetails": {
                                        "type": "object",
                                        "description": "The chosen for the metric monitoring tool's details",
                                        "properties": {
                                          "job": {
                                            "type": "object",
                                            "description": "The Job verification provider",
                                            "properties": {
                                              "containers": {
                                                "type": "array",
                                                "description": "List of containers belonging to the pod",
                                                "items": {
                                                  "type": "object",
                                                  "description": "A container belonging to the pod",
                                                  "properties": {
                                                    "name": {
                                                      "type": "string",
                                                      "description": "The name of a container",
                                                      "example": "hello"
                                                    },
                                                    "command": {
                                                      "type": "array",
                                                      "description": "The entry point of a container",
                                                      "example": [
                                                        "sh",
                                                        "-c",
                                                        "echo",
                                                        "Hello, world!"
                                                      ],
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "image": {
                                                      "type": "string",
                                                      "description": "The image name of a container",
                                                      "example": "nginx:1.21"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/cd/rollout/{rolloutId}/definition": {
      "summary": "Ocean CD",
      "get": {
        "summary": "Get Ocean CD Rollout Definition",
        "description": "Get Ocean CD rollout definition.",
        "operationId": "OceanCDRolloutDefinition",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "rolloutId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "rol-123456",
            "description": "The identifier name of the Ocean CD rollout"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean CD Rollout Definition Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body",
                          "properties": {
                            "items": {
                              "type": "object",
                              "properties": {
                                "rolloutSpec": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1cd~1rolloutSpec/post/requestBody/content/application~1json/schema/allOf/0/properties/rolloutSpec"
                                    },
                                    {
                                      "$ref": "#/paths/~1ocean~1cd~1strategy/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/1"
                                    }
                                  ]
                                },
                                "strategy": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "title": "Ocean CD Strategy",
                                      "description": "Ocean CD strategy. Use in RolloutSpec to decide what strategy to use when applying `SpotDeployment`\n",
                                      "properties": {
                                        "canary": {
                                          "$ref": "#/paths/~1ocean~1cd~1strategy/post/requestBody/content/application~1json/schema/allOf/0/properties/strategy/properties/canary"
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "canary"
                                      ]
                                    },
                                    {
                                      "$ref": "#/paths/~1ocean~1cd~1strategy/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/1"
                                    }
                                  ]
                                },
                                "phaseVerifications": {
                                  "type": "array",
                                  "description": "A list of phase verifications associated with the rollout",
                                  "items": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "Ocean CD Rollout Phase Verification",
                                        "description": "The object specifying a set of metrics that need to be analyzed during the phase",
                                        "properties": {
                                          "args": {
                                            "description": "List of verification arguments",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "title": "Ocean CD Rollout Phase Verification Argument",
                                              "description": "The object specifying a rollout phase verification argument",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "example": "root-password",
                                                  "description": "Name of an argument"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "example": 12345678,
                                                  "description": "String representation of data"
                                                },
                                                "valueFrom": {
                                                  "type": "object",
                                                  "description": "Allows to set a value from a reference",
                                                  "properties": {
                                                    "fieldRef": {
                                                      "type": "object",
                                                      "title": "Ocean CD Verification FieldRef",
                                                      "description": "The object specifying a field reference",
                                                      "properties": {
                                                        "fieldPath": {
                                                          "type": "string",
                                                          "description": "Path to the wanted field in the SpotDeployment manifest",
                                                          "example": "metadata.labels['env']"
                                                        }
                                                      }
                                                    },
                                                    "secretKeyRef": {
                                                      "type": "object",
                                                      "title": "Ocean CD Verification Template Secret Key Ref",
                                                      "description": "Secret key to use",
                                                      "required": [
                                                        "name",
                                                        "key"
                                                      ],
                                                      "properties": {
                                                        "name": {
                                                          "description": "The name of the secret",
                                                          "example": "root-password-secret",
                                                          "type": "string"
                                                        },
                                                        "key": {
                                                          "description": "The name of the field inside the secret",
                                                          "example": "root-password",
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "metrics": {
                                            "type": "array",
                                            "description": "List of verification metrics",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "name",
                                                "provider"
                                              ],
                                              "title": "Ocean CD Verification Metric",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "example": "5xx-errors",
                                                  "description": "The name of the verification metric"
                                                },
                                                "dryRun": {
                                                  "type": "boolean",
                                                  "example": false,
                                                  "description": "Defines whether the metric should have an impact on the result of the rollout"
                                                },
                                                "interval": {
                                                  "type": "string",
                                                  "example": "5m",
                                                  "description": "Defines an interval string (30s, 5m, 1h) between each verification measurements. If omitted, will perform a single measurement. When choosing `Jenkins` as the provider, there is no need to send this variable."
                                                },
                                                "initialDelay": {
                                                  "type": "string",
                                                  "description": "How long to wait before starting this metric measurements. When choosing `Jenkins` as the provider, there is no need to send this variable.",
                                                  "example": "1m"
                                                },
                                                "count": {
                                                  "type": "integer",
                                                  "description": "The number of times to run the measurement. If both interval and count are omitted, the effective count is 1. If only interval is specified, metric runs indefinitely. If count > 1, interval must be specified. When choosing `Jenkins` as the provider, there is no need to send this variable.",
                                                  "example": 10
                                                },
                                                "successCondition": {
                                                  "type": "string",
                                                  "description": "An expression which determines if a measurement is considered successful. The keyword `result` is a variable reference to the value of measurement. Results can be both structured data or primitive. If successCondition is set, then failureCondition is not allowed. When choosing `Jenkins` as the provider, there is no need to send this variable.",
                                                  "example": "result[0] <= 0.95"
                                                },
                                                "failureCondition": {
                                                  "type": "string",
                                                  "description": "An expression which determines if a measurement is considered failed. If failureCondition is set, then successCondition is not allowed. When choosing `Jenkins` as the provider, there is no need to send this variable.",
                                                  "example": "result[0] >= 1.2"
                                                },
                                                "failureLimit": {
                                                  "type": "integer",
                                                  "example": 2,
                                                  "description": "The maximum number of times the measurement is allowed to fail, before the entire metric is considered failed. Default is 0. When choosing `Jenkins` as the provider, there is no need to send this variable."
                                                },
                                                "consecutiveErrorLimit": {
                                                  "type": "integer",
                                                  "example": 4,
                                                  "description": "The maximum number of times the measurement is allowed to error in succession, before the metric is considered error. Default is 4. When choosing `Jenkins` as the provider, there is no need to send this variable."
                                                },
                                                "provider": {
                                                  "type": "object",
                                                  "title": "Ocean CD Verification Metric Provider, only one provider type can be defined",
                                                  "description": "The name of the monitoring tool chosen for the metric",
                                                  "properties": {
                                                    "prometheus": {
                                                      "type": "object",
                                                      "required": [
                                                        "query"
                                                      ],
                                                      "title": "Ocean CD Verification Prometheus Metric",
                                                      "properties": {
                                                        "query": {
                                                          "type": "string",
                                                          "description": "A request for information retrieved from Prometheus",
                                                          "example": "http_requests_total{status!~\"5..\"}\""
                                                        }
                                                      }
                                                    },
                                                    "newRelic": {
                                                      "type": "object",
                                                      "title": "Ocean CD Verification NewRelic Metric",
                                                      "required": [
                                                        "query"
                                                      ],
                                                      "properties": {
                                                        "profile": {
                                                          "type": "string",
                                                          "example": "account-12345678",
                                                          "description": "The name of the secret holding NR account configuration"
                                                        },
                                                        "query": {
                                                          "type": "string",
                                                          "example": "FROM Metric SELECT count(*)",
                                                          "description": "A raw newrelic NRQL query to perform"
                                                        }
                                                      }
                                                    },
                                                    "datadog": {
                                                      "type": "object",
                                                      "title": "Ocean CD Verification Datadog Metric",
                                                      "required": [
                                                        "query"
                                                      ],
                                                      "properties": {
                                                        "duration": {
                                                          "type": "string",
                                                          "description": "The window of time we are looking at in DataDog. For example, if the values is `5m` then basically we will fetch data from (now-5m) to now",
                                                          "example": "1m"
                                                        },
                                                        "query": {
                                                          "type": "string",
                                                          "description": "A request for information retrieved from Datadog",
                                                          "example": "avg:kubernetes.cpu.user.total{*}"
                                                        }
                                                      }
                                                    },
                                                    "cloudWatch": {
                                                      "type": "object",
                                                      "title": "Ocean CD Verification CloudWatch Metric",
                                                      "required": [
                                                        "metricDataQueries"
                                                      ],
                                                      "properties": {
                                                        "duration": {
                                                          "type": "string",
                                                          "description": "The window of time we are looking at in CloudWatch. For example, if the values is `5m` then basically we will fetch data from (now-5m) to now",
                                                          "example": "5m"
                                                        },
                                                        "metricDataQueries": {
                                                          "type": "array",
                                                          "description": "The metric queries to be returned. A single MetricData call can include as many as 500 MetricDataQuery structures. Each of these structures can specify either a metric to retrieve, a Metrics Insights query, or a math expression to perform on retrieved data",
                                                          "items": {
                                                            "required": [
                                                              "id"
                                                            ],
                                                            "type": "object",
                                                            "properties": {
                                                              "id": {
                                                                "type": "string",
                                                                "example": "utilization",
                                                                "description": "The response ID. Must be unique and not null. This object can contain characters, letters, numbers and underscore. The first letter must be a lowercase letter"
                                                              },
                                                              "metricStat": {
                                                                "type": "object",
                                                                "description": "The metric to be returned, along with statistics, period, and units. Use this parameter only if this object is retrieving a metric and not performing a math expression on returned data. WITHIN ONE METRICDATAQUERY OBJECT, YOU MUST SPECIFY EITHER EXPRESSION OR METRICSTAT BUT NOT BOTH",
                                                                "properties": {
                                                                  "metric": {
                                                                    "required": [
                                                                      "metricName"
                                                                    ],
                                                                    "type": "object",
                                                                    "description": "The metric to return, including the metric name, namespace, and dimensions",
                                                                    "properties": {
                                                                      "metricName": {
                                                                        "type": "string",
                                                                        "example": "CPUUtilization",
                                                                        "description": "The name of the metric"
                                                                      },
                                                                      "namespace": {
                                                                        "type": "string",
                                                                        "example": "AWS/EC2",
                                                                        "description": "The namespace of the metric"
                                                                      },
                                                                      "dimensions": {
                                                                        "type": "array",
                                                                        "description": "A dimension is a name/value pair that is part of the identity of a metric. Because dimensions are part of the unique identifier for a metric, whenever you add a unique name/value pair to one of your metrics, you are creating a new variation of that metric. You can assign up to 30 dimensions to a metric",
                                                                        "items": {
                                                                          "type": "object",
                                                                          "required": [
                                                                            "name",
                                                                            "value"
                                                                          ],
                                                                          "properties": {
                                                                            "name": {
                                                                              "type": "string",
                                                                              "example": "InstanceId",
                                                                              "description": "The name of the dimensions. These names must contain only ASCII characters, must include at least one non-whitespace character, and cannot start with a colon(':')"
                                                                            },
                                                                            "value": {
                                                                              "type": "string",
                                                                              "example": "i-1234567890abcdef",
                                                                              "description": "The value of the dimensions. These values must contain only ASCII characters and must include at least one non-whitespace character"
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  "period": {
                                                                    "type": "integer",
                                                                    "example": 300,
                                                                    "description": "The granularity, in seconds, of the returned data points. For metrics with regular resolution, a period can be as short as one minute (60 seconds) and must be a multiple of 60. For high-resolution metrics that are collected at intervals of less than one minute, the period can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution metrics are those metrics stored by a PutMetricData call that includes a StorageResolution of 1 second"
                                                                  },
                                                                  "stat": {
                                                                    "type": "string",
                                                                    "example": "Average",
                                                                    "description": "The statistic to return. It can include any CloudWatch statistic or extended statistic"
                                                                  },
                                                                  "unit": {
                                                                    "type": "string",
                                                                    "example": "None",
                                                                    "description": "This defines what unit you want to use when storing the metric",
                                                                    "enum": [
                                                                      "Seconds",
                                                                      "Microseconds",
                                                                      "Milliseconds",
                                                                      "Bytes",
                                                                      "Kilobytes",
                                                                      "Megabytes",
                                                                      "Gigabytes",
                                                                      "Terabytes",
                                                                      "Bits",
                                                                      "Kilobits",
                                                                      "Megabits",
                                                                      "Gigabits",
                                                                      "Terabits",
                                                                      "Percent",
                                                                      "Count",
                                                                      "Bytes/Second",
                                                                      "Kilobytes/Second",
                                                                      "Megabytes/Second",
                                                                      "Gigabytes/Second",
                                                                      "Terabytes/Second",
                                                                      "Bits/Second",
                                                                      "Kilobits/Second",
                                                                      "Megabits/Second",
                                                                      "Gigabits/Second",
                                                                      "Terabits/Second",
                                                                      "Count/Second",
                                                                      "None"
                                                                    ]
                                                                  }
                                                                }
                                                              },
                                                              "expression": {
                                                                "type": "string",
                                                                "example": "SELECT AVG(CPUUtilization) FROM SCHEMA(\\\"AWS/EC2\\\", InstanceId)",
                                                                "description": "This field can contain either a Metrics Insights query, or a metric math expression to be performed on the returned data. WITHIN ONE METRICDATAQUERY OBJECT, YOU MUST SPECIFY EITHER EXPRESSION OR METRICSTAT BUT NOT BOTH"
                                                              },
                                                              "label": {
                                                                "type": "string",
                                                                "example": "Cluster CpuUtilization",
                                                                "description": "A human-readable label for this metric or expression. This is especially useful if this is an expression, so that you know what the value represents. If the metric or expression is shown in a CloudWatch dashboard widget, the label is shown. If Label is omitted, CloudWatch generates a default"
                                                              },
                                                              "returnData": {
                                                                "type": "boolean",
                                                                "example": false,
                                                                "description": "This option indicates whether to return the timestamps and raw data values of this metric. If you are performing this call just to do math expressions and do not also need the raw data returned, you can specify False . If you omit this, the default of True is used."
                                                              },
                                                              "period": {
                                                                "type": "integer",
                                                                "example": 300,
                                                                "description": "The granularity, in seconds, of the returned data points. For metrics with regular resolution, a period can be as short as one minute (60 seconds) and must be a multiple of 60. For high-resolution metrics that are collected at intervals of less than one minute, the period can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution metrics are those metrics stored by a PutMetricData call that includes a StorageResolution of 1 second."
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "web": {
                                                      "type": "object",
                                                      "title": "Ocean CD Verification Web Metric",
                                                      "required": [
                                                        "url"
                                                      ],
                                                      "properties": {
                                                        "method": {
                                                          "type": "string",
                                                          "example": "GET",
                                                          "description": "The method of the web metric (empty defaults to GET)",
                                                          "enum": [
                                                            "GET",
                                                            "POST",
                                                            "PUT"
                                                          ]
                                                        },
                                                        "url": {
                                                          "type": "string",
                                                          "example": "https://oceancd.com/api/v1/metrics?clusterId={{ args.clusterId }}",
                                                          "description": "The address of the web metric"
                                                        },
                                                        "headers": {
                                                          "type": "array",
                                                          "description": "Optional HTTP headers to use in the request",
                                                          "items": {
                                                            "type": "object",
                                                            "required": [
                                                              "key",
                                                              "value"
                                                            ],
                                                            "properties": {
                                                              "key": {
                                                                "type": "string",
                                                                "example": "Authorization",
                                                                "description": "The name of a header"
                                                              },
                                                              "value": {
                                                                "description": "The value of a header",
                                                                "example": "Bearer {{ args.token }}",
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "body": {
                                                          "type": "string",
                                                          "example": "{\"key\": \"test\"}",
                                                          "description": "The body of the web metric (applies only for the POST/PUT methods)"
                                                        },
                                                        "timeoutSeconds": {
                                                          "type": "integer",
                                                          "example": 10,
                                                          "description": "The timeout for the request in seconds. Default is 10"
                                                        },
                                                        "jsonPath": {
                                                          "type": "string",
                                                          "example": "{$.data}",
                                                          "description": "A JSON Path to use as the result variable. Default is \"{$}\""
                                                        },
                                                        "insecure": {
                                                          "type": "boolean",
                                                          "example": false,
                                                          "description": "Skips host TLS verification"
                                                        }
                                                      }
                                                    },
                                                    "job": {
                                                      "type": "object",
                                                      "title": "Ocean CD Verification Job Metric",
                                                      "required": [
                                                        "spec"
                                                      ],
                                                      "properties": {
                                                        "spec": {
                                                          "type": "object",
                                                          "description": "The job spec require to run the metric",
                                                          "required": [
                                                            "template"
                                                          ],
                                                          "properties": {
                                                            "backoffLimit": {
                                                              "type": "integer",
                                                              "example": 1,
                                                              "description": "Specifies the number of retries before marking this job failed"
                                                            },
                                                            "template": {
                                                              "type": "object",
                                                              "description": "Describes the pod that will be created when executing a job",
                                                              "required": [
                                                                "spec"
                                                              ],
                                                              "properties": {
                                                                "spec": {
                                                                  "type": "object",
                                                                  "description": "Specification of the desired behavior of the pod",
                                                                  "required": [
                                                                    "containers",
                                                                    "restartPolicy"
                                                                  ],
                                                                  "properties": {
                                                                    "containers": {
                                                                      "type": "array",
                                                                      "description": "A list of containers belonging to the pod",
                                                                      "items": {
                                                                        "type": "object",
                                                                        "required": [
                                                                          "name",
                                                                          "command",
                                                                          "image"
                                                                        ],
                                                                        "properties": {
                                                                          "name": {
                                                                            "type": "string",
                                                                            "example": "hello",
                                                                            "description": "The name of a container"
                                                                          },
                                                                          "command": {
                                                                            "type": "array",
                                                                            "description": "The entry point of a container",
                                                                            "example": [
                                                                              "sh",
                                                                              "-c",
                                                                              "echo",
                                                                              "Hello, world!"
                                                                            ],
                                                                            "items": {
                                                                              "type": "string"
                                                                            }
                                                                          },
                                                                          "image": {
                                                                            "type": "string",
                                                                            "example": "nginx:1.21",
                                                                            "description": "The image name of a container"
                                                                          }
                                                                        }
                                                                      }
                                                                    },
                                                                    "restartPolicy": {
                                                                      "type": "string",
                                                                      "description": "Restart policy for all containers within the pod",
                                                                      "enum": [
                                                                        "Never",
                                                                        "OnFailure"
                                                                      ],
                                                                      "example": "Never"
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "jenkins": {
                                                      "type": "object",
                                                      "required": [
                                                        "pipelineName",
                                                        "timeout",
                                                        "interval"
                                                      ],
                                                      "title": "Ocean CD Verification Jenkins Metric",
                                                      "properties": {
                                                        "pipelineName": {
                                                          "type": "string",
                                                          "description": "The Jenkins pipeline name",
                                                          "example": "pipelineName"
                                                        },
                                                        "tlsVerification": {
                                                          "type": "boolean",
                                                          "example": true,
                                                          "description": "Host TLS verification"
                                                        },
                                                        "timeout": {
                                                          "type": "string",
                                                          "description": "The total jenkins timeout",
                                                          "example": "120s/2m"
                                                        },
                                                        "interval": {
                                                          "type": "string",
                                                          "description": "The interval time to poll status",
                                                          "example": "5s"
                                                        },
                                                        "parameters": {
                                                          "type": "array",
                                                          "description": "List of parameters",
                                                          "items": {
                                                            "type": "object",
                                                            "title": "Ocean CD Verification argument",
                                                            "description": "Represents Verification Parameters to inject to verification templates when running\n",
                                                            "properties": {
                                                              "key": {
                                                                "type": "string",
                                                                "description": "Key of an argument",
                                                                "example": "app"
                                                              },
                                                              "value": {
                                                                "type": "string",
                                                                "description": "Value of an argument",
                                                                "example": "my-application"
                                                              }
                                                            },
                                                            "required": [
                                                              "key",
                                                              "value"
                                                            ]
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "baseline": {
                                                  "type": "objet",
                                                  "required": [
                                                    "threshold",
                                                    "provider"
                                                  ],
                                                  "title": "Ocean CD Verification Metric Baseline",
                                                  "properties": {
                                                    "threshold": {
                                                      "type": "string",
                                                      "enum": [
                                                        "<",
                                                        ">",
                                                        "<=",
                                                        ">=",
                                                        "=",
                                                        "range"
                                                      ],
                                                      "description": "A mathematical expression needed for the comparison",
                                                      "example": ">"
                                                    },
                                                    "minRange": {
                                                      "type": "integer",
                                                      "example": 45,
                                                      "description": "Number in percent we allow the new version’s data result to be under baseline data result"
                                                    },
                                                    "maxRange": {
                                                      "type": "integer",
                                                      "example": 55,
                                                      "description": "Number in percent we allow the new version’s data result to be under baseline data result"
                                                    },
                                                    "provider": {
                                                      "type": "object",
                                                      "title": "Ocean CD Verification Metric Baseline Provider, only one provider type can be defined and it must be equal to the metric provider",
                                                      "description": "The name of the monitoring tool chosen for the metric",
                                                      "properties": {
                                                        "prometheus": {
                                                          "type": "object",
                                                          "$ref": "#/paths/~1ocean~1cd~1verificationTemplate/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/0/properties/metrics/items/properties/provider/properties/prometheus"
                                                        },
                                                        "newRelic": {
                                                          "type": "object",
                                                          "$ref": "#/paths/~1ocean~1cd~1verificationTemplate/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/0/properties/metrics/items/properties/provider/properties/newRelic"
                                                        },
                                                        "datadog": {
                                                          "type": "object",
                                                          "$ref": "#/paths/~1ocean~1cd~1verificationTemplate/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/0/properties/metrics/items/properties/provider/properties/datadog"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "$ref": "#/paths/~1ocean~1cd~1strategy/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/1"
                                      }
                                    ]
                                  }
                                },
                                "backgroundVerifications": {
                                  "type": "array",
                                  "description": "A list of background verifications associated with the rollout",
                                  "items": {
                                    "allOf": [
                                      {
                                        "$ref": "#/paths/~1ocean~1cd~1rollout~1%7BrolloutId%7D~1definition/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/properties/phaseVerifications/items/allOf/0"
                                      },
                                      {
                                        "$ref": "#/paths/~1ocean~1cd~1strategy/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/1"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/cd/rollout/{rolloutId}/resource": {
      "summary": "Ocean CD",
      "get": {
        "summary": "Get Ocean CD Rollout Resource",
        "description": "Get Ocean CD rollout resource.",
        "operationId": "OceanCDRolloutResource",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "rolloutId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "rol-123456",
            "description": "The identifier name of the Ocean CD rollout"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean CD Rollout Resource Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body",
                          "properties": {
                            "items": {
                              "items": {
                                "properties": {
                                  "events": {
                                    "type": "array",
                                    "description": "A list of events associated with the rollout",
                                    "items": {
                                      "type": "object",
                                      "title": "Ocean CD Rollout Event",
                                      "description": "Represents the Rollout Event entity",
                                      "properties": {
                                        "lastTimestamp": {
                                          "type": "string",
                                          "description": "The last time when the event occurred",
                                          "example": "2018-06-20T11:35:01.745Z"
                                        },
                                        "type": {
                                          "type": "string",
                                          "description": "The type of the event",
                                          "example": "Normal"
                                        },
                                        "reason": {
                                          "type": "string",
                                          "description": "Defines the cause why the action was taken",
                                          "example": "Created"
                                        },
                                        "object": {
                                          "type": "string",
                                          "description": "The object involved in the event",
                                          "example": "Pod/rollout-demo-prod-xxxxx"
                                        },
                                        "message": {
                                          "type": "string",
                                          "description": "The message of the event",
                                          "example": "Created container rollout-demo-prod-xxxxx"
                                        }
                                      }
                                    }
                                  },
                                  "replicaSets": {
                                    "type": "object",
                                    "description": "A list of ReplicaSets associated with the rollout",
                                    "title": "Ocean CD Rollout ReplicaSet Resource",
                                    "properties": {
                                      "stable": {
                                        "type": "object",
                                        "description": "The stable ReplicaSet",
                                        "title": "Ocean CD Rollout ReplicaSet",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the ReplicaSet",
                                            "example": "2018-06-20T11:35:01.745Z"
                                          },
                                          "desired": {
                                            "type": "integer",
                                            "description": "The desired number of replicas",
                                            "example": 4
                                          },
                                          "current": {
                                            "type": "integer",
                                            "description": "The current number of replicas",
                                            "example": 2
                                          },
                                          "ready": {
                                            "type": "integer",
                                            "description": "The number of ready replicas",
                                            "example": 2
                                          }
                                        }
                                      },
                                      "latest": {
                                        "type": "object",
                                        "description": "The latest ReplicaSet",
                                        "$ref": "#/paths/~1ocean~1cd~1rollout~1%7BrolloutId%7D~1resource/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/replicaSets/properties/stable"
                                      }
                                    }
                                  },
                                  "pods": {
                                    "type": "array",
                                    "description": "A list of Pods associated with the rollout",
                                    "items": {
                                      "type": "object",
                                      "title": "Ocean CD Rollout Pod",
                                      "description": "Represents the Rollout Pod entity",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the Pod",
                                          "example": "rollout-pod"
                                        },
                                        "containersReadiness": {
                                          "type": "string",
                                          "description": "Ready / total number of containers",
                                          "example": "1/1"
                                        },
                                        "ready": {
                                          "type": "boolean",
                                          "description": "Indicates whether the Pod is ready",
                                          "example": true
                                        },
                                        "status": {
                                          "type": "string",
                                          "description": "The status of the Pod",
                                          "example": "ready"
                                        },
                                        "restarts": {
                                          "type": "integer",
                                          "description": "The number of restarts",
                                          "example": 0
                                        },
                                        "version": {
                                          "type": "string",
                                          "description": "The version of the Pod",
                                          "enum": [
                                            "stable",
                                            "latest"
                                          ],
                                          "example": "stable"
                                        }
                                      }
                                    }
                                  },
                                  "services": {
                                    "type": "array",
                                    "description": "A list of services associated with the rollout",
                                    "items": {
                                      "type": "object",
                                      "title": "Ocean CD Rollout Service",
                                      "description": "The Ocean CD rollout service",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The identifier name of the service",
                                          "example": "stable-service"
                                        },
                                        "type": {
                                          "type": "string",
                                          "description": "The type of the service",
                                          "example": "ClusterIP"
                                        },
                                        "clusterIp": {
                                          "type": "string",
                                          "description": "IP address of the service within the associated Kubernetes cluster",
                                          "example": "172.12.207.19"
                                        },
                                        "externalIp": {
                                          "type": "string",
                                          "description": "IP address of the service that can be accessed directly over the internet",
                                          "example": "192.12.207.10"
                                        },
                                        "ports": {
                                          "type": "array",
                                          "description": "A list of ports using which the Kubernetes service is exposed within the cluster",
                                          "items": {
                                            "type": "string",
                                            "description": "The port using which the Kubernetes service is exposed within the cluster",
                                            "example": 80
                                          }
                                        },
                                        "version": {
                                          "type": "string",
                                          "description": "The replicas version that the service directs traffic to",
                                          "enum": [
                                            "stable",
                                            "latest"
                                          ],
                                          "example": "stable"
                                        }
                                      }
                                    }
                                  },
                                  "spotDeployment": {
                                    "type": "object",
                                    "description": "Describes the SpotDeployment associated with the rollout",
                                    "properties": {
                                      "oldVersion": {
                                        "type": "string",
                                        "description": "The image version of the previous SpotDeployment revision",
                                        "example": "nginx:1.10"
                                      },
                                      "newVersion": {
                                        "type": "string",
                                        "description": "The image version of the desired SpotDeployment revision",
                                        "example": "nginx:1.11"
                                      },
                                      "oldManifest": {
                                        "type": "string",
                                        "description": "The string JSON representation of the desired SpotDeployment's revision",
                                        "example": "{\"kind\":\"SpotDeployment\",\"apiVersion\":\"spot.io/v1beta1\",\"metadata\"..."
                                      },
                                      "newManifest": {
                                        "type": "string",
                                        "description": "The string JSON representation of the previous SpotDeployment's revision",
                                        "example": "{\"kind\":\"SpotDeployment\",\"apiVersion\":\"spot.io/v1beta1\",\"metadata\"..."
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/cd/rollout/{rolloutId}/phase": {
      "summary": "Ocean CD",
      "get": {
        "summary": "Get Ocean CD Rollout Phase",
        "description": "Get Ocean CD rollout phase.",
        "operationId": "OceanCDRolloutPhase",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "rolloutId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "rol-123456",
            "description": "The identifier name of the Ocean CD rollout\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean CD Rollout Phase Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Ocean CD Rollout Phase",
                                "description": "Ocean CD rollout phase entity",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the phase",
                                    "example": "phase-01"
                                  },
                                  "status": {
                                    "type": "string",
                                    "description": "The current status of the phase",
                                    "example": "finished"
                                  },
                                  "startTime": {
                                    "type": "string",
                                    "description": "The time when the phase was started",
                                    "example": "2018-06-20T11:35:01.745Z"
                                  },
                                  "pausedAt": {
                                    "type": "string",
                                    "description": "The time when the phase was paused",
                                    "example": "2018-06-20T11:35:01.745Z"
                                  },
                                  "verifiedAt": {
                                    "type": "string",
                                    "description": "The time when the measurement was performed",
                                    "example": "2018-06-20T11:35:01.745Z"
                                  },
                                  "endTime": {
                                    "type": "string",
                                    "description": "The time when the phase was ended",
                                    "example": "2018-06-20T11:35:01.745Z"
                                  },
                                  "trafficPercentage": {
                                    "type": "integer",
                                    "description": "The percentage of traffic directed to the current version",
                                    "example": 80
                                  },
                                  "verifications": {
                                    "type": "array",
                                    "description": "Contains details info about verifications to run",
                                    "items": {
                                      "$ref": "#/paths/~1ocean~1cd~1rollout~1%7BrolloutId%7D~1verification/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/0"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/cd/rollout/{rolloutId}/strategyOverride": {
      "summary": "Ocean CD",
      "get": {
        "summary": "Get Ocean CD Rollout Strategy Override",
        "description": "Get Ocean CD rollout Strategy override entity.",
        "operationId": "OceanCDRolloutStrategyOverride",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "rolloutId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "rol-123456",
            "description": "The identifier of the Ocean CD Rollout"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean CD Rollout Strategy Override Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "title": "Ocean CD Rollout Strategy Override",
                                    "description": "The Ocean CD rollout Strategy override entity",
                                    "properties": {
                                      "rolloutId": {
                                        "type": "string",
                                        "description": "The identifier name of the Ocean CD rollout",
                                        "example": "rol-123456"
                                      },
                                      "isOverridden": {
                                        "type": "boolean",
                                        "description": "Identify whether the associated Strategy was overridden",
                                        "example": true
                                      },
                                      "newStrategy": {
                                        "type": "string",
                                        "description": "The name of the new strategy to use",
                                        "example": "canary-strategy"
                                      },
                                      "oldStrategy": {
                                        "type": "string",
                                        "description": "The name of the overridden strategy",
                                        "example": "rolling-update-strategy"
                                      },
                                      "failureReason": {
                                        "type": "string",
                                        "description": "An error text describing its cause",
                                        "example": "Failed to override a strategy..."
                                      },
                                      "spotDeployment": {
                                        "type": "object",
                                        "title": "Ocean CD Spot Deployment Selector",
                                        "description": "Represents the SpotDeployment selector",
                                        "required": [
                                          "clusterId",
                                          "namespace",
                                          "name"
                                        ],
                                        "properties": {
                                          "clusterId": {
                                            "type": "string",
                                            "description": "Ocean CD cluster identifier for the references SpotDeployment",
                                            "example": "aws-cluster"
                                          },
                                          "namespace": {
                                            "type": "string",
                                            "description": "The namespace where the SpotDeployment resource exists",
                                            "example": "us-region"
                                          },
                                          "name": {
                                            "type": "string",
                                            "example": "us-app",
                                            "description": "The name of the SpotDeployment resource"
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/cd/workload": {
      "summary": "Ocean CD",
      "get": {
        "summary": "List Ocean CD Workloads",
        "description": "List all Ocean CD workloads.",
        "operationId": "OceanCDWorkloadsList",
        "tags": [
          "Ocean CD"
        ],
        "responses": {
          "200": {
            "description": "Ocean CD Workload Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "title": "Ocean CD Workload",
                                    "description": "Represents an application running within the associated Kubernetes cluster",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "The name of the workload",
                                        "example": "spotdeployment-app"
                                      },
                                      "namespace": {
                                        "type": "string",
                                        "description": "The Kubernetes namespace within which the workload exists",
                                        "example": "oceancd"
                                      },
                                      "clusterId": {
                                        "type": "string",
                                        "description": "The identifier name of Ocean CD cluster within which the workload exists",
                                        "example": "prod-cluster"
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "The type of the workload",
                                        "example": "spotDeployment"
                                      },
                                      "image": {
                                        "type": "string",
                                        "description": "The image of the workload",
                                        "example": "nginx:1.22"
                                      },
                                      "revisions": {
                                        "type": "integer",
                                        "description": "The number of different versions applied to the workload",
                                        "example": 2
                                      },
                                      "desiredReplicas": {
                                        "type": "integer",
                                        "description": "The desired number of replicas",
                                        "example": 4
                                      },
                                      "readyReplicas": {
                                        "type": "integer",
                                        "description": "The number of the ready replicas",
                                        "example": 2
                                      },
                                      "updatedAt": {
                                        "type": "string",
                                        "description": "The last time when the workload was updated",
                                        "example": "2018-11-05T12:55:50.000Z"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/cd/workload/{workloadName}/namespace/{namespace}/activeOperation": {
      "summary": "Ocean CD",
      "get": {
        "summary": "Get Ocean CD Workload's Active Operation",
        "description": "Get the ongoing operation being applied to the workload.",
        "operationId": "OceanCDWorkloadActiveOperation",
        "tags": [
          "Ocean CD"
        ],
        "parameters": {
          "$ref": "#/paths/~1ocean~1cd~1workload~1%7BworkloadName%7D~1namespace~1%7Bnamespace%7D~1graph/get/parameters"
        },
        "responses": {
          "200": {
            "description": "Ocean CD Workload Active Operation Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "title": "Ocean CD Workload Active Operation",
                                    "description": "Indicates the ongoing operation being applied to the workload",
                                    "properties": {
                                      "workloadId": {
                                        "type": "integer",
                                        "description": "The ID of the workload",
                                        "example": 405938231
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "The type of the operation",
                                        "example": "retry"
                                      },
                                      "operationStatus": {
                                        "type": "string",
                                        "description": "The status of the operation",
                                        "example": "finished"
                                      },
                                      "createdAt": {
                                        "type": "string",
                                        "description": "The time when the operation was created",
                                        "example": "2018-11-05T12:55:50.000Z"
                                      },
                                      "updatedAt": {
                                        "type": "string",
                                        "description": "The last time when the operation was updated",
                                        "example": "2018-11-05T12:55:50.000Z"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/cd/workload/{workloadName}/namespace/{namespace}/revision": {
      "summary": "Ocean CD",
      "get": {
        "summary": "Get Ocean CD Workload's Revision",
        "description": "Get Ocean CD Workload's revision.",
        "operationId": "OceanCDWorkloadRevision",
        "tags": [
          "Ocean CD"
        ],
        "parameters": {
          "$ref": "#/paths/~1ocean~1cd~1workload~1%7BworkloadName%7D~1namespace~1%7Bnamespace%7D~1graph/get/parameters"
        },
        "responses": {
          "200": {
            "description": "Ocean CD Workload Revision Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "title": "Ocean CD Workload Revision",
                                    "description": "Contains info about a workload's revision",
                                    "properties": {
                                      "revision": {
                                        "type": "integer",
                                        "description": "The order number of a workload version",
                                        "example": 3
                                      },
                                      "rolloutId": {
                                        "type": "string",
                                        "description": "The identifier of the Ocean CD rollout",
                                        "example": "rol-67c2d5c2d384"
                                      },
                                      "date": {
                                        "type": "string",
                                        "description": "The time when the revision was defined",
                                        "example": "2018-11-05T12:55:50.000Z"
                                      },
                                      "image": {
                                        "type": "string",
                                        "description": "The image of the revision",
                                        "example": "nginx:1.22"
                                      },
                                      "status": {
                                        "type": "string",
                                        "description": "The status of the revision",
                                        "example": "degraded"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/cd/workload/{workloadName}/namespace/{namespace}/restart": {
      "summary": "Ocean CD",
      "put": {
        "summary": "Ocean CD Restart Workload",
        "description": "Restart Ocean CD workload.",
        "operationId": "OceanCDWorkloadRestart",
        "tags": [
          "Ocean CD"
        ],
        "parameters": {
          "$ref": "#/paths/~1ocean~1cd~1workload~1%7BworkloadName%7D~1namespace~1%7Bnamespace%7D~1graph/get/parameters"
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/cd/workload/{workloadName}/namespace/{namespace}/revision/{revisionId}/retry": {
      "summary": "Ocean CD",
      "put": {
        "summary": "Ocean CD Retry Workload",
        "description": "Retry Ocean CD workload.",
        "operationId": "OceanCDWorkloadRetry",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workloadName",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The name of the workload",
            "example": "app"
          },
          {
            "in": "path",
            "name": "namespace",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The Kubernetes namespace within which the workload exists",
            "example": "oceancd"
          },
          {
            "in": "path",
            "name": "revisionId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The associated revision ID"
          },
          {
            "in": "query",
            "name": "clusterId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The identifier name of Ocean CD cluster within which the workload exists",
            "example": "prod-cluster"
          },
          {
            "in": "query",
            "name": "kind",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The workload's Kubernetes kind. Currently only the `SpotDeployment` kind is supported",
            "example": "SpotDeployment"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/cd/workload/{workloadName}/namespace/{namespace}/revision/{revisionId}/rollback": {
      "summary": "Ocean CD",
      "put": {
        "summary": "Ocean CD Rollback Workload",
        "description": "Rollback Ocean CD workload.",
        "operationId": "OceanCDWorkloadRollback",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workloadName",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The name of the workload",
            "example": "app"
          },
          {
            "in": "path",
            "name": "namespace",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The Kubernetes namespace within which the workload exists",
            "example": "oceancd"
          },
          {
            "in": "path",
            "name": "revisionId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The associated revision ID"
          },
          {
            "in": "query",
            "name": "clusterId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The identifier name of Ocean CD cluster within which the workload exists",
            "example": "prod-cluster"
          },
          {
            "in": "query",
            "name": "kind",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The workload's Kubernetes kind. Currently only the `SpotDeployment` kind is supported",
            "example": "SpotDeployment"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/cd/workload/{workloadName}/namespace/{namespace}/graph": {
      "summary": "Ocean CD",
      "get": {
        "summary": "Get Ocean CD Workload Graph",
        "description": "Get Ocean CD workload graph.",
        "operationId": "OceanCDWorkloadGraph",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workloadName",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The name of the workload",
            "example": "app"
          },
          {
            "in": "path",
            "name": "namespace",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The Kubernetes namespace within which the workload exists",
            "example": "oceancd"
          },
          {
            "in": "query",
            "name": "clusterId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The identifier name of Ocean CD cluster within which the workload exists",
            "example": "prod-cluster"
          },
          {
            "in": "query",
            "name": "kind",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The workload's Kubernetes kind. Currently only the `SpotDeployment` kind is supported",
            "example": "SpotDeployment"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean CD Workload Graph Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "rolloutId": {
                                        "type": "string",
                                        "description": "The identifier of the Ocean CD rollout",
                                        "example": "rol-123456"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "The workload name",
                                        "example": "prod-app"
                                      },
                                      "namespace": {
                                        "type": "string",
                                        "description": "The Kubernetes namespace within which the workload exists",
                                        "example": "oceancd"
                                      },
                                      "clusterId": {
                                        "type": "string",
                                        "description": "The identifier name of Ocean CD cluster within which the workload exists",
                                        "example": "prod-cluster"
                                      },
                                      "status": {
                                        "type": "string",
                                        "description": "The current status of the rollout indicating its state",
                                        "example": "finished",
                                        "enum": [
                                          "deallocating",
                                          "manualPausing",
                                          "manualPaused",
                                          "canceled",
                                          "pending",
                                          "inProgress",
                                          "finished",
                                          "failed",
                                          "paused",
                                          "verifying",
                                          "backgroundVerifying",
                                          "invalidSpec",
                                          "aborting",
                                          "aborted",
                                          "failurePolicyPausing",
                                          "failurePolicyPaused",
                                          "rolloutInterrupted"
                                        ]
                                      },
                                      "failureReasonType": {
                                        "type": "string",
                                        "description": "The failure reason type",
                                        "enum": [
                                          "phaseVerification",
                                          "backgroundVerification",
                                          "kubernetes",
                                          "manualRollback"
                                        ],
                                        "example": "kubernetes"
                                      },
                                      "startTime": {
                                        "type": "string",
                                        "description": "The time when the rollout was started",
                                        "example": "2018-11-05T12:55:50.000Z"
                                      },
                                      "endTime": {
                                        "type": "string",
                                        "description": "The time when the rollout was ended",
                                        "example": "2018-11-05T12:58:15.000Z"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/spark/cluster": {
      "summary": "Ocean Spark",
      "post": {
        "summary": "Create Cluster",
        "description": "Create Ocean Spark Cluster\n",
        "operationId": "OceanSparkClusterCreate",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "cluster"
                    ],
                    "properties": {
                      "cluster": {
                        "type": "object",
                        "description": "The object specifying the configuration of the Ocean Spark cluster.\n",
                        "title": "Ocean Spark Cluster",
                        "required": [
                          "oceanClusterId"
                        ],
                        "allOf": [
                          {
                            "type": "object",
                            "description": "The description of an Ocean Spark cluster\n",
                            "properties": {
                              "oceanClusterId": {
                                "type": "string",
                                "example": "o-d3a2908e",
                                "description": "A unique identifier for the Ocean cluster"
                              },
                              "config": {
                                "type": "object",
                                "description": "The object specifying the configuration of the Ocean Spark cluster.\n",
                                "properties": {
                                  "ingress": {
                                    "type": "object",
                                    "description": "The object specifying the Ocean Spark Ingress configuration.\n",
                                    "properties": {
                                      "serviceAnnotations": {
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        },
                                        "description": "DEPRECATED: Use `loadBalancer.serviceAnnotations` instead. \nAnnotations to add to the ingress load balancer service. This is useful to configure properties of the managed load balancer, \nlike the nature of the load balancer (e.g. ELB, NLB, ALB on AWS), \nthe security groups, or various timeouts.\n",
                                        "example": {
                                          "service.beta.kubernetes.io/aws-load-balancer-security-groups": "sg-03ba056e31f183482"
                                        }
                                      },
                                      "controller": {
                                        "type": "object",
                                        "description": "The object specifying the Ocean Spark Ingress Controller configuration.\n",
                                        "properties": {
                                          "managed": {
                                            "type": "boolean",
                                            "default": true,
                                            "example": true,
                                            "description": "Should an ingress controller managed by Ocean for Apache Spark be installed on the cluster.\n"
                                          }
                                        }
                                      },
                                      "loadBalancer": {
                                        "type": "object",
                                        "description": "The object specifying the Ocean Spark Ingress Load Balancer configuration.\n",
                                        "properties": {
                                          "managed": {
                                            "type": "boolean",
                                            "default": true,
                                            "example": true,
                                            "description": "Should a load balancer managed by Ocean for Apache Spark be provisioned for the cluster. \nSet this to false if you want to use an existing load balancer (only available on AWS).\n"
                                          },
                                          "targetGroupArn": {
                                            "type": "string",
                                            "description": "The ARN of a target group that the Ocean for Apache Spark ingress controller will be bound to.\nSet this to use an existing load balancer with Ocean for Apache Spark.\nHas no effect if using a managed load balancer. Only available on AWS.\n",
                                            "example": "arn:aws:elasticloadbalancing:us-east-1:XXXXXXXXXXXX:targetgroup/my-spark-cluster-tg/XXXXXXXXXXXXXXXX"
                                          },
                                          "serviceAnnotations": {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            },
                                            "description": "Annotations to add to the ingress controller load balancer service. This is useful to configure properties \nof the managed load balancer, like the nature of the load balancer (e.g. ELB, NLB, ALB on AWS), \nthe security groups, or various timeouts.\n",
                                            "example": {
                                              "service.beta.kubernetes.io/aws-load-balancer-security-groups": "sg-XXXXXXXXXXXXXXXXX"
                                            }
                                          }
                                        }
                                      },
                                      "customEndpoint": {
                                        "type": "object",
                                        "description": "The object specifying the Ocean Spark Ingress Custom Endpoint configuration.\n",
                                        "properties": {
                                          "enabled": {
                                            "type": "boolean",
                                            "default": false,
                                            "example": false,
                                            "description": "Should the Ocean for Apache Spark control plane address the cluster using a custom address.\nUse this to specify the DNS address of an externally provisioned (unmanaged) load balancer.\n"
                                          },
                                          "address": {
                                            "type": "string",
                                            "description": "The address the Ocean for Apache Spark control plane will use when addressing the cluster.\n",
                                            "example": "my-spark-cluster-nlb-8cbb8da7XXXXXXXX.elb.us-east-1.amazonaws.com"
                                          }
                                        }
                                      },
                                      "privateLink": {
                                        "type": "object",
                                        "description": "The object specifying the Ocean Spark Ingress Private Link configuration. Only available on AWS.\n",
                                        "properties": {
                                          "enabled": {
                                            "type": "boolean",
                                            "default": false,
                                            "example": false,
                                            "description": "Should the Ocean for Apache Spark control plane address the cluster via an AWS Private Link.\n"
                                          },
                                          "vpcEndpointService": {
                                            "type": "string",
                                            "description": "The name of the VPC Endpoint Service the Ocean for Apache Spark control plane should bind to.\n",
                                            "example": "com.amazonaws.vpce.eu-north-1.vpce-svc-XXXXXXXXXXXXXXXXX"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "webhook": {
                                    "type": "object",
                                    "description": "The object specifying the Ocean Spark Webhook configuration.\n",
                                    "properties": {
                                      "useHostNetwork": {
                                        "type": "boolean",
                                        "default": false,
                                        "example": true,
                                        "description": "Enable/Disable host networking on the Spark Operator. Host networking can be useful when using custom CNI plugins \nlike Calico.\n"
                                      },
                                      "hostNetworkPorts": {
                                        "type": "array",
                                        "items": {
                                          "type": "integer",
                                          "example": 1234
                                        },
                                        "description": "List of ports allowed to use on the host network - if empty default is **25554**\n"
                                      }
                                    }
                                  },
                                  "compute": {
                                    "type": "object",
                                    "description": "The object specifying the Ocean Spark Compute configuration.\n",
                                    "properties": {
                                      "useTaints": {
                                        "type": "boolean",
                                        "default": true,
                                        "example": false,
                                        "description": "Enable/Disable **ocean-spark** taints on the Ocean Spark VNGs. By default, Spark uses taints to prevent \nnon-Spark pods to run on Ocean Spark VNGs.\n"
                                      },
                                      "createVngs": {
                                        "type": "boolean",
                                        "default": true,
                                        "example": false,
                                        "description": "Enable/Disable creating **ocean-spark** VNGs\n"
                                      }
                                    }
                                  },
                                  "logCollection": {
                                    "type": "object",
                                    "description": "The object specifying the Ocean Spark Log Collection configuration.\n",
                                    "properties": {
                                      "collectDriverLogs": {
                                        "type": "boolean",
                                        "default": true,
                                        "example": false,
                                        "deprecated": true,
                                        "description": "Deprecated. Use `collectAppLogs` instead, effect is the same.\n"
                                      },
                                      "collectAppLogs": {
                                        "type": "boolean",
                                        "default": true,
                                        "description": "Enable/Disable collecting driver and executor logs. When enabled, logs are stored by NetApp and can be downloaded from \nthe Spot console web interface. The logs are deleted after 30 days.\n"
                                      }
                                    }
                                  },
                                  "spark": {
                                    "type": "object",
                                    "description": "The object specifying the Ocean Spark Spark configuration.\n",
                                    "properties": {
                                      "appNamespaces": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "example": [
                                          "spark-apps",
                                          "spark-apps-extra-ns-1",
                                          "spark-apps-extra-ns-2"
                                        ],
                                        "description": "List of Kubernetes namespaces that Spark applications can run in. The default namespace `spark-apps` is always included in the list.\n"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "cluster": {
                        "type": "object",
                        "required": [
                          "name"
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Spark Cluster Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/spark/cluster"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1spark~1cluster/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:spark:cluster"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Clusters",
        "description": "List the Ocean Spark clusters in the specified account.\n",
        "operationId": "OceanSparkClusterList",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          },
          {
            "in": "query",
            "name": "fromDate",
            "required": false,
            "description": "Get items on or after this date (ISO 8601 or Unix timestamp)\n",
            "schema": {
              "type": "string"
            },
            "example": "2020-09-01 or fromDate=1598918400000"
          },
          {
            "in": "query",
            "name": "toDate",
            "required": false,
            "description": "Get items on or before this date (ISO 8601 or Unix timestamp)",
            "schema": {
              "type": "string"
            },
            "example": "2020-09-01 or fromDate=1598918400000"
          },
          {
            "in": "query",
            "name": "state",
            "required": false,
            "description": "Optionally filter on the current state of the Ocean Spark cluster",
            "schema": {
              "description": "The current state of the Ocean Spark cluster.\n* `PROGRESSING`: The cluster resources are being created.\n* `DELETING`: The cluster resources are being deleted.\n* `AVAILABLE`: The cluster is available.\n* `UNREACHABLE`: The cluster stopped sending heartbeat. This can be caused by the cluster going down or by a networking issue between the cluster and Spot's backend.\n* `DEGRADED`: One of the cluster components is unhealthy. Some features may not be available.\n* `FAILING`: A critical cluster component is unhealthy.\n* `UNKNOWN`: The cluster status API has an unexpected, internal error.\n",
              "example": "AVAILABLE",
              "enum": [
                "AVAILABLE",
                "PROGRESSING",
                "DEGRADED",
                "FAILING",
                "UNKNOWN",
                "UNREACHABLE",
                "DELETING"
              ]
            }
          },
          {
            "in": "query",
            "name": "controllerClusterId",
            "required": false,
            "schema": {
              "type": "string",
              "example": "my-ocean-cluster",
              "description": "The reporting identifier of the Ocean controller in the Ocean cluster\n"
            },
            "description": "Optionally filter on the reporting identifier of the Ocean controller in the Ocean cluster (controllerClusterId)\n"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of Ocean Spark clusters (can be a single cluster)",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body\n",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "The object specifying the Ocean Spark cluster.\n",
                                "title": "Ocean Spark Cluster",
                                "required": [
                                  "controllerClusterId",
                                  "oceanClusterId"
                                ],
                                "allOf": [
                                  {
                                    "type": "object",
                                    "description": "The description of an Ocean Spark cluster\n",
                                    "properties": {
                                      "id": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster~1sparkCoreHours/get/parameters/1/schema/items"
                                      },
                                      "controllerClusterId": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster/get/parameters/4/schema"
                                      },
                                      "oceanClusterId": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/allOf/0/properties/oceanClusterId"
                                      },
                                      "state": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster/get/parameters/3/schema"
                                      },
                                      "config": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/allOf/0/properties/config"
                                      },
                                      "region": {
                                        "type": "string",
                                        "example": "us-west-2",
                                        "description": "The region where the Ocean Spark cluster lives\n"
                                      },
                                      "k8sVersion": {
                                        "type": "string",
                                        "description": "The Kubernetes API of the Ocean Spark cluster\n",
                                        "example": "v1.21.2-eks-0389ca3"
                                      },
                                      "operatorVersion": {
                                        "type": "string",
                                        "description": "The version of the Ocean Spark operator running in the Ocean Spark cluster\n",
                                        "example": "0.1.30"
                                      },
                                      "operatorLastHeartbeat": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The last heartbeat received from the Ocean Spark operator running in the Ocean Spark cluster",
                                        "example": "2021-11-20T13:29:30.000Z"
                                      }
                                    }
                                  },
                                  {
                                    "$ref": "#/paths/~1aws~1emr~1mrScaler/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/1"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/spark/cluster/{clusterId}": {
      "summary": "Ocean Spark",
      "get": {
        "summary": "Get Cluster",
        "description": "Describe an Ocean Spark cluster.\n",
        "operationId": "OceanSparkClusterGet",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          },
          {
            "in": "path",
            "name": "clusterId",
            "required": true,
            "schema": {
              "$ref": "#/paths/~1ocean~1spark~1cluster~1sparkCoreHours/get/parameters/1/schema/items"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1spark~1cluster/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Cluster",
        "description": "Delete an Ocean Spark cluster.\n\nRemoving a cluster will disconnect it from Ocean for Spark. This action is permanent and cannot be undone.\n\nThe Ocean for Spark resources will be uninstalled from the cluster, but the Ocean cluster itself (and related Kubernetes resources) will not be deleted.\n",
        "operationId": "OceanSparkClusterDelete",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Cluster",
        "description": "All Ocean Spark configuration parameters are updatable. This API supports partial updates, so specific fields can be updated separately.\n",
        "operationId": "OceanSparkClusterUpdate",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "cluster"
                    ],
                    "properties": {
                      "cluster": {
                        "type": "object",
                        "description": "The object specifying the configuration of the Ocean Spark cluster.\n",
                        "title": "Ocean Spark Cluster",
                        "allOf": [
                          {
                            "type": "object",
                            "description": "The description of an Ocean Spark cluster\n",
                            "required": [
                              "config"
                            ],
                            "properties": {
                              "config": {
                                "$ref": "#/paths/~1ocean~1spark~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/allOf/0/properties/config"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/spark/cluster/sparkCoreHours": {
      "summary": "Ocean Spark",
      "get": {
        "summary": "Cluster Spark Core Hours",
        "description": "Gets the number of core hours applications have consumed.\n",
        "operationId": "OceanSparkClusterSparkCoreHours",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          },
          {
            "name": "clusterId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "osc-20fac3f1",
                "description": "A unique identifier for the Ocean Spark cluster\n"
              }
            }
          },
          {
            "in": "query",
            "name": "period",
            "required": false,
            "example": "2021-11",
            "description": "The month to query from.\n",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Number of spark core hours consumed by cluster",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body\n",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "id",
                                  "coreHours"
                                ],
                                "description": "Object that holds a pair of Ocean Spark Cluster ID and core hours that this cluster has consumed.\n",
                                "properties": {
                                  "id": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1sparkCoreHours/get/parameters/1/schema/items"
                                  },
                                  "coreHours": {
                                    "type": "number",
                                    "description": "Number of core hours that the cluster has consumed.\n",
                                    "example": 99
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/spark/cluster/{clusterId}/appCompletionTrend": {
      "summary": "Ocean Spark",
      "get": {
        "summary": "Cluster application completion trend",
        "description": "Aggregates the number of apps reaching a terminal state (completed, failed, killed, ...)  within time buckets.\n",
        "operationId": "OceanSparkClusterAppCompletionTrend",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1statistics/get/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "description": "Number of applications reaching a terminal state, grouped by the terminal state and a time bucket.\n",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body\n",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "start",
                                  "end",
                                  "completed",
                                  "failed",
                                  "killed",
                                  "timed_out"
                                ],
                                "description": "The number of applications that ended in a given time range, grouped by the terminal state they reached.\n",
                                "properties": {
                                  "start": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Start of the time range\n",
                                    "example": "2021-11-18T17:09:37+00:00"
                                  },
                                  "end": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "End of the time range\n",
                                    "example": "2021-11-18T17:09:37+00:00"
                                  },
                                  "completed": {
                                    "type": "number",
                                    "description": "The number of apps successfully completed between >= start and < end\n"
                                  },
                                  "failed": {
                                    "type": "number",
                                    "description": "The number of apps that failed between >= start and < end\n"
                                  },
                                  "killed": {
                                    "type": "number",
                                    "description": "The number of apps killed between >= start and <end\n"
                                  },
                                  "timedOut": {
                                    "type": "number",
                                    "description": "The number of apps that timed-out between >= start and < end\n"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/spark/cluster/{clusterId}/appLoadHistory": {
      "summary": "Ocean Spark",
      "get": {
        "summary": "Cluster application load history",
        "description": "Reports the number of applications in pending and running state within time buckets.\n",
        "operationId": "OceanSparkClusterAppLoadHistory",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1statistics/get/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "description": "Number of pending or running apps, within time buckets.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body\n",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "time",
                                  "pending",
                                  "running"
                                ],
                                "description": "Number of apps pending or running at a given point in time\n",
                                "properties": {
                                  "time": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Polling time\n",
                                    "example": "2021-11-18T17:09:37+00:00"
                                  },
                                  "pending": {
                                    "type": "number",
                                    "description": "Number of applications that were pending at the polling time. \n",
                                    "example": 0
                                  },
                                  "running": {
                                    "type": "number",
                                    "description": "Number of applications that were running at the polling time. \n",
                                    "example": 0
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/spark/cluster/{clusterId}/statistics": {
      "summary": "Ocean Spark",
      "get": {
        "summary": "Cluster runtime statistics",
        "description": "Returns a summary of the cluster usage since a given date in the past.\n",
        "operationId": "OceanSparkClusterStatistics",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          },
          {
            "in": "query",
            "name": "since",
            "required": true,
            "example": "2021-11-22",
            "description": "Date at which to start the analysis. If the time range up to now is less or equal to a day, values are reported grouped per hours. Otherwise, values are reported grouped per days.\n",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Runtime statistics for a given cluster.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body\n",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "time",
                                  "pending",
                                  "running"
                                ],
                                "description": "Summary of a cluster's usage statistics.\n",
                                "properties": {
                                  "id": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1sparkCoreHours/get/parameters/1/schema/items"
                                  },
                                  "metrics": {
                                    "type": "object",
                                    "description": "Computed statistics about the performance and cost of Spark applications",
                                    "required": [
                                      "cost",
                                      "spark"
                                    ],
                                    "properties": {
                                      "cost": {
                                        "type": "object",
                                        "description": "The cloud cost of the Spark application. Updated every hour",
                                        "required": [
                                          "total",
                                          "createdAt",
                                          "updatedAt"
                                        ],
                                        "properties": {
                                          "createdAt": {
                                            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1job~1%7BjobId%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/createdAt"
                                          },
                                          "updatedAt": {
                                            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1job~1%7BjobId%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/updatedAt"
                                          },
                                          "total": {
                                            "type": "integer",
                                            "description": "The total cost of the Spark application in USD cents",
                                            "example": 0
                                          }
                                        }
                                      },
                                      "spark": {
                                        "type": "object",
                                        "description": "Computed statistics about the performance of the Spark application",
                                        "required": [
                                          "inputDataBytes",
                                          "outputDataBytes",
                                          "sparkCoresDurationSeconds",
                                          "efficiencyPercent",
                                          "createdAt",
                                          "updatedAt"
                                        ],
                                        "properties": {
                                          "createdAt": {
                                            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1job~1%7BjobId%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/createdAt"
                                          },
                                          "updatedAt": {
                                            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1job~1%7BjobId%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/updatedAt"
                                          },
                                          "sparkCoresDurationSeconds": {
                                            "format": "time-delta",
                                            "type": "number",
                                            "description": "The total core resources used by the application. This metric is calculated as the sum over each container (driver or executor) of its uptime duration multiplied by the number of cores allocated to it.\n"
                                          },
                                          "inputDataBytes": {
                                            "type": "integer",
                                            "description": "The number of bytes read by Spark, typically from an object store.\n"
                                          },
                                          "outputDataBytes": {
                                            "type": "integer",
                                            "description": "The number of bytes written by Spark, typically to an object store.\n"
                                          },
                                          "efficiencyPercent": {
                                            "type": "number",
                                            "description": "The fraction of the time that Spark executor cores are running Spark tasks.\n"
                                          },
                                          "availability": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/spark/app": {
      "summary": "Ocean Spark",
      "get": {
        "summary": "List Applications",
        "description": "List Spark applications on all Ocean Spark clusters in the specified account. This endpoint is paginated (cursor pagination).\n",
        "operationId": "OceanSparkApplicationList",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123456789",
            "description": "The ID of the account associated with your token. If omitted the oldest account in the organization will be used.\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "clusterId",
            "required": false,
            "description": "Optionally filter on the Ocean Spark cluster ID\n",
            "schema": {
              "$ref": "#/paths/~1ocean~1spark~1cluster~1sparkCoreHours/get/parameters/1/schema/items"
            }
          },
          {
            "in": "query",
            "name": "jobId",
            "required": false,
            "description": "Optionally filter on the job ID\n",
            "schema": {
              "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/jobId/allOf/0"
            }
          },
          {
            "in": "query",
            "name": "submissionSource",
            "required": false,
            "description": "Optionally filter on the submission source of the Spark application\n",
            "schema": {
              "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/submissionSource"
            }
          },
          {
            "in": "query",
            "name": "appType",
            "required": false,
            "description": "Optionally filter on the type of the Spark application\n",
            "schema": {
              "description": "The type of Spark application",
              "example": "notebook",
              "type": "string",
              "enum": [
                "batch",
                "notebook",
                "spark-connect",
                "hive-thrift-server",
                "spark-connect-and-hive-thrift-server"
              ]
            }
          },
          {
            "in": "query",
            "name": "state",
            "required": false,
            "description": "Optionally filter on the state of the Spark application\n",
            "schema": {
              "description": "The current state of the Spark application.\n\nTransient states:\n* `PENDING`: The spark-submit operation was successful. The Spark driver pod is now pending: the k8s cluster must find room for it and download its Docker image.\n* `RUNNING`: The Spark driver pod starts running. It will now execute your application code.\n\nTerminal states:\n* `COMPLETED`: The application completed successfully.\n* `COMPLETED_WITH_WARNINGS`: The application completed, but some non-fatal errors were found in the Spark Event Log.\n* `FAILED`: The application exited with a non-zero exit code.\n* `KILLED`: The application was manually killed before completion.\n* `TIMED_OUT`: The application was programmatically killed before completion because it was either pending or running longer than the timeout defined.\n",
              "example": "RUNNING",
              "enum": [
                "PENDING",
                "RUNNING",
                "COMPLETED",
                "COMPLETED_WITH_WARNINGS",
                "FAILED",
                "KILLED",
                "TIMED_OUT"
              ]
            }
          },
          {
            "in": "query",
            "name": "userId",
            "required": false,
            "description": "Optionally filter on the user who created the Spark application\n",
            "schema": {
              "type": "integer",
              "description": "The identifier of the user who created the application",
              "example": 59438
            }
          },
          {
            "in": "query",
            "name": "searchTerm",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Optionally search for a substring of the application ID, application display name, job ID or job display name\n"
          },
          {
            "in": "query",
            "name": "minCreatedAt",
            "required": false,
            "example": "2021-11-22T00:00",
            "description": "Optionally filter on the creation date",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "maxCreatedAt",
            "required": false,
            "example": "2021-11-22T00:00",
            "description": "Optionally filter on the creation date",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "minUpdatedAt",
            "required": false,
            "example": "2021-11-22T00:00",
            "description": "Optionally filter on the last update date",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "maxUpdatedAt",
            "required": false,
            "example": "2021-11-22T00:00",
            "description": "Optionally filter on the last update date",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "description": "The number of applications returned by page",
            "schema": {
              "type": "integer",
              "default": 20
            }
          },
          {
            "in": "query",
            "name": "after",
            "required": false,
            "schema": {
              "type": "string",
              "description": "the cursor to the next page of items in the collection",
              "example": "MjAyMS0xMS0xOFQwOTo1MjowNS43Mzg4NjArMDA6MDB8NWM3NGY2MDYtZDYxNy00MzcxLWE5ZDktNjc2ZDkxMzRlNWFk"
            },
            "description": "If specified, the page returned in the response contains the items right after this cursor in the ordering\n"
          },
          {
            "in": "query",
            "name": "before",
            "required": false,
            "schema": {
              "type": "string",
              "description": "the cursor to the previous page of items in the collection",
              "example": "MjAyMS0xMS0xOFQwOTo1MjowNS43Mzg4NjArMDA6MDB8NWM3NGY2MDYtZDYxNy00MzcxLWE5ZDktNjc2ZDkxMzRlNWFk"
            },
            "description": "If specified, the page returned in the response contains the items right before this cursor in the ordering\n"
          },
          {
            "in": "query",
            "name": "order",
            "required": false,
            "description": "The direction of the ordering",
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ],
              "default": "DESC"
            }
          },
          {
            "in": "query",
            "name": "orderBy",
            "required": false,
            "description": "The field on which to sort",
            "schema": {
              "type": "string",
              "enum": [
                "CREATED_AT",
                "COST_IN_CENTS",
                "DURATION"
              ],
              "default": "CREATED_AT"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of Spark application",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body\n",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "required": [
                                      "page",
                                      "total"
                                    ],
                                    "properties": {
                                      "total": {
                                        "type": "integer",
                                        "description": "The total number of items in the collection",
                                        "example": 3256
                                      },
                                      "page": {
                                        "type": "array",
                                        "items": {
                                          "type": "object"
                                        },
                                        "description": "The items of the current page",
                                        "example": []
                                      },
                                      "after": {
                                        "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/13/schema"
                                      },
                                      "before": {
                                        "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/14/schema"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "page": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "id",
                                            "displayName",
                                            "accountId",
                                            "organizationId",
                                            "userId",
                                            "clusterId",
                                            "controllerClusterId",
                                            "appState",
                                            "submissionSource",
                                            "createdAt",
                                            "updatedAt"
                                          ],
                                          "allOf": [
                                            {
                                              "$ref": "#/paths/~1aws~1emr~1mrScaler/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/1"
                                            },
                                            {
                                              "type": "object",
                                              "description": "The description of a Spark application\n",
                                              "properties": {
                                                "id": {
                                                  "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/appId"
                                                },
                                                "displayName": {
                                                  "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/1/properties/displayName"
                                                },
                                                "accountId": {
                                                  "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1job~1%7BjobId%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/accountId"
                                                },
                                                "organizationId": {
                                                  "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1job~1%7BjobId%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/organizationId"
                                                },
                                                "userId": {
                                                  "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/6/schema"
                                                },
                                                "clusterId": {
                                                  "$ref": "#/paths/~1ocean~1spark~1cluster~1sparkCoreHours/get/parameters/1/schema/items"
                                                },
                                                "controllerClusterId": {
                                                  "$ref": "#/paths/~1ocean~1spark~1cluster/get/parameters/4/schema"
                                                },
                                                "appState": {
                                                  "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/5/schema"
                                                },
                                                "submissionSource": {
                                                  "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/submissionSource"
                                                },
                                                "appType": {
                                                  "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/4/schema"
                                                },
                                                "job": {
                                                  "type": "object",
                                                  "description": "The job to which the application belongs. A job is collection of Spark applications, typically a workload run on a schedule.\n",
                                                  "required": [
                                                    "id",
                                                    "displayName"
                                                  ],
                                                  "properties": {
                                                    "id": {
                                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/jobId/allOf/0"
                                                    },
                                                    "displayName": {
                                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1job~1%7BjobId%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/displayName"
                                                    }
                                                  }
                                                },
                                                "startedAt": {
                                                  "type": "string",
                                                  "format": "date-time",
                                                  "description": "The time when the Spark application started running (the app state becomes RUNNING). This is not the time when the application launch was requested (this is `createdAt`).\n",
                                                  "example": "2021-11-18T17:09:37+00:00"
                                                },
                                                "endedAt": {
                                                  "type": "string",
                                                  "format": "date-time",
                                                  "description": "The time when the Spark application terminated.\n",
                                                  "example": "2021-11-18T17:09:37+00:00"
                                                },
                                                "killRequestedAt": {
                                                  "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/1/properties/killRequestedAt"
                                                },
                                                "liveLog": {
                                                  "type": "object",
                                                  "description": "API pointers to endpoints serving logs and events related to the Spark application",
                                                  "properties": {
                                                    "logsStreamUrl": {
                                                      "type": "string",
                                                      "format": "uri",
                                                      "description": "URL of the endpoint serving the live driver logs",
                                                      "example": "/ocean/spark/cluster/osc-20fac3f1/app/daily-reporting-2021-08-18/logs/live"
                                                    },
                                                    "kubeEventsStreamUrl": {
                                                      "type": "string",
                                                      "format": "uri",
                                                      "description": "URL of the endpoint serving a stream of Kubernetes events",
                                                      "example": "/ocean/spark/cluster/osc-20fac3f1/app/daily-reporting-2021-08-18/kubeEvents/live"
                                                    }
                                                  }
                                                },
                                                "metrics": {
                                                  "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1statistics/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/metrics"
                                                },
                                                "cores": {
                                                  "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/DriverSpec/properties/cores"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/spark/cluster/{clusterId}/app": {
      "summary": "Ocean Spark",
      "get": {
        "summary": "List Applications in Cluster",
        "description": "List the Spark applications in a specific cluster. This endpoint is paginated (cursor pagination).\n",
        "operationId": "OceanSparkClusterApplicationList",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/3"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/4"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/5"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/12"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/13"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/14"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/15"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/16"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1spark~1app/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "summary": "Submit an Application",
        "description": "Submit a Spark application in an Ocean Spark cluster\n",
        "operationId": "OceanSparkClusterApplicationSubmit",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "jobId"
                ],
                "properties": {
                  "appId": {
                    "allOf": [
                      {
                        "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1job~1%7BjobId%7D/get/parameters/2/schema/allOf/0"
                      },
                      {
                        "description": "A unique identifier for the Spark application, set by the user or auto-generated from the job ID",
                        "example": "daily-reporting-2021-08-18"
                      }
                    ]
                  },
                  "jobId": {
                    "description": "The ID of the job to which the Spark application belongs. If a job with this ID does not exist yet, it will be created.\n",
                    "allOf": [
                      {
                        "allOf": [
                          {
                            "type": "string",
                            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                          },
                          {
                            "description": "A unique identifier for an Ocean Spark job.\n",
                            "example": "daily-reporting"
                          }
                        ]
                      }
                    ]
                  },
                  "configOverrides": {
                    "description": "Configurations for the Spark application supplied in the request. Prefer using a config template for configurations that are stable across runs. Configurations in `configOverrides` have precedence over those in the config template.\n",
                    "allOf": [
                      {
                        "type": "object",
                        "description": "A configuration for a Spark application",
                        "additionalProperties": false,
                        "properties": {
                          "arguments": {
                            "items": {
                              "type": "string"
                            },
                            "title": "Arguments",
                            "type": "array"
                          },
                          "deps": {
                            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/Dependencies"
                          },
                          "driver": {
                            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/DriverSpec"
                          },
                          "executor": {
                            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/ExecutorSpec"
                          },
                          "hadoopConf": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "title": "Hadoopconf",
                            "type": "object"
                          },
                          "hadoopConfigMap": {
                            "title": "Hadoopconfigmap",
                            "type": "string"
                          },
                          "image": {
                            "title": "Image",
                            "type": "string"
                          },
                          "imagePullPolicy": {
                            "title": "Imagepullpolicy",
                            "type": "string"
                          },
                          "imagePullSecrets": {
                            "items": {
                              "type": "string"
                            },
                            "title": "Imagepullsecrets",
                            "type": "array"
                          },
                          "interactive": {
                            "title": "Interactive",
                            "type": "boolean"
                          },
                          "initContainerImage": {
                            "title": "Initcontainerimage",
                            "type": "string"
                          },
                          "labels": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "title": "Labels",
                            "type": "object",
                            "description": "Labels to be attached to the custom resource of the application."
                          },
                          "logCollection": {
                            "title": "LogCollection",
                            "type": "object",
                            "additionalProperties": false,
                            "description": "Configure the application logs collection",
                            "properties": {
                              "collectAppLogs": {
                                "title": "CollectAppLogs",
                                "type": "boolean",
                                "description": "Set this parameter to override the cluster configuration on driver and executor log collection. If set to false, no logs will be saved for this application."
                              }
                            }
                          },
                          "mainApplicationFile": {
                            "title": "Mainapplicationfile",
                            "type": "string"
                          },
                          "mainClass": {
                            "title": "Mainclass",
                            "type": "string"
                          },
                          "memoryOverheadFactor": {
                            "title": "Memoryoverheadfactor",
                            "type": "number"
                          },
                          "availabilityZone": {
                            "title": "Availabilityzone",
                            "type": "string",
                            "description": "The availability zone to use for the Spark application pods. Leave this empty and Ocean Spark will choose the best availability zone for the Spark application"
                          },
                          "priority": {
                            "title": "Priority",
                            "type": "string",
                            "example": "low",
                            "description": "The priority of the Spark application."
                          },
                          "pythonVersion": {
                            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/PythonVersion"
                          },
                          "sparkConf": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "title": "Sparkconf",
                            "type": "object"
                          },
                          "sparkConfigMap": {
                            "title": "Sparkconfigmap",
                            "type": "string"
                          },
                          "sparkVersion": {
                            "title": "Sparkversion",
                            "type": "string"
                          },
                          "timeout": {
                            "title": "Timeout",
                            "anyOf": [
                              {
                                "type": "string",
                                "enum": [
                                  "DISABLED"
                                ]
                              },
                              {
                                "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/TimeoutSpec"
                              }
                            ]
                          },
                          "timeToLiveSeconds": {
                            "title": "Timetoliveseconds",
                            "type": "integer"
                          },
                          "type": {
                            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/SparkApplicationType"
                          },
                          "volumes": {
                            "items": {
                              "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/Volume"
                            },
                            "title": "Volumes",
                            "type": "array"
                          },
                          "namespace": {
                            "title": "Namespace",
                            "type": "string",
                            "description": "The Kubernetes namespace the Spark application should run in. The provided namespace must be present in the cluster's Spark app namespace list. If empty, Ocean Spark will use the default 'spark-apps' namespace"
                          },
                          "serviceAccountName": {
                            "title": "ServiceAccountName",
                            "type": "string",
                            "description": "The Kubernetes service account to assign to the Spark application pods If empty Ocean Spark will use the default `spark-driver` service account"
                          }
                        },
                        "components": {
                          "schemas": {
                            "AWSElasticBlockStoreVolumeSource": {
                              "properties": {
                                "fsType": {
                                  "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                                  "title": "Fstype",
                                  "type": "string"
                                },
                                "partition": {
                                  "description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).",
                                  "title": "Partition",
                                  "type": "integer"
                                },
                                "readOnly": {
                                  "description": "Specify \"true\" to force and set the ReadOnly property in VolumeMounts to \"true\". If omitted, the default is \"false\". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                                  "title": "Readonly",
                                  "type": "boolean"
                                },
                                "volumeID": {
                                  "description": "Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                                  "title": "Volumeid",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "volumeID"
                              ],
                              "title": "AWSElasticBlockStoreVolumeSource",
                              "type": "object"
                            },
                            "Affinity": {
                              "properties": {
                                "nodeAffinity": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/NodeAffinity"
                                    }
                                  ],
                                  "description": "Describes node affinity scheduling rules for the pod.",
                                  "title": "Nodeaffinity"
                                },
                                "podAffinity": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/PodAffinity"
                                    }
                                  ],
                                  "description": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).",
                                  "title": "Podaffinity"
                                },
                                "podAntiAffinity": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/PodAntiAffinity"
                                    }
                                  ],
                                  "description": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).",
                                  "title": "Podantiaffinity"
                                }
                              },
                              "title": "Affinity",
                              "type": "object"
                            },
                            "AzureDiskVolumeSource": {
                              "properties": {
                                "cachingMode": {
                                  "description": "Host Caching mode: None, Read Only, Read Write.",
                                  "title": "Cachingmode",
                                  "type": "string"
                                },
                                "diskName": {
                                  "description": "The Name of the data disk in the blob storage",
                                  "title": "Diskname",
                                  "type": "string"
                                },
                                "diskURI": {
                                  "description": "The URI the data disk in the blob storage",
                                  "title": "Diskuri",
                                  "type": "string"
                                },
                                "fsType": {
                                  "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                  "title": "Fstype",
                                  "type": "string"
                                },
                                "kind": {
                                  "description": "Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared",
                                  "title": "Kind",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "description": "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                                  "title": "Readonly",
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "diskName",
                                "diskURI"
                              ],
                              "title": "AzureDiskVolumeSource",
                              "type": "object"
                            },
                            "AzureFileVolumeSource": {
                              "properties": {
                                "readOnly": {
                                  "description": "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                                  "title": "Readonly",
                                  "type": "boolean"
                                },
                                "secretName": {
                                  "description": "the name of secret that contains Azure Storage Account Name and Key",
                                  "title": "Secretname",
                                  "type": "string"
                                },
                                "shareName": {
                                  "description": "Share Name",
                                  "title": "Sharename",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "secretName",
                                "shareName"
                              ],
                              "title": "AzureFileVolumeSource",
                              "type": "object"
                            },
                            "CSIVolumeSource": {
                              "properties": {
                                "driver": {
                                  "description": "Driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.",
                                  "title": "Driver",
                                  "type": "string"
                                },
                                "fsType": {
                                  "description": "Filesystem type to mount. Ex. \"ext4\", \"xfs\", \"ntfs\". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.",
                                  "title": "Fstype",
                                  "type": "string"
                                },
                                "nodePublishSecretRef": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/LocalObjectReference"
                                    }
                                  ],
                                  "description": "NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.",
                                  "title": "Nodepublishsecretref"
                                },
                                "readOnly": {
                                  "description": "Specifies a read-only configuration for the volume. Defaults to false (read/write).",
                                  "title": "Readonly",
                                  "type": "boolean"
                                },
                                "volumeAttributes": {
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "description": "VolumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.",
                                  "title": "Volumeattributes",
                                  "type": "object"
                                }
                              },
                              "required": [
                                "driver"
                              ],
                              "title": "CSIVolumeSource",
                              "type": "object"
                            },
                            "Capabilities": {
                              "properties": {
                                "add": {
                                  "description": "Added capabilities",
                                  "items": {
                                    "type": "string"
                                  },
                                  "title": "Add",
                                  "type": "array"
                                },
                                "drop": {
                                  "description": "Removed capabilities",
                                  "items": {
                                    "type": "string"
                                  },
                                  "title": "Drop",
                                  "type": "array"
                                }
                              },
                              "title": "Capabilities",
                              "type": "object"
                            },
                            "CephFSVolumeSource": {
                              "properties": {
                                "monitors": {
                                  "description": "Required: Monitors is a collection of Ceph monitors More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                  "items": {
                                    "type": "string"
                                  },
                                  "title": "Monitors",
                                  "type": "array"
                                },
                                "path": {
                                  "description": "Optional: Used as the mounted root, rather than the full Ceph tree, default is /",
                                  "title": "Path",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "description": "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                  "title": "Readonly",
                                  "type": "boolean"
                                },
                                "secretFile": {
                                  "description": "Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                  "title": "Secretfile",
                                  "type": "string"
                                },
                                "secretRef": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/LocalObjectReference"
                                    }
                                  ],
                                  "description": "Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                  "title": "Secretref"
                                },
                                "user": {
                                  "description": "Optional: User is the rados user name, default is admin More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                  "title": "User",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "monitors"
                              ],
                              "title": "CephFSVolumeSource",
                              "type": "object"
                            },
                            "CinderVolumeSource": {
                              "properties": {
                                "fsType": {
                                  "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                                  "title": "Fstype",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "description": "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                                  "title": "Readonly",
                                  "type": "boolean"
                                },
                                "secretRef": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/LocalObjectReference"
                                    }
                                  ],
                                  "description": "Optional: points to a secret object containing parameters used to connect to OpenStack.",
                                  "title": "Secretref"
                                },
                                "volumeID": {
                                  "description": "volume id used to identify the volume in cinder More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                                  "title": "Volumeid",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "volumeID"
                              ],
                              "title": "CinderVolumeSource",
                              "type": "object"
                            },
                            "ConfigMapProjection": {
                              "properties": {
                                "items": {
                                  "description": "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/KeyToPath"
                                  },
                                  "title": "Items",
                                  "type": "array"
                                },
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "title": "Name",
                                  "type": "string"
                                },
                                "optional": {
                                  "description": "Specify whether the ConfigMap or its keys must be defined",
                                  "title": "Optional",
                                  "type": "boolean"
                                }
                              },
                              "title": "ConfigMapProjection",
                              "type": "object"
                            },
                            "ConfigMapVolumeSource": {
                              "properties": {
                                "defaultMode": {
                                  "description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                  "title": "Defaultmode",
                                  "type": "integer"
                                },
                                "items": {
                                  "description": "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/KeyToPath"
                                  },
                                  "title": "Items",
                                  "type": "array"
                                },
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "title": "Name",
                                  "type": "string"
                                },
                                "optional": {
                                  "description": "Specify whether the ConfigMap or its keys must be defined",
                                  "title": "Optional",
                                  "type": "boolean"
                                }
                              },
                              "title": "ConfigMapVolumeSource",
                              "type": "object"
                            },
                            "Dependencies": {
                              "description": "Dependencies of the Spark application",
                              "properties": {
                                "files": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "title": "Files",
                                  "type": "array"
                                },
                                "jars": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "title": "Jars",
                                  "type": "array"
                                },
                                "pyFiles": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "title": "Pyfiles",
                                  "type": "array"
                                },
                                "packages": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "title": "Packages",
                                  "type": "array"
                                },
                                "excludePackages": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "title": "Excludepackages",
                                  "type": "array"
                                },
                                "repositories": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "title": "Repositories",
                                  "type": "array"
                                }
                              },
                              "title": "Dependencies",
                              "type": "object"
                            },
                            "DownwardAPIProjection": {
                              "properties": {
                                "items": {
                                  "description": "Items is a list of DownwardAPIVolume file",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/DownwardAPIVolumeFile"
                                  },
                                  "title": "Items",
                                  "type": "array"
                                }
                              },
                              "title": "DownwardAPIProjection",
                              "type": "object"
                            },
                            "DownwardAPIVolumeFile": {
                              "properties": {
                                "fieldRef": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/ObjectFieldSelector"
                                    }
                                  ],
                                  "description": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.",
                                  "title": "Fieldref"
                                },
                                "mode": {
                                  "description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                  "title": "Mode",
                                  "type": "integer"
                                },
                                "path": {
                                  "description": "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
                                  "title": "Path",
                                  "type": "string"
                                },
                                "resourceFieldRef": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/ResourceFieldSelector"
                                    }
                                  ],
                                  "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
                                  "title": "Resourcefieldref"
                                }
                              },
                              "required": [
                                "path"
                              ],
                              "title": "DownwardAPIVolumeFile",
                              "type": "object"
                            },
                            "DownwardAPIVolumeSource": {
                              "properties": {
                                "defaultMode": {
                                  "description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                  "title": "Defaultmode",
                                  "type": "integer"
                                },
                                "items": {
                                  "description": "Items is a list of downward API volume file",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/DownwardAPIVolumeFile"
                                  },
                                  "title": "Items",
                                  "type": "array"
                                }
                              },
                              "title": "DownwardAPIVolumeSource",
                              "type": "object"
                            },
                            "DriverSpec": {
                              "additionalProperties": false,
                              "description": "A configuration for a Spark driver (no required field)",
                              "properties": {
                                "affinity": {
                                  "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/Affinity"
                                },
                                "annotations": {
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "title": "Annotations",
                                  "type": "object"
                                },
                                "configMaps": {
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/NamePath"
                                  },
                                  "title": "Configmaps",
                                  "type": "array"
                                },
                                "coreLimit": {
                                  "title": "Corelimit",
                                  "type": "string"
                                },
                                "coreRequest": {
                                  "title": "Corerequest",
                                  "type": "string"
                                },
                                "cores": {
                                  "type": "number",
                                  "description": "The number of cores allocated to the Spark application. It is 0 if the application is completed.\n",
                                  "example": 1
                                },
                                "dnsConfig": {
                                  "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/PodDNSConfig"
                                },
                                "env": {
                                  "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/Env"
                                },
                                "envSecretKeyRefs": {
                                  "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/EnvSecretKeyRefs"
                                },
                                "envVars": {
                                  "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/EnvVars"
                                },
                                "hostAliases": {
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/HostAlias"
                                  },
                                  "title": "Hostaliases",
                                  "type": "array"
                                },
                                "image": {
                                  "title": "Image",
                                  "type": "string"
                                },
                                "instanceSelector": {
                                  "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/InstanceSelector"
                                },
                                "instanceAllowList": {
                                  "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/InstanceAllowList"
                                },
                                "javaOptions": {
                                  "title": "Javaoptions",
                                  "type": "string"
                                },
                                "lifecycle": {
                                  "title": "Lifecycle",
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/Lifecycle"
                                    }
                                  ],
                                  "description": "Optional lifecycle hooks to add to the driver pod"
                                },
                                "sidecars": {
                                  "title": "Sidecars",
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/Container"
                                  }
                                },
                                "initContainers": {
                                  "title": "Initcontainers",
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/Container"
                                  }
                                },
                                "labels": {
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "title": "Labels",
                                  "type": "object"
                                },
                                "memory": {
                                  "title": "Memory",
                                  "type": "string"
                                },
                                "memoryOverhead": {
                                  "title": "Memoryoverhead",
                                  "type": "string"
                                },
                                "podName": {
                                  "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/K8sName"
                                },
                                "podSecurityContext": {
                                  "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/PodSecurityContext"
                                },
                                "secrets": {
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/SecretInfo"
                                  },
                                  "title": "Secrets",
                                  "type": "array"
                                },
                                "securityContext": {
                                  "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/SecurityContext"
                                },
                                "spot": {
                                  "title": "Spot",
                                  "type": "boolean"
                                },
                                "tolerations": {
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/Toleration"
                                  },
                                  "title": "Tolerations",
                                  "type": "array"
                                },
                                "vngIds": {
                                  "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/VngIds"
                                },
                                "volumeMounts": {
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/VolumeMount"
                                  },
                                  "title": "Volumemounts",
                                  "type": "array"
                                }
                              },
                              "title": "DriverSpec",
                              "type": "object"
                            },
                            "EmptyDirVolumeSource": {
                              "properties": {
                                "medium": {
                                  "description": "What type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                                  "title": "Medium",
                                  "type": "string"
                                },
                                "sizeLimit": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/Quantity"
                                    }
                                  ],
                                  "description": "Total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir",
                                  "title": "Sizelimit"
                                }
                              },
                              "title": "EmptyDirVolumeSource",
                              "type": "object"
                            },
                            "Env": {
                              "title": "Env",
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/EnvVar"
                              },
                              "description": "List of environment variables to set in the container."
                            },
                            "EnvSecretKeyRefs": {
                              "additionalProperties": {
                                "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/NameKey"
                              },
                              "title": "EnvSecretKeyRefs",
                              "type": "object",
                              "description": "DEPRECATED use `env` instead"
                            },
                            "EnvVars": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "title": "EnvVars",
                              "type": "object",
                              "description": "DEPRECATED use `env` instead"
                            },
                            "ExecutorSpec": {
                              "additionalProperties": false,
                              "description": "A configuration for a Spark executor (no required field)",
                              "properties": {
                                "affinity": {
                                  "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/Affinity"
                                },
                                "annotations": {
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "title": "Annotations",
                                  "type": "object"
                                },
                                "configMaps": {
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/NamePath"
                                  },
                                  "title": "Configmaps",
                                  "type": "array"
                                },
                                "coreLimit": {
                                  "title": "Corelimit",
                                  "type": "string"
                                },
                                "coreRequest": {
                                  "title": "Corerequest",
                                  "type": "string"
                                },
                                "cores": {
                                  "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/DriverSpec/properties/cores"
                                },
                                "dnsConfig": {
                                  "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/PodDNSConfig"
                                },
                                "env": {
                                  "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/Env"
                                },
                                "envSecretKeyRefs": {
                                  "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/EnvSecretKeyRefs"
                                },
                                "envVars": {
                                  "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/EnvVars"
                                },
                                "hostAliases": {
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/HostAlias"
                                  },
                                  "title": "Hostaliases",
                                  "type": "array"
                                },
                                "image": {
                                  "title": "Image",
                                  "type": "string"
                                },
                                "instanceSelector": {
                                  "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/InstanceSelector"
                                },
                                "instanceAllowList": {
                                  "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/InstanceAllowList"
                                },
                                "sidecars": {
                                  "title": "Sidecars",
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/Container"
                                  }
                                },
                                "initContainers": {
                                  "title": "Initcontainers",
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/Container"
                                  }
                                },
                                "instances": {
                                  "title": "Instances",
                                  "type": "integer"
                                },
                                "javaOptions": {
                                  "title": "Javaoptions",
                                  "type": "string"
                                },
                                "labels": {
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "title": "Labels",
                                  "type": "object"
                                },
                                "memory": {
                                  "oneOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/StaticMemoryString"
                                    },
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/OOMRecoveryStrategy"
                                    },
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/MemoryAutotuningStrategy"
                                    }
                                  ]
                                },
                                "memoryOverhead": {
                                  "title": "Memoryoverhead",
                                  "type": "string"
                                },
                                "podSecurityContext": {
                                  "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/PodSecurityContext"
                                },
                                "secrets": {
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/SecretInfo"
                                  },
                                  "title": "Secrets",
                                  "type": "array"
                                },
                                "securityContext": {
                                  "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/SecurityContext"
                                },
                                "spot": {
                                  "title": "Spot",
                                  "type": "boolean"
                                },
                                "tolerations": {
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/Toleration"
                                  },
                                  "title": "Tolerations",
                                  "type": "array"
                                },
                                "vngIds": {
                                  "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/VngIds"
                                },
                                "volumeMounts": {
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/VolumeMount"
                                  },
                                  "title": "Volumemounts",
                                  "type": "array"
                                }
                              },
                              "title": "ExecutorSpec",
                              "type": "object"
                            },
                            "FCVolumeSource": {
                              "properties": {
                                "fsType": {
                                  "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                  "title": "Fstype",
                                  "type": "string"
                                },
                                "lun": {
                                  "description": "Optional: FC target lun number",
                                  "title": "Lun",
                                  "type": "integer"
                                },
                                "readOnly": {
                                  "description": "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                                  "title": "Readonly",
                                  "type": "boolean"
                                },
                                "targetWWNs": {
                                  "description": "Optional: FC target worldwide names (WWNs)",
                                  "items": {
                                    "type": "string"
                                  },
                                  "title": "Targetwwns",
                                  "type": "array"
                                },
                                "wwids": {
                                  "description": "Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "title": "Wwids",
                                  "type": "array"
                                }
                              },
                              "title": "FCVolumeSource",
                              "type": "object"
                            },
                            "FlexVolumeSource": {
                              "properties": {
                                "driver": {
                                  "description": "Driver is the name of the driver to use for this volume.",
                                  "title": "Driver",
                                  "type": "string"
                                },
                                "fsType": {
                                  "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script.",
                                  "title": "Fstype",
                                  "type": "string"
                                },
                                "options": {
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "description": "Optional: Extra command options if any.",
                                  "title": "Options",
                                  "type": "object"
                                },
                                "readOnly": {
                                  "description": "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                                  "title": "Readonly",
                                  "type": "boolean"
                                },
                                "secretRef": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/LocalObjectReference"
                                    }
                                  ],
                                  "description": "Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.",
                                  "title": "Secretref"
                                }
                              },
                              "required": [
                                "driver"
                              ],
                              "title": "FlexVolumeSource",
                              "type": "object"
                            },
                            "FlockerVolumeSource": {
                              "properties": {
                                "datasetName": {
                                  "description": "Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated",
                                  "title": "Datasetname",
                                  "type": "string"
                                },
                                "datasetUUID": {
                                  "description": "UUID of the dataset. This is unique identifier of a Flocker dataset",
                                  "title": "Datasetuuid",
                                  "type": "string"
                                }
                              },
                              "title": "FlockerVolumeSource",
                              "type": "object"
                            },
                            "GCEPersistentDiskVolumeSource": {
                              "properties": {
                                "fsType": {
                                  "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                                  "title": "Fstype",
                                  "type": "string"
                                },
                                "partition": {
                                  "description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                                  "title": "Partition",
                                  "type": "integer"
                                },
                                "pdName": {
                                  "description": "Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                                  "title": "Pdname",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "description": "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                                  "title": "Readonly",
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "pdName"
                              ],
                              "title": "GCEPersistentDiskVolumeSource",
                              "type": "object"
                            },
                            "GitRepoVolumeSource": {
                              "properties": {
                                "directory": {
                                  "description": "Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.",
                                  "title": "Directory",
                                  "type": "string"
                                },
                                "repository": {
                                  "description": "Repository URL",
                                  "title": "Repository",
                                  "type": "string"
                                },
                                "revision": {
                                  "description": "Commit hash for the specified revision.",
                                  "title": "Revision",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "repository"
                              ],
                              "title": "GitRepoVolumeSource",
                              "type": "object"
                            },
                            "GlusterfsVolumeSource": {
                              "properties": {
                                "endpoints": {
                                  "description": "EndpointsName is the endpoint name that details Glusterfs topology. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
                                  "title": "Endpoints",
                                  "type": "string"
                                },
                                "path": {
                                  "description": "Path is the Glusterfs volume path. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
                                  "title": "Path",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "description": "ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
                                  "title": "Readonly",
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "endpoints",
                                "path"
                              ],
                              "title": "GlusterfsVolumeSource",
                              "type": "object"
                            },
                            "HostAlias": {
                              "properties": {
                                "hostnames": {
                                  "description": "Hostnames for the above IP address.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "title": "Hostnames",
                                  "type": "array"
                                },
                                "ip": {
                                  "description": "IP address of the host file entry.",
                                  "title": "Ip",
                                  "type": "string"
                                }
                              },
                              "title": "HostAlias",
                              "type": "object"
                            },
                            "HostPathVolumeSource": {
                              "properties": {
                                "path": {
                                  "description": "Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
                                  "title": "Path",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "Type for HostPath Volume Defaults to \"\" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
                                  "title": "Type",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "path"
                              ],
                              "title": "HostPathVolumeSource",
                              "type": "object"
                            },
                            "InstanceSelector": {
                              "title": "InstanceSelector",
                              "description": "DEPRECATED use `instanceAllowList` instead",
                              "type": "string"
                            },
                            "InstanceAllowList": {
                              "title": "InstanceAllowList",
                              "description": "Restricts what instances can by used by pods:\n\n- On AWS, can be an instance type (ex: `i3.large`, `m5d.xlarge`) or an instance family (ex: `i3`, `m5d`).\n- On GCP, can be a machine type + VCPU spec (ex: `n2-highmem-4`, `n2-standard-2`) or a machine type (ex: `n2-highmem`, `n2-standard`).\n- On Azure, can be a VM size (ex: `standard_a2_v2`, `standard_e16-8_v3`) or a group of VM sizes (ex: `standard_a_v2`, `standard_e_v3`).\n  The group name is obtained by removing the number of vCPU (and constrained vCPU if there is one) from the VM size, and does not\n  necessarily map to a VM series. For Azure, this field is **not** case sensitive.\n",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "ISCSIVolumeSource": {
                              "properties": {
                                "chapAuthDiscovery": {
                                  "description": "whether support iSCSI Discovery CHAP authentication",
                                  "title": "Chapauthdiscovery",
                                  "type": "boolean"
                                },
                                "chapAuthSession": {
                                  "description": "whether support iSCSI Session CHAP authentication",
                                  "title": "Chapauthsession",
                                  "type": "boolean"
                                },
                                "fsType": {
                                  "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi",
                                  "title": "Fstype",
                                  "type": "string"
                                },
                                "initiatorName": {
                                  "description": "Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.",
                                  "title": "Initiatorname",
                                  "type": "string"
                                },
                                "iqn": {
                                  "description": "Target iSCSI Qualified Name.",
                                  "title": "Iqn",
                                  "type": "string"
                                },
                                "iscsiInterface": {
                                  "description": "iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).",
                                  "title": "Iscsiinterface",
                                  "type": "string"
                                },
                                "lun": {
                                  "description": "iSCSI Target Lun number.",
                                  "title": "Lun",
                                  "type": "integer"
                                },
                                "portals": {
                                  "description": "iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
                                  "items": {
                                    "type": "string"
                                  },
                                  "title": "Portals",
                                  "type": "array"
                                },
                                "readOnly": {
                                  "description": "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.",
                                  "title": "Readonly",
                                  "type": "boolean"
                                },
                                "secretRef": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/LocalObjectReference"
                                    }
                                  ],
                                  "description": "CHAP Secret for iSCSI target and initiator authentication",
                                  "title": "Secretref"
                                },
                                "targetPortal": {
                                  "description": "iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
                                  "title": "Targetportal",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "iqn",
                                "lun",
                                "targetPortal"
                              ],
                              "title": "ISCSIVolumeSource",
                              "type": "object"
                            },
                            "K8sName": {
                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
                              "title": "K8sName",
                              "type": "string"
                            },
                            "KeyToPath": {
                              "properties": {
                                "key": {
                                  "description": "The key to project.",
                                  "title": "Key",
                                  "type": "string"
                                },
                                "mode": {
                                  "description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                  "title": "Mode",
                                  "type": "integer"
                                },
                                "path": {
                                  "description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
                                  "title": "Path",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "key",
                                "path"
                              ],
                              "title": "KeyToPath",
                              "type": "object"
                            },
                            "LabelSelector": {
                              "properties": {
                                "matchExpressions": {
                                  "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/LabelSelectorRequirement"
                                  },
                                  "title": "Matchexpressions",
                                  "type": "array"
                                },
                                "matchLabels": {
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                  "title": "Matchlabels",
                                  "type": "object"
                                }
                              },
                              "title": "LabelSelector",
                              "type": "object"
                            },
                            "LabelSelectorRequirement": {
                              "properties": {
                                "key": {
                                  "description": "key is the label key that the selector applies to.",
                                  "title": "Key",
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                  "title": "Operator",
                                  "type": "string"
                                },
                                "values": {
                                  "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "title": "Values",
                                  "type": "array"
                                }
                              },
                              "required": [
                                "key",
                                "operator"
                              ],
                              "title": "LabelSelectorRequirement",
                              "type": "object"
                            },
                            "LocalObjectReference": {
                              "properties": {
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "title": "Name",
                                  "type": "string"
                                }
                              },
                              "title": "LocalObjectReference",
                              "type": "object"
                            },
                            "NFSVolumeSource": {
                              "properties": {
                                "path": {
                                  "description": "Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                                  "title": "Path",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "description": "ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                                  "title": "Readonly",
                                  "type": "boolean"
                                },
                                "server": {
                                  "description": "Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                                  "title": "Server",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "path",
                                "server"
                              ],
                              "title": "NFSVolumeSource",
                              "type": "object"
                            },
                            "NameKey": {
                              "description": "The name and key of a SecretKeyRef",
                              "properties": {
                                "key": {
                                  "title": "Key",
                                  "type": "string"
                                },
                                "name": {
                                  "title": "Name",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "name",
                                "key"
                              ],
                              "title": "NameKey",
                              "type": "object"
                            },
                            "NamePath": {
                              "description": "A pair of a name and a path to which the named objects should be mounted to",
                              "properties": {
                                "name": {
                                  "title": "Name",
                                  "type": "string"
                                },
                                "path": {
                                  "title": "Path",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "name",
                                "path"
                              ],
                              "title": "NamePath",
                              "type": "object"
                            },
                            "NodeAffinity": {
                              "properties": {
                                "preferredDuringSchedulingIgnoredDuringExecution": {
                                  "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/PreferredSchedulingTerm"
                                  },
                                  "title": "Preferredduringschedulingignoredduringexecution",
                                  "type": "array"
                                },
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/NodeSelector"
                                    }
                                  ],
                                  "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.",
                                  "title": "Requiredduringschedulingignoredduringexecution"
                                }
                              },
                              "title": "NodeAffinity",
                              "type": "object"
                            },
                            "NodeSelector": {
                              "properties": {
                                "nodeSelectorTerms": {
                                  "description": "Required. A list of node selector terms. The terms are ORed.",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/NodeSelectorTerm"
                                  },
                                  "title": "Nodeselectorterms",
                                  "type": "array"
                                }
                              },
                              "required": [
                                "nodeSelectorTerms"
                              ],
                              "title": "NodeSelector",
                              "type": "object"
                            },
                            "NodeSelectorRequirement": {
                              "properties": {
                                "key": {
                                  "description": "The label key that the selector applies to.",
                                  "title": "Key",
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                  "title": "Operator",
                                  "type": "string"
                                },
                                "values": {
                                  "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "title": "Values",
                                  "type": "array"
                                }
                              },
                              "required": [
                                "key",
                                "operator"
                              ],
                              "title": "NodeSelectorRequirement",
                              "type": "object"
                            },
                            "NodeSelectorTerm": {
                              "properties": {
                                "matchExpressions": {
                                  "description": "A list of node selector requirements by node's labels.",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/NodeSelectorRequirement"
                                  },
                                  "title": "Matchexpressions",
                                  "type": "array"
                                },
                                "matchFields": {
                                  "description": "A list of node selector requirements by node's fields.",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/NodeSelectorRequirement"
                                  },
                                  "title": "Matchfields",
                                  "type": "array"
                                }
                              },
                              "title": "NodeSelectorTerm",
                              "type": "object"
                            },
                            "ObjectFieldSelector": {
                              "properties": {
                                "apiVersion": {
                                  "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                  "title": "Apiversion",
                                  "type": "string"
                                },
                                "fieldPath": {
                                  "description": "Path of the field to select in the specified API version.",
                                  "title": "Fieldpath",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "fieldPath"
                              ],
                              "title": "ObjectFieldSelector",
                              "type": "object"
                            },
                            "StaticMemoryString": {
                              "title": "StaticMemoryString",
                              "description": "static memory",
                              "type": "string"
                            },
                            "OOMRecoveryStrategy": {
                              "description": "Memory allocation strategy that automatically increments the memory when a previous app failed with an OOM",
                              "properties": {
                                "strategy": {
                                  "type": "string",
                                  "title": "oomRecovery",
                                  "enum": [
                                    "oomRecovery"
                                  ],
                                  "description": "Automatically increase memory if a previous app failed with an OOM error"
                                },
                                "scalingFactor": {
                                  "title": "scalingFactor",
                                  "description": "Memory multiplier after an OOM failure. Optional, defaults to 2.0",
                                  "type": "number"
                                },
                                "maxMemory": {
                                  "title": "maxMemory",
                                  "description": "Optional, maximum allocatable memory",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "strategy"
                              ]
                            },
                            "MemoryAutotuningStrategy": {
                              "description": "Memory allocation strategy that automatically increments the memory when a previous app failed with an OOM, and decreases it based on past applications' memory usage",
                              "properties": {
                                "strategy": {
                                  "type": "string",
                                  "title": "autotuning",
                                  "enum": [
                                    "autotuning"
                                  ],
                                  "description": "Automatically increase memory if a previous app failed with an OOM error, and decrease it based on past applications' memory usage"
                                },
                                "scalingFactor": {
                                  "title": "scalingFactor",
                                  "description": "Memory multiplier after an OOM failure. Optional, defaults to 2.0",
                                  "type": "number"
                                },
                                "maxMemory": {
                                  "title": "maxMemory",
                                  "description": "Optional, maximum allocatable memory",
                                  "type": "string"
                                },
                                "historySize": {
                                  "title": "historySize",
                                  "description": "Number of past apps to take into account to compute the recommended memory, defaults to 6",
                                  "type": "integer"
                                },
                                "marginRatio": {
                                  "title": "marginRatio",
                                  "description": "Additional safety margin on top of the recommended memory, defaults to 0.1",
                                  "type": "number"
                                }
                              },
                              "required": [
                                "strategy"
                              ]
                            },
                            "PersistentVolumeClaimVolumeSource": {
                              "properties": {
                                "claimName": {
                                  "description": "ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                                  "title": "Claimname",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "description": "Will force the ReadOnly setting in VolumeMounts. Default false.",
                                  "title": "Readonly",
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "claimName"
                              ],
                              "title": "PersistentVolumeClaimVolumeSource",
                              "type": "object"
                            },
                            "PhotonPersistentDiskVolumeSource": {
                              "properties": {
                                "fsType": {
                                  "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                  "title": "Fstype",
                                  "type": "string"
                                },
                                "pdID": {
                                  "description": "ID that identifies Photon Controller persistent disk",
                                  "title": "Pdid",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "pdID"
                              ],
                              "title": "PhotonPersistentDiskVolumeSource",
                              "type": "object"
                            },
                            "PodAffinity": {
                              "properties": {
                                "preferredDuringSchedulingIgnoredDuringExecution": {
                                  "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/WeightedPodAffinityTerm"
                                  },
                                  "title": "Preferredduringschedulingignoredduringexecution",
                                  "type": "array"
                                },
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                  "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/PodAffinityTerm"
                                  },
                                  "title": "Requiredduringschedulingignoredduringexecution",
                                  "type": "array"
                                }
                              },
                              "title": "PodAffinity",
                              "type": "object"
                            },
                            "PodAffinityTerm": {
                              "properties": {
                                "labelSelector": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/LabelSelector"
                                    }
                                  ],
                                  "description": "A label query over a set of resources, in this case pods.",
                                  "title": "Labelselector"
                                },
                                "namespaces": {
                                  "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                  "items": {
                                    "type": "string"
                                  },
                                  "title": "Namespaces",
                                  "type": "array"
                                },
                                "topologyKey": {
                                  "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                  "title": "Topologykey",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "topologyKey"
                              ],
                              "title": "PodAffinityTerm",
                              "type": "object"
                            },
                            "PodAntiAffinity": {
                              "properties": {
                                "preferredDuringSchedulingIgnoredDuringExecution": {
                                  "description": "The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/WeightedPodAffinityTerm"
                                  },
                                  "title": "Preferredduringschedulingignoredduringexecution",
                                  "type": "array"
                                },
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                  "description": "If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/PodAffinityTerm"
                                  },
                                  "title": "Requiredduringschedulingignoredduringexecution",
                                  "type": "array"
                                }
                              },
                              "title": "PodAntiAffinity",
                              "type": "object"
                            },
                            "PodDNSConfigOption": {
                              "title": "PodDNSConfigOption",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "title": "Name",
                                  "description": "Required.",
                                  "type": "string"
                                },
                                "value": {
                                  "title": "Value",
                                  "type": "string"
                                }
                              }
                            },
                            "PodDNSConfig": {
                              "title": "PodDNSConfig",
                              "type": "object",
                              "properties": {
                                "nameservers": {
                                  "title": "Nameservers",
                                  "description": "A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "options": {
                                  "title": "Options",
                                  "description": "A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.",
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/PodDNSConfigOption"
                                  }
                                },
                                "searches": {
                                  "title": "Searches",
                                  "description": "A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "PodSecurityContext": {
                              "properties": {
                                "fsGroup": {
                                  "description": "A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:\n\n1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----\n\nIf unset, the Kubelet will not modify the ownership and permissions of any volume.",
                                  "title": "Fsgroup",
                                  "type": "integer"
                                },
                                "runAsGroup": {
                                  "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
                                  "title": "Runasgroup",
                                  "type": "integer"
                                },
                                "runAsNonRoot": {
                                  "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                  "title": "Runasnonroot",
                                  "type": "boolean"
                                },
                                "runAsUser": {
                                  "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
                                  "title": "Runasuser",
                                  "type": "integer"
                                },
                                "seLinuxOptions": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/SELinuxOptions"
                                    }
                                  ],
                                  "description": "The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
                                  "title": "Selinuxoptions"
                                },
                                "supplementalGroups": {
                                  "description": "A list of groups applied to the first process run in each container, in addition to the container's primary GID.  If unspecified, no groups will be added to any container.",
                                  "items": {
                                    "type": "integer"
                                  },
                                  "title": "Supplementalgroups",
                                  "type": "array"
                                },
                                "sysctls": {
                                  "description": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch.",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/Sysctl"
                                  },
                                  "title": "Sysctls",
                                  "type": "array"
                                },
                                "windowsOptions": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/WindowsSecurityContextOptions"
                                    }
                                  ],
                                  "description": "Windows security options.",
                                  "title": "Windowsoptions"
                                }
                              },
                              "title": "PodSecurityContext",
                              "type": "object"
                            },
                            "PortworxVolumeSource": {
                              "properties": {
                                "fsType": {
                                  "description": "FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                  "title": "Fstype",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "description": "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                                  "title": "Readonly",
                                  "type": "boolean"
                                },
                                "volumeID": {
                                  "description": "VolumeID uniquely identifies a Portworx volume",
                                  "title": "Volumeid",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "volumeID"
                              ],
                              "title": "PortworxVolumeSource",
                              "type": "object"
                            },
                            "PreferredSchedulingTerm": {
                              "properties": {
                                "preference": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/NodeSelectorTerm"
                                    }
                                  ],
                                  "description": "A node selector term, associated with the corresponding weight.",
                                  "title": "Preference"
                                },
                                "weight": {
                                  "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
                                  "title": "Weight",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "preference",
                                "weight"
                              ],
                              "title": "PreferredSchedulingTerm",
                              "type": "object"
                            },
                            "ProjectedVolumeSource": {
                              "properties": {
                                "defaultMode": {
                                  "description": "Mode bits to use on created files by default. Must be a value between 0 and 0777. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                  "title": "Defaultmode",
                                  "type": "integer"
                                },
                                "sources": {
                                  "description": "list of volume projections",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/VolumeProjection"
                                  },
                                  "title": "Sources",
                                  "type": "array"
                                }
                              },
                              "required": [
                                "sources"
                              ],
                              "title": "ProjectedVolumeSource",
                              "type": "object"
                            },
                            "PythonVersion": {
                              "description": "An enumeration.",
                              "enum": [
                                "2",
                                "3"
                              ],
                              "default": "3",
                              "example": "3",
                              "title": "PythonVersion",
                              "type": "string"
                            },
                            "Quantity": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                }
                              ],
                              "title": "Quantity"
                            },
                            "QuobyteVolumeSource": {
                              "properties": {
                                "group": {
                                  "description": "Group to map volume access to Default is no group",
                                  "title": "Group",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "description": "ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.",
                                  "title": "Readonly",
                                  "type": "boolean"
                                },
                                "registry": {
                                  "description": "Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes",
                                  "title": "Registry",
                                  "type": "string"
                                },
                                "tenant": {
                                  "description": "Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin",
                                  "title": "Tenant",
                                  "type": "string"
                                },
                                "user": {
                                  "description": "User to map volume access to Defaults to serivceaccount user",
                                  "title": "User",
                                  "type": "string"
                                },
                                "volume": {
                                  "description": "Volume is a string that references an already created Quobyte volume by name.",
                                  "title": "Volume",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "registry",
                                "volume"
                              ],
                              "title": "QuobyteVolumeSource",
                              "type": "object"
                            },
                            "RBDVolumeSource": {
                              "properties": {
                                "fsType": {
                                  "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd",
                                  "title": "Fstype",
                                  "type": "string"
                                },
                                "image": {
                                  "description": "The rados image name. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                  "title": "Image",
                                  "type": "string"
                                },
                                "keyring": {
                                  "description": "Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                  "title": "Keyring",
                                  "type": "string"
                                },
                                "monitors": {
                                  "description": "A collection of Ceph monitors. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                  "items": {
                                    "type": "string"
                                  },
                                  "title": "Monitors",
                                  "type": "array"
                                },
                                "pool": {
                                  "description": "The rados pool name. Default is rbd. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                  "title": "Pool",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "description": "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                  "title": "Readonly",
                                  "type": "boolean"
                                },
                                "secretRef": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/LocalObjectReference"
                                    }
                                  ],
                                  "description": "SecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                  "title": "Secretref"
                                },
                                "user": {
                                  "description": "The rados user name. Default is admin. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                  "title": "User",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "image",
                                "monitors"
                              ],
                              "title": "RBDVolumeSource",
                              "type": "object"
                            },
                            "ResourceFieldSelector": {
                              "properties": {
                                "containerName": {
                                  "description": "Container name: required for volumes, optional for env vars",
                                  "title": "Containername",
                                  "type": "string"
                                },
                                "divisor": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/Quantity"
                                    }
                                  ],
                                  "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                  "title": "Divisor"
                                },
                                "resource": {
                                  "description": "Required: resource to select",
                                  "title": "Resource",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "resource"
                              ],
                              "title": "ResourceFieldSelector",
                              "type": "object"
                            },
                            "SELinuxOptions": {
                              "properties": {
                                "level": {
                                  "description": "Level is SELinux level label that applies to the container.",
                                  "title": "Level",
                                  "type": "string"
                                },
                                "role": {
                                  "description": "Role is a SELinux role label that applies to the container.",
                                  "title": "Role",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "Type is a SELinux type label that applies to the container.",
                                  "title": "Type",
                                  "type": "string"
                                },
                                "user": {
                                  "description": "User is a SELinux user label that applies to the container.",
                                  "title": "User",
                                  "type": "string"
                                }
                              },
                              "title": "SELinuxOptions",
                              "type": "object"
                            },
                            "ScaleIOVolumeSource": {
                              "properties": {
                                "fsType": {
                                  "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Default is \"xfs\".",
                                  "title": "Fstype",
                                  "type": "string"
                                },
                                "gateway": {
                                  "description": "The host address of the ScaleIO API Gateway.",
                                  "title": "Gateway",
                                  "type": "string"
                                },
                                "protectionDomain": {
                                  "description": "The name of the ScaleIO Protection Domain for the configured storage.",
                                  "title": "Protectiondomain",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "description": "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                                  "title": "Readonly",
                                  "type": "boolean"
                                },
                                "secretRef": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/LocalObjectReference"
                                    }
                                  ],
                                  "description": "SecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.",
                                  "title": "Secretref"
                                },
                                "sslEnabled": {
                                  "description": "Flag to enable/disable SSL communication with Gateway, default false",
                                  "title": "Sslenabled",
                                  "type": "boolean"
                                },
                                "storageMode": {
                                  "description": "Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.",
                                  "title": "Storagemode",
                                  "type": "string"
                                },
                                "storagePool": {
                                  "description": "The ScaleIO Storage Pool associated with the protection domain.",
                                  "title": "Storagepool",
                                  "type": "string"
                                },
                                "system": {
                                  "description": "The name of the storage system as configured in ScaleIO.",
                                  "title": "System",
                                  "type": "string"
                                },
                                "volumeName": {
                                  "description": "The name of a volume already created in the ScaleIO system that is associated with this volume source.",
                                  "title": "Volumename",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "gateway",
                                "secretRef",
                                "system"
                              ],
                              "title": "ScaleIOVolumeSource",
                              "type": "object"
                            },
                            "SecretInfo": {
                              "description": "The information of a secret",
                              "properties": {
                                "name": {
                                  "title": "Name",
                                  "type": "string"
                                },
                                "path": {
                                  "title": "Path",
                                  "type": "string"
                                },
                                "secretType": {
                                  "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/SecretType"
                                }
                              },
                              "required": [
                                "name",
                                "path",
                                "secretType"
                              ],
                              "title": "SecretInfo",
                              "type": "object"
                            },
                            "SecretProjection": {
                              "properties": {
                                "items": {
                                  "description": "If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/KeyToPath"
                                  },
                                  "title": "Items",
                                  "type": "array"
                                },
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "title": "Name",
                                  "type": "string"
                                },
                                "optional": {
                                  "description": "Specify whether the Secret or its key must be defined",
                                  "title": "Optional",
                                  "type": "boolean"
                                }
                              },
                              "title": "SecretProjection",
                              "type": "object"
                            },
                            "SecretType": {
                              "description": "An enumeration.",
                              "enum": [
                                "GCPServiceAccount",
                                "HadoopDelegationToken",
                                "Generic"
                              ],
                              "title": "SecretType",
                              "type": "string"
                            },
                            "SecretVolumeSource": {
                              "properties": {
                                "defaultMode": {
                                  "description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                  "title": "Defaultmode",
                                  "type": "integer"
                                },
                                "items": {
                                  "description": "If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/KeyToPath"
                                  },
                                  "title": "Items",
                                  "type": "array"
                                },
                                "optional": {
                                  "description": "Specify whether the Secret or its keys must be defined",
                                  "title": "Optional",
                                  "type": "boolean"
                                },
                                "secretName": {
                                  "description": "Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
                                  "title": "Secretname",
                                  "type": "string"
                                }
                              },
                              "title": "SecretVolumeSource",
                              "type": "object"
                            },
                            "SecurityContext": {
                              "properties": {
                                "allowPrivilegeEscalation": {
                                  "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
                                  "title": "Allowprivilegeescalation",
                                  "type": "boolean"
                                },
                                "capabilities": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/Capabilities"
                                    }
                                  ],
                                  "description": "The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.",
                                  "title": "Capabilities"
                                },
                                "privileged": {
                                  "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
                                  "title": "Privileged",
                                  "type": "boolean"
                                },
                                "procMount": {
                                  "description": "procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.",
                                  "title": "Procmount",
                                  "type": "string"
                                },
                                "readOnlyRootFilesystem": {
                                  "description": "Whether this container has a read-only root filesystem. Default is false.",
                                  "title": "Readonlyrootfilesystem",
                                  "type": "boolean"
                                },
                                "runAsGroup": {
                                  "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                  "title": "Runasgroup",
                                  "type": "integer"
                                },
                                "runAsNonRoot": {
                                  "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                  "title": "Runasnonroot",
                                  "type": "boolean"
                                },
                                "runAsUser": {
                                  "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                  "title": "Runasuser",
                                  "type": "integer"
                                },
                                "seLinuxOptions": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/SELinuxOptions"
                                    }
                                  ],
                                  "description": "The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                  "title": "Selinuxoptions"
                                },
                                "windowsOptions": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/WindowsSecurityContextOptions"
                                    }
                                  ],
                                  "description": "Windows security options.",
                                  "title": "Windowsoptions"
                                }
                              },
                              "title": "SecurityContext",
                              "type": "object"
                            },
                            "ServiceAccountTokenProjection": {
                              "properties": {
                                "audience": {
                                  "description": "Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.",
                                  "title": "Audience",
                                  "type": "string"
                                },
                                "expirationSeconds": {
                                  "description": "ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.",
                                  "title": "Expirationseconds",
                                  "type": "integer"
                                },
                                "path": {
                                  "description": "Path is the path relative to the mount point of the file to project the token into.",
                                  "title": "Path",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "path"
                              ],
                              "title": "ServiceAccountTokenProjection",
                              "type": "object"
                            },
                            "SparkApplicationType": {
                              "description": "An enumeration.",
                              "enum": [
                                "Java",
                                "Python",
                                "Scala"
                              ],
                              "title": "SparkApplicationType",
                              "type": "string"
                            },
                            "StorageOSVolumeSource": {
                              "properties": {
                                "fsType": {
                                  "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                  "title": "Fstype",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "description": "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                                  "title": "Readonly",
                                  "type": "boolean"
                                },
                                "secretRef": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/LocalObjectReference"
                                    }
                                  ],
                                  "description": "SecretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.",
                                  "title": "Secretref"
                                },
                                "volumeName": {
                                  "description": "VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.",
                                  "title": "Volumename",
                                  "type": "string"
                                },
                                "volumeNamespace": {
                                  "description": "VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to \"default\" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.",
                                  "title": "Volumenamespace",
                                  "type": "string"
                                }
                              },
                              "title": "StorageOSVolumeSource",
                              "type": "object"
                            },
                            "Sysctl": {
                              "properties": {
                                "name": {
                                  "description": "Name of a property to set",
                                  "title": "Name",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "Value of a property to set",
                                  "title": "Value",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "name",
                                "value"
                              ],
                              "title": "Sysctl",
                              "type": "object"
                            },
                            "Toleration": {
                              "properties": {
                                "effect": {
                                  "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                                  "title": "Effect",
                                  "type": "string"
                                },
                                "key": {
                                  "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                                  "title": "Key",
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
                                  "title": "Operator",
                                  "type": "string"
                                },
                                "tolerationSeconds": {
                                  "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
                                  "title": "Tolerationseconds",
                                  "type": "integer"
                                },
                                "value": {
                                  "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
                                  "title": "Value",
                                  "type": "string"
                                }
                              },
                              "title": "Toleration",
                              "type": "object"
                            },
                            "VngIds": {
                              "items": {
                                "type": "string"
                              },
                              "title": "Vngids",
                              "description": "An optional list of Virtual Node Group identifiers (like [\"ols-d1d766b9\"]) on which the pod can be run. If omitted, the pod can be run on any VNG."
                            },
                            "Volume": {
                              "properties": {
                                "awsElasticBlockStore": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/AWSElasticBlockStoreVolumeSource"
                                    }
                                  ],
                                  "description": "AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                                  "title": "Awselasticblockstore"
                                },
                                "azureDisk": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/AzureDiskVolumeSource"
                                    }
                                  ],
                                  "description": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.",
                                  "title": "Azuredisk"
                                },
                                "azureFile": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/AzureFileVolumeSource"
                                    }
                                  ],
                                  "description": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod.",
                                  "title": "Azurefile"
                                },
                                "cephfs": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/CephFSVolumeSource"
                                    }
                                  ],
                                  "description": "CephFS represents a Ceph FS mount on the host that shares a pod's lifetime",
                                  "title": "Cephfs"
                                },
                                "cinder": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/CinderVolumeSource"
                                    }
                                  ],
                                  "description": "Cinder represents a cinder volume attached and mounted on kubelets host machine More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                                  "title": "Cinder"
                                },
                                "configMap": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/ConfigMapVolumeSource"
                                    }
                                  ],
                                  "description": "ConfigMap represents a configMap that should populate this volume",
                                  "title": "Configmap"
                                },
                                "csi": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/CSIVolumeSource"
                                    }
                                  ],
                                  "description": "CSI (Container Storage Interface) represents storage that is handled by an external CSI driver (Alpha feature).",
                                  "title": "Csi"
                                },
                                "downwardAPI": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/DownwardAPIVolumeSource"
                                    }
                                  ],
                                  "description": "DownwardAPI represents downward API about the pod that should populate this volume",
                                  "title": "Downwardapi"
                                },
                                "emptyDir": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/EmptyDirVolumeSource"
                                    }
                                  ],
                                  "description": "EmptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                                  "title": "Emptydir"
                                },
                                "fc": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/FCVolumeSource"
                                    }
                                  ],
                                  "description": "FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.",
                                  "title": "Fc"
                                },
                                "flexVolume": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/FlexVolumeSource"
                                    }
                                  ],
                                  "description": "FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.",
                                  "title": "Flexvolume"
                                },
                                "flocker": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/FlockerVolumeSource"
                                    }
                                  ],
                                  "description": "Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running",
                                  "title": "Flocker"
                                },
                                "gcePersistentDisk": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/GCEPersistentDiskVolumeSource"
                                    }
                                  ],
                                  "description": "GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                                  "title": "Gcepersistentdisk"
                                },
                                "gitRepo": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/GitRepoVolumeSource"
                                    }
                                  ],
                                  "description": "GitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.",
                                  "title": "Gitrepo"
                                },
                                "glusterfs": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/GlusterfsVolumeSource"
                                    }
                                  ],
                                  "description": "Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md",
                                  "title": "Glusterfs"
                                },
                                "hostPath": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/HostPathVolumeSource"
                                    }
                                  ],
                                  "description": "HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
                                  "title": "Hostpath"
                                },
                                "iscsi": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/ISCSIVolumeSource"
                                    }
                                  ],
                                  "description": "ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://releases.k8s.io/HEAD/examples/volumes/iscsi/README.md",
                                  "title": "Iscsi"
                                },
                                "name": {
                                  "description": "Volume's name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "title": "Name",
                                  "type": "string"
                                },
                                "nfs": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/NFSVolumeSource"
                                    }
                                  ],
                                  "description": "NFS represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                                  "title": "Nfs"
                                },
                                "persistentVolumeClaim": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/PersistentVolumeClaimVolumeSource"
                                    }
                                  ],
                                  "description": "PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                                  "title": "Persistentvolumeclaim"
                                },
                                "photonPersistentDisk": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/PhotonPersistentDiskVolumeSource"
                                    }
                                  ],
                                  "description": "PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine",
                                  "title": "Photonpersistentdisk"
                                },
                                "portworxVolume": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/PortworxVolumeSource"
                                    }
                                  ],
                                  "description": "PortworxVolume represents a portworx volume attached and mounted on kubelets host machine",
                                  "title": "Portworxvolume"
                                },
                                "projected": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/ProjectedVolumeSource"
                                    }
                                  ],
                                  "description": "Items for all in one resources secrets, configmaps, and downward API",
                                  "title": "Projected"
                                },
                                "quobyte": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/QuobyteVolumeSource"
                                    }
                                  ],
                                  "description": "Quobyte represents a Quobyte mount on the host that shares a pod's lifetime",
                                  "title": "Quobyte"
                                },
                                "rbd": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/RBDVolumeSource"
                                    }
                                  ],
                                  "description": "RBD represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md",
                                  "title": "Rbd"
                                },
                                "scaleIO": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/ScaleIOVolumeSource"
                                    }
                                  ],
                                  "description": "ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.",
                                  "title": "Scaleio"
                                },
                                "secret": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/SecretVolumeSource"
                                    }
                                  ],
                                  "description": "Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
                                  "title": "Secret"
                                },
                                "storageos": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/StorageOSVolumeSource"
                                    }
                                  ],
                                  "description": "StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.",
                                  "title": "Storageos"
                                },
                                "vsphereVolume": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/VsphereVirtualDiskVolumeSource"
                                    }
                                  ],
                                  "description": "VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine",
                                  "title": "Vspherevolume"
                                }
                              },
                              "required": [
                                "name"
                              ],
                              "title": "Volume",
                              "type": "object"
                            },
                            "VolumeMount": {
                              "properties": {
                                "mountPath": {
                                  "description": "Path within the container at which the volume should be mounted.  Must not contain ':'.",
                                  "title": "Mountpath",
                                  "type": "string"
                                },
                                "mountPropagation": {
                                  "description": "mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.",
                                  "title": "Mountpropagation",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "This must match the Name of a Volume.",
                                  "title": "Name",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
                                  "title": "Readonly",
                                  "type": "boolean"
                                },
                                "subPath": {
                                  "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                  "title": "Subpath",
                                  "type": "string"
                                },
                                "subPathExpr": {
                                  "description": "Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \"\" (volume's root). SubPathExpr and SubPath are mutually exclusive. This field is beta in 1.15.",
                                  "title": "Subpathexpr",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "mountPath",
                                "name"
                              ],
                              "title": "VolumeMount",
                              "type": "object"
                            },
                            "VolumeProjection": {
                              "properties": {
                                "configMap": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/ConfigMapProjection"
                                    }
                                  ],
                                  "description": "information about the configMap data to project",
                                  "title": "Configmap"
                                },
                                "downwardAPI": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/DownwardAPIProjection"
                                    }
                                  ],
                                  "description": "information about the downwardAPI data to project",
                                  "title": "Downwardapi"
                                },
                                "secret": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/SecretProjection"
                                    }
                                  ],
                                  "description": "information about the secret data to project",
                                  "title": "Secret"
                                },
                                "serviceAccountToken": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/ServiceAccountTokenProjection"
                                    }
                                  ],
                                  "description": "information about the serviceAccountToken data to project",
                                  "title": "Serviceaccounttoken"
                                }
                              },
                              "title": "VolumeProjection",
                              "type": "object"
                            },
                            "VsphereVirtualDiskVolumeSource": {
                              "properties": {
                                "fsType": {
                                  "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                  "title": "Fstype",
                                  "type": "string"
                                },
                                "storagePolicyID": {
                                  "description": "Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.",
                                  "title": "Storagepolicyid",
                                  "type": "string"
                                },
                                "storagePolicyName": {
                                  "description": "Storage Policy Based Management (SPBM) profile name.",
                                  "title": "Storagepolicyname",
                                  "type": "string"
                                },
                                "volumePath": {
                                  "description": "Path that identifies vSphere volume vmdk",
                                  "title": "Volumepath",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "volumePath"
                              ],
                              "title": "VsphereVirtualDiskVolumeSource",
                              "type": "object"
                            },
                            "WeightedPodAffinityTerm": {
                              "properties": {
                                "podAffinityTerm": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/PodAffinityTerm"
                                    }
                                  ],
                                  "description": "Required. A pod affinity term, associated with the corresponding weight.",
                                  "title": "Podaffinityterm"
                                },
                                "weight": {
                                  "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
                                  "title": "Weight",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "podAffinityTerm",
                                "weight"
                              ],
                              "title": "WeightedPodAffinityTerm",
                              "type": "object"
                            },
                            "WindowsSecurityContextOptions": {
                              "properties": {
                                "gmsaCredentialSpec": {
                                  "description": "GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.",
                                  "title": "Gmsacredentialspec",
                                  "type": "string"
                                },
                                "gmsaCredentialSpecName": {
                                  "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.",
                                  "title": "Gmsacredentialspecname",
                                  "type": "string"
                                }
                              },
                              "title": "WindowsSecurityContextOptions",
                              "type": "object"
                            },
                            "Container": {
                              "title": "Container",
                              "required": [
                                "name"
                              ],
                              "type": "object",
                              "properties": {
                                "args": {
                                  "title": "Args",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell"
                                },
                                "command": {
                                  "title": "Command",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell"
                                },
                                "env": {
                                  "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/Env"
                                },
                                "envFrom": {
                                  "title": "Envfrom",
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/EnvFromSource"
                                  },
                                  "description": "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated."
                                },
                                "image": {
                                  "title": "Image",
                                  "type": "string",
                                  "description": "Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
                                },
                                "imagePullPolicy": {
                                  "title": "Imagepullpolicy",
                                  "type": "string",
                                  "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images"
                                },
                                "lifecycle": {
                                  "title": "Lifecycle",
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/Lifecycle"
                                    }
                                  ],
                                  "description": "Actions that the management system should take in response to container lifecycle events. Cannot be updated."
                                },
                                "livenessProbe": {
                                  "title": "Livenessprobe",
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/Probe"
                                    }
                                  ],
                                  "description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                },
                                "name": {
                                  "title": "Name",
                                  "type": "string",
                                  "description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated."
                                },
                                "ports": {
                                  "title": "Ports",
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/ContainerPort"
                                  },
                                  "description": "List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Cannot be updated."
                                },
                                "readinessProbe": {
                                  "title": "Readinessprobe",
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/Probe"
                                    }
                                  ],
                                  "description": "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                },
                                "resources": {
                                  "title": "Resources",
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/ResourceRequirements"
                                    }
                                  ],
                                  "description": "Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/"
                                },
                                "securityContext": {
                                  "title": "Securitycontext",
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/SecurityContext"
                                    }
                                  ],
                                  "description": "Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/"
                                },
                                "stdin": {
                                  "title": "Stdin",
                                  "type": "boolean",
                                  "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false."
                                },
                                "stdinOnce": {
                                  "title": "Stdinonce",
                                  "type": "boolean",
                                  "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false"
                                },
                                "terminationMessagePath": {
                                  "title": "Terminationmessagepath",
                                  "type": "string",
                                  "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated."
                                },
                                "terminationMessagePolicy": {
                                  "title": "Terminationmessagepolicy",
                                  "type": "string",
                                  "description": "Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated."
                                },
                                "tty": {
                                  "title": "Tty",
                                  "type": "boolean",
                                  "description": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false."
                                },
                                "volumeDevices": {
                                  "title": "Volumedevices",
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/VolumeDevice"
                                  },
                                  "description": "volumeDevices is the list of block devices to be used by the container. This is a beta feature."
                                },
                                "volumeMounts": {
                                  "title": "Volumemounts",
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/VolumeMount"
                                  },
                                  "description": "Pod volumes to mount into the container's filesystem. Cannot be updated."
                                },
                                "workingDir": {
                                  "title": "Workingdir",
                                  "type": "string",
                                  "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated."
                                }
                              }
                            },
                            "EnvVar": {
                              "title": "EnvVar",
                              "required": [
                                "name"
                              ],
                              "type": "object",
                              "properties": {
                                "name": {
                                  "title": "Name",
                                  "type": "string",
                                  "description": "Name of the environment variable. Must be a C_IDENTIFIER."
                                },
                                "value": {
                                  "title": "Value",
                                  "type": "string",
                                  "description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\"."
                                },
                                "valueFrom": {
                                  "title": "Valuefrom",
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/EnvVarSource"
                                    }
                                  ],
                                  "description": "Source for the environment variable's value. Cannot be used if value is not empty."
                                }
                              }
                            },
                            "EnvVarSource": {
                              "title": "EnvVarSource",
                              "type": "object",
                              "properties": {
                                "configMapKeyRef": {
                                  "title": "Configmapkeyref",
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/ConfigMapKeySelector"
                                    }
                                  ],
                                  "description": "Selects a key of a ConfigMap."
                                },
                                "fieldRef": {
                                  "title": "Fieldref",
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/ObjectFieldSelector"
                                    }
                                  ],
                                  "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP."
                                },
                                "resourceFieldRef": {
                                  "title": "Resourcefieldref",
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/ResourceFieldSelector"
                                    }
                                  ],
                                  "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
                                },
                                "secretKeyRef": {
                                  "title": "Secretkeyref",
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/SecretKeySelector"
                                    }
                                  ],
                                  "description": "Selects a key of a secret in the pod's namespace"
                                }
                              }
                            },
                            "Lifecycle": {
                              "title": "Lifecycle",
                              "type": "object",
                              "properties": {
                                "postStart": {
                                  "title": "Poststart",
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/Handler"
                                    }
                                  ],
                                  "description": "PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks"
                                },
                                "preStop": {
                                  "title": "Prestop",
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/Handler"
                                    }
                                  ],
                                  "description": "PreStop is called immediately before a container is terminated due to an API request or management event such as liveness probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks"
                                }
                              }
                            },
                            "Handler": {
                              "title": "Handler",
                              "type": "object",
                              "properties": {
                                "exec": {
                                  "title": "Exec",
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/ExecAction"
                                    }
                                  ],
                                  "description": "One and only one of the following should be specified. Exec specifies the action to take."
                                },
                                "httpGet": {
                                  "title": "Httpget",
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/HTTPGetAction"
                                    }
                                  ],
                                  "description": "HTTPGet specifies the http request to perform."
                                },
                                "tcpSocket": {
                                  "title": "Tcpsocket",
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/TCPSocketAction"
                                    }
                                  ],
                                  "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported"
                                }
                              }
                            },
                            "ExecAction": {
                              "title": "ExecAction",
                              "type": "object",
                              "properties": {
                                "command": {
                                  "title": "Command",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                }
                              }
                            },
                            "HTTPGetAction": {
                              "title": "HTTPGetAction",
                              "required": [
                                "port"
                              ],
                              "type": "object",
                              "properties": {
                                "host": {
                                  "title": "Host",
                                  "type": "string",
                                  "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                },
                                "httpHeaders": {
                                  "title": "Httpheaders",
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/HTTPHeader"
                                  },
                                  "description": "Custom headers to set in the request. HTTP allows repeated headers."
                                },
                                "path": {
                                  "title": "Path",
                                  "type": "string",
                                  "description": "Path to access on the HTTP server."
                                },
                                "port": {
                                  "title": "Port",
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/IntOrString"
                                    }
                                  ],
                                  "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                },
                                "scheme": {
                                  "title": "Scheme",
                                  "type": "string",
                                  "description": "Scheme to use for connecting to the host. Defaults to HTTP."
                                }
                              }
                            },
                            "HTTPHeader": {
                              "title": "HTTPHeader",
                              "required": [
                                "name",
                                "value"
                              ],
                              "type": "object",
                              "properties": {
                                "name": {
                                  "title": "Name",
                                  "type": "string",
                                  "description": "The header field name"
                                },
                                "value": {
                                  "title": "Value",
                                  "type": "string",
                                  "description": "The header field value"
                                }
                              }
                            },
                            "HTTPValidationError": {
                              "title": "HTTPValidationError",
                              "type": "object",
                              "properties": {
                                "detail": {
                                  "title": "Detail",
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/ValidationError"
                                  }
                                }
                              }
                            },
                            "Probe": {
                              "title": "Probe",
                              "type": "object",
                              "properties": {
                                "exec": {
                                  "title": "Exec",
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/ExecAction"
                                    }
                                  ],
                                  "description": "One and only one of the following should be specified. Exec specifies the action to take."
                                },
                                "failureThreshold": {
                                  "title": "Failurethreshold",
                                  "type": "integer",
                                  "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1."
                                },
                                "httpGet": {
                                  "title": "Httpget",
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/HTTPGetAction"
                                    }
                                  ],
                                  "description": "HTTPGet specifies the http request to perform."
                                },
                                "initialDelaySeconds": {
                                  "title": "Initialdelayseconds",
                                  "type": "integer",
                                  "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                },
                                "periodSeconds": {
                                  "title": "Periodseconds",
                                  "type": "integer",
                                  "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1."
                                },
                                "successThreshold": {
                                  "title": "Successthreshold",
                                  "type": "integer",
                                  "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1."
                                },
                                "tcpSocket": {
                                  "title": "Tcpsocket",
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/TCPSocketAction"
                                    }
                                  ],
                                  "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported"
                                },
                                "timeoutSeconds": {
                                  "title": "Timeoutseconds",
                                  "type": "integer",
                                  "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                }
                              }
                            },
                            "ResourceRequirements": {
                              "title": "ResourceRequirements",
                              "type": "object",
                              "properties": {
                                "limits": {
                                  "title": "Limits",
                                  "type": "object",
                                  "additionalProperties": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/Quantity"
                                  },
                                  "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/"
                                },
                                "requests": {
                                  "title": "Requests",
                                  "type": "object",
                                  "additionalProperties": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/Quantity"
                                  },
                                  "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/"
                                }
                              }
                            },
                            "ConfigMapKeySelector": {
                              "title": "ConfigMapKeySelector",
                              "required": [
                                "key"
                              ],
                              "type": "object",
                              "properties": {
                                "key": {
                                  "title": "Key",
                                  "type": "string",
                                  "description": "The key to select."
                                },
                                "name": {
                                  "title": "Name",
                                  "type": "string",
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                                },
                                "optional": {
                                  "title": "Optional",
                                  "type": "boolean",
                                  "description": "Specify whether the ConfigMap or its key must be defined"
                                }
                              }
                            },
                            "SecretKeySelector": {
                              "title": "SecretKeySelector",
                              "required": [
                                "key"
                              ],
                              "type": "object",
                              "properties": {
                                "key": {
                                  "title": "Key",
                                  "type": "string",
                                  "description": "The key of the secret to select from.  Must be a valid secret key."
                                },
                                "name": {
                                  "title": "Name",
                                  "type": "string",
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                                },
                                "optional": {
                                  "title": "Optional",
                                  "type": "boolean",
                                  "description": "Specify whether the Secret or its key must be defined"
                                }
                              }
                            },
                            "EnvFromSource": {
                              "title": "EnvFromSource",
                              "type": "object",
                              "properties": {
                                "configMapRef": {
                                  "title": "Configmapref",
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/ConfigMapEnvSource"
                                    }
                                  ],
                                  "description": "The ConfigMap to select from"
                                },
                                "prefix": {
                                  "title": "Prefix",
                                  "type": "string",
                                  "description": "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER."
                                },
                                "secretRef": {
                                  "title": "Secretref",
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/SecretEnvSource"
                                    }
                                  ],
                                  "description": "The Secret to select from"
                                }
                              }
                            },
                            "ConfigMapEnvSource": {
                              "title": "ConfigMapEnvSource",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "title": "Name",
                                  "type": "string",
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                                },
                                "optional": {
                                  "title": "Optional",
                                  "type": "boolean",
                                  "description": "Specify whether the ConfigMap must be defined"
                                }
                              }
                            },
                            "SecretEnvSource": {
                              "title": "SecretEnvSource",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "title": "Name",
                                  "type": "string",
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                                },
                                "optional": {
                                  "title": "Optional",
                                  "type": "boolean",
                                  "description": "Specify whether the Secret must be defined"
                                }
                              }
                            },
                            "IntOrString": {
                              "title": "IntOrString",
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            },
                            "TCPSocketAction": {
                              "title": "TCPSocketAction",
                              "required": [
                                "port"
                              ],
                              "type": "object",
                              "properties": {
                                "host": {
                                  "title": "Host",
                                  "type": "string",
                                  "description": "Optional: Host name to connect to, defaults to the pod IP."
                                },
                                "port": {
                                  "title": "Port",
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/IntOrString"
                                    }
                                  ],
                                  "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                }
                              }
                            },
                            "ContainerPort": {
                              "title": "ContainerPort",
                              "required": [
                                "containerPort"
                              ],
                              "type": "object",
                              "properties": {
                                "containerPort": {
                                  "title": "Containerport",
                                  "type": "integer",
                                  "description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536."
                                },
                                "hostIP": {
                                  "title": "Hostip",
                                  "type": "string",
                                  "description": "What host IP to bind the external port to."
                                },
                                "hostPort": {
                                  "title": "Hostport",
                                  "type": "integer",
                                  "description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this."
                                },
                                "name": {
                                  "title": "Name",
                                  "type": "string",
                                  "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services."
                                },
                                "protocol": {
                                  "title": "Protocol",
                                  "type": "string",
                                  "description": "Protocol for port. Must be UDP, TCP, or SCTP. Defaults to \"TCP\"."
                                }
                              }
                            },
                            "VolumeDevice": {
                              "title": "VolumeDevice",
                              "required": [
                                "devicePath",
                                "name"
                              ],
                              "type": "object",
                              "properties": {
                                "devicePath": {
                                  "title": "Devicepath",
                                  "type": "string",
                                  "description": "devicePath is the path inside of the container that the device will be mapped to."
                                },
                                "name": {
                                  "title": "Name",
                                  "type": "string",
                                  "description": "name must match the name of a persistentVolumeClaim in the pod"
                                }
                              }
                            },
                            "ValidationError": {
                              "title": "ValidationError",
                              "required": [
                                "loc",
                                "msg",
                                "type"
                              ],
                              "type": "object",
                              "properties": {
                                "loc": {
                                  "title": "Location",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "msg": {
                                  "title": "Message",
                                  "type": "string"
                                },
                                "type": {
                                  "title": "Error Type",
                                  "type": "string"
                                }
                              }
                            },
                            "TimeoutSpec": {
                              "title": "TimeoutSpec",
                              "required": [
                                "minutes",
                                "policy"
                              ],
                              "type": "object",
                              "properties": {
                                "minutes": {
                                  "title": "Minutes",
                                  "exclusiveMinimum": true,
                                  "type": "integer"
                                },
                                "policy": {
                                  "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/TimeoutPolicy"
                                }
                              }
                            },
                            "TimeoutPolicy": {
                              "title": "TimeoutPolicy",
                              "type": "string",
                              "description": "A TimeoutPolicy is an action that needs to be run when a timeout reaches its end.\nFor now, only KILL is supported, but to make the API extensible we require the\npolicy to be set. Future policies may include behaviours like \"NOTIFY\" instead of\njust killing the application.",
                              "enum": [
                                "KILL"
                              ]
                            }
                          }
                        }
                      }
                    ]
                  },
                  "configTemplateId": {
                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1configTemplate/post/requestBody/content/application~1json/schema/properties/id"
                  },
                  "submissionSource": {
                    "description": "The source that initiated the application submission",
                    "example": "public-api",
                    "type": "string",
                    "enum": [
                      "public-api",
                      "jupyter-enterprise-gateway"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A Spark application just submitted",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body\n",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "id",
                                  "displayName",
                                  "accountId",
                                  "organizationId",
                                  "userId",
                                  "clusterId",
                                  "controllerClusterId",
                                  "appState",
                                  "submissionSource",
                                  "createdAt",
                                  "updatedAt"
                                ],
                                "allOf": [
                                  {
                                    "$ref": "#/paths/~1aws~1emr~1mrScaler/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/1"
                                  },
                                  {
                                    "type": "object",
                                    "description": "The description of a Spark application\n",
                                    "properties": {
                                      "id": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/appId"
                                      },
                                      "displayName": {
                                        "type": "string",
                                        "description": "A non-unique free-form name for the Spark application used in the Spot console. Defaults to the application ID.",
                                        "example": "Daily Reporting 2021-08-18"
                                      },
                                      "accountId": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1job~1%7BjobId%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/accountId"
                                      },
                                      "organizationId": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1job~1%7BjobId%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/organizationId"
                                      },
                                      "userId": {
                                        "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/6/schema"
                                      },
                                      "clusterId": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster~1sparkCoreHours/get/parameters/1/schema/items"
                                      },
                                      "controllerClusterId": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster/get/parameters/4/schema"
                                      },
                                      "appState": {
                                        "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/5/schema"
                                      },
                                      "submissionSource": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/submissionSource"
                                      },
                                      "appType": {
                                        "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/4/schema"
                                      },
                                      "job": {
                                        "type": "object",
                                        "description": "The job to which the application belongs. A job is collection of Spark applications, typically a workload run on a schedule.\n",
                                        "required": [
                                          "id",
                                          "displayName"
                                        ],
                                        "properties": {
                                          "id": {
                                            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/jobId/allOf/0"
                                          },
                                          "displayName": {
                                            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1job~1%7BjobId%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/displayName"
                                          }
                                        }
                                      },
                                      "config": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0"
                                      },
                                      "startedAt": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The time when the Spark application started running (the app state becomes RUNNING). This is not the time when the application launch was requested (this is `createdAt`).\n",
                                        "example": "2021-11-18T17:09:37+00:00"
                                      },
                                      "endedAt": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The time when the Spark application terminated.\n",
                                        "example": "2021-11-18T17:09:37+00:00"
                                      },
                                      "killRequestedAt": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The time when the Spark application kill was requested at.\n",
                                        "example": "2021-11-18T17:09:37+00:00"
                                      },
                                      "liveLog": {
                                        "type": "object",
                                        "description": "API pointers to endpoints serving logs and events related to the Spark application",
                                        "properties": {
                                          "logsStreamUrl": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "URL of the endpoint serving the live driver logs",
                                            "example": "/ocean/spark/cluster/osc-20fac3f1/app/daily-reporting-2021-08-18/logs/live"
                                          },
                                          "kubeEventsStreamUrl": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "URL of the endpoint serving a stream of Kubernetes events",
                                            "example": "/ocean/spark/cluster/osc-20fac3f1/app/daily-reporting-2021-08-18/kubeEvents/live"
                                          }
                                        }
                                      },
                                      "sparkEventLog": {
                                        "type": "object",
                                        "properties": {
                                          "createdAt": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "The time when the Spark event log was created.\n",
                                            "example": "2019-08-24T14:15:22Z"
                                          },
                                          "updatedAt": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "The time when the Spark event log was last updated.\n",
                                            "example": "2019-08-24T14:15:22Z"
                                          },
                                          "availability": {
                                            "type": "string",
                                            "description": "The availability of the Spark event log.\n",
                                            "example": "COMPLETE"
                                          }
                                        }
                                      },
                                      "configurationTemplate": {
                                        "type": "object",
                                        "description": "The configuration template used to create the Spark application.\n",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "The ID of the configuration template.\n",
                                            "example": "string"
                                          },
                                          "displayName": {
                                            "type": "string",
                                            "description": "The display name of the configuration template.\n",
                                            "example": "string"
                                          }
                                        }
                                      },
                                      "cores": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/DriverSpec/properties/cores"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/spark/cluster/{clusterId}/app/{applicationId}": {
      "summary": "Ocean Spark",
      "get": {
        "summary": "Get Application",
        "description": "Describe a Spark application in an Ocean Spark cluster.\n",
        "operationId": "OceanSparkClusterApplicationGet",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          },
          {
            "in": "path",
            "name": "applicationId",
            "required": true,
            "schema": {
              "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/appId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A Spark application",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body\n",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "id",
                                  "displayName",
                                  "accountId",
                                  "organizationId",
                                  "userId",
                                  "clusterId",
                                  "controllerClusterId",
                                  "appState",
                                  "submissionSource",
                                  "createdAt",
                                  "updatedAt"
                                ],
                                "allOf": [
                                  {
                                    "$ref": "#/paths/~1aws~1emr~1mrScaler/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/1"
                                  },
                                  {
                                    "type": "object",
                                    "description": "The description of a Spark application\n",
                                    "properties": {
                                      "id": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/appId"
                                      },
                                      "displayName": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/1/properties/displayName"
                                      },
                                      "accountId": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1job~1%7BjobId%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/accountId"
                                      },
                                      "organizationId": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1job~1%7BjobId%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/organizationId"
                                      },
                                      "userId": {
                                        "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/6/schema"
                                      },
                                      "clusterId": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster~1sparkCoreHours/get/parameters/1/schema/items"
                                      },
                                      "controllerClusterId": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster/get/parameters/4/schema"
                                      },
                                      "appState": {
                                        "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/5/schema"
                                      },
                                      "submissionSource": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/submissionSource"
                                      },
                                      "job": {
                                        "type": "object",
                                        "description": "The job to which the application belongs. A job is collection of Spark applications, typically a workload run on a schedule.\n",
                                        "required": [
                                          "id",
                                          "displayName"
                                        ],
                                        "properties": {
                                          "id": {
                                            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/jobId/allOf/0"
                                          },
                                          "displayName": {
                                            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1job~1%7BjobId%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/displayName"
                                          }
                                        }
                                      },
                                      "config": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0"
                                      },
                                      "startedAt": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The time when the Spark application started running (the app state becomes RUNNING). This is not the time when the application launch was requested (this is `createdAt`).\n",
                                        "example": "2021-11-18T17:09:37+00:00"
                                      },
                                      "endedAt": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The time when the Spark application terminated.\n",
                                        "example": "2021-11-18T17:09:37+00:00"
                                      },
                                      "killRequestedAt": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/1/properties/killRequestedAt"
                                      },
                                      "liveLog": {
                                        "type": "object",
                                        "description": "API pointers to endpoints serving logs and events related to the Spark application",
                                        "properties": {
                                          "logsStreamUrl": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "URL of the endpoint serving the live driver logs",
                                            "example": "/ocean/spark/cluster/osc-20fac3f1/app/daily-reporting-2021-08-18/logs/live"
                                          },
                                          "kubeEventsStreamUrl": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "URL of the endpoint serving a stream of Kubernetes events",
                                            "example": "/ocean/spark/cluster/osc-20fac3f1/app/daily-reporting-2021-08-18/kubeEvents/live"
                                          }
                                        }
                                      },
                                      "metrics": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1statistics/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/metrics"
                                      },
                                      "sparkEventLog": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/1/properties/sparkEventLog"
                                      },
                                      "configurationTemplate": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/1/properties/configurationTemplate"
                                      },
                                      "cores": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/DriverSpec/properties/cores"
                                      },
                                      "archiveLog": {
                                        "type": "object",
                                        "description": "The archive log of the Spark application.\n",
                                        "properties": {
                                          "logsArchiveUrl": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "The URL of the archive log of the Spark application.\n",
                                            "example": "string"
                                          },
                                          "availability": {
                                            "type": "string",
                                            "description": "The availability of the archive log of the Spark application.\n",
                                            "example": "PENDING"
                                          }
                                        }
                                      },
                                      "executorLogs": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app~1%7BapplicationId%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/1/properties/archiveLog"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete or kill an Application",
        "description": "For pending Spark applications, the creation request is canceled. For running Spark applications, the application is forcibly interrupted.\n",
        "operationId": "OceanSparkClusterApplicationDelete",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app~1%7BapplicationId%7D/get/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "description": "A killed Spark application",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body\n",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "id",
                                  "displayName",
                                  "accountId",
                                  "organizationId",
                                  "userId",
                                  "clusterId",
                                  "controllerClusterId",
                                  "appState",
                                  "submissionSource",
                                  "createdAt",
                                  "updatedAt"
                                ],
                                "allOf": [
                                  {
                                    "$ref": "#/paths/~1aws~1emr~1mrScaler/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/1"
                                  },
                                  {
                                    "type": "object",
                                    "description": "The description of a Spark application\n",
                                    "properties": {
                                      "id": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/appId"
                                      },
                                      "displayName": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/1/properties/displayName"
                                      },
                                      "accountId": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1job~1%7BjobId%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/accountId"
                                      },
                                      "organizationId": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1job~1%7BjobId%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/organizationId"
                                      },
                                      "userId": {
                                        "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/6/schema"
                                      },
                                      "clusterId": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster~1sparkCoreHours/get/parameters/1/schema/items"
                                      },
                                      "controllerClusterId": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster/get/parameters/4/schema"
                                      },
                                      "appState": {
                                        "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/5/schema"
                                      },
                                      "submissionSource": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/submissionSource"
                                      },
                                      "appType": {
                                        "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/4/schema"
                                      },
                                      "startedAt": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The time when the Spark application started running (the app state becomes RUNNING). This is not the time when the application launch was requested (this is `createdAt`).\n",
                                        "example": "2021-11-18T17:09:37+00:00"
                                      },
                                      "endedAt": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The time when the Spark application terminated.\n",
                                        "example": "2021-11-18T17:09:37+00:00"
                                      },
                                      "killRequestedAt": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/1/properties/killRequestedAt"
                                      },
                                      "liveLog": {
                                        "type": "object",
                                        "description": "API pointers to endpoints serving logs and events related to the Spark application",
                                        "properties": {
                                          "logsStreamUrl": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "URL of the endpoint serving the live driver logs",
                                            "example": "/ocean/spark/cluster/osc-20fac3f1/app/daily-reporting-2021-08-18/logs/live"
                                          },
                                          "kubeEventsStreamUrl": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "URL of the endpoint serving a stream of Kubernetes events",
                                            "example": "/ocean/spark/cluster/osc-20fac3f1/app/daily-reporting-2021-08-18/kubeEvents/live"
                                          }
                                        }
                                      },
                                      "cores": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/DriverSpec/properties/cores"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/spark/cluster/{clusterId}/app/{applicationId}/issues": {
      "summary": "Ocean Spark",
      "get": {
        "summary": "List Application Issues",
        "description": "List the issues associated with the Spark Application.\n",
        "operationId": "OceanSparkClusterApplicationIssuesList",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app~1%7BapplicationId%7D/get/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "description": "List of issues associated with a Spark application\n",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body\n",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "description": "An error that happened during a Spark application",
                                "type": "object",
                                "properties": {
                                  "errorType": {
                                    "title": "Errortype",
                                    "type": "string"
                                  },
                                  "severity": {
                                    "title": "Severity",
                                    "description": "The severity of the error, ERROR means the application failed.",
                                    "enum": [
                                      "ERROR",
                                      "WARNING"
                                    ],
                                    "type": "string"
                                  },
                                  "abstract": {
                                    "title": "Abstract",
                                    "type": "string"
                                  },
                                  "stacktrace": {
                                    "title": "Stacktrace",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "errorType",
                                  "stacktrace"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/spark/cluster/{clusterId}/app/{applicationId}/log/live": {
      "summary": "Ocean Spark",
      "get": {
        "summary": "Stream Driver log",
        "description": "Stream the driver log of a Spark application in real time.\n",
        "operationId": "OceanSparkClusterApplicationLogsLive",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app~1%7BapplicationId%7D/get/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "description": "A live stream of the driver log",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "21/10/20 15:38:19 INFO SparkContext: Running Spark version 3.2.0 21/10/20 15:38:19 INFO ResourceUtils: ============================================================== 21/10/20 15:38:19 INFO ResourceUtils: No custom resources configured for spark.driver. 21/10/20 15:38:19 INFO ResourceUtils: ============================================================== 21/10/20 15:38:19 INFO SparkContext: Submitted application: daily-reporting-2021-08-18\n"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/spark/cluster/{clusterId}/app/{applicationId}/log/archive": {
      "summary": "Ocean Spark",
      "get": {
        "summary": "Download Driver log",
        "description": "Download an archive of the driver logs for a finished spark application.\n",
        "operationId": "OceanSparkClusterApplicationLogsArchive",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app~1%7BapplicationId%7D/get/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "description": "A file download of the driver's log archive",
            "content": {
              "application/gzip": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/spark/cluster/{clusterId}/app/{applicationId}/executor-log/archive": {
      "summary": "Ocean Spark",
      "get": {
        "summary": "Download Executor logs",
        "description": "Download an archive of the executor logs for a finished spark application.\n",
        "operationId": "OceanSparkClusterApplicationExecutorLogsArchive",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app~1%7BapplicationId%7D/get/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "description": "A file download of the executors log archive",
            "content": {
              "application/zip": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/spark/cluster/{clusterId}/app/{applicationId}/kubeEvent/live": {
      "summary": "Ocean Spark",
      "get": {
        "summary": "Stream Kubernetes events",
        "description": "Stream Kubernetes events about the Spark application in real time.\n",
        "operationId": "OceanSparkClusterApplicationKubeEventsLive",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app~1%7BapplicationId%7D/get/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "description": "A live stream of the Kubernetes events",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "13:06:19: [spark-operator] SparkApplicationAdded: SparkApplication daily-reporting-2021-08-18 was added, enqueuing it for submission 13:06:23: [spark-operator] SparkApplicationSubmitted: SparkApplication daily-reporting-2021-08-18 was submitted successfully 13:06:26: [driver:cluster-autoscaler] TriggeredScaleUp: pod triggered scale-up: [{oceansparkcluster-ondemand-m5.large2021111109541378820000002d 0->1 (max: 100)}]\n"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/spark/configTemplate": {
      "summary": "Ocean Spark",
      "get": {
        "summary": "List Config Templates",
        "description": "List config templates across all clusters.\n",
        "operationId": "OceanSparkConfigTemplateList",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of config templates (can be a single one)",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body\n",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "createdAt",
                                  "updatedAt",
                                  "id",
                                  "displayName",
                                  "clusterId",
                                  "config"
                                ],
                                "allOf": [
                                  {
                                    "$ref": "#/paths/~1aws~1emr~1mrScaler/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/1"
                                  },
                                  {
                                    "type": "object",
                                    "description": "The description of a configuration template\n",
                                    "properties": {
                                      "id": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1configTemplate/post/requestBody/content/application~1json/schema/properties/id"
                                      },
                                      "displayName": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1configTemplate/post/requestBody/content/application~1json/schema/properties/displayName"
                                      },
                                      "clusterId": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster~1sparkCoreHours/get/parameters/1/schema/items"
                                      },
                                      "controllerClusterId": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster/get/parameters/4/schema"
                                      },
                                      "config": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/spark/cluster/{clusterId}/configTemplate": {
      "summary": "Ocean Spark",
      "get": {
        "summary": "List Config Templates in Cluster",
        "description": "List the config templates tied to a specific cluster.\n",
        "operationId": "OceanSparkClusterConfigTemplateList",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1spark~1configTemplate/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "summary": "Create Config Template",
        "description": "Create a new configuration template\n",
        "operationId": "OceanSparkClusterConfigTemplateCreate",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "config"
                ],
                "properties": {
                  "id": {
                    "allOf": [
                      {
                        "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1job~1%7BjobId%7D/get/parameters/2/schema/allOf/0"
                      },
                      {
                        "description": "A unique identifier for a configuration template, set by the user.",
                        "example": "large-app"
                      }
                    ]
                  },
                  "displayName": {
                    "type": "string",
                    "description": "A non-unique free-form name for the config template used in the Spot console. Defaults to the config template ID.\n",
                    "example": "Large application"
                  },
                  "config": {
                    "description": "The piece of configuration contained in the config template.\n",
                    "allOf": [
                      {
                        "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1spark~1configTemplate/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/spark/cluster/{clusterId}/configTemplate/{configTemplateId}": {
      "summary": "Ocean Spark",
      "get": {
        "summary": "Get Config Template",
        "description": "Describe a config template tied to an Ocean Spark cluster.\n",
        "operationId": "OceanSparkClusterConfigTemplateGet",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          },
          {
            "in": "path",
            "name": "configTemplateId",
            "required": true,
            "schema": {
              "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1configTemplate/post/requestBody/content/application~1json/schema/properties/id"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1spark~1configTemplate/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Put Config Template",
        "description": "Update a config template by replacing the existing configuration with the one provided in the request body.\n",
        "operationId": "OceanSparkClusterConfigTemplatePut",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1configTemplate~1%7BconfigTemplateId%7D/get/parameters/2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "displayName": {
                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1configTemplate/post/requestBody/content/application~1json/schema/properties/displayName"
                  },
                  "config": {
                    "description": "The piece of configuration that will replace the existing configuration\n",
                    "allOf": [
                      {
                        "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1spark~1configTemplate/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Config Template",
        "description": "Delete a config template.\n",
        "operationId": "OceanSparkClusterConfigTemplateDelete",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1configTemplate~1%7BconfigTemplateId%7D/get/parameters/2"
          }
        ],
        "responses": {
          "204": {
            "description": "Config Template Deleted"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/spark/job": {
      "summary": "Ocean Spark",
      "get": {
        "summary": "List Jobs",
        "description": "List jobs on all Ocean Spark clusters in the specified account.\n",
        "operationId": "OceanSparkJobList",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of Ocean Spark jobs",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body\n",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "allOf": [
                                  {
                                    "$ref": "#/paths/~1ocean~1spark~1app/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/0"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "page": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "id",
                                            "displayName",
                                            "accountId",
                                            "organizationId",
                                            "clusterId",
                                            "controllerClusterId",
                                            "createdAt",
                                            "updatedAt"
                                          ],
                                          "description": "The description of an Ocean Spark job\n",
                                          "properties": {
                                            "id": {
                                              "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/jobId/allOf/0"
                                            },
                                            "displayName": {
                                              "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1job~1%7BjobId%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/displayName"
                                            },
                                            "controllerClusterId": {
                                              "$ref": "#/paths/~1ocean~1spark~1cluster/get/parameters/4/schema"
                                            },
                                            "clusterId": {
                                              "$ref": "#/paths/~1ocean~1spark~1cluster~1sparkCoreHours/get/parameters/1/schema/items"
                                            },
                                            "organizationId": {
                                              "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1job~1%7BjobId%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/organizationId"
                                            },
                                            "accountId": {
                                              "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1job~1%7BjobId%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/accountId"
                                            },
                                            "createdAt": {
                                              "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1job~1%7BjobId%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/createdAt"
                                            },
                                            "updatedAt": {
                                              "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1job~1%7BjobId%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/updatedAt"
                                            },
                                            "lastApp": {
                                              "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1job~1%7BjobId%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/lastApp"
                                            },
                                            "config": {
                                              "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/spark/cluster/{clusterId}/job": {
      "summary": "Ocean Spark",
      "get": {
        "summary": "List Jobs in Cluster",
        "description": "List the Ocean Spark jobs in a specific cluster.\n",
        "operationId": "OceanSparkClusterJobList",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1spark~1job/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/spark/cluster/{clusterId}/job/{jobId}": {
      "summary": "Ocean Spark",
      "get": {
        "summary": "Get Job",
        "description": "Describe an Ocean Spark job in an Ocean Spark cluster.\n",
        "operationId": "OceanSparkClusterJobGet",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          },
          {
            "in": "path",
            "name": "jobId",
            "required": true,
            "schema": {
              "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/jobId/allOf/0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An Ocean Spark job",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body\n",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "id",
                                  "displayName",
                                  "accountId",
                                  "organizationId",
                                  "clusterId",
                                  "controllerClusterId",
                                  "createdAt",
                                  "updatedAt"
                                ],
                                "description": "The description of an Ocean Spark job with config\n",
                                "properties": {
                                  "id": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/jobId/allOf/0"
                                  },
                                  "displayName": {
                                    "type": "string",
                                    "description": "A non-unique free-form name for the job used in the Spot console. Defaults to the job ID.\n",
                                    "example": "Daily Reporting"
                                  },
                                  "organizationId": {
                                    "type": "integer",
                                    "example": 606012341234,
                                    "description": "The ID of the organization"
                                  },
                                  "accountId": {
                                    "type": "string",
                                    "example": "act-123456789",
                                    "description": "The ID of the account where the entity lives"
                                  },
                                  "controllerClusterId": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster/get/parameters/4/schema"
                                  },
                                  "clusterId": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1sparkCoreHours/get/parameters/1/schema/items"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2018-10-10T10:50:29.000+0000",
                                    "description": "The field on which to sort. For now, we only support filtering on CREATED_AT."
                                  },
                                  "updatedAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2018-10-10T10:50:29.000+0000",
                                    "description": "The time when the entity was last updated"
                                  },
                                  "lastApp": {
                                    "type": "object",
                                    "required": [
                                      "id",
                                      "displayName",
                                      "accountId",
                                      "organizationId",
                                      "userId",
                                      "clusterId",
                                      "controllerClusterId",
                                      "appState",
                                      "submissionSource",
                                      "createdAt",
                                      "updatedAt"
                                    ],
                                    "allOf": [
                                      {
                                        "$ref": "#/paths/~1aws~1emr~1mrScaler/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/1"
                                      },
                                      {
                                        "type": "object",
                                        "description": "The description of a Spark application\n",
                                        "properties": {
                                          "id": {
                                            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/appId"
                                          },
                                          "displayName": {
                                            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/1/properties/displayName"
                                          },
                                          "accountId": {
                                            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1job~1%7BjobId%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/accountId"
                                          },
                                          "organizationId": {
                                            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1job~1%7BjobId%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/organizationId"
                                          },
                                          "userId": {
                                            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/6/schema"
                                          },
                                          "clusterId": {
                                            "$ref": "#/paths/~1ocean~1spark~1cluster~1sparkCoreHours/get/parameters/1/schema/items"
                                          },
                                          "controllerClusterId": {
                                            "$ref": "#/paths/~1ocean~1spark~1cluster/get/parameters/4/schema"
                                          },
                                          "appState": {
                                            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/5/schema"
                                          },
                                          "submissionSource": {
                                            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/submissionSource"
                                          },
                                          "appType": {
                                            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/4/schema"
                                          },
                                          "startedAt": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "The time when the Spark application started running (the app state becomes RUNNING). This is not the time when the application launch was requested (this is `createdAt`).\n",
                                            "example": "2021-11-18T17:09:37+00:00"
                                          },
                                          "endedAt": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "The time when the Spark application terminated.\n",
                                            "example": "2021-11-18T17:09:37+00:00"
                                          },
                                          "killRequestedAt": {
                                            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/1/properties/killRequestedAt"
                                          },
                                          "liveLog": {
                                            "type": "object",
                                            "description": "API pointers to endpoints serving logs and events related to the Spark application",
                                            "properties": {
                                              "logsStreamUrl": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "URL of the endpoint serving the live driver logs",
                                                "example": "/ocean/spark/cluster/osc-20fac3f1/app/daily-reporting-2021-08-18/logs/live"
                                              },
                                              "kubeEventsStreamUrl": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "URL of the endpoint serving a stream of Kubernetes events",
                                                "example": "/ocean/spark/cluster/osc-20fac3f1/app/daily-reporting-2021-08-18/kubeEvents/live"
                                              }
                                            }
                                          },
                                          "metrics": {
                                            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1statistics/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/metrics"
                                          },
                                          "cores": {
                                            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/DriverSpec/properties/cores"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "history": {
                                    "description": "The most recent Spark applications in this job.",
                                    "type": "array",
                                    "items": {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1job~1%7BjobId%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/lastApp"
                                    }
                                  },
                                  "config": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/spark/cluster/{clusterId}/job/{jobId}/config": {
      "put": {
        "summary": "Put Job Config Template",
        "description": "Attach or update an attached config template by replacing the existing configuration with the one provided in the request body.\n",
        "operationId": "OceanSparkJobConfig",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1job~1%7BjobId%7D/get/parameters/2"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "config": {
                    "description": "The piece of configuration that will replace the existing configuration, if empty then the job configuration will be removed\n",
                    "allOf": [
                      {
                        "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Ocean Spark job",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body\n",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "id",
                                  "displayName",
                                  "accountId",
                                  "organizationId",
                                  "clusterId",
                                  "controllerClusterId",
                                  "createdAt",
                                  "updatedAt"
                                ],
                                "description": "The description of an Ocean Spark job with config\n",
                                "properties": {
                                  "internalId": {
                                    "type": "string",
                                    "example": "fa61bb92-4bb7-49aa-87d3-7823bd263d1e",
                                    "description": "An internal ID describing the entity. As a user of Ocean Spark, you will never need this ID.\n\nPlease use the `id` to interact with the API.\n"
                                  },
                                  "id": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/jobId/allOf/0"
                                  },
                                  "displayName": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1job~1%7BjobId%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/displayName"
                                  },
                                  "controllerClusterId": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster/get/parameters/4/schema"
                                  },
                                  "clusterId": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1sparkCoreHours/get/parameters/1/schema/items"
                                  },
                                  "createdAt": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1job~1%7BjobId%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/createdAt"
                                  },
                                  "updatedAt": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1job~1%7BjobId%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/updatedAt"
                                  },
                                  "config": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/spark/cluster/{clusterId}/virtualNodeGroup": {
      "summary": "Ocean Spark",
      "post": {
        "summary": "Attach Dedicated Virtual Node Group",
        "description": "Attach an Ocean Virtual Group to the Ocean Spark cluster.\n",
        "operationId": "AttachOceanSparkVirtualNodeGroup",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "virtualNodeGroup"
                    ],
                    "properties": {
                      "virtualNodeGroup": {
                        "type": "object",
                        "description": "The object specifying the Ocean Spark Dedicated Virtual Node Group.\n",
                        "title": "Ocean Spark VNG",
                        "required": [
                          "id"
                        ],
                        "allOf": [
                          {
                            "type": "object",
                            "description": "The description of an Ocean Spark VNG\n",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "ols-e3ea5883",
                                "description": "The Ocean Virtual Node Group Id\n"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A list of Ocean Spark Dedicated VNGs (can be a single VNG)",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/spark/osc-20fac3f1/virtualNodeGroup"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "The object specifying the Ocean Spark Dedicated Virtual Node Group.\n",
                                "title": "Ocean Spark VNG",
                                "required": [
                                  "oceanClusterId",
                                  "oceanSparkClusterId",
                                  "vngId"
                                ],
                                "allOf": [
                                  {
                                    "type": "object",
                                    "description": "The description of an Ocean Spark VNG\n",
                                    "properties": {
                                      "oceanClusterId": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/allOf/0/properties/oceanClusterId"
                                      },
                                      "oceanSparkClusterId": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster~1sparkCoreHours/get/parameters/1/schema/items"
                                      },
                                      "vngId": {
                                        "type": "string",
                                        "example": "ols-e3ea5883",
                                        "description": "A unique identifier for the Ocean Virtual Node Group\n"
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:spark:vng"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Detach Dedicated Virtual Node Group",
        "description": "Detach an Ocean Virtual Group to the Ocean Spark cluster.\n",
        "operationId": "DetachOceanSparkVirtualNodeGroup",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/spark/cluster/{clusterId}/workspace": {
      "summary": "Ocean Spark",
      "post": {
        "summary": "Create Workspace",
        "description": "Create Ocean Spark Workspace\n",
        "operationId": "OceanSparkWorkspaceCreate",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "description": "The object specifying the configuration of the Ocean Spark workspace.\n",
                    "title": "Ocean Spark Workspace",
                    "allOf": [
                      {
                        "type": "object",
                        "description": "The description of an Ocean Spark workspace\n"
                      }
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the workspace.",
                        "example": "cosmos"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1workspace/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Workspaces",
        "description": "List the Ocean Spark workspaces in the specified cluster.\n",
        "operationId": "OceanSparkWorkspaceList",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of Ocean Spark workspace (can be a single workspace)",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1healthCheck/get/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body\n",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "The object specifying the Ocean Spark workspace.\n",
                                "title": "Ocean Spark Workspace",
                                "required": [
                                  "id",
                                  "name",
                                  "ownerUserId",
                                  "state",
                                  "createdAt",
                                  "url"
                                ],
                                "allOf": [
                                  {
                                    "type": "object",
                                    "description": "The description of an Ocean Spark workspace\n",
                                    "properties": {
                                      "id": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1workspace~1%7BworkspaceId%7D/get/parameters/2/schema"
                                      },
                                      "name": {
                                        "type": "string",
                                        "example": "cosmos",
                                        "description": "The name of the Ocean Spark workspace\n"
                                      },
                                      "ownerUserId": {
                                        "type": "string",
                                        "description": "The owner user id of the Ocean Spark workspace\n",
                                        "example": "163018"
                                      },
                                      "state": {
                                        "description": "The current state of the Ocean Spark workspace.\n* `WORKSPACE_STATE_RUNNING`: The workspace is RUNNING.\n* `WORKSPACE_STATE_STARTING`: The workspace is STARTING.\n* `WORKSPACE_STATE_STOPPING`: The workspace is STOPPING.\n* `WORKSPACE_STATE_STOPPED`: The workspace has STOPPED.\n* `WORKSPACE_STATE_UNSPECIFIED`: The workspace status API has an unexpected, internal error.\n",
                                        "example": "WORKSPACE_STATE_RUNNING",
                                        "enum": [
                                          "WORKSPACE_STATE_RUNNING",
                                          "WORKSPACE_STATE_STARTING",
                                          "WORKSPACE_STATE_STOPPING",
                                          "WORKSPACE_STATE_STOPPED",
                                          "WORKSPACE_STATE_UNSPECIFIED"
                                        ]
                                      },
                                      "createdAt": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The creation date of the Ocean Spark workspace",
                                        "example": "2021-11-20T13:29:30.000Z"
                                      },
                                      "url": {
                                        "type": "string",
                                        "description": "The URL of the Ocean Spark workspace\n",
                                        "example": "/api/ocean/spark/cluster/osc-93f1ae79/workspace/wksp-163018-b1ff5921/proxy"
                                      }
                                    }
                                  },
                                  {
                                    "$ref": "#/paths/~1aws~1emr~1mrScaler/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/1"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/spark/cluster/{clusterId}/workspace/{workspaceId}": {
      "summary": "Ocean Spark",
      "get": {
        "summary": "Get Workspace",
        "description": "Describe an Ocean Spark workspace.\n",
        "operationId": "OceanSparkWorkspaceGet",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "wksp-170654-1bc9c7a0",
              "description": "A unique identifier for the Ocean Spark workspace\n"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1workspace/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Workspace",
        "description": "Delete an Ocean Spark workspace.\n",
        "operationId": "OceanSparkWorkspaceDelete",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1workspace~1%7BworkspaceId%7D/get/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/spark/cluster/{clusterId}/workspace/{workspaceId}/start": {
      "summary": "Ocean Spark",
      "put": {
        "summary": "Start Workspace",
        "description": "Start an Ocean Spark workspace.\n",
        "operationId": "OceanSparkWorkspaceStart",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1workspace~1%7BworkspaceId%7D/get/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1workspace/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/spark/cluster/{clusterId}/workspace/{workspaceId}/stop": {
      "summary": "Ocean Spark",
      "put": {
        "summary": "Stop Workspace",
        "description": "Stop an Ocean Spark workspace.\n",
        "operationId": "OceanSparkWorkspaceStop",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1workspace~1%7BworkspaceId%7D/get/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1workspace/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/insights/savings": {
      "get": {
        "summary": "Get Organization Savings",
        "description": "Get the savings of the organization between the input time range.",
        "operationId": "organizationSavings",
        "tags": [
          "Insights Service"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "fromDate",
            "example": "2022-06-20",
            "description": "Date can be either in ISO-8601 date format (yyyy-mm-dd) or in Unix Timestamp format (e.g. 1494751821472).\n*Minimum from date can be one year ago.\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "toDate",
            "example": "2022-11-20",
            "description": "Date can be either in ISO-8601 date format (yyyy-mm-dd) or in Unix Timestamp format (e.g. 1494751821472).\n*Data is shown until the past day (Does not include today's costs)\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "organization savings Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "67582d0c-108b-4ef7-9fdc-d39678a30844",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/insights/savings",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2022-01-10T00:00:00.000Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "savings:extended:resource",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "array",
                                    "title": "savings:extended:resource",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "resources": {
                                          "type": "array",
                                          "items": {
                                            "anyOf": [
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "accountId": {
                                                    "type": "string",
                                                    "example": "act-12345678"
                                                  },
                                                  "accountName": {
                                                    "type": "string",
                                                    "example": "production account"
                                                  },
                                                  "resourceId": {
                                                    "type": "string",
                                                    "example": "o-7dd944535"
                                                  },
                                                  "resourceName": {
                                                    "type": "string",
                                                    "example": "Ocean Kubernetes cluster name"
                                                  },
                                                  "productType": {
                                                    "type": "string",
                                                    "example": "AWS_KUBERNETES_OCEAN"
                                                  },
                                                  "runningHours": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 107.3
                                                  },
                                                  "actualCosts": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 107.3
                                                  },
                                                  "potentialCosts": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 378.41
                                                  },
                                                  "amountSaved": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 306.77
                                                  }
                                                }
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "accountId": {
                                                    "type": "string",
                                                    "example": "act-87654321"
                                                  },
                                                  "accountName": {
                                                    "type": "string",
                                                    "example": "dev account"
                                                  },
                                                  "resourceId": {
                                                    "type": "string",
                                                    "example": "sig-7drr944535"
                                                  },
                                                  "resourceName": {
                                                    "type": "string",
                                                    "example": "Elastigroup name"
                                                  },
                                                  "productType": {
                                                    "type": "string",
                                                    "example": "AWS_ELASTIGROUP"
                                                  },
                                                  "runningHours": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 10
                                                  },
                                                  "actualCosts": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 100
                                                  },
                                                  "potentialCosts": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 1100
                                                  },
                                                  "amountSaved": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 1000
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        "summary": {
                                          "type": "object",
                                          "properties": {
                                            "runningHours": {
                                              "type": "number",
                                              "format": "float",
                                              "example": 117.3
                                            },
                                            "actualCosts": {
                                              "type": "number",
                                              "format": "float",
                                              "example": 207.3
                                            },
                                            "potentialCosts": {
                                              "type": "number",
                                              "format": "float",
                                              "example": 11378.41
                                            },
                                            "amountSaved": {
                                              "type": "number",
                                              "format": "float",
                                              "example": 1306.77
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/connect/executions/formatted_execution/{exe_id}": {
      "get": {
        "operationId": "get_formatted_execution_instance",
        "parameters": [
          {
            "description": "unique execution id",
            "in": "path",
            "name": "exe_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {},
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "get information for the selected runbook execution",
        "tags": [
          "Connect Executions"
        ]
      },
      "parameters": []
    },
    "/connect/executions/formatted_execution/{exe_id}/download": {
      "get": {
        "operationId": "get_formatted_execution_instance_download",
        "parameters": [
          {
            "$ref": "#/paths/~1connect~1executions~1formatted_execution~1%7Bexe_id%7D/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "content": {},
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "get information for the selected runbook execution",
        "tags": [
          "Connect Executions"
        ]
      },
      "parameters": []
    },
    "/connect/executions/{name}": {
      "parameters": [],
      "post": {
        "description": "Args: version=int\nBody Params:\n    json (dict): input data for the parameters",
        "operationId": "post_workflow_execution",
        "parameters": [
          {
            "description": "DisplayName of a workflow",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Selected workflow version",
            "in": "query",
            "name": "version",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Currently selected Workspace ID",
            "in": "query",
            "name": "workspace_id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {},
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "start the execution of a selected workflow",
        "tags": [
          "Connect Executions"
        ]
      }
    },
    "/connect/schedules": {
      "get": {
        "description": "Returns:\n    List: list schedules",
        "operationId": "get_schedules_list",
        "parameters": [
          {
            "description": "(optional) filter related schedules to a task",
            "in": "query",
            "name": "task_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Currently selected Workspace ID",
            "in": "query",
            "name": "workspace_id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {},
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "Scheduled workflows for a tenant",
        "tags": [
          "Connect Schedules"
        ]
      },
      "parameters": []
    },
    "/connect/schedules/{workflow_name}": {
      "delete": {
        "description": "body: {\n    rule: String:rule-name,\n    id: String (dynamoDB id),\n}\nreturn 200 OK",
        "operationId": "delete_workflow_schedules",
        "parameters": [
          {
            "$ref": "#/paths/~1connect~1schedules~1%7Bworkflow_name%7D/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "content": {},
            "description": "Deleted"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "Delete scheduled rule",
        "tags": [
          "Connect Schedules"
        ]
      },
      "get": {
        "operationId": "get_workflow_schedules",
        "parameters": [
          {
            "description": "unique workflow name only",
            "in": "path",
            "name": "workflow_name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/paths/~1connect~1schedules/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "content": {},
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "list schedules for a runbook",
        "tags": [
          "Connect Schedules"
        ]
      },
      "parameters": [],
      "post": {
        "description": "Accept POST request to schedule runbook execution:\nbody: {\n    version: Integer,\n    expression: String,\n    task_id: (optional) int,\n    params: (optional) dict: default parameters for scheduled version\n    params examples:\n     - \"params\": {\"param-name\": \"param-value\"}\n     - \"params\": {\"param-name\": [\"param-value1\", \"param-value2\"]}\n     - \"params\": {\"param-name\": {\"dict-key\": \"dict-value\"}}\n}\nreturn: 201 created",
        "operationId": "post_workflow_schedules",
        "parameters": [
          {
            "$ref": "#/paths/~1connect~1schedules~1%7Bworkflow_name%7D/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1connect~1schedules/get/parameters/1"
          }
        ],
        "responses": {
          "201": {
            "content": {},
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "schedules/<workflow-name>",
        "tags": [
          "Connect Schedules"
        ]
      },
      "put": {
        "description": "body: {\n    rule: String,\n    State: [ENABLED|DISABLED]\n}\nreturn: 200 success",
        "operationId": "put_workflow_schedules",
        "parameters": [
          {
            "$ref": "#/paths/~1connect~1schedules~1%7Bworkflow_name%7D/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "content": {},
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "Accept PUT request to enable/disable execution schedule (rule)",
        "tags": [
          "Connect Schedules"
        ]
      }
    },
    "/connect/settings/apikeys": {
      "get": {
        "operationId": "get_settings_api_keys",
        "parameters": [
          {
            "description": "Currently selected Workspace ID",
            "in": "query",
            "name": "workspace_id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {},
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "API to fetch list of API Keys",
        "tags": [
          "Connect Settings"
        ]
      },
      "parameters": []
    },
    "/connect/settings/apikeys/{apikey_name}": {
      "delete": {
        "operationId": "delete_settings_api_key_item",
        "parameters": [
          {
            "$ref": "#/paths/~1connect~1settings~1apikeys~1%7Bapikey_name%7D/put/parameters/0"
          },
          {
            "$ref": "#/paths/~1connect~1settings~1apikeys/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "content": {},
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "API to delete an API Key",
        "tags": [
          "Connect Settings"
        ]
      },
      "parameters": [],
      "post": {
        "operationId": "post_settings_api_key_item",
        "parameters": [
          {
            "$ref": "#/paths/~1connect~1settings~1apikeys~1%7Bapikey_name%7D/put/parameters/0"
          },
          {
            "$ref": "#/paths/~1connect~1settings~1apikeys/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "content": {},
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "API to create a new API Key",
        "tags": [
          "Connect Settings"
        ]
      },
      "put": {
        "operationId": "put_settings_api_key_item",
        "parameters": [
          {
            "description": "API key name",
            "in": "path",
            "name": "apikey_name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/paths/~1connect~1settings~1apikeys/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "content": {},
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "move the apikey_name to the new workspace",
        "tags": [
          "Connect Settings"
        ]
      }
    },
    "/connect/settings/available/{service}": {
      "parameters": [],
      "post": {
        "description": "for specific service in specific organization\nExpected payload:-\n{\n    \"alias\": \"<alias_name>\"\n}",
        "operationId": "post_setting_check_alias",
        "parameters": [
          {
            "$ref": "#/paths/~1connect~1settings~1%7Bservice%7D/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "content": {},
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "Checks whether given Alias name is available for use",
        "tags": [
          "Connect Settings"
        ]
      }
    },
    "/connect/settings/connectors": {
      "get": {
        "description": "that are TRIGGER_ONLY. For each connector, obtain some basic settings from its schema,\nand calculate a boolean status indicating whether it is configured or not.\nA connector is NOT configured if no tenant secret data is stored in the TenantSecretsDb.",
        "operationId": "get_settings_connector_discovery",
        "parameters": [
          {
            "$ref": "#/paths/~1connect~1settings~1apikeys/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "content": {},
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "Get a list of all the enabled connectors (integration or resource), excluding those",
        "tags": [
          "Connect Settings"
        ]
      },
      "parameters": []
    },
    "/connect/settings/jira/finish_oauth": {
      "parameters": [],
      "post": {
        "operationId": "post_jira_auth_settings",
        "parameters": [
          {
            "$ref": "#/paths/~1connect~1settings~1apikeys/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "content": {},
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "POST Api for status of Jira OAuth approval by Customer (Jira administrator)",
        "tags": [
          "Connect Settings"
        ]
      }
    },
    "/connect/settings/jira/integration_url": {
      "get": {
        "operationId": "get_jira_settings",
        "responses": {
          "200": {
            "content": {},
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "This API is used to fetch Jira authorization URL",
        "tags": [
          "Connect Settings"
        ]
      },
      "parameters": []
    },
    "/connect/settings/plans": {
      "get": {
        "operationId": "get_plan_details",
        "responses": {
          "200": {
            "content": {},
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "Gets various Fylamynt plan details with quotas and pricing",
        "tags": [
          "Connect Settings"
        ]
      },
      "parameters": []
    },
    "/connect/settings/public_ips": {
      "get": {
        "operationId": "get_settings_public_i_ps",
        "responses": {
          "200": {
            "content": {},
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "Returns a list of public IPs",
        "tags": [
          "Connect Settings"
        ]
      },
      "parameters": []
    },
    "/connect/settings/quotas": {
      "get": {
        "operationId": "get_quota_list",
        "responses": {
          "200": {
            "content": {},
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "Gets the various quotas and outputs the limits and current state",
        "tags": [
          "Connect Settings"
        ]
      },
      "parameters": []
    },
    "/connect/settings/schema/{service}": {
      "get": {
        "operationId": "get_setting_schema",
        "parameters": [
          {
            "$ref": "#/paths/~1connect~1settings~1%7Bservice%7D/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "content": {},
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "Get the jsonschema for the given service settings",
        "tags": [
          "Connect Settings"
        ]
      },
      "parameters": []
    },
    "/connect/settings/slack/finish_oauth": {
      "parameters": [],
      "post": {
        "description": "they will be redirected back to the Slack integration page in the Fylamynt web app\nwith an authorization code. The web app will then call this API endpoint with that\n'code' in the query parameter. Instead, if the user rejects to authorize the Fylamynt\nSlack app in their workspace, the API request from the web app will contain the\n'error' code (e.g., error=access_denied) returned from Slack. The following code\nprocesses the request and returns success or failure response to the web app.\nSlack instance alias is part of 'state' query parameter, previously 'state' query\nparameter contained subdomain.",
        "operationId": "post_slack_o_auth_post_install",
        "parameters": [
          {
            "$ref": "#/paths/~1connect~1settings~1apikeys/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "content": {},
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "After the user installs/authorizes the Fylamynt Slack app in their workspace,",
        "tags": [
          "Connect Settings"
        ]
      }
    },
    "/connect/settings/slack/integration_url": {
      "get": {
        "description": "'integration_id' URI parameter is not required for this API",
        "operationId": "get_slack_integration_url",
        "responses": {
          "200": {
            "content": {},
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "This API is used for fetching the Slack integration URL",
        "tags": [
          "Connect Settings"
        ]
      },
      "parameters": []
    },
    "/connect/settings/triggers": {
      "get": {
        "description": "- name: system name of the trigger service (including the 'manual' option)\n- display_name: trigger name to show in the trigger selection menu as well as in the Editor\n- snippet_name: the snippet to load as the first anchor node in the Editor\n- is_configured: boolean for the integration status of the connector\n                (deprecated and now the value is set to 'True' always)\nNote that all connectors map to the Unified Trigger Node (named 'Trigger').\n[\n  {\n    \"name\": \"manual\",\n    \"display_name\": \"Manual\",\n    \"snippet_name\": \"Manual_Trigger\",\n    \"is_configured\": True\n  },\n  {\n    \"name\": \"aws_health\",\n    \"display_name\": \"AWS Health\",\n    \"snippet_name\": \"Trigger\",\n    \"is_configured\": True\n  }\n  ......\n  {\n    \"name\": \"webhook\",\n    \"display_name\": \"Generic Webhook\",\n    \"snippet_name\": \"Trigger\",\n    \"is_configured\": True\n  }\n]",
        "operationId": "get_trigger_connector_discovery",
        "responses": {
          "200": {
            "content": {},
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "Returns a MapList for the list of trigger connectors each containing four attributes:",
        "tags": [
          "Connect Settings"
        ]
      },
      "parameters": []
    },
    "/connect/settings/zoom/finish_oauth": {
      "parameters": [],
      "post": {
        "description": "authorization code in the query parameter. Once we receive this request,\nwe will use the auth code and exchange it for an OAuth token with a\nrequest type 'authorization_code' by calling back to Zoom.\nIf we successfully exchange the auth code for a token, we will then save\nthe returned 'refresh_token' to secrets manager.",
        "operationId": "post_zoom_o_auth_post_install",
        "responses": {
          "200": {
            "content": {},
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "The Fylamynt web app will make a POST request to this endpoint that contains an",
        "tags": [
          "Connect Settings"
        ]
      }
    },
    "/connect/settings/zoom/integration_url": {
      "get": {
        "operationId": "get_zoom_integration_url",
        "responses": {
          "200": {
            "content": {},
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "This API is used for fetching the Zoom app integration URL",
        "tags": [
          "Connect Settings"
        ]
      },
      "parameters": []
    },
    "/connect/settings/{service}": {
      "get": {
        "operationId": "get_setting_items",
        "parameters": [
          {
            "description": "Name of connector service (value=ansible|apikeys|datadog|humio|instana|jira|opsgenie|aws_health|pagerduty|prometheus|pulumi|slack|splunk|splunk_on_call|spot|squadcast|terraform|terraform_cli|twilio|zoom)",
            "in": "path",
            "name": "service",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/paths/~1connect~1settings~1apikeys/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "content": {},
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "Get the list of instances for a given integration/resource",
        "tags": [
          "Connect Settings"
        ]
      },
      "parameters": [],
      "post": {
        "operationId": "post_setting_items",
        "parameters": [
          {
            "$ref": "#/paths/~1connect~1settings~1%7Bservice%7D/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1connect~1settings~1apikeys/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "content": {},
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "Create a new secret for a given service",
        "tags": [
          "Connect Settings"
        ]
      }
    },
    "/connect/settings/{service}/{integration_id}": {
      "delete": {
        "description": "1) For connectors storing secrets in the tenant secrets db, remove the dynamic\n   secret keys added during connector integration\n2) For target account oriented resources stored in the Target Settings DB,\n   remove the resource associated with one 'alias' account or all accounts",
        "operationId": "delete_setting_item",
        "parameters": [
          {
            "$ref": "#/paths/~1connect~1settings~1%7Bservice%7D/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1connect~1settings~1%7Bservice%7D~1%7Bintegration_id%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1connect~1settings~1apikeys/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "content": {},
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "Endpoint handling two use cases for removing connector integration or resource:",
        "tags": [
          "Connect Settings"
        ]
      },
      "get": {
        "operationId": "get_setting_item",
        "parameters": [
          {
            "$ref": "#/paths/~1connect~1settings~1%7Bservice%7D/get/parameters/0"
          },
          {
            "in": "path",
            "name": "integration_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/paths/~1connect~1settings~1apikeys/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "content": {},
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "Get the details of an individual integration/resource instance",
        "tags": [
          "Connect Settings"
        ]
      },
      "parameters": [],
      "patch": {
        "description": "An empty PATCH body \"{}\" will set the instance to default.\n\nTo move an individual instance:\ncall this endpoint with the 'old' workspace_id as the query parameter\nand the 'new' workspace_id in the body.\n\nE.X.:\nPATCH\nhttps://<be url>/settings/<service>/<instance_id>?workspace_id=cws-movefrom\nbody: {\"workspace_id\": \"cws-moveto\"}",
        "operationId": "patch_setting_item",
        "parameters": [
          {
            "$ref": "#/paths/~1connect~1settings~1%7Bservice%7D/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1connect~1settings~1%7Bservice%7D~1%7Bintegration_id%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1connect~1settings~1apikeys/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "content": {},
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "Update secret for a given service",
        "tags": [
          "Connect Settings"
        ]
      },
      "put": {
        "operationId": "put_setting_item",
        "parameters": [
          {
            "$ref": "#/paths/~1connect~1settings~1%7Bservice%7D/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1connect~1settings~1%7Bservice%7D~1%7Bintegration_id%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1connect~1settings~1apikeys/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "content": {},
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "Update secret for a given service and given integration instance",
        "tags": [
          "Connect Settings"
        ]
      }
    },
    "/connect/targets": {
      "get": {
        "operationId": "get_target_account_list",
        "parameters": [
          {
            "description": "Currently selected Workspace ID",
            "in": "query",
            "name": "workspace_id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {},
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "Gets a list of all accounts",
        "tags": [
          "Connect Targets"
        ]
      },
      "parameters": [],
      "post": {
        "operationId": "post_target_account_list",
        "parameters": [
          {
            "$ref": "#/paths/~1connect~1targets/get/parameters/0"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "alias": {
                    "type": "string"
                  },
                  "external_id": {
                    "type": "string"
                  },
                  "is_default": {
                    "type": "boolean"
                  },
                  "preferred_region": {
                    "type": "string"
                  },
                  "role_arn": {
                    "type": "string"
                  }
                },
                "required": [
                  "alias",
                  "external_id",
                  "is_default",
                  "preferred_region",
                  "role_arn"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1connect~1targets/post/requestBody/content/application~1json/schema"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "Creates a new entry in the database",
        "tags": [
          "Connect Targets"
        ],
        "x-codegen-request-body-name": "payload"
      }
    },
    "/connect/targets/default": {
      "get": {
        "description": "It's acceptable to have zero defaults, but more than one should\nbe cleaned up. This can be done by updating an existing entry to set is_default=True.",
        "operationId": "get_target_account_get_default",
        "parameters": [
          {
            "$ref": "#/paths/~1connect~1targets/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "content": {},
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "Only return the default entry",
        "tags": [
          "Connect Targets"
        ]
      },
      "parameters": []
    },
    "/connect/targets/{target_alias}": {
      "delete": {
        "operationId": "delete_target_account_item",
        "parameters": [
          {
            "$ref": "#/paths/~1connect~1targets~1%7Btarget_alias%7D/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "content": {},
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "delete the entry",
        "tags": [
          "Connect Targets"
        ]
      },
      "get": {
        "operationId": "get_target_account_item",
        "parameters": [
          {
            "description": "Unique alias for the target account",
            "in": "path",
            "name": "target_alias",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1connect~1targets/post/requestBody/content/application~1json/schema"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "get all fields of a specific account",
        "tags": [
          "Connect Targets"
        ]
      },
      "parameters": [],
      "patch": {
        "description": "This will only change the updated fields and will\nleave all other fields in place.",
        "operationId": "patch_target_account_item",
        "parameters": [
          {
            "$ref": "#/paths/~1connect~1targets~1%7Btarget_alias%7D/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1connect~1targets/get/parameters/0"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/paths/~1connect~1targets/post/requestBody/content/application~1json/schema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1connect~1targets/post/requestBody/content/application~1json/schema"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "Update fields on an account",
        "tags": [
          "Connect Targets"
        ],
        "x-codegen-request-body-name": "payload"
      }
    },
    "/connect/workflows": {
      "get": {
        "operationId": "get_workflow_list",
        "parameters": [
          {
            "description": "Currently selected Workspace ID",
            "in": "query",
            "name": "workspace_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "SSM document owner (value=Self|Amazon|All, default=All)",
            "in": "query",
            "name": "owner",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {},
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "Return all user workflows for a given workspace",
        "tags": [
          "Connect Workflows"
        ]
      },
      "parameters": []
    },
    "/connect/workflows/{workflow_name}": {
      "delete": {
        "description": "if no version is specified, delete all versions of the workflow",
        "operationId": "delete_workflow_instance",
        "parameters": [
          {
            "$ref": "#/paths/~1connect~1workflows~1%7Bworkflow_name%7D/put/parameters/0"
          },
          {
            "$ref": "#/paths/~1connect~1workflows/get/parameters/0"
          },
          {
            "description": "Selected workflow version",
            "in": "query",
            "name": "version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {},
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "delete a selected version of a selected workflow;",
        "tags": [
          "Connect Workflows"
        ]
      },
      "parameters": [],
      "put": {
        "description": "We always create a new workflow off of the latest version in SSM.\n\nAPI request sample body:{\n    \"Content\": {\n        \"assumeRole\": \"{{AutomationAssumeRole}}\",\n        \"description\":\"...\"\n        ...\n    },\n    \"Tags\": [\"tag1\", tag2, ..]\n}",
        "operationId": "put_workflow_instance",
        "parameters": [
          {
            "description": "Unique workflow name",
            "in": "path",
            "name": "workflow_name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/paths/~1connect~1workflows/get/parameters/0"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "Content": {
                    "allOf": [
                      {
                        "properties": {
                          "assumeRole": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "mainSteps": {
                            "items": {
                              "properties": {
                                "action": {
                                  "type": "string"
                                },
                                "inputs": {
                                  "properties": {
                                    "Choices": {
                                      "items": {
                                        "properties": {
                                          "NextStep": {
                                            "type": "string"
                                          },
                                          "Variable": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "NextStep",
                                          "Variable"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    },
                                    "Default": {
                                      "type": "string"
                                    },
                                    "Duration": {
                                      "type": "string"
                                    },
                                    "FunctionName": {
                                      "type": "string"
                                    },
                                    "Payload": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "isEnd": {
                                  "type": "boolean"
                                },
                                "maxAttempts": {
                                  "type": "integer"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "nextStep": {
                                  "type": "string"
                                },
                                "onFailure": {
                                  "type": "string"
                                },
                                "outputs": {
                                  "items": {
                                    "properties": {
                                      "Name": {
                                        "type": "string"
                                      },
                                      "Selector": {
                                        "type": "string"
                                      },
                                      "Type": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "Name",
                                      "Selector",
                                      "Type"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "timeoutSeconds": {
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "action",
                                "inputs",
                                "name"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "parameters": {
                            "properties": {
                              "AutomationAssumeRole": {
                                "properties": {
                                  "default": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "description",
                                  "type"
                                ],
                                "type": "object"
                              },
                              "WorkflowSession": {
                                "properties": {
                                  "default": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "description",
                                  "type"
                                ],
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "schemaVersion": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "description",
                          "mainSteps",
                          "schemaVersion"
                        ],
                        "type": "object"
                      }
                    ],
                    "description": "SSM document for the workflow",
                    "type": "object"
                  },
                  "Tags": {
                    "description": "list of workflow tags",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "Content"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "Content": {
                          "allOf": [
                            {
                              "$ref": "#/paths/~1connect~1workflows~1%7Bworkflow_name%7D/put/requestBody/content/application~1json/schema/properties/Content/allOf/0"
                            }
                          ],
                          "description": "SSM document for the workflow",
                          "type": "object"
                        },
                        "Name": {
                          "description": "Unique workflow name",
                          "type": "string"
                        },
                        "StepDocuments": {
                          "description": "List of step docs used in the SSM document.",
                          "items": {
                            "$ref": "#/paths/~1connect~1workflows~1%7Bworkflow_name%7D~1content/get/responses/200/content/application~1json/schema/properties/StepDocuments/items"
                          },
                          "type": "array"
                        },
                        "Tags": {
                          "description": "list of workflow tags",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "required": [
                        "Content",
                        "Name"
                      ],
                      "type": "object"
                    },
                    {
                      "properties": {
                        "DocumentFormat": {
                          "description": "SSM document format",
                          "type": "string"
                        },
                        "DocumentType": {
                          "description": "SSM document type",
                          "type": "string"
                        },
                        "DocumentVersion": {
                          "description": "SSM document version",
                          "type": "string"
                        },
                        "Status": {
                          "description": "SSM document status",
                          "type": "string"
                        }
                      },
                      "required": [
                        "DocumentType",
                        "DocumentVersion",
                        "Status"
                      ],
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "Update a selected workflow by creating a new version",
        "tags": [
          "Connect Workflows"
        ],
        "x-codegen-request-body-name": "payload"
      }
    },
    "/connect/workflows/{workflow_name}/availability": {
      "get": {
        "operationId": "get_workflow_name_validation",
        "parameters": [
          {
            "$ref": "#/paths/~1connect~1workflows~1%7Bworkflow_name%7D/put/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "content": {},
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "Check if workflow name is available for use",
        "tags": [
          "Connect Workflows"
        ]
      },
      "parameters": []
    },
    "/connect/workflows/{workflow_name}/content": {
      "get": {
        "operationId": "get_workflow_content",
        "parameters": [
          {
            "$ref": "#/paths/~1connect~1workflows~1%7Bworkflow_name%7D/put/parameters/0"
          },
          {
            "$ref": "#/paths/~1connect~1workflows~1%7Bworkflow_name%7D/delete/parameters/2"
          },
          {
            "$ref": "#/paths/~1connect~1workflows/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Content": {
                      "allOf": [
                        {
                          "$ref": "#/paths/~1connect~1workflows~1%7Bworkflow_name%7D/put/requestBody/content/application~1json/schema/properties/Content/allOf/0"
                        }
                      ],
                      "description": "SSM document for the workflow",
                      "type": "object"
                    },
                    "Description": {
                      "description": "workflow description",
                      "type": "string"
                    },
                    "Name": {
                      "description": "Unique workflow name",
                      "type": "string"
                    },
                    "Parameters": {
                      "description": "Runtime parameters for the workflow",
                      "items": {
                        "properties": {},
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "StepDocuments": {
                      "description": "List of step docs used in the SSM document.",
                      "items": {
                        "properties": {
                          "document_id": {
                            "description": "Document_id from step_store.",
                            "type": "string"
                          },
                          "version": {
                            "description": "version of the document.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "Content",
                    "Name"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "return the content of the default/selected version of a selected workflow",
        "tags": [
          "Connect Workflows"
        ]
      },
      "parameters": []
    },
    "/connect/workflows/{workflow_name}/duplicate": {
      "parameters": [],
      "post": {
        "operationId": "post_workflow_duplicate",
        "parameters": [
          {
            "description": "Name of workflow to be duplicated",
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/paths/~1connect~1workflows~1%7Bworkflow_name%7D/put/parameters/0"
          },
          {
            "$ref": "#/paths/~1connect~1workflows/get/parameters/0"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "NewName": {
                    "description": "Name of new runbook",
                    "type": "string"
                  },
                  "Version": {
                    "description": "Version of the runbook to be duplicated",
                    "type": "string"
                  }
                },
                "required": [
                  "NewName"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1connect~1workflows~1%7Bworkflow_name%7D/put/responses/200/content/application~1json/schema"
                }
              }
            },
            "description": "Success"
          },
          "201": {
            "content": {},
            "description": "Workflow duplicated successfully"
          },
          "400": {
            "content": {},
            "description": "Request validation error"
          }
        },
        "summary": "Duplicate a specific version of a selected runbook",
        "tags": [
          "Connect Workflows"
        ],
        "x-codegen-request-body-name": "payload"
      }
    },
    "/connect/workflows/{workflow_name}/info": {
      "get": {
        "description": "including workflow description, and tags",
        "operationId": "get_workflow_info",
        "parameters": [
          {
            "$ref": "#/paths/~1connect~1workflows~1%7Bworkflow_name%7D/put/parameters/0"
          },
          {
            "$ref": "#/paths/~1connect~1workflows~1%7Bworkflow_name%7D/delete/parameters/2"
          },
          {
            "$ref": "#/paths/~1connect~1workflows/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "content": {},
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "return the information for the default/selected version of a selected workflow,",
        "tags": [
          "Connect Workflows"
        ]
      },
      "parameters": [],
      "put": {
        "description": ":param workflow_name: workflow unique name\n:return: HTTPStatus.OK on success, HTTPStatus.BAD_REQUEST+ on failure",
        "operationId": "put_workflow_info",
        "parameters": [
          {
            "$ref": "#/paths/~1connect~1workflows~1%7Bworkflow_name%7D/put/parameters/0"
          },
          {
            "$ref": "#/paths/~1connect~1workflows~1%7Bworkflow_name%7D/delete/parameters/2"
          },
          {
            "$ref": "#/paths/~1connect~1workflows/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "content": {},
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "updates specific workflow default version",
        "tags": [
          "Connect Workflows"
        ]
      }
    },
    "/connect/workflows/{workflow_name}/integrations": {
      "get": {
        "description": "including workflow description, and tags",
        "operationId": "get_workflow_integration_info",
        "parameters": [
          {
            "$ref": "#/paths/~1connect~1workflows~1%7Bworkflow_name%7D/put/parameters/0"
          },
          {
            "$ref": "#/paths/~1connect~1workflows~1%7Bworkflow_name%7D/delete/parameters/2"
          },
          {
            "$ref": "#/paths/~1connect~1workflows/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "content": {},
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "return Integration instance for the default/selected version of a selected workflow,",
        "tags": [
          "Connect Workflows"
        ]
      },
      "parameters": []
    },
    "/connect/workspaces": {
      "get": {
        "operationId": "get_workspace_list",
        "parameters": [
          {
            "description": "An optional fields mask",
            "in": "header",
            "name": "X-Fields",
            "schema": {
              "format": "mask",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/paths/~1connect~1workspaces/post/responses/200/content/application~1json/schema"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "Return a list of Workspaces the user is authorized to view",
        "tags": [
          "Connect Workspaces"
        ]
      },
      "parameters": [],
      "post": {
        "operationId": "post_workspace_list",
        "parameters": [
          {
            "$ref": "#/paths/~1connect~1workspaces/get/parameters/0"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "properties": {
                      "description": {
                        "description": ".",
                        "type": "string"
                      },
                      "name": {
                        "description": ".",
                        "type": "string"
                      },
                      "owner": {
                        "description": ".",
                        "type": "string"
                      },
                      "type": {
                        "description": ".",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "properties": {
                      "entities": {
                        "items": {
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "isGroup": {
                              "type": "boolean"
                            },
                            "isOwner": {
                              "type": "boolean"
                            },
                            "name": {
                              "type": "string"
                            },
                            "permissions": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "$ref": "#/paths/~1connect~1workspaces/post/requestBody/content/application~1json/schema/allOf/0"
                        },
                        {
                          "properties": {
                            "workspace_id": {
                              "description": ".",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    {
                      "properties": {
                        "permissions": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "workspace_id": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Success"
          },
          "201": {
            "content": {},
            "description": "Workspace created successfully"
          },
          "400": {
            "content": {},
            "description": "Request validation error"
          },
          "409": {
            "content": {},
            "description": "Workspace name already exists"
          }
        },
        "summary": "Create a new workspace entry",
        "tags": [
          "Connect Workspaces"
        ],
        "x-codegen-request-body-name": "payload"
      }
    },
    "/connect/workspaces/name/available": {
      "parameters": [],
      "post": {
        "operationId": "post_workspace_name_availability_check",
        "parameters": [
          {
            "$ref": "#/paths/~1connect~1workspaces/get/parameters/0"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "description": "Workspace name to check",
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1connect~1workspaces~1name~1available/post/requestBody/content/application~1json/schema"
                    },
                    {
                      "properties": {
                        "available": {
                          "type": "boolean"
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Request validation error"
          }
        },
        "summary": "Check for workspace name is available for use",
        "tags": [
          "Connect Workspaces"
        ],
        "x-codegen-request-body-name": "payload"
      }
    },
    "/connect/workspaces/name/{workspace_name}": {
      "get": {
        "operationId": "get_workspace_instance_by_name",
        "parameters": [
          {
            "description": "Workspace name",
            "in": "path",
            "name": "workspace_name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/paths/~1connect~1workspaces/get/parameters/0"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/paths/~1connect~1workspaces~1%7Bworkspace_id%7D/get/requestBody/content/application~1json/schema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1connect~1workspaces~1%7Bworkspace_id%7D/get/requestBody/content/application~1json/schema"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "Get a specific workspace",
        "tags": [
          "Connect Workspaces"
        ],
        "x-codegen-request-body-name": "payload"
      },
      "parameters": []
    },
    "/connect/workspaces/{workspace_id}": {
      "delete": {
        "operationId": "delete_workspace_instance",
        "parameters": [
          {
            "$ref": "#/paths/~1connect~1workspaces~1%7Bworkspace_id%7D/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "content": {},
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "Deletes the workspace identified by workspace_id",
        "tags": [
          "Connect Workspaces"
        ]
      },
      "get": {
        "operationId": "get_workspace_instance",
        "parameters": [
          {
            "description": "Unique workspace ID",
            "in": "path",
            "name": "workspace_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/paths/~1connect~1workspaces/get/parameters/0"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/paths/~1connect~1workspaces/post/requestBody/content/application~1json/schema/allOf/0"
                  },
                  {
                    "properties": {
                      "workspace_id": {
                        "description": "cws-XXXXXXX",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1connect~1workspaces~1%7Bworkspace_id%7D/get/requestBody/content/application~1json/schema"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "Get a specific workspace",
        "tags": [
          "Connect Workspaces"
        ],
        "x-codegen-request-body-name": "payload"
      },
      "parameters": [],
      "put": {
        "description": "Client must pass all required values, including any that are unchanged.\nrequired fields: workspace_id, name",
        "operationId": "put_workspace_instance",
        "parameters": [
          {
            "$ref": "#/paths/~1connect~1workspaces~1%7Bworkspace_id%7D/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1connect~1workspaces/get/parameters/0"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/paths/~1connect~1workspaces/post/requestBody/content/application~1json/schema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1connect~1workspaces/post/responses/200/content/application~1json/schema"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "Update the given workspace",
        "tags": [
          "Connect Workspaces"
        ],
        "x-codegen-request-body-name": "payload"
      }
    },
    "/connect/workspaces/{workspace_id}/move-order": {
      "parameters": [],
      "post": {
        "description": "updateWorkflow\n    updateIntegration\n    updateSchedule\n    updateExecution\n    Payload:\n    {\n        \"workspace_id\": \"development\",\n        \"workflow_name\": \"test\",\n        \"instances\": [\"instance1_id\"]\n    }",
        "operationId": "post_move_order_view",
        "parameters": [
          {
            "$ref": "#/paths/~1connect~1workspaces~1%7Bworkspace_id%7D/get/parameters/0"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "instances": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "workflow_id": {
                    "type": "string"
                  },
                  "workspace_id": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {},
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          }
        },
        "summary": "Permissions the user needs in both workspaces:",
        "tags": [
          "Connect Workspaces"
        ],
        "x-codegen-request-body-name": "payload"
      }
    }
  }
}
