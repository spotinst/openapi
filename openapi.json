{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0",
    "description": "Welcome to the Spot by NetApp OpenAPI Specification.\nHere you will find REST definitions for all Spot products and platform administration tasks.\n\nThe API is hosted at `https://api.spotinst.io` and requires Bearer Token\nAuthentication.\n\nFor more information on how to use the Spot platform, including user guides,\ndeveloper guides, concepts, and tutorials, see the external [Spot Documentation](https://docs.spot.io/).\n",
    "title": "Spot by NetApp API",
    "x-logo": {
      "url": "https://docs.spot.io/_media/images/spot.png",
      "altText": "SpotByNetAppLogo",
      "href": "https://docs.spot.io/api"
    },
    "contact": {
      "email": "support@spot.io"
    }
  },
  "externalDocs": {
    "url": "https://docs.spot.io/"
  },
  "servers": [
    {
      "url": "https://api.spotinst.io"
    }
  ],
  "security": [
    {
      "auth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "auth": {
        "description": "To generate bearer tokens and understand more about Spot by NetApp\nauthentication see the howto for\n[token creation](https://docs.spot.io/administration/api/create-api-token)\non the Spot Help site.\n\n### Organizations and Accounts\n\nEach Spot account is assigned to an organization and a set of environment Accounts.\nAn account is then linked to a specific cloud provider account.\n\nSpot accounts are given an ID in the format `act-123abcd` that is sent as a query parameter while performing API calls.\n\nTo locate the account ID navigate to Settings -> Account in the Spot console.\n\n### Organizations with a Single Account\nEach API call you make can be used with or without the account ID.\n\n### Organizations with Multiple Accounts\nEach API call you make should be appended to the account ID. For example:\n\nGET `https://api.spotinst.io/aws/ec2/group?accountId=act-123de678`\nThis call will return the list of Elastigroups for the specific Account used.\n\n> NOTE: If no `accountId` is provided, the default (dldest) account for the Organization will be used.\n",
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "tags": [
    {
      "name": "Elastigroup AWS",
      "description": "Elastigroup for Amazon Web Services (AWS)",
      "externalDocs": {
        "description": "Elastigroup Concepts and Tutorials",
        "url": "https://docs.spot.io/elastigroup/"
      }
    },
    {
      "name": "Elastigroup Azure Spot VMs",
      "description": "Elastigroup for Microsoft Azure",
      "externalDocs": {
        "description": "Elastigroup Concepts and Tutorials",
        "url": "https://docs.spot.io/elastigroup/"
      }
    },
    {
      "name": "Elastigroup Azure Scale Set VMs",
      "description": "Elastigroup for Microsoft Azure Scale Set",
      "externalDocs": {
        "description": "Elastigroup Concepts and Tutorials",
        "url": "https://docs.spot.io/elastigroup/"
      }
    },
    {
      "name": "Elastigroup GCP",
      "description": "Elastigroup for Google Cloud",
      "externalDocs": {
        "description": "Elastigroup Concepts and Tutorials",
        "url": "https://docs.spot.io/elastigroup/"
      }
    },
    {
      "name": "Elastigroup Azure Stateful",
      "description": "Elastigroup for Microsoft Azure Stateful Node",
      "externalDocs": {
        "description": "Elastigroup Concepts and Tutorials",
        "url": "https://docs.spot.io/elastigroup/"
      }
    },
    {
      "name": "Ocean AWS",
      "description": "Ocean - Serverless containers for Amazon Web Services (AWS)",
      "externalDocs": {
        "description": "Ocean Concepts and Tutorials",
        "url": "https://docs.spot.io/ocean/"
      }
    },
    {
      "name": "Ocean ECS",
      "description": "Ocean - Serverless containers for Amazon Elastic Container Service (ECS)",
      "externalDocs": {
        "description": "Ocean Concepts and Tutorials",
        "url": "https://docs.spot.io/ocean/"
      }
    },
    {
      "name": "Ocean GKE",
      "description": "Ocean - Serverless containers for Google Kubernetes Engine",
      "externalDocs": {
        "description": "Ocean Concepts and Tutorials",
        "url": "https://docs.spot.io/ocean/"
      }
    },
    {
      "name": "Ocean AKS",
      "description": "Ocean - Serverless containers for Azure Kubernetes Service",
      "externalDocs": {
        "description": "Ocean Concepts and Tutorials",
        "url": "https://docs.spot.io/ocean/"
      }
    },
    {
      "name": "Ocean On-Premise",
      "description": "Ocean On-Premise API - Understand cost drivers within your on-premise clusters and compare the costs to the Ocean Cloud.",
      "externalDocs": {
        "description": "Ocean Concepts and Tutorials",
        "url": "https://docs.spot.io/ocean/"
      }
    },
    {
      "name": "Ocean Insights",
      "description": "Insights allows Spot users on AWS to connect a Kubernetes cluster and within minutes get the cluster analyzed with insights\nabout the current state of infrastructure in the cluster, and the potential effect of migrating the specific cluster into Ocean.\nThrough its powerful features, Ocean presents significant opportunities for infrastructure optimization and automation, which are on display in the Insights console.\nConnected to Kubernetes clusters and running a continuous analysis, Ocean Insights delivers a holistic picture of your cluster and workloads behavior, from expected cloud costs and resource utilization.\nThrough a simple UI, users will see a breakdown of potential savings when they first connect to Ocean Insights.\n",
      "externalDocs": {
        "description": "Ocean Insights",
        "url": "https://docs.spot.io/ocean-insights/"
      }
    },
    {
      "name": "Ocean CD",
      "description": "Ocean CD is a fully managed continuous delivery ('CD') solution for Kubernetes applications. Designed for end-to-end automation and verification of frequent application-deployment processes at scale.\nOcean CD architecture and API enable a simple and secured installation that seamlessly fits into any Kubernetes environment. Users get key features like granular visibility, SaaS logic that manage the rollout process, verifications of the applied workloads and automatic rollbacks.\nTo enable Ocean CD, install the controller with one simple command in the Kubernetes cluster and create the following entities using the API:\n* Environment\n* Microservice\n* Notification Provider\n* Rollout Spec\n",
      "externalDocs": {
        "description": "Ocean CD",
        "url": "https://docs.spot.io/ocean-cd/"
      }
    },
    {
      "name": "Ocean Spark",
      "description": "Ocean for Apache Spark is a managed cloud-native Spark platform that can be deployed in your cloud account.\n\nRunning on top of Ocean, Spot’s serverless infrastructure engine for containers, Ocean Spark makes it easy for your data teams to be successful with Apache Spark on Kubernetes, without dealing with the complexity of managing servers.\n",
      "externalDocs": {
        "description": "Ocean Spark",
        "url": "https://docs.spot.io/ocean-spark/"
      }
    },
    {
      "name": "EMR Scaler",
      "description": "AWS EMR Scaler",
      "externalDocs": {
        "description": "AWS EMR Scaler Concepts and Tutorials",
        "url": "https://docs.spot.io/elastigroup/tools-integrations/elastic-mapreduce/"
      }
    },
    {
      "name": "Managed Instance AWS",
      "description": "Managed Instance is a Spot solution for launching and managing a single compute instance.\nOn the AWS cloud, for a standard single instance workload, an On-Demand EC2 instance is launched.\nThe instance is expected to be highly available, easily manageable, and integrate well with additional services and monitoring tools.\nFor more information please review the concepts section.\n",
      "externalDocs": {
        "description": "Managed Instance for AWS Concepts and Tutorials",
        "url": "https://docs.spot.io/managed-instance/"
      }
    },
    {
      "name": "Create an API Token",
      "description": "* Please log in to the [Spot Console](https://console.spotinst.com) to create an API token. Navigate to `Settings` and select `API`.\n* The [Spot Console](https://console.spotinst.com) provides both permanent and temporary tokens. Select your preferred token type and click `Generate Token`.\n* Give your token a name and click `Generate`.\n> NOTE: Remember to keep your tokens secret. Treat them just like passwords! They act on your behalf when interacting with the API. Do not share your personal access tokens with anyone outside your organization. Do not hard-code them into your programs. Instead, opt to use them as environment variables. Please contact our support if you think your token has been compromised.\n",
      "externalDocs": {
        "url": "https://docs.spot.io/administration/api/create-api-token"
      }
    },
    {
      "name": "Whitelist IPs",
      "description": "* Spot permit list IPs are required for integrations to work as expected. The IP needs to be permit-listed on the primary nodes of Rancher, HCS, Kubernetes, Chef, Nomad, and Docker Swarm. Make sure your permit list IPs are always up-to-date with the latest list.\n*  34.226.61.134/32\n",
      "externalDocs": {
        "url": "https://docs.spot.io/administration/api/whitelist-ips"
      }
    },
    {
      "name": "Spot Policy",
      "description": "Spots Latest Policy for AWS.\n* You can find and modify your Spot Policy in the AWS IAM Console.\n* For additional information and guide please see Updating the Spot Policy\n* You can restrict your Spot Policy using custom AWS IAM Condition Statements using this Guide.\n*  Make sure your policy is always up-to-date with the latest JSON\n",
      "externalDocs": {
        "url": "https://docs.spot.io/administration/api/spot-policy-in-aws"
      }
    },
    {
      "name": "Audit Service",
      "externalDocs": {
        "url": "https://docs.spot.io/api/#tag/Audit-Service"
      }
    },
    {
      "name": "Health Check Service",
      "externalDocs": {
        "url": "https://docs.spot.io/elastigroup/tools-integrations/custom-health-check-service"
      }
    },
    {
      "name": "Notifications Service",
      "description": "A Spot Notifications service enables you a fast, flexible, fully managed push notification service that lets you know about major events that happened in your Spot account.ֿ Spot Notifications makes it simple and cost-effective to get push notifications to your email address, HTTP, HTTPS or AWS SNS (Simple Notifications Service).\n"
    },
    {
      "name": "Insights Service"
    }
  ],
  "x-tagGroups": [
    {
      "name": "Administration",
      "tags": [
        "Organizations",
        "Accounts"
      ]
    },
    {
      "name": "Ocean",
      "tags": [
        "Ocean AWS",
        "Ocean ECS",
        "Ocean GKE",
        "Ocean AKS",
        "Ocean On-Premise",
        "Ocean Insights",
        "Ocean CD",
        "Ocean Spark"
      ]
    },
    {
      "name": "Elastigroup",
      "tags": [
        "Elastigroup AWS",
        "Elastigroup AWS EMR Scaler",
        "Elastigroup GCP",
        "Elastigroup Azure Spot VMs",
        "Elastigroup Azure Scale Set VMs",
        "Elastigroup Azure Stateful"
      ]
    },
    {
      "name": "Managed Instance",
      "tags": [
        "Managed Instance AWS"
      ]
    },
    {
      "name": "Services",
      "tags": [
        "Audit Service",
        "Health Check Service",
        "Notifications Service",
        "Insights Service"
      ]
    }
  ],
  "paths": {
    "/aws/ec2/group": {
      "summary": "Elastigroups for AWS",
      "post": {
        "summary": "Create Elastigroup",
        "description": "Create a new AWS Elastigroup.\n\nThere are several third Party Integrations available, which can be activated based on your configuration, such as:\n* [Rancher Elastigroup](https://docs.spot.io/elastigroup/tools-integrations/rancher)\n* [Route53 Elastigroup](https://docs.spot.io/elastigroup/tools-integrations/route53)\n* [DockerSwarm Elastigroup](https://docs.spot.io/elastigroup/tools-integrations/docker-swarm)\n* [ECS Elastigroup](https://docs.spot.io/elastigroup/features/amazon-ecs/elastigroup-for-ecs)\n* [Beanstalk Elastigroup](https://docs.spot.io/elastigroup/tools-integrations/elastic-beanstalk)\n\n\n  You can create a beanstalk elastigroup with the following steps:\n  * [Get the beanstalk configuration](https://docs.spot.io/api/#operation/elastigroupAwsGetBeanstalkConfiguration) to JSON format\n  * Modify required parameters and post the JSON as a body to create a new elastigroup\n",
        "operationId": "elastigroupAwsCreate",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "AWS Elastigroup",
                    "required": [
                      "group"
                    ],
                    "properties": {
                      "group": {
                        "type": "object",
                        "description": "Elastigroup Configuration",
                        "required": [
                          "name",
                          "capacity"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "AWS Elastigroup Name\n",
                            "example": "my-Elastigroup"
                          },
                          "description": {
                            "type": "string",
                            "description": "Describe your AWS Elastigroup\n",
                            "example": "This Elastigroup is used for Development"
                          },
                          "region": {
                            "type": "string",
                            "description": "The AWS region your group will be created in.\n This parameter is required if you specify subnets (through compute.subnetIds).\n This parameter is optional if you specify Availability Zones (through compute.availabilityZones).\n",
                            "example": "use-east-1"
                          },
                          "capacity": {
                            "description": "Capacity Configuration",
                            "type": "object",
                            "title": "Elastigroup Capacity",
                            "required": [
                              "target",
                              "minimum",
                              "maximum",
                              "unit"
                            ],
                            "properties": {
                              "target": {
                                "type": "integer",
                                "description": "The number of instances to launch\n",
                                "example": 1
                              },
                              "minimum": {
                                "type": "integer",
                                "description": "The lower limit number of instances that you can scale down to\n",
                                "example": 0
                              },
                              "maximum": {
                                "type": "integer",
                                "description": "The upper limit number of instances that you can scale up to\n",
                                "example": 10
                              },
                              "unit": {
                                "type": "string",
                                "enum": [
                                  "instance",
                                  "weight"
                                ],
                                "description": "The capacity unit to launch instances by.\nNote: for groups with integration to K8S / ECS weight option is not supported.\n",
                                "example": "instance"
                              }
                            }
                          },
                          "strategy": {
                            "type": "object",
                            "title": "Elastigroup Strategy",
                            "description": "Strategy",
                            "required": [
                              "availabilityVsCost"
                            ],
                            "properties": {
                              "risk": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 100,
                                "example": 100,
                                "default": 0,
                                "description": "The percentage of Elastigroup that will run with spot market capacity\n"
                              },
                              "onDemandCount": {
                                "type": "integer",
                                "minimum": 0,
                                "example": 0,
                                "description": "Minimum number of instances that will always be on-demand\n"
                              },
                              "availabilityVsCost": {
                                "type": "string",
                                "enum": [
                                  "costOriented",
                                  "availabilityOriented",
                                  "balanced",
                                  "cheapest",
                                  "equalAzDistribution"
                                ],
                                "default": "balanced",
                                "description": "How Elastigroup determines which instances to add and replace.\n(please read this article before using [Equal AZ Instance Distribution](https://docs.spot.io/elastigroup-for-aws/concepts/general-concepts/equal-az-distribution))\n"
                              },
                              "fallbackToOd": {
                                "type": "boolean",
                                "default": false,
                                "example": true,
                                "description": "When set to `true` Elastigroup will launch On Demand instances if no spot market is available\n"
                              },
                              "utilizeReservedInstances": {
                                "type": "boolean",
                                "description": "In case of any available Reserved Instances, Elastigroup will utilize them before purchasing Spot instances\n",
                                "example": false
                              },
                              "utilizeCommitments": {
                                "type": "boolean",
                                "description": "If there are available Reserved Instances or Savings Plans, Elastigroup will utilize them before using Spot instances\n",
                                "example": false
                              },
                              "drainingTimeout": {
                                "type": "integer",
                                "example": 120,
                                "description": "The time in seconds to allow the instance be drained from incoming TCP connections and detached from ELB before terminating it, during a scale down operation\n"
                              },
                              "signals": {
                                "type": "array",
                                "description": "The signals defined for this group. For more information refer the below article: [Signals](https://docs.spot.io/elastigroup-for-aws/concepts/compute-concepts/using-signals-in-elastigroups)\n",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the signal defined for the group.\n",
                                      "enum": [
                                        "INSTANCE_READY",
                                        "INSTANCE_READY_TO_SHUTDOWN"
                                      ]
                                    },
                                    "timeout": {
                                      "type": "integer",
                                      "minimum": 60,
                                      "maximum": 1800,
                                      "description": "The timeout in seconds to hold the instance until a signal is sent.\nIf no signal is sent the instance will be replaced (INSTANCE_READY) or we will terminate the instance (INSTANCE_READY_TO_SHUTDOWN) after the timeout.\n",
                                      "default": 1800,
                                      "example": 120
                                    }
                                  }
                                }
                              },
                              "persistence": {
                                "type": "array",
                                "description": "You can register persistence (Stateful) recovery arguments\n",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "shouldPersistPrivateIp": {
                                      "type": "boolean",
                                      "description": "Should the instance maintain its private IP\n",
                                      "example": true
                                    },
                                    "shouldPersistRootDevice": {
                                      "type": "boolean",
                                      "description": "Should the instance maintain its root device volumes\n",
                                      "example": true
                                    },
                                    "shouldPersistBlockDevices": {
                                      "type": "boolean",
                                      "description": "Should the instance maintain its Data volumes\n",
                                      "example": true
                                    },
                                    "blockDevicesMode": {
                                      "type": "string",
                                      "description": "Determine the way we attach the data volumes to the data devices\n",
                                      "enum": [
                                        "reattach",
                                        "onLaunch"
                                      ],
                                      "example": "reattach"
                                    }
                                  }
                                }
                              },
                              "revertToSpot": {
                                "type": "object",
                                "description": "Hold settings for strategy correction - replacing On-Demand for Spot instances\n",
                                "properties": {
                                  "performAt": {
                                    "type": "string",
                                    "description": "Settings for maintenance strategy - possible values: timeWindow, never, always.\nperformAt of type: 'never' OR 'timeWindow' can only be applied to groups with \"availabilityOriented\" OR groups with \"persistence\",\nother groups allow either 'always' type or nothing which also means always.\n",
                                    "enum": [
                                      "never",
                                      "always",
                                      "timeWindow"
                                    ],
                                    "example": "timeWindow",
                                    "default": "always"
                                  },
                                  "timeWindows": {
                                    "type": "array",
                                    "description": "When performAt is 'timeWindow': must specify a list of 'timeWindows' with at least one time window Each string is in the format of - ddd:hh:mm-ddd:hh:mm\nddd = day of week = Sun | Mon | Tue | Wed | Thu | Fri | Sat\nhh = hour 24 = 0 -23\nmm = minute = 0 - 59\n",
                                    "items": {
                                      "type": "string",
                                      "example": "Mon:03:00-Wed:02:30"
                                    }
                                  }
                                }
                              },
                              "scalingStrategy": {
                                "type": "object",
                                "description": "Set termination policy\n",
                                "properties": {
                                  "terminationPolicy": {
                                    "type": "string",
                                    "enum": [
                                      "default",
                                      "newestInstance"
                                    ],
                                    "example": "default"
                                  }
                                }
                              }
                            }
                          },
                          "compute": {
                            "type": "object",
                            "title": "Elastigroup Compute",
                            "required": [
                              "product",
                              "availabilityZones"
                            ],
                            "properties": {
                              "product": {
                                "type": "string",
                                "description": "Operation system type.\n",
                                "enum": [
                                  "Linux/UNIX (Amazon VPC)",
                                  "SUSE Linux (Amazon VPC)",
                                  "Windows (Amazon VPC)",
                                  "Red Hat Enterprise Linux (Amazon VPC)"
                                ],
                                "example": "Linux/UNIX"
                              },
                              "elasticIps": {
                                "type": "array",
                                "description": "List of ElasticIPs Allocation Ids to associate to the group instances\n",
                                "items": {
                                  "type": "string",
                                  "example": "eipalloc-9d4e16f8"
                                }
                              },
                              "privateIps": {
                                "type": "array",
                                "description": "List of Private IPs to associate to the group instances.\nPlease note: This setting will only apply if rategy.persistence.shouldPersistPrivateIp is set to true.\n",
                                "items": {
                                  "type": "string",
                                  "default": "172.1.1.0"
                                }
                              },
                              "instanceTypes": {
                                "type": "object",
                                "description": "Instance Types\n",
                                "required": [
                                  "ondemand",
                                  "spot"
                                ],
                                "properties": {
                                  "ondemand": {
                                    "type": "string",
                                    "description": "Available Instance types\n",
                                    "example": "m3.medium"
                                  },
                                  "spot": {
                                    "type": "array",
                                    "description": "Available Spot Instance types\n",
                                    "items": {
                                      "type": "string",
                                      "example": [
                                        "c3.large",
                                        "c4.large",
                                        "m3.large",
                                        "r3.large"
                                      ]
                                    }
                                  },
                                  "preferredSpot": {
                                    "type": "array",
                                    "description": "Prioritize a subset of spot instance types. Must be a subset of the selected spot instance types.\n",
                                    "items": {
                                      "type": "string",
                                      "example": [
                                        "c4.large"
                                      ]
                                    }
                                  },
                                  "weights": {
                                    "type": "array",
                                    "description": "Custom weight for each instance type (only valid in weight capacity unit)\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "instanceType": {
                                          "type": "string",
                                          "description": "The instance type to customize its weight\n",
                                          "example": "c4.large"
                                        },
                                        "weightedCapacity": {
                                          "type": "integer",
                                          "description": "The weight\n",
                                          "example": 8
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "subnetIds": {
                                "type": "array",
                                "description": "A comma-separated list of subnet identifiers for your group.\nWhen this parameter is set, compute.availabilityZones should be left unused.\n",
                                "items": {
                                  "type": "string",
                                  "example": [
                                    "subnet-4c1d1538",
                                    "subnet-2791bb61",
                                    "subnet-703a6f58",
                                    "subnet-c62846fc"
                                  ]
                                }
                              },
                              "availabilityZones": {
                                "type": "array",
                                "description": "One or more availability Zones for the group.\nWhen this parameter is set, compute.subnetIds should be left unused.\n",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "name"
                                  ],
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The Availability Zone name\n",
                                      "example": "us-west-2a"
                                    },
                                    "subnetIds": {
                                      "type": "array",
                                      "description": "A comma-separated list of subnet identifiers for your group.\n",
                                      "items": {
                                        "type": "string",
                                        "example": [
                                          "subnet-4333093a"
                                        ]
                                      }
                                    },
                                    "placementGroupName": {
                                      "type": "string",
                                      "description": "specify a Placement Group name, the instances will be launched in the Placement Group for the AZ.\n"
                                    }
                                  }
                                }
                              },
                              "preferredAvailabilityZones": {
                                "type": "array",
                                "description": "The AZs to prioritize when launching Spot instances.\nIf no markets are available in the Preferred AZs, Spot instances are launched in the non-preferred AZs.\n* Must be a sublist of compute.AvailabilityZones\n* strategy.availabilityVsCost must not be equalAzDistribution\n",
                                "items": {
                                  "type": "string",
                                  "example": [
                                    "us-east-1a",
                                    "us-east-1b"
                                  ]
                                }
                              },
                              "launchSpecification": {
                                "type": "object",
                                "required": [
                                  "securityGroupIds",
                                  "monitoring",
                                  "imageId",
                                  "keyPair"
                                ],
                                "properties": {
                                  "creditSpecification": {
                                    "type": "object",
                                    "description": "creditSpecification is a parameter that indicates in what mode t2/t3 instances will be launched with. It consists of one key: cpuCredits (String)\n",
                                    "properties": {
                                      "cpuCredits": {
                                        "type": "string",
                                        "enum": [
                                          "unlimited",
                                          "standard"
                                        ],
                                        "example": "unlimited"
                                      }
                                    }
                                  },
                                  "loadBalancersConfig": {
                                    "type": "object",
                                    "description": "Elastic Load Balancers configurations\n",
                                    "properties": {
                                      "loadBalancers": {
                                        "type": "array",
                                        "description": "List of classic load balancers and/or application load balancer target groups and/or Multai load balancer target sets\n",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "The AWS resource name. Required for Classic Load Balancer. Optional for Application Load Balancer.\n",
                                              "example": "MyTargetGroup"
                                            },
                                            "arn": {
                                              "type": "string",
                                              "description": "The AWS resource ARN (Required only for ALB target groups)\n",
                                              "example": "arn:aws:elasticloadbalancing:us-west-2:922761411234:targetgroup/MyTargetGroup/1fe63217f8ff1234"
                                            },
                                            "type": {
                                              "type": "string",
                                              "description": "The resource type.\n",
                                              "enum": [
                                                "CLASSIC",
                                                "TARGET_GROUP",
                                                "MULTAI_TARGET_SET"
                                              ],
                                              "example": "TARGET_GROUP"
                                            },
                                            "balancerId": {
                                              "type": "string",
                                              "description": "The Multai load balancer ID\n",
                                              "example": "lb-123456789"
                                            },
                                            "targetSetId": {
                                              "description": "The Multai load target set ID\n",
                                              "type": "string",
                                              "example": "ts-123456789"
                                            },
                                            "azAwareness": {
                                              "description": "`AZ Awareness` will ensure that instances within the same AZ are using the corresponding MLB runtime instance in the same AZ. This feature reduces multi-zone data transfer fees\n",
                                              "type": "boolean",
                                              "example": false
                                            },
                                            "autoWeight": {
                                              "description": "`Auto Weight` will automatically provide a higher weight for instances that are larger as appropriate. For example, if you have configured your Elastigroup with m4.large and m4.xlarge instances the m4.large will have half the weight of an m4.xlarge. This ensures that larger instances receive a higher number of MLB requests\n",
                                              "type": "boolean",
                                              "example": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "itf": {
                                    "title": "Intelligent Traffic Flow (ITF) Configuration",
                                    "type": "object",
                                    "description": "Contains the configuration details of Intelligent Traffic Flow (ITF).\n",
                                    "properties": {
                                      "fixedTargetGroups": {
                                        "type": "boolean",
                                        "description": "Boolean to control whether to keep the set of target groups fixed. When set to true, all target groups will be created in advance upon create/update group, and will not be deleted even when not being used anymore.\n",
                                        "default": false,
                                        "example": false
                                      },
                                      "weightStrategy": {
                                        "type": "string",
                                        "description": "Distribution strategy (either 'vcpu' or 'custom'). 'Custom' strategy can be set only when the group is configured with custom weights.\n",
                                        "enum": [
                                          "vcpu",
                                          "custom"
                                        ],
                                        "default": "vcpu",
                                        "example": "custom"
                                      },
                                      "migrationHealthinessThreshold": {
                                        "type": "integer",
                                        "description": "Threshold for the minimum healthiness level of the target groups that is needed before activating the ITF rules. Integer representing the percentage of healthy instances within the target groups. Valid values: integer between 0-100.\n",
                                        "default": 50,
                                        "example": 80
                                      },
                                      "loadBalancers": {
                                        "type": "array",
                                        "description": "The load balancer associated with the ITF. Array with a single element.\n",
                                        "items": {
                                          "title": "ITF Load Balancer Configuration",
                                          "type": "object",
                                          "description": "Contains the configuration details of an ITF load balancer.\n",
                                          "required": [
                                            "loadBalancerArn",
                                            "listenerRules"
                                          ],
                                          "properties": {
                                            "loadBalancerArn": {
                                              "type": "string",
                                              "description": "Identifier of the load balancer in AWS.\n",
                                              "example": "arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188"
                                            },
                                            "listenerRules": {
                                              "type": "array",
                                              "description": "The listener rules that should be maintained by ITF. Array with a minimum of 1 element.\n",
                                              "items": {
                                                "title": "ITF Listener Rule Configuration",
                                                "type": "object",
                                                "description": "Contains the configuration details of an ITF listener rule.\n",
                                                "required": [
                                                  "ruleArn"
                                                ],
                                                "properties": {
                                                  "ruleArn": {
                                                    "type": "string",
                                                    "description": "Identifier of the listener rule in AWS.\n",
                                                    "example": "arn:aws:elasticloadbalancing:us-west-2:123456789012:listener-rule/app/0123456789012345/1234567890123456/234567890123456"
                                                  },
                                                  "staticTargetGroups": {
                                                    "type": "array",
                                                    "description": "Listener rule target group whose percentage should remain static (unchanged). Array with a single element.",
                                                    "items": {
                                                      "$ref": "#/paths/~1aws~1ec2~1group/post/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/compute/properties/launchSpecification/properties/itf/properties/loadBalancers/items/properties/defaultStaticTargetGroups/items"
                                                    },
                                                    "example": [
                                                      {
                                                        "arn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/blue-targets/73e2d6bc24d8a068",
                                                        "percentage": 0.5
                                                      }
                                                    ]
                                                  }
                                                }
                                              }
                                            },
                                            "defaultStaticTargetGroups": {
                                              "type": "array",
                                              "description": "A default static target group on the rule. Array with a single element.",
                                              "items": {
                                                "title": "ITF Static Target Group Configuration",
                                                "type": "object",
                                                "description": "Contains the configuration details of an ITF static target group.\n",
                                                "required": [
                                                  "arn",
                                                  "percentage"
                                                ],
                                                "properties": {
                                                  "arn": {
                                                    "type": "string",
                                                    "description": "Identifier of the target group in AWS.\n",
                                                    "example": "arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/blue-targets/73e2d6bc24d8a067"
                                                  },
                                                  "percentage": {
                                                    "type": "number",
                                                    "description": "A float number in the range of 0.1-10.\n",
                                                    "example": 0.4
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "targetGroupConfig": {
                                        "title": "ITF Target Group Configuration",
                                        "type": "object",
                                        "description": "Contains the configuration details of an ITF target group.\n",
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "vpcId": {
                                                "type": "string",
                                                "description": "The ID of the AWS VPC for the targets. Valid values: any string which is not empty or null.\n",
                                                "example": "vpc-0410a20ec1702a537"
                                              },
                                              "healthCheckPath": {
                                                "type": "string",
                                                "description": "The destination for health checks on the targets.\n",
                                                "example": "/index.html"
                                              },
                                              "healthCheckProtocol": {
                                                "type": "string",
                                                "description": "HTTP, HTTPS are already listed under the enum below, no need to repeat.\n",
                                                "enum": [
                                                  "HTTP",
                                                  "HTTPS"
                                                ],
                                                "default": "HTTP",
                                                "example": "HTTP"
                                              },
                                              "healthCheckPort": {
                                                "type": "string",
                                                "description": "The port to use to connect with the target. Valid values: 1-65535 or \"traffic-port\".\n",
                                                "default": "80",
                                                "example": "traffic-port"
                                              },
                                              "healthCheckIntervalSeconds": {
                                                "type": "integer",
                                                "description": "The approximate amount of time, in seconds, between health checks of an individual target. Valid values: integer between 5-300.\n",
                                                "default": 30,
                                                "example": 40
                                              },
                                              "healthCheckTimeoutSeconds": {
                                                "type": "integer",
                                                "description": "The amount of time, in seconds, during which no response means a failed health check. Valid values: integer between 2-120.\n",
                                                "default": 5,
                                                "example": 20
                                              },
                                              "healthyThresholdCount": {
                                                "type": "integer",
                                                "description": "The number of consecutive health checks successes required before considering an unhealthy target healthy. Valid values: integer between 2-10.\n",
                                                "default": 5,
                                                "example": 3
                                              },
                                              "unhealthyThresholdCount": {
                                                "type": "integer",
                                                "description": "The number of consecutive health check failures required before considering the target unhealthy. Valid values: integer between 2-10.\n",
                                                "default": 2,
                                                "example": 4
                                              },
                                              "port": {
                                                "type": "integer",
                                                "description": "The port on which the targets are listening. Not used if the target is a Lambda function. Valid values: integer between 1-65535.\n",
                                                "example": 80
                                              },
                                              "protocol": {
                                                "type": "string",
                                                "description": "The protocol to use for routing traffic to the targets.\n",
                                                "enum": [
                                                  "HTTP",
                                                  "HTTPS"
                                                ],
                                                "example": "HTTP"
                                              },
                                              "protocolVersion": {
                                                "type": "string",
                                                "description": "The protocol version.\n",
                                                "default": "HTTP1",
                                                "enum": [
                                                  "GRPC",
                                                  "HTTP1",
                                                  "HTTP2"
                                                ],
                                                "example": "HTTP1"
                                              },
                                              "tags": {
                                                "type": "array",
                                                "description": "The tags to assigned with the created target groups\n",
                                                "default": [],
                                                "example": [
                                                  {
                                                    "creator": "John Doe"
                                                  }
                                                ],
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "tagKey": {
                                                      "type": "string",
                                                      "description": "The tag's key\n",
                                                      "example": "Creator"
                                                    },
                                                    "tagValue": {
                                                      "type": "string",
                                                      "description": "The tag's value\n",
                                                      "example": "John Doe"
                                                    }
                                                  }
                                                }
                                              },
                                              "matcher": {
                                                "type": "object",
                                                "description": "Matcher to use when checking for a successful response from a target group. One of 'httpCode' or 'grpcCode' is required.\n",
                                                "default": {
                                                  "httpCode": "200"
                                                },
                                                "properties": {
                                                  "httpCode": {
                                                    "type": "string",
                                                    "description": "You can specify values between 200 and 499, and the default value is 200. You can specify multiple values (for example, “200,202”) or a range of values (for example, “200-299”).\n",
                                                    "default": "200",
                                                    "example": "200"
                                                  },
                                                  "grpcCode": {
                                                    "type": "string",
                                                    "description": "You can specify values between 0 and 99. You can specify multiple values (for example, “0,1”) or a range of values (for example, “0-5”). The default value is 12.\n",
                                                    "default": "12",
                                                    "example": "4"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "required": [
                                              "vpcId",
                                              "healthCheckPath",
                                              "port",
                                              "protocol"
                                            ]
                                          }
                                        ]
                                      }
                                    },
                                    "required": [
                                      "loadBalancers",
                                      "targetGroupConfig"
                                    ]
                                  },
                                  "healthCheckType": {
                                    "type": "string",
                                    "description": "The service to use for the health check.\n",
                                    "enum": [
                                      "ELB",
                                      "HCS",
                                      "TARGET_GROUP",
                                      "MLB",
                                      "ECS_CLUSTER_INSTANCE",
                                      "EC2",
                                      "OPSWORKS",
                                      "MULTAI_TARGET_SET",
                                      "K8S_NODE",
                                      "NOMAD_NODE"
                                    ],
                                    "example": "EC2"
                                  },
                                  "healthCheckGracePeriod": {
                                    "type": "integer",
                                    "description": "The amount of time, in seconds, after the instance has launched to starts and check its health.\n",
                                    "default": 300,
                                    "example": 600
                                  },
                                  "healthCheckUnhealthyDurationBeforeReplacement": {
                                    "type": "integer",
                                    "description": "The amount of time, in seconds, an existing instance should remain active after becoming unhealthy.\nAfter the set time out the instance will be replaced\n",
                                    "example": 60
                                  },
                                  "securityGroupIds": {
                                    "type": "array",
                                    "description": "One or more security group IDs. In case of update it will override the existing Security Group with the new given array\n",
                                    "items": {
                                      "type": "string",
                                      "example": [
                                        "sg-0dfc2c8760df6fec7"
                                      ]
                                    }
                                  },
                                  "monitoring": {
                                    "type": "boolean",
                                    "description": "Describes whether instance Enhanced Monitoring is enabled\n",
                                    "example": false
                                  },
                                  "ebsOptimized": {
                                    "type": "boolean",
                                    "description": "Enable EBS optimization for supported instance which is not enabled by default.\nNote - additional charges will be applied.\n",
                                    "example": false
                                  },
                                  "imageId": {
                                    "type": "string",
                                    "description": "The ID of the image used to launch the instance.\n* The following instance types are supported by HVM image: M3, M4, C3, C4, D2, G2, R3, CC2, CC1, CG1, CR1.\n* The following instance types are supported by PV image: M1, M2, M3, C1, C3.\n* In case of conflict between Instance type to image type, an error message will be returned\n",
                                    "example": "ami-01e24be29428c15b2"
                                  },
                                  "keyPair": {
                                    "type": "string",
                                    "description": "Specify a Key Pair to attach to the instances\n",
                                    "example": "labs-oregon"
                                  },
                                  "blockDeviceMappings": {
                                    "type": "array",
                                    "description": "Array list of block devices that are exposed to the instance, You can specify virtual devices and EBS volumes.\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "deviceName": {
                                          "type": "string",
                                          "description": "Set device name\n",
                                          "example": "/dev/xvdcz"
                                        },
                                        "ebs": {
                                          "type": "object",
                                          "description": "Set EBS properties\n",
                                          "properties": {
                                            "iops": {
                                              "type": "integer",
                                              "minimum": 0,
                                              "description": "Must be greater than or equal to 0\n",
                                              "example": 0
                                            },
                                            "throughput": {
                                              "type": "integer",
                                              "minimum": 125,
                                              "maximum": 1000,
                                              "example": 125,
                                              "description": "The amount of data transferred to or from a storage device per second, you can use this param just in a case that volumetype=‘gp3’.\n"
                                            },
                                            "volumeType": {
                                              "type": "string",
                                              "description": "Set volume type\n",
                                              "example": "gp2"
                                            },
                                            "deleteOnTermination": {
                                              "type": "boolean",
                                              "description": "Flag to delete the EBS on instance termination\n",
                                              "example": true
                                            },
                                            "volumeSize": {
                                              "type": "integer",
                                              "description": "Set volume size (in GB). When using this property - don't use dynamicVolumeSize.\nVolume size should be greater or equal than the size configured in the AMI\n",
                                              "example": 12
                                            },
                                            "dynamicVolumeSize": {
                                              "type": "object",
                                              "description": "Set dynamic volume size properties. When using this object, you cannot use volumeSize. You must use one or the other.\n",
                                              "properties": {
                                                "baseSize": {
                                                  "type": "integer",
                                                  "description": "Initial size for volume\n",
                                                  "example": 50
                                                },
                                                "resource": {
                                                  "type": "string",
                                                  "example": "CPU"
                                                },
                                                "sizePerResourceUnit": {
                                                  "type": "integer",
                                                  "description": "Additional size per resource unit (in GB). For example: if baseSize=50, and sizePerResourceUnit=20, and an instance with 2 CPU is launched - its disk size will be: 90GB\n",
                                                  "example": 20
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "networkInterfaces": {
                                    "type": "array",
                                    "description": "List of network interfaces in an EC2 instance.\nIf you define network interface, please pay attention to omit these properties from other sections in this JSON and set them here: subnetId - compute.availabilityZones\n",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "deviceIndex"
                                      ],
                                      "properties": {
                                        "description": {
                                          "type": "string",
                                          "description": "The description of the network interface. Applies only if creating a network interface when launching an instance.\n"
                                        },
                                        "deviceIndex": {
                                          "type": "integer",
                                          "description": "The position of the network interface in the attachment order.\nA primary network interface has a device index of 0.\nIf you specify a network interface when launching an instance, you must specify the device index.\n",
                                          "example": 0
                                        },
                                        "secondaryPrivateIpAddressCount": {
                                          "type": "integer",
                                          "description": "The number of secondary private IPv4 addresses to assign to a network interface.\nWhen you specify a number of secondary IPv4 addresses, Amazon EC2 selects these IP addresses within the subnet's IPv4 CIDR range.\nYou can't specify this option and specify more than one private IP address using privateIpAddresses.\nThe number of IP addresses you can assign to a network interface varies by instance type.\nFor more information, see IP Addresses Per ENI Per Instance Type in the Amazon Virtual Private Cloud User Guide.\n"
                                        },
                                        "associatePublicIpAddress": {
                                          "type": "boolean",
                                          "description": "Indicates whether to assign a public IPv4 address to an instance you launch in a VPC.\nThe public IP address can only be assigned to a network interface for eth0, and can only be assigned to a new network interface, not an existing one.\nYou cannot specify more than one network interface in the request.\nIf launching into a default subnet, the default value is true.\n",
                                          "example": true
                                        },
                                        "deleteOnTermination": {
                                          "type": "boolean",
                                          "description": "If set to true, the interface is deleted when the instance is terminated.\nYou can specify true only if creating a new network interface when launching an instance.\n"
                                        },
                                        "networkInterfaceId": {
                                          "type": "string",
                                          "description": "The ID of the network interface. Used to attach the specified network interface to the instance.\n"
                                        },
                                        "privateIpAddresses": {
                                          "type": "array",
                                          "description": "One or more private IPv4 addresses to assign to the network interface.\nOnly one private IPv4 address can be designated as primary.\nYou cannot specify this option if you're launching more than one instance in a RunInstances request.\n",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "privateIpAddress",
                                              "primary"
                                            ],
                                            "properties": {
                                              "privateIpAddress": {
                                                "type": "string",
                                                "description": "The private IPv4 address.\n"
                                              },
                                              "primary": {
                                                "type": "boolean",
                                                "description": "Indicates whether the private IPv4 address is the primary private IPv4 address. Only one IPv4 address can be designated as primary.\n"
                                              }
                                            }
                                          }
                                        },
                                        "subnetId": {
                                          "type": "string",
                                          "description": "The ID of the subnet to associate with the network interface.\nRequired when creating a new Network Interface, and not attaching an existing one via networkInterfaceId.\n"
                                        },
                                        "associateIpv6Address": {
                                          "type": "boolean",
                                          "description": "Indicates whether to assign an IPv6 address. Amazon EC2 chooses the IPv6 addresses from the range of the subnet.\n"
                                        }
                                      }
                                    }
                                  },
                                  "iamRole": {
                                    "type": "object",
                                    "description": "The instance profile iamRole\n",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "The iamRole name\n",
                                        "example": "my-iamRole"
                                      }
                                    }
                                  },
                                  "userData": {
                                    "type": "string",
                                    "format": "byte",
                                    "description": "The Base64-encoded MIME user data to make available to the instances\n",
                                    "example": "dXNlcmJhc2g2NGVuY29kZWQ="
                                  },
                                  "shutdownScript": {
                                    "type": "string",
                                    "format": "byte",
                                    "description": "The Base64-encoded shutdown script to execute prior to instance termination. For more information please see: [Shutdown Script](https://docs.spot.io/integration-docs/elastigroup/concepts/compute-concepts/shutdown-scripts/)\n",
                                    "example": "dXNlcmJhc2g2NGVuY29kZWQ="
                                  },
                                  "tags": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "tagKey": {
                                          "type": "string",
                                          "description": "The tag's key\n",
                                          "example": "Creator"
                                        },
                                        "tagValue": {
                                          "type": "string",
                                          "description": "The tag's value\n",
                                          "example": "John Doe"
                                        }
                                      }
                                    }
                                  },
                                  "resourceTagSpecification": {
                                    "type": "object",
                                    "description": "Optional field. User will specified which resources should be tagged with group tags.",
                                    "properties": {
                                      "volumes": {
                                        "type": "object",
                                        "description": "Optional field. Tag specification for Volume resources.",
                                        "properties": {
                                          "shouldTag": {
                                            "type": "boolean",
                                            "description": "Optional field. Volume resources will be tagged with group tags.",
                                            "default": false,
                                            "example": false
                                          }
                                        }
                                      },
                                      "snapshots": {
                                        "type": "object",
                                        "description": "Optional field. Tag specification for Snapshot resources.",
                                        "properties": {
                                          "shouldTag": {
                                            "type": "boolean",
                                            "description": "Optional field. Snapshot resources will be tagged with group tags.",
                                            "default": true,
                                            "example": true
                                          }
                                        }
                                      },
                                      "enis": {
                                        "type": "object",
                                        "description": "Optional field. Tag specification for ENI resources.",
                                        "properties": {
                                          "shouldTag": {
                                            "type": "boolean",
                                            "description": "Optional field. ENI resources will be tagged with group tags.",
                                            "default": false,
                                            "example": false
                                          }
                                        }
                                      },
                                      "amis": {
                                        "type": "object",
                                        "description": "Optional field. Tag specification for AMI resources.",
                                        "properties": {
                                          "shouldTag": {
                                            "type": "boolean",
                                            "description": "Optional field. AMI resources will be tagged with group tags.",
                                            "default": true,
                                            "example": true
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "metadataOptions": {
                                    "title": "Metadata Options",
                                    "type": "object",
                                    "description": "Optional field. Used for IMDSv2. In Create route can't be null. In Update route can be null.",
                                    "required": [
                                      "httpTokens"
                                    ],
                                    "properties": {
                                      "httpTokens": {
                                        "title": "HTTP Tokens",
                                        "type": "string",
                                        "description": "Required for IMDSv2. Can’t be null in Create or Update. Values can be \"optional\" or \"required\".",
                                        "example": "optional"
                                      },
                                      "httpPutResponseHopLimit": {
                                        "type": "integer",
                                        "example": "33",
                                        "description": "An integer within 1,64 range (including).\nThe desired HTTP PUT response hop limit for instance metadata requests.\nThe larger the number, the further instance metadata requests can travel.\n"
                                      }
                                    }
                                  },
                                  "cpuOptions": {
                                    "title": "CPU options",
                                    "type": "object",
                                    "description": "Optional field. The CPU options for the instances that are launched within the group.",
                                    "required": [
                                      "threadsPerCore"
                                    ],
                                    "properties": {
                                      "threadsPerCore": {
                                        "title": "thread per core",
                                        "type": "integer",
                                        "example": "1",
                                        "description": "The number of threads per CPU core.\nTo disable multithreading for the instances, specify a value of 1 .\nOtherwise, specify the default value of 2 .\n"
                                      }
                                    }
                                  },
                                  "autoHealing": {
                                    "type": "boolean",
                                    "description": "Optional field. Auto-healing replacement won't be triggered if this parameter value is \"false\".\nIn a case of a stateful group - no recycling will start if this parameter value is \"false\".\n",
                                    "default": true,
                                    "example": true
                                  }
                                }
                              }
                            }
                          },
                          "scaling": {
                            "type": "object",
                            "title": "Elastigroup Scaling",
                            "properties": {
                              "up": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "title": "scale up config",
                                  "required": [
                                    "metricName",
                                    "namespace"
                                  ],
                                  "properties": {
                                    "policyName": {
                                      "type": "string",
                                      "description": "The policy name.\n",
                                      "example": "my-up-policy"
                                    },
                                    "metricName": {
                                      "type": "string",
                                      "description": "The name of the metric.\n",
                                      "default": "CPUUtilization",
                                      "example": "CPUUtilization"
                                    },
                                    "statistic": {
                                      "type": "string",
                                      "description": "The metric statistics to return.\n",
                                      "enum": [
                                        "average",
                                        "sum",
                                        "sampleCount",
                                        "maximum",
                                        "minimum",
                                        "percentile"
                                      ],
                                      "example": "average"
                                    },
                                    "extendedStatistic": {
                                      "type": "string",
                                      "description": "Percentile statistic. Valid values: p0.1 - p100.\n",
                                      "example": "p1.5"
                                    },
                                    "unit": {
                                      "type": "string",
                                      "description": "The unit for the alarm's associated metric.\n",
                                      "enum": [
                                        "seconds",
                                        "microseconds",
                                        "milliseconds",
                                        "bytes",
                                        "kilobytes",
                                        "megabytes",
                                        "gigabytes",
                                        "terabytes",
                                        "bits",
                                        "kilobits",
                                        "megabits",
                                        "gigabits",
                                        "terabits",
                                        "percent",
                                        "count",
                                        "bytes/second",
                                        "kilobytes/second",
                                        "megabytes/second",
                                        "gigabytes/second",
                                        "terabytes/second",
                                        "bits/second",
                                        "kilobits/second",
                                        "megabits/second",
                                        "gigabits/second",
                                        "terabits/second",
                                        "count/second",
                                        "none"
                                      ],
                                      "example": "percent"
                                    },
                                    "threshold": {
                                      "type": "integer",
                                      "description": "The value against which the specified statistic is compared.\n",
                                      "example": 90
                                    },
                                    "action": {
                                      "type": "object",
                                      "description": "The action to take when scale up is needed.\nA mandatory field, that should be filled with one of the following:\n\"adjustment\", \"percentageAdjustment\", \"setMaxTarget\", \"setMinTarget\", \"updateCapacity\".\n",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "description": "The type of the action to take when scale up is needed.\n",
                                          "enum": [
                                            "adjustment",
                                            "updateCapacity setMinTarget",
                                            "percentageAdjustment"
                                          ],
                                          "example": "updateCapacity"
                                        },
                                        "adjustment": {
                                          "type": "integer",
                                          "description": "The number / percentage associated with the specified adjustment type.\nRequired if using `adjustment` or `percentageAdjustment` as action type\n",
                                          "example": 1
                                        },
                                        "minTargetCapacity": {
                                          "type": "integer",
                                          "description": "The minimum target capacity.\nRequired if using `setMinTarget` as action type.\n",
                                          "example": 1
                                        },
                                        "target": {
                                          "type": "integer",
                                          "description": "The desired number of instances. Required if using `updateCapacity` as action type and neither `minimum` nor `maximum` are defined.\n",
                                          "example": 1
                                        },
                                        "minimum": {
                                          "type": "integer",
                                          "description": "The lower limit number of instances that you can scale down to. Optional, required if using `updateCapacity` as action type and neither `target` nor `maximum` are defined\n",
                                          "example": 0
                                        },
                                        "maximum": {
                                          "type": "integer",
                                          "description": "The upper limit number of instances that you can scale up to. Optional, required if using `updateCapacity` as action type and neither `target` nor `minimum` are defined\n",
                                          "example": 5
                                        }
                                      }
                                    },
                                    "stepAdjustments": {
                                      "type": "array",
                                      "description": "The list of steps to define actions to take based on different thresholds.\nWhen set, policy-level threshold and action cannot be specified.\nIf specified, at least one step should be defined.\n",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "action": {
                                            "type": "object",
                                            "description": "The action to take when scale up according to step's threshold is needed.\nA mandatory field, that should be filled with one of the following:\n\"adjustment\", \"percentageAdjustment\", \"setMinTarget\", \"updateCapacity\".\n",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "description": "The type of the action to take when scale up is needed.\n",
                                                "enum": [
                                                  "adjustment",
                                                  "updateCapacity setMinTarget",
                                                  "percentageAdjustment"
                                                ],
                                                "example": "setMinTarget"
                                              },
                                              "adjustment": {
                                                "type": "integer",
                                                "description": "The number / percentage associated with the specified adjustment type.\nRequired if using `adjustment` or `percentageAdjustment` as action type\n",
                                                "example": 2
                                              },
                                              "minTargetCapacity": {
                                                "type": "integer",
                                                "description": "The desired target capacity of a group.\nRequired if using `setMinTarget` as action type\n",
                                                "example": 3
                                              },
                                              "target": {
                                                "type": "integer",
                                                "description": "The desired number of instances. Required if using `updateCapacity` as action type and neither `minimum` nor `maximum` are not defined.\n",
                                                "example": 3
                                              },
                                              "minimum": {
                                                "type": "integer",
                                                "description": "The lower limit number of instances that you can scale down to. Optional, required if using `updateCapacity` as action type and neither `target` nor `maximum` are not defined\n",
                                                "example": 4
                                              },
                                              "maximum": {
                                                "type": "integer",
                                                "description": "The upper limit number of instances that you can scale up to. Optional, required if using `updateCapacity` as action type and neither `target` nor `minimum` are not defined\n",
                                                "example": 10
                                              }
                                            }
                                          },
                                          "threshold": {
                                            "type": "integer",
                                            "description": "The value against which the specified statistic is compared in order\nto determine if a step should be applied.\n",
                                            "example": 50
                                          }
                                        }
                                      }
                                    },
                                    "namespace": {
                                      "type": "string",
                                      "description": "The namespace for the alarm's associated metric.\n",
                                      "default": "AWS/EC2"
                                    },
                                    "dimensions": {
                                      "type": "array",
                                      "description": "The dimensions for the alarm's associated metric.\nWhen name is \"instanceId\", no value is needed.\n",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "InstanceId"
                                          },
                                          "value": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "period": {
                                      "type": "integer",
                                      "description": "The period in seconds over which the statistic is applied.\n",
                                      "example": 300
                                    },
                                    "evaluationPeriods": {
                                      "type": "integer",
                                      "description": "The number of periods over which data is compared to the specified threshold.\n",
                                      "example": 1
                                    },
                                    "cooldown": {
                                      "type": "integer",
                                      "description": "The amount of time, in seconds, after a scaling activity completes before any further trigger-related scaling activities can start.\n",
                                      "example": 300
                                    },
                                    "operator": {
                                      "type": "string",
                                      "description": "The operator to use in order to determine if the scaling policy is applicable.\n",
                                      "enum": [
                                        "gt",
                                        "gte",
                                        "lt",
                                        "lte"
                                      ],
                                      "example": "gte"
                                    },
                                    "isEnabled": {
                                      "type": "boolean",
                                      "description": "Specifies whether the scaling policy described in this block is enabled.\n",
                                      "default": true,
                                      "example": true
                                    }
                                  }
                                }
                              },
                              "down": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "title": "scale down config",
                                  "properties": {
                                    "policyName": {
                                      "type": "string",
                                      "description": "The policy name.\n",
                                      "example": "my-down-policy"
                                    },
                                    "metricName": {
                                      "type": "string",
                                      "description": "The name of the metric.\n",
                                      "default": "CPUUtilization",
                                      "example": "CPUUtilization"
                                    },
                                    "statistic": {
                                      "type": "string",
                                      "description": "The metric statistics to return.\n",
                                      "enum": [
                                        "average",
                                        "sum",
                                        "sampleCount",
                                        "maximum",
                                        "minimum",
                                        "percentile"
                                      ],
                                      "example": "average"
                                    },
                                    "extendedStatistic": {
                                      "type": "string",
                                      "description": "Percentile statistic. Valid values: p0.1 - p100.\n",
                                      "example": "p1.5"
                                    },
                                    "unit": {
                                      "type": "string",
                                      "description": "The unit for the alarm's associated metric.\n",
                                      "enum": [
                                        "seconds",
                                        "microseconds",
                                        "milliseconds",
                                        "bytes",
                                        "kilobytes",
                                        "megabytes",
                                        "gigabytes",
                                        "terabytes",
                                        "bits",
                                        "kilobits",
                                        "megabits",
                                        "gigabits",
                                        "terabits",
                                        "percent",
                                        "count",
                                        "bytes/second",
                                        "kilobytes/second",
                                        "megabytes/second",
                                        "gigabytes/second",
                                        "terabytes/second",
                                        "bits/second",
                                        "kilobits/second",
                                        "megabits/second",
                                        "gigabits/second",
                                        "terabits/second",
                                        "count/second",
                                        "none"
                                      ],
                                      "example": "percent"
                                    },
                                    "threshold": {
                                      "type": "integer",
                                      "description": "The value against which the specified statistic is compared.\n",
                                      "example": 90
                                    },
                                    "action": {
                                      "type": "object",
                                      "description": "The action to take when scale up is needed.\nA mandatory field, that should be filled with one of the following:\n\"adjustment\", \"percentageAdjustment\", \"setMaxTarget\", \"setMinTarget\", \"updateCapacity\".\n",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "description": "The type of the action to take when scale up is needed.\n",
                                          "enum": [
                                            "adjustment",
                                            "updateCapacity setMinTarget",
                                            "percentageAdjustment"
                                          ],
                                          "example": "updateCapacity"
                                        },
                                        "adjustment": {
                                          "type": "integer",
                                          "description": "The number / percentage associated with the specified adjustment type.\nRequired if using `adjustment` or `percentageAdjustment` as action type.\n",
                                          "example": 1
                                        },
                                        "minTargetCapacity": {
                                          "type": "integer",
                                          "description": "The minimum target capacity.\nRequired if using `setMinTarget` as action type.\n",
                                          "example": 1
                                        },
                                        "target": {
                                          "type": "integer",
                                          "description": "The desired number of instances. Required if using `updateCapacity` as action type and neither `minimum` nor `maximum` are defined.\n",
                                          "example": 1
                                        },
                                        "minimum": {
                                          "type": "integer",
                                          "description": "The lower limit number of instances that you can scale down to. Optional, required if using `updateCapacity` as action type and neither minimum nor maximum are defined.\n",
                                          "example": 0
                                        },
                                        "maximum": {
                                          "type": "integer",
                                          "description": "The upper limit number of instances that you can scale up to. Optional, required if using `updateCapacity` as action type and neither minimum nor maximum are defined.\n",
                                          "example": 5
                                        }
                                      }
                                    },
                                    "stepAdjustments": {
                                      "type": "array",
                                      "description": "The list of steps to define actions to take based on different thresholds.\nWhen set, policy-level threshold and action cannot be specified.\nIf specified, at least one step should be defined.\n",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "action": {
                                            "type": "object",
                                            "description": "The action to take when scale down according to step's threshold is needed.\nA mandatory field, that should be filled with one of the following:\n\"adjustment\", \"percentageAdjustment\", \"setMaxTarget\", \"updateCapacity\".\n",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "description": "The type of the action to take when scale down is needed.\n",
                                                "enum": [
                                                  "adjustment",
                                                  "updateCapacity",
                                                  "setMaxTarget",
                                                  "percentageAdjustment"
                                                ],
                                                "example": "percentageAdjustment"
                                              },
                                              "adjustment": {
                                                "type": "integer",
                                                "description": "The number / percentage associated with the specified adjustment type.\nRequired if using `adjustment` or `percentageAdjustment` as action type\n",
                                                "example": 40
                                              },
                                              "maxTargetCapacity": {
                                                "type": "integer",
                                                "description": "The desired target capacity of.\nRequired if using `setMaxTarget` as action type\n",
                                                "example": 1
                                              },
                                              "target": {
                                                "type": "integer",
                                                "description": "The desired number of instances. Required if using `updateCapacity` as action type and neither `minimum` nor `maximum` are defined.\n",
                                                "example": 2
                                              },
                                              "minimum": {
                                                "type": "integer",
                                                "description": "The lower limit number of instances that you can scale down to. Optional, required if using `updateCapacity` as action type and neither `target` nor `maximum` are defined\n",
                                                "example": 1
                                              },
                                              "maximum": {
                                                "type": "integer",
                                                "description": "The upper limit number of instances that you can scale up to. Optional, required if using `updateCapacity` as action type and neither `target` nor `minimum` are defined\n",
                                                "example": 5
                                              }
                                            }
                                          },
                                          "threshold": {
                                            "type": "integer",
                                            "description": "The value against which the specified statistic is compared in order\nto determine if a step should be applied.\n",
                                            "example": 10
                                          }
                                        }
                                      }
                                    },
                                    "namespace": {
                                      "type": "string",
                                      "description": "The namespace for the alarm's associated metric.\n",
                                      "default": "AWS/EC2"
                                    },
                                    "dimensions": {
                                      "type": "array",
                                      "description": "The dimensions for the alarm's associated metric.\nWhen name is \"instanceId\", no value is needed.\n",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "InstanceId"
                                          },
                                          "value": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "period": {
                                      "type": "integer",
                                      "description": "The period in seconds over which the statistic is applied.\n",
                                      "example": 300
                                    },
                                    "evaluationPeriods": {
                                      "type": "integer",
                                      "description": "The number of periods over which data is compared to the specified threshold.\n",
                                      "example": 1
                                    },
                                    "cooldown": {
                                      "type": "integer",
                                      "description": "The amount of time, in seconds, after a scaling activity completes and before any further trigger-related scaling activities can start.\n",
                                      "example": 300
                                    },
                                    "operator": {
                                      "type": "string",
                                      "description": "The operator to use in order to determine if the scaling policy is applicable.\n",
                                      "enum": [
                                        "gt",
                                        "gte",
                                        "lt",
                                        "lte"
                                      ],
                                      "example": "gte"
                                    },
                                    "isEnabled": {
                                      "type": "boolean",
                                      "description": "Specifies whether the scaling policy described in this block is enabled.\n",
                                      "default": true,
                                      "example": true
                                    }
                                  }
                                }
                              },
                              "multipleMetrics": {
                                "type": "object",
                                "properties": {
                                  "metrics": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "title": "Metric config",
                                      "required": [
                                        "name",
                                        "metricName",
                                        "namespace"
                                      ],
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The metric name.\n",
                                          "example": "metric1"
                                        },
                                        "metricName": {
                                          "type": "string",
                                          "description": "The name of the source metric.\n",
                                          "example": "CPUUtilization"
                                        },
                                        "namespace": {
                                          "type": "string",
                                          "description": "The namespace for the alarm's associated metric.\n",
                                          "default": "AWS/EC2"
                                        },
                                        "statistic": {
                                          "type": "string",
                                          "description": "The metric statistics to return.\n",
                                          "enum": [
                                            "average",
                                            "sum",
                                            "sampleCount",
                                            "maximum",
                                            "minimum",
                                            "percentile"
                                          ],
                                          "example": "average"
                                        },
                                        "extendedStatistic": {
                                          "type": "string",
                                          "description": "Percentile statistic. Valid values: p0.1 - p100.\n",
                                          "example": "p1.5"
                                        },
                                        "unit": {
                                          "type": "string",
                                          "description": "The unit for the alarm's associated metric.\n",
                                          "enum": [
                                            "seconds",
                                            "microseconds",
                                            "milliseconds",
                                            "bytes",
                                            "kilobytes",
                                            "megabytes",
                                            "gigabytes",
                                            "terabytes",
                                            "bits",
                                            "kilobits",
                                            "megabits",
                                            "gigabits",
                                            "terabits",
                                            "percent",
                                            "count",
                                            "bytes/second",
                                            "kilobytes/second",
                                            "megabytes/second",
                                            "gigabytes/second",
                                            "terabytes/second",
                                            "bits/second",
                                            "kilobits/second",
                                            "megabits/second",
                                            "gigabits/second",
                                            "terabits/second",
                                            "count/second",
                                            "none"
                                          ],
                                          "example": "percent"
                                        },
                                        "dimensions": {
                                          "type": "array",
                                          "description": "The dimensions for the alarm's associated metric.\nWhen name is \"instanceId\", no value is needed.\n",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "name"
                                            ],
                                            "properties": {
                                              "name": {
                                                "type": "string",
                                                "example": "InstanceId"
                                              },
                                              "value": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "expressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "title": "Expression config",
                                      "required": [
                                        "name",
                                        "expression"
                                      ],
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The expression name.\n",
                                          "example": "e1"
                                        },
                                        "expression": {
                                          "type": "string",
                                          "description": "An expression consisting of the metric names listed in the 'metrics' array.\n",
                                          "example": "metric1+10"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "target": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "title": "target scaling config",
                                  "properties": {
                                    "source": {
                                      "title": "Source",
                                      "description": "The source of the metric.\n",
                                      "enum": [
                                        "cloudWatch",
                                        "spectrum"
                                      ],
                                      "type": "string",
                                      "example": "spectrum"
                                    },
                                    "policyName": {
                                      "type": "string",
                                      "description": "The policy name\n",
                                      "example": "my-up-policy"
                                    },
                                    "metricName": {
                                      "type": "string",
                                      "description": "The name of the metric.\n",
                                      "default": "CPUUtilization",
                                      "example": "CPUUtilization"
                                    },
                                    "statistic": {
                                      "type": "string",
                                      "description": "The metric statistics to return.\n",
                                      "enum": [
                                        "average",
                                        "sum",
                                        "sampleCount",
                                        "maximum",
                                        "minimum",
                                        "percentile"
                                      ],
                                      "example": "average"
                                    },
                                    "unit": {
                                      "type": "string",
                                      "description": "The unit for the alarm's associated metric.\n",
                                      "enum": [
                                        "seconds",
                                        "microseconds",
                                        "milliseconds",
                                        "bytes",
                                        "kilobytes",
                                        "megabytes",
                                        "gigabytes",
                                        "terabytes",
                                        "bits",
                                        "kilobits",
                                        "megabits",
                                        "gigabits",
                                        "terabits",
                                        "percent",
                                        "count",
                                        "bytes/second",
                                        "kilobytes/second",
                                        "megabytes/second",
                                        "gigabytes/second",
                                        "terabytes/second",
                                        "bits/second",
                                        "kilobits/second",
                                        "megabits/second",
                                        "gigabits/second",
                                        "terabits/second",
                                        "count/second",
                                        "none"
                                      ],
                                      "example": "percent"
                                    },
                                    "namespace": {
                                      "type": "string",
                                      "description": "The namespace for the alarm's associated metric.\n",
                                      "default": "AWS/EC2"
                                    },
                                    "target": {
                                      "type": "integer",
                                      "description": "The target value for the group.\n",
                                      "example": 1
                                    },
                                    "cooldown": {
                                      "type": "integer",
                                      "description": "The amount of time, in seconds, after a scaling activity completes and before any further trigger-related scaling activities can start.\n",
                                      "example": 300
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "scheduling": {
                            "type": "object",
                            "title": "Elastigroup Scheduling",
                            "description": "Schedule tasks to execute, using CRON expressions.\n",
                            "properties": {
                              "tasks": {
                                "type": "array",
                                "description": "The scheduling tasks for the group.\n",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "isEnabled": {
                                      "type": "boolean",
                                      "description": "Describes whether the task is enabled. When true the task should run when false it should not run.\n",
                                      "example": true
                                    },
                                    "startTime": {
                                      "type": "string",
                                      "description": "DATETIME in ISO-8601 format and is in UTC time. Sets a start time for scheduled actions.\nIf \"frequency\" or \"cronExpression\" are not used - the task will run only once at the start time and will then be deleted from the group configuration.\n",
                                      "example": "2018-05-23T10:55:09Z"
                                    },
                                    "frequency": {
                                      "type": "string",
                                      "description": "The recurrence frequency to run this task.\nOnly one of ‘frequency' or ‘cronExpression' should be used at a time\n",
                                      "enum": [
                                        "hourly",
                                        "daily",
                                        "weekly"
                                      ],
                                      "example": "hourly"
                                    },
                                    "cronExpression": {
                                      "type": "string",
                                      "description": "A valid cron expression.\nThe cron is running in UTC time zone and is in Unix cron format Cron Expression Validator Script.\nOnly one of ‘frequency' or ‘cronExpression' should be used at a time.\n",
                                      "example": "0 1 * * *"
                                    },
                                    "taskType": {
                                      "type": "string",
                                      "description": "The task type to run.\n",
                                      "enum": [
                                        "backup_ami",
                                        "scale",
                                        "scaleUp",
                                        "roll",
                                        "statefulUpdateCapacity",
                                        "statefulRecycle",
                                        "clusterRoll (For ECS Integration)"
                                      ],
                                      "example": "scale"
                                    },
                                    "scaleTargetCapacity": {
                                      "type": "integer",
                                      "description": "The target capacity of the group.\nShould be used when choosing ‘taskType' of ‘scale'.\n"
                                    },
                                    "scaleMinCapacity": {
                                      "type": "integer",
                                      "description": "The min capacity of the group.\nShould be used when choosing ‘taskType' of ‘scale'.\n"
                                    },
                                    "scaleMaxCapacity": {
                                      "type": "integer",
                                      "description": "The max capacity of the group.\nRequired when ‘taskType' is ‘scale'.\n"
                                    },
                                    "targetCapacity": {
                                      "type": "integer",
                                      "description": "Set a new target capacity for the Elastigroup.\nRequired when ‘taskType' is ‘statefulUpdateCapacity'.\n"
                                    },
                                    "MinCapacity": {
                                      "type": "integer",
                                      "description": "Set a new minimum capacity for the Elastigroup.\nRequired when ‘taskType' is ‘statefulUpdateCapacity'.\n"
                                    },
                                    "MaxCapacity": {
                                      "type": "integer",
                                      "description": "Set a new maximum capacity for the Elastigroup.\nRequired when ‘taskType' is ‘statefulUpdateCapacity'.\n"
                                    },
                                    "batchSizePercentage": {
                                      "type": "integer",
                                      "description": "The percentage size of each batch in the scheduled deployment roll.\nRequired when the taskType is roll.\n"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "thirdPartiesIntegration": {
                            "type": "object",
                            "title": "Elastigroup Third Party Integrations",
                            "description": "All definitions for using third-party Integrations\n",
                            "properties": {
                              "rancher": {
                                "type": "object",
                                "description": "Rancher integration object.\n",
                                "properties": {
                                  "masterHost": {
                                    "type": "string",
                                    "description": "Rancher master url\n",
                                    "example": "http://myRancher.com:8080/v1"
                                  },
                                  "accessKey": {
                                    "type": "string",
                                    "description": "Rancher version\n",
                                    "example": "1",
                                    "default": "1"
                                  },
                                  "secretKey": {
                                    "type": "string",
                                    "example": "SECRET"
                                  },
                                  "version": {
                                    "type": "string",
                                    "example": 1
                                  }
                                }
                              },
                              "kubernetes": {
                                "type": "object",
                                "properties": {
                                  "integrationMode": {
                                    "type": "string",
                                    "example": "pod"
                                  },
                                  "clusterIdentifier": {
                                    "type": "string",
                                    "example": "test-k8s"
                                  },
                                  "autoScale": {
                                    "type": "object",
                                    "properties": {
                                      "isEnabled": {
                                        "type": "boolean",
                                        "example": true,
                                        "default": true
                                      },
                                      "cooldown": {
                                        "type": "integer",
                                        "example": 300
                                      },
                                      "down": {
                                        "type": "object",
                                        "description": "Auto Scaling scale down operations.\n",
                                        "properties": {
                                          "evaluationPeriods": {
                                            "type": "integer",
                                            "example": 5
                                          },
                                          "maxScaleDownPercentage": {
                                            "type": "integer",
                                            "description": "The maximum % of nodes that will be scaled down at once out of the total amount of potential nodes to scale down.\nexample: if 10 nodes can be scaled down, only 5 will be given 50% in this parameter.\nthe other 50% will be scaled down in the next autoscaling iteration.\n",
                                            "example": 70
                                          },
                                          "headroom": {
                                            "type": "object",
                                            "description": "Spare resource capacity management enabling fast assignment of Pods without waiting for new resources to launch.\n",
                                            "properties": {
                                              "cpuPerUnit": {
                                                "type": "integer",
                                                "description": "Optionally configure the number of CPUs to allocate per headroom unit. CPUs are denoted in CPU units, where 1024 units = 1 vCPU.\n",
                                                "example": 2048
                                              },
                                              "memoryPerUnit": {
                                                "type": "integer",
                                                "description": "Optionally configure the amount of memory (MiB) to allocate per headroom unit.\n",
                                                "example": 3
                                              },
                                              "numOfUnits": {
                                                "type": "integer",
                                                "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n",
                                                "example": 2
                                              },
                                              "gpuPerUnit": {
                                                "type": "integer",
                                                "example": 2
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "labels": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "key": {
                                              "type": "string",
                                              "example": "group, kops.k8s.io/instancegroup"
                                            },
                                            "value": {
                                              "type": "string",
                                              "example": "microservices"
                                            }
                                          }
                                        }
                                      },
                                      "isAutoConfig": {
                                        "type": "boolean",
                                        "example": false,
                                        "default": false
                                      }
                                    }
                                  }
                                }
                              },
                              "mesosphere": {
                                "type": "object",
                                "properties": {
                                  "apiServer": {
                                    "type": "string",
                                    "example": "1.2.3.4"
                                  }
                                }
                              },
                              "mlbRuntime": {
                                "type": "object",
                                "properties": {
                                  "deploymentId": {
                                    "type": "string",
                                    "example": "dp-rm0f5b912345"
                                  }
                                }
                              },
                              "nomad": {
                                "type": "object",
                                "properties": {
                                  "masterHost": {
                                    "type": "string",
                                    "example": "https://master.host.com"
                                  },
                                  "masterPort": {
                                    "type": "integer",
                                    "example": 443
                                  },
                                  "autoScale": {
                                    "type": "object",
                                    "properties": {
                                      "isEnabled": {
                                        "type": "boolean",
                                        "description": "Enable the Autoscaler.\n",
                                        "example": true
                                      },
                                      "cooldown": {
                                        "type": "integer",
                                        "description": "Cooldown period between scaling actions. Value should be cooldown period in seconds, greater than 180\n",
                                        "example": 180
                                      },
                                      "down": {
                                        "type": "object",
                                        "description": "Auto Scaling scale down operations.\n",
                                        "properties": {
                                          "evaluationPeriods": {
                                            "type": "integer",
                                            "example": 3
                                          }
                                        }
                                      },
                                      "headroom": {
                                        "type": "object",
                                        "description": "Spare resource capacity management enabling fast assignment of Pods without waiting for new resources to launch.\n",
                                        "properties": {
                                          "cpuPerUnit": {
                                            "type": "integer",
                                            "description": "Optionally configure the number of CPUs to allocate per headroom unit. CPUs are denoted in CPU units, where 1024 units = 1 vCPU.\n",
                                            "example": 2048
                                          },
                                          "memoryPerUnit": {
                                            "type": "integer",
                                            "description": "Optionally configure the amount of memory (MiB) to allocate per headroom unit.\n",
                                            "example": 3
                                          },
                                          "numOfUnits": {
                                            "type": "integer",
                                            "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n",
                                            "example": 2
                                          }
                                        }
                                      },
                                      "constraints": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "key": {
                                              "type": "string",
                                              "example": "${node.class}"
                                            },
                                            "value": {
                                              "type": "string",
                                              "example": "value"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "aclToken": {
                                    "type": "string",
                                    "example": 123
                                  },
                                  "tlsConfig": {
                                    "type": "object",
                                    "description": "Configuration object for TLS integration. (optional)\n",
                                    "properties": {
                                      "tlsEnabled": {
                                        "type": "boolean",
                                        "example": true,
                                        "description": "When true, all communication to the master is with TLS. (required)\n"
                                      },
                                      "privateKey": {
                                        "type": "string",
                                        "example": "PRIVATE KEY CERTIFICATE STR",
                                        "description": "A generated client private key. (required)\n"
                                      },
                                      "certificate": {
                                        "type": "string",
                                        "example": "PUBLIC KEY CERTIFICATE STR",
                                        "description": "The certificates chain, first the client certificate then the ca certificate. (required)\n"
                                      }
                                    }
                                  }
                                }
                              },
                              "chef": {
                                "type": "object",
                                "properties": {
                                  "chefServer": {
                                    "type": "string",
                                    "example": "https://master.host.com"
                                  },
                                  "organization": {
                                    "type": "string",
                                    "example": "ORGNAME"
                                  },
                                  "chefVersion": {
                                    "type": "string",
                                    "example": 12.1
                                  },
                                  "user": {
                                    "type": "string",
                                    "example": "User"
                                  },
                                  "pemKey": {
                                    "type": "string",
                                    "example": "Key"
                                  }
                                }
                              },
                              "rightScale": {
                                "type": "object",
                                "properties": {
                                  "accountId": {
                                    "type": "string",
                                    "example": "ID"
                                  },
                                  "refreshToken": {
                                    "type": "string",
                                    "example": "TOKEN"
                                  },
                                  "region": {
                                    "type": "string",
                                    "example": "us-east-1"
                                  }
                                }
                              },
                              "opsWorks": {
                                "type": "object",
                                "properties": {
                                  "layerId": {
                                    "type": "string",
                                    "example": "00d9m815-8aac-62b7-cc01-123456, xxxxxx-xxxxxxxx, xxxxxxx-xxxxxxxxxx"
                                  },
                                  "stackType": {
                                    "type": "string",
                                    "example": "CLASSIC"
                                  }
                                }
                              },
                              "codeDeploy": {
                                "type": "object",
                                "properties": {
                                  "cleanUpOnFailure": {
                                    "type": "boolean",
                                    "example": false
                                  },
                                  "terminateInstanceOnFailure": {
                                    "type": "boolean",
                                    "example": false
                                  },
                                  "deploymentGroups": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "applicationName": {
                                          "type": "string",
                                          "example": "test-app"
                                        },
                                        "deploymentGroupName": {
                                          "type": "string",
                                          "example": "test-grp"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "route53": {
                                "type": "object",
                                "description": "Route53 integration object.\n",
                                "properties": {
                                  "domains": {
                                    "type": "array",
                                    "description": "Route53 domain configurations.\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "hostedZoneId": {
                                          "type": "string",
                                          "description": "The Route53 Hosted Zone ID for the registered domain.\n",
                                          "example": "Z3UFMBCGJMYLUT"
                                        },
                                        "spotinstAccountId": {
                                          "type": "string",
                                          "description": "The Spot account ID that is linked to the AWS account that holds the Route53 hosted Zone ID.\nThe default is the user Spot account provided as a URL parameter.\n",
                                          "example": "act-1234abcd"
                                        },
                                        "recordSetType": {
                                          "type": "string",
                                          "description": "Set the type of recordSet to update.\nValid values:\n* \"a\" - means register and de-register of instances done by IP address (IPv4).\nWhen it is \"a\" you should also specify usePublicIp.\n* \"cname\" - register and de-register of instances done by CNAME. When it is \"cname\", you should also specify usePublicDns.\n",
                                          "enum": [
                                            "a",
                                            "cname"
                                          ],
                                          "example": "a",
                                          "default": "a"
                                        },
                                        "recordSets": {
                                          "type": "array",
                                          "description": "List of record sets.\n",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "type": "string",
                                                "description": "Name of the recordSet.\n",
                                                "example": "testcname.spot.io."
                                              },
                                              "usePublicIp": {
                                                "type": "boolean",
                                                "description": "Defines whether to use public or private IP. Relevant only when recordSetType=a.\n",
                                                "example": true,
                                                "default": false
                                              },
                                              "usePublicDns": {
                                                "type": "boolean",
                                                "description": "Defines whether to use a public DNS or private DNS in the instance registration process.\nRelevant only when recordSetType=cname.\n* False=Create a new weighted CNAME recordset with same name and the instance Private DNS.\n* True=instances should be registered with public DNS.\n",
                                                "example": true,
                                                "default": false
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "elasticBeanstalk": {
                                "type": "object",
                                "description": "Beanstalk integration object.\n",
                                "properties": {
                                  "environmentId": {
                                    "type": "string",
                                    "example": "e-12345"
                                  },
                                  "deploymentPreferences": {
                                    "type": "object",
                                    "properties": {
                                      "automaticRoll": {
                                        "type": "boolean",
                                        "example": true
                                      },
                                      "batchSizePercentage": {
                                        "type": "integer",
                                        "example": 50
                                      },
                                      "gracePeriod": {
                                        "type": "integer",
                                        "example": 600
                                      },
                                      "strategy": {
                                        "type": "object",
                                        "properties": {
                                          "action": {
                                            "type": "string",
                                            "example": "REPLACE_SERVER"
                                          },
                                          "shouldDrainInstances": {
                                            "type": "boolean",
                                            "example": true
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "managedActions": {
                                    "type": "object",
                                    "properties": {
                                      "platformUpdate": {
                                        "type": "object",
                                        "properties": {
                                          "performAt": {
                                            "type": "string",
                                            "example": "timeWindow"
                                          },
                                          "timeWindow": {
                                            "type": "string",
                                            "example": "Mon:23:50-Tue:00:20"
                                          },
                                          "updateLevel": {
                                            "type": "string",
                                            "example": "patch"
                                          },
                                          "instanceRefreshEnabled": {
                                            "type": "boolean",
                                            "example": true
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "ecs": {
                                "type": "object",
                                "description": "ECS integration object.\n",
                                "properties": {
                                  "clusterName": {
                                    "type": "string",
                                    "example": "test-ecs",
                                    "description": "ECS cluster name\n"
                                  },
                                  "autoScale": {
                                    "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/autoScaler"
                                  },
                                  "batch": {
                                    "type": "object",
                                    "properties": {
                                      "jobQueueNames": {
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "example": [
                                            "dumpy-big-processing"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "optimizeImages": {
                                    "type": "object",
                                    "properties": {
                                      "shouldOptimizeEcsAmi": {
                                        "type": "boolean",
                                        "example": true
                                      },
                                      "performAt": {
                                        "type": "string",
                                        "description": "Settings for maintenance strategy.\\\nperformAt of type: 'never' OR 'timeWindow' can only be applied to groups with \"availabilityOriented\" OR groups with \"persistence\",\\\nother groups allow either 'always' type or nothing which also means always.\n",
                                        "enum": [
                                          "never",
                                          "always",
                                          "timeWindow"
                                        ],
                                        "example": "timeWindow",
                                        "default": "always"
                                      },
                                      "timeWindows": {
                                        "type": "array",
                                        "description": "When performAt is 'timeWindow':\\\nmust specify a list of 'timeWindows' with at least one time window Each string is in the format of - ddd:hh:mm-ddd:hh:mm\n* ddd = day of week = Sun | Mon | Tue | Wed | Thu | Fri | Sat\n* hh = hour 24 = 0 -23\n* mm = minute = 0 - 59\n",
                                        "items": {
                                          "type": "string",
                                          "example": "Mon:03:00-Wed:02:30"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "dockerSwarm": {
                                "title": "DockerSwarm ThirdPartiesIntegration Object",
                                "type": "object",
                                "description": "DockerSwarm integration object.\n",
                                "properties": {
                                  "masterHost": {
                                    "type": "string",
                                    "example": "swarm1.swarm.com",
                                    "description": "Docker swarm master hostname\n"
                                  },
                                  "masterPort": {
                                    "type": "integer",
                                    "example": 1234,
                                    "description": "Docker swarm master port number\n"
                                  },
                                  "autoScale": {
                                    "type": "object",
                                    "description": "autoScale configuration\n",
                                    "properties": {
                                      "isEnabled": {
                                        "type": "boolean",
                                        "example": "true",
                                        "description": "Specifies whether the scaling policy described in this block is enabled.\n",
                                        "default": true
                                      },
                                      "cooldown": {
                                        "type": "integer",
                                        "example": 300,
                                        "description": "The amount of time, in seconds, after a scaling activity completes before any further trigger-related scaling activities can start.\n"
                                      },
                                      "down": {
                                        "type": "object",
                                        "properties": {
                                          "evaluationPeriods": {
                                            "type": "integer",
                                            "example": 4,
                                            "description": "The number of periods over which data is compared to the specified threshold.\n"
                                          },
                                          "maxScaleDownPercentage": {
                                            "type": "integer",
                                            "example": 20,
                                            "description": "Would represent the maximum % to scale-down.\n",
                                            "minimum": 1,
                                            "maximum": 100
                                          }
                                        }
                                      },
                                      "headroom": {
                                        "type": "object",
                                        "description": "Set custom headroom per launch spec. provide list of launchSpec.autoScale.headrooms object\n",
                                        "properties": {
                                          "cpuPerUnit": {
                                            "type": "integer",
                                            "description": "configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU\n",
                                            "example": 1000
                                          },
                                          "memoryPerUnit": {
                                            "type": "integer",
                                            "description": "Configure the amount of memory (MiB) to allocate the headroom.\n",
                                            "example": 2048
                                          },
                                          "numOfUnits": {
                                            "type": "integer",
                                            "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n",
                                            "example": 3
                                          }
                                        }
                                      },
                                      "tlsConfig": {
                                        "type": "object",
                                        "properties": {
                                          "tlsEnabled": {
                                            "type": "boolean",
                                            "example": true
                                          },
                                          "privateKey": {
                                            "type": "string",
                                            "example": "PRIVATE KEY CERTIFICATE STR"
                                          },
                                          "certificate": {
                                            "type": "string",
                                            "example": "PUBLIC KEY CERTIFICATE STR"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "kind": {
                              "type": "string",
                              "example": "spotinst:aws:ec2:group"
                            },
                            "items": {
                              "type": "array",
                              "items": [
                                {
                                  "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/requestBody/content/application~1json/schema"
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List All Elastigroups",
        "description": "List all AWS Elastigroups for a Spot Account\n",
        "operationId": "elastigroupAwsListAll",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "List All Groups Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "67582d0c-108b-4ef7-9fdc-d39678a30844",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-01-07T07:30:58.622Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "array",
                                      "items": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "description": "ID",
                                              "example": "sig-1234567"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "EG Name",
                                              "example": "EG name"
                                            },
                                            "description": {
                                              "type": "string",
                                              "description": "Description",
                                              "example": "validation"
                                            },
                                            "capacity": {
                                              "type": "object",
                                              "description": "Capacity",
                                              "properties": {
                                                "minimum": {
                                                  "type": "integer",
                                                  "description": "Minimum Value",
                                                  "example": 1
                                                },
                                                "maximum": {
                                                  "type": "integer",
                                                  "description": "Maximum Value",
                                                  "example": 1
                                                },
                                                "target": {
                                                  "type": "integer",
                                                  "description": "Target Value",
                                                  "example": 1
                                                },
                                                "unit": {
                                                  "type": "string",
                                                  "description": "Unit",
                                                  "example": "instance"
                                                }
                                              }
                                            },
                                            "strategy": {
                                              "type": "object",
                                              "description": "Strategy",
                                              "properties": {
                                                "risk": {
                                                  "type": "integer",
                                                  "description": "Risk",
                                                  "example": 0
                                                },
                                                "onDemandCount": {
                                                  "type": "string",
                                                  "description": "On Demand Count",
                                                  "example": null
                                                },
                                                "availabilityVsCost": {
                                                  "type": "string",
                                                  "description": "Availability VS Cost",
                                                  "example": "balanced"
                                                }
                                              }
                                            },
                                            "compute": {
                                              "type": "object",
                                              "description": "Compute",
                                              "properties": {
                                                "instanceTypes": {
                                                  "type": "object",
                                                  "properties": {
                                                    "ondemand": {
                                                      "type": "string",
                                                      "description": "On Demand",
                                                      "example": "m3.large"
                                                    },
                                                    "spot": {
                                                      "type": "string",
                                                      "description": "Spot",
                                                      "example": [
                                                        "c3.large m3.large"
                                                      ]
                                                    }
                                                  }
                                                },
                                                "availabilityZones": {
                                                  "type": "object",
                                                  "properties": {
                                                    "name": {
                                                      "type": "string",
                                                      "description": "Name",
                                                      "example": "us-west-2a"
                                                    },
                                                    "subnetIds": {
                                                      "type": "string",
                                                      "description": "Subnet IDs",
                                                      "example": [
                                                        "subnet-1234567"
                                                      ]
                                                    }
                                                  }
                                                },
                                                "product": {
                                                  "type": "string",
                                                  "description": "Operatin System",
                                                  "example": "Linux/UNIX"
                                                },
                                                "launchSpecification": {
                                                  "type": "object",
                                                  "properties": {
                                                    "securityGroupIds": {
                                                      "type": "string",
                                                      "description": "Security Group IDs",
                                                      "example": [
                                                        "sg-1234567"
                                                      ]
                                                    },
                                                    "monitoring": {
                                                      "type": "boolean",
                                                      "description": "Monitoring",
                                                      "example": true
                                                    },
                                                    "imageId": {
                                                      "type": "string",
                                                      "description": "Image ID",
                                                      "example": "ami-987654"
                                                    },
                                                    "keyPair": {
                                                      "type": "string",
                                                      "description": "Key Pair",
                                                      "example": "keyp"
                                                    },
                                                    "userData": {
                                                      "type": "string",
                                                      "description": "User Data",
                                                      "example": null
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "scaling": {
                                              "type": "object",
                                              "properties": {
                                                "up": {
                                                  "type": "object",
                                                  "properties": {
                                                    "policyName": {
                                                      "type": "string",
                                                      "description": "Policy Name",
                                                      "example": "up Scaling Policy 1"
                                                    },
                                                    "metricName": {
                                                      "type": "string",
                                                      "description": "Metric Name",
                                                      "example": "CPUUtilization"
                                                    },
                                                    "statistic": {
                                                      "type": "string",
                                                      "description": "Statistics",
                                                      "example": "maximum"
                                                    },
                                                    "unit": {
                                                      "type": "string",
                                                      "description": "Unit",
                                                      "example": "percent"
                                                    },
                                                    "threshold": {
                                                      "type": "integer",
                                                      "description": "Threshold",
                                                      "example": 90
                                                    },
                                                    "adjustment": {
                                                      "type": "integer",
                                                      "description": "Adjustment",
                                                      "example": 2
                                                    },
                                                    "namespace": {
                                                      "type": "string",
                                                      "description": "Namespace",
                                                      "example": "AWS/EC2"
                                                    },
                                                    "period": {
                                                      "type": "integer",
                                                      "description": "Period",
                                                      "example": 300
                                                    },
                                                    "evaluationPeriods": {
                                                      "type": "integer",
                                                      "description": "Evaluation Period",
                                                      "example": 3
                                                    },
                                                    "cooldown": {
                                                      "type": "integer",
                                                      "description": "Cool Down",
                                                      "example": 60
                                                    }
                                                  }
                                                },
                                                "down": {
                                                  "type": "object",
                                                  "properties": {
                                                    "policyName": {
                                                      "type": "string",
                                                      "description": "Policy Name",
                                                      "example": "down Scaling Policy 1"
                                                    },
                                                    "metricName": {
                                                      "type": "string",
                                                      "description": "Metric Name",
                                                      "example": "CPUUtilization"
                                                    },
                                                    "statistic": {
                                                      "type": "string",
                                                      "description": "Statistics",
                                                      "example": "maximum"
                                                    },
                                                    "unit": {
                                                      "type": "string",
                                                      "description": "Unit",
                                                      "example": "percent"
                                                    },
                                                    "threshold": {
                                                      "type": "integer",
                                                      "description": "Threshold",
                                                      "example": 50
                                                    },
                                                    "adjustment": {
                                                      "type": "integer",
                                                      "description": "Adjustment",
                                                      "example": 2
                                                    },
                                                    "namespace": {
                                                      "type": "string",
                                                      "description": "Namespace",
                                                      "example": "AWS/EC2"
                                                    },
                                                    "period": {
                                                      "type": "integer",
                                                      "description": "Period",
                                                      "example": 300
                                                    },
                                                    "evaluationPeriods": {
                                                      "type": "integer",
                                                      "description": "Evaluation Period",
                                                      "example": 3
                                                    },
                                                    "cooldown": {
                                                      "type": "integer",
                                                      "description": "Cool Down",
                                                      "example": 60
                                                    },
                                                    "dimensions": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "description": "Name",
                                                            "example": "InstanceId"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "scheduling": {
                                              "type": "object",
                                              "properties": {
                                                "tasks": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "frequency": {
                                                        "type": "string",
                                                        "description": "Frequency",
                                                        "example": "weekly"
                                                      },
                                                      "taskType": {
                                                        "type": "string",
                                                        "description": "Task Type",
                                                        "example": "backup_ami"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "thirdPartiesIntegration": {
                                              "type": "object"
                                            },
                                            "createdAt": {
                                              "type": "string",
                                              "description": "Created At",
                                              "example": "2016-02-16T09:03:23.000Z"
                                            },
                                            "updatedAt": {
                                              "type": "string",
                                              "description": "Updated At",
                                              "example": "2018-01-07T00:10:30.000Z"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "description": "ID",
                                              "example": "sig-897654"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "EG Name",
                                              "example": "Test EG"
                                            },
                                            "description": {
                                              "type": "string",
                                              "description": "Description",
                                              "example": "Test"
                                            },
                                            "capacity": {
                                              "type": "object",
                                              "description": "Capacity",
                                              "properties": {
                                                "minimum": {
                                                  "type": "integer",
                                                  "description": "Minimum Value",
                                                  "example": 0
                                                },
                                                "maximum": {
                                                  "type": "integer",
                                                  "description": "Maximum Value",
                                                  "example": 0
                                                },
                                                "target": {
                                                  "type": "integer",
                                                  "description": "Target Value",
                                                  "example": 0
                                                },
                                                "unit": {
                                                  "type": "string",
                                                  "description": "Unit",
                                                  "example": "instance"
                                                }
                                              }
                                            },
                                            "strategy": {
                                              "type": "object",
                                              "description": "Strategy",
                                              "properties": {
                                                "risk": {
                                                  "type": "integer",
                                                  "description": "Risk",
                                                  "example": 100
                                                },
                                                "onDemandCount": {
                                                  "type": "string",
                                                  "description": "On Demand Count",
                                                  "example": null
                                                },
                                                "availabilityVsCost": {
                                                  "type": "string",
                                                  "description": "Availability VS Cost",
                                                  "example": "balanced"
                                                }
                                              }
                                            },
                                            "compute": {
                                              "type": "object",
                                              "description": "Compute",
                                              "properties": {
                                                "instanceTypes": {
                                                  "type": "object",
                                                  "properties": {
                                                    "ondemand": {
                                                      "type": "string",
                                                      "description": "On Demand",
                                                      "example": "m3.large"
                                                    },
                                                    "spot": {
                                                      "type": "string",
                                                      "description": "Spot",
                                                      "example": [
                                                        "m3.large c3.large"
                                                      ]
                                                    }
                                                  }
                                                },
                                                "availabilityZones": {
                                                  "type": "object",
                                                  "properties": {
                                                    "name": {
                                                      "type": "string",
                                                      "description": "Name",
                                                      "example": "us-west-2b"
                                                    },
                                                    "subnetIds": {
                                                      "type": "string",
                                                      "description": "Subnet IDs",
                                                      "example": [
                                                        "subnet-657493"
                                                      ]
                                                    }
                                                  }
                                                },
                                                "product": {
                                                  "type": "string",
                                                  "description": "Operatin System",
                                                  "example": "Linux/UNIX"
                                                },
                                                "launchSpecification": {
                                                  "type": "object",
                                                  "properties": {
                                                    "securityGroupIds": {
                                                      "type": "string",
                                                      "description": "Security Group IDs",
                                                      "example": [
                                                        "sg-987126"
                                                      ]
                                                    },
                                                    "monitoring": {
                                                      "type": "boolean",
                                                      "description": "Monitoring",
                                                      "example": true
                                                    },
                                                    "imageId": {
                                                      "type": "string",
                                                      "description": "Image ID",
                                                      "example": "ami-87236464"
                                                    },
                                                    "keyPair": {
                                                      "type": "string",
                                                      "description": "Key Pair",
                                                      "example": "PairKey"
                                                    },
                                                    "userData": {
                                                      "type": "string",
                                                      "description": "User Data",
                                                      "example": null
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "scaling": {
                                              "type": "object",
                                              "properties": {
                                                "up": {
                                                  "type": "object",
                                                  "properties": {
                                                    "policyName": {
                                                      "type": "string",
                                                      "description": "Policy Name",
                                                      "example": "up Scaling Policy 1"
                                                    },
                                                    "metricName": {
                                                      "type": "string",
                                                      "description": "Metric Name",
                                                      "example": "CPUUtilization"
                                                    },
                                                    "statistic": {
                                                      "type": "string",
                                                      "description": "Statistics",
                                                      "example": "maximum"
                                                    },
                                                    "unit": {
                                                      "type": "string",
                                                      "description": "Unit",
                                                      "example": "percent"
                                                    },
                                                    "stepAdjustments": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "action": {
                                                            "type": "object",
                                                            "example": {
                                                              "adjustment": "3",
                                                              "type": "adjustment"
                                                            }
                                                          },
                                                          "threshold": {
                                                            "type": "integer",
                                                            "description": "Step Threshold",
                                                            "example": 30
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "namespace": {
                                                      "type": "string",
                                                      "description": "Namespace",
                                                      "example": "AWS/EC2"
                                                    },
                                                    "period": {
                                                      "type": "integer",
                                                      "description": "Period",
                                                      "example": 300
                                                    },
                                                    "evaluationPeriods": {
                                                      "type": "integer",
                                                      "description": "Evaluation Period",
                                                      "example": 3
                                                    },
                                                    "cooldown": {
                                                      "type": "integer",
                                                      "description": "Cool Down",
                                                      "example": 60
                                                    }
                                                  }
                                                },
                                                "down": {
                                                  "type": "object",
                                                  "properties": {
                                                    "policyName": {
                                                      "type": "string",
                                                      "description": "Policy Name",
                                                      "example": "down Scaling Policy 1"
                                                    },
                                                    "metricName": {
                                                      "type": "string",
                                                      "description": "Metric Name",
                                                      "example": "CPUUtilization"
                                                    },
                                                    "statistic": {
                                                      "type": "string",
                                                      "description": "Statistics",
                                                      "example": "maximum"
                                                    },
                                                    "unit": {
                                                      "type": "string",
                                                      "description": "Unit",
                                                      "example": "percent"
                                                    },
                                                    "threshold": {
                                                      "type": "integer",
                                                      "description": "Threshold",
                                                      "example": 50
                                                    },
                                                    "adjustment": {
                                                      "type": "integer",
                                                      "description": "Adjustment",
                                                      "example": 2
                                                    },
                                                    "namespace": {
                                                      "type": "string",
                                                      "description": "Namespace",
                                                      "example": "AWS/EC2"
                                                    },
                                                    "period": {
                                                      "type": "integer",
                                                      "description": "Period",
                                                      "example": 300
                                                    },
                                                    "evaluationPeriods": {
                                                      "type": "integer",
                                                      "description": "Evaluation Period",
                                                      "example": 3
                                                    },
                                                    "cooldown": {
                                                      "type": "integer",
                                                      "description": "Cool Down",
                                                      "example": 60
                                                    },
                                                    "dimensions": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "description": "Name",
                                                            "example": "InstanceId"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "scheduling": {
                                              "type": "object",
                                              "properties": {
                                                "tasks": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "frequency": {
                                                        "type": "string",
                                                        "description": "Frequency",
                                                        "example": "weekly"
                                                      },
                                                      "taskType": {
                                                        "type": "string",
                                                        "description": "Task Type",
                                                        "example": "backup_ami"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "thirdPartiesIntegration": {
                                              "type": "object"
                                            },
                                            "createdAt": {
                                              "type": "string",
                                              "description": "Created At",
                                              "example": "2016-02-16T06:35:03.000Z"
                                            },
                                            "updatedAt": {
                                              "type": "string",
                                              "description": "Updated At",
                                              "example": "2016-02-16T10:21:01.000Z"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 2,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}": {
      "put": {
        "summary": "Update Elastigroup",
        "description": "Describe a specific Elastigroup JSON\n",
        "operationId": "elastigroupAwsUpdate",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "example": "sig-12345",
            "description": "The Spot Elastigroup ID you want to update\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "autoApplyTags",
            "description": "Optionally update resource tags on the fly without performing a roll.\n",
            "schema": {
              "type": "boolean",
              "example": true,
              "default": false
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "AWS Elastigroup",
                "required": [
                  "group"
                ],
                "properties": {
                  "group": {
                    "type": "object",
                    "description": "Group",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "AWS Elastigroup Name\n",
                        "example": "my-Elastigroup",
                        "required": true
                      },
                      "description": {
                        "type": "string",
                        "description": "Describe your AWS Elastigroup\n",
                        "example": "This Elastigroup is used for Development"
                      },
                      "region": {
                        "type": "string",
                        "description": "The AWS region your group will be created in.\n This parameter is required if you specify subnets (through compute.subnetIds).\n This parameter is optional if you specify Availability Zones (through compute.availabilityZones).\n",
                        "example": "us-east-1"
                      },
                      "capacity": {
                        "type": "object",
                        "title": "Elastigroup Capacity",
                        "properties": {
                          "target": {
                            "type": "integer",
                            "description": "The number of instances to launch\n",
                            "example": 1
                          },
                          "minimum": {
                            "type": "integer",
                            "description": "The lower limit number of instances that you can scale down to\n",
                            "example": 0
                          },
                          "maximum": {
                            "type": "integer",
                            "description": "The upper limit number of instances that you can scale up to\n",
                            "example": 10
                          },
                          "unit": {
                            "type": "string",
                            "enum": [
                              "instance",
                              "weight"
                            ],
                            "readOnly": true,
                            "description": "The capacity unit to launch instances by.\nNote: for groups with integration to K8S / ECS weight option is not supported.\n",
                            "example": "instance"
                          }
                        }
                      },
                      "strategy": {
                        "type": "object",
                        "title": "Elastigroup Strategy",
                        "properties": {
                          "risk": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 100,
                            "example": 100,
                            "default": 0,
                            "description": "The percentage of Elastigroup that will run with spot market capacity\n"
                          },
                          "onDemandCount": {
                            "type": "integer",
                            "minimum": 0,
                            "example": 0,
                            "description": "Minimum number of instances that will always be on-demand\n"
                          },
                          "availabilityVsCost": {
                            "type": "string",
                            "enum": [
                              "costOriented",
                              "availabilityOriented",
                              "balanced",
                              "cheapest",
                              "equalAzDistribution"
                            ],
                            "default": "balanced",
                            "description": "How Elastigroup determines which instances to add and replace.\n(please read this article before using [Equal AZ Instance Distribution](https://docs.spot.io/elastigroup-for-aws/concepts/general-concepts/equal-az-distribution))\n"
                          },
                          "fallbackToOd": {
                            "type": "boolean",
                            "default": false,
                            "example": true,
                            "description": "When set to `true` Elastigroup will launch On Demand instances if no spot market is available\n"
                          },
                          "utilizeReservedInstances": {
                            "type": "boolean",
                            "description": "In case of any available Reserved Instances, Elastigroup will utilize them before purchasing Spot instances\n",
                            "example": false
                          },
                          "utilizeCommitments": {
                            "type": "boolean",
                            "description": "If there are available Reserved Instances or Savings Plans, Elastigroup will utilize them before using Spot instances\n",
                            "example": false
                          },
                          "drainingTimeout": {
                            "type": "integer",
                            "example": 120,
                            "description": "The time in seconds to allow the instance be drained from incoming TCP connections and detached from ELB before terminating it, during a scale down operation\n"
                          },
                          "signals": {
                            "type": "array",
                            "description": "The signals defined for this group. For more information refer the below article: [Signals](https://docs.spot.io/elastigroup-for-aws/concepts/compute-concepts/using-signals-in-elastigroups)\n",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of the signal defined for the group.\n",
                                  "enum": [
                                    "INSTANCE_READY",
                                    "INSTANCE_READY_TO_SHUTDOWN"
                                  ]
                                },
                                "timeout": {
                                  "type": "integer",
                                  "minimum": 60,
                                  "maximum": 1800,
                                  "description": "The timeout in seconds to hold the instance until a signal is sent.\nIf no signal is sent the instance will be replaced (INSTANCE_READY) or we will terminate the instance (INSTANCE_READY_TO_SHUTDOWN) after the timeout.\n",
                                  "default": 1800,
                                  "example": 120
                                }
                              }
                            }
                          },
                          "persistence": {
                            "type": "array",
                            "description": "You can register persistence (Stateful) recovery arguments\n",
                            "items": {
                              "type": "object",
                              "properties": {
                                "shouldPersistPrivateIp": {
                                  "type": "boolean",
                                  "description": "Should the instance maintain its private IP\n",
                                  "example": true
                                },
                                "shouldPersistRootDevice": {
                                  "type": "boolean",
                                  "description": "Should the instance maintain its root device volumes\n",
                                  "example": true
                                },
                                "shouldPersistBlockDevices": {
                                  "type": "boolean",
                                  "description": "Should the instance maintain its Data volumes\n",
                                  "example": true
                                },
                                "blockDevicesMode": {
                                  "type": "string",
                                  "description": "Determine the way we attach the data volumes to the data devices\n",
                                  "enum": [
                                    "reattach",
                                    "onLaunch"
                                  ],
                                  "example": "reattach"
                                }
                              }
                            }
                          },
                          "revertToSpot": {
                            "type": "object",
                            "description": "Hold settings for strategy correction - replacing On-Demand for Spot instances\n",
                            "properties": {
                              "performAt": {
                                "type": "string",
                                "description": "Settings for maintenance strategy - possible values: timeWindow, never, always.\nperformAt of type: 'never' OR 'timeWindow' can only be applied to groups with \"availabilityOriented\" OR groups with \"persistence\",\nother groups allow either 'always' type or nothing which also means always.\n",
                                "enum": [
                                  "never",
                                  "always",
                                  "timeWindow"
                                ],
                                "example": "timeWindow",
                                "default": "always"
                              },
                              "timeWindows": {
                                "type": "array",
                                "description": "When performAt is 'timeWindow': must specify a list of 'timeWindows' with at least one time window Each string is in the format of - ddd:hh:mm-ddd:hh:mm\nddd = day of week = Sun | Mon | Tue | Wed | Thu | Fri | Sat\nhh = hour 24 = 0 -23\nmm = minute = 0 - 59\n",
                                "items": {
                                  "type": "string",
                                  "example": "Mon:03:00-Wed:02:30"
                                }
                              }
                            }
                          },
                          "scalingStrategy": {
                            "type": "object",
                            "description": "Set termination policy\n",
                            "properties": {
                              "terminationPolicy": {
                                "type": "string",
                                "enum": [
                                  "default",
                                  "newestInstance"
                                ],
                                "example": "default"
                              }
                            }
                          }
                        }
                      },
                      "compute": {
                        "type": "object",
                        "title": "Elastigroup Compute",
                        "properties": {
                          "product": {
                            "type": "string",
                            "description": "Operation system type.\n",
                            "enum": [
                              "Linux/UNIX (Amazon VPC)",
                              "SUSE Linux (Amazon VPC)",
                              "Windows (Amazon VPC)",
                              "Red Hat Enterprise Linux (Amazon VPC)"
                            ],
                            "readOnly": true,
                            "example": "Linux/UNIX"
                          },
                          "elasticIps": {
                            "type": "array",
                            "description": "List of ElasticIPs Allocation Ids to associate to the group instances\n",
                            "items": {
                              "type": "string",
                              "example": "eipalloc-9d4e16f8"
                            }
                          },
                          "privateIps": {
                            "type": "array",
                            "description": "List of Private IPs to associate to the group instances.\nPlease note: This setting will only apply if strategy.persistence.shouldPersistPrivateIp is set to true.\n",
                            "items": {
                              "type": "string",
                              "default": "172.1.1.1"
                            }
                          },
                          "instanceTypes": {
                            "type": "object",
                            "description": "Instance Types\n",
                            "properties": {
                              "ondemand": {
                                "type": "string",
                                "description": "Available Instance types\n",
                                "example": "m3.medium"
                              },
                              "spot": {
                                "type": "array",
                                "description": "Available Spot Instance types\n",
                                "items": {
                                  "type": "string",
                                  "example": [
                                    "c3.large",
                                    "c4.large",
                                    "m3.large",
                                    "r3.large"
                                  ]
                                }
                              },
                              "preferredSpot": {
                                "type": "array",
                                "description": "Prioritize a subset of spot instance types. Must be a subset of the selected spot instance types.\n",
                                "items": {
                                  "type": "string",
                                  "example": [
                                    "c4.large"
                                  ]
                                }
                              },
                              "weights": {
                                "type": "array",
                                "description": "Custom weight for each instance type (only valid in weight capacity unit)\n",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "instanceType": {
                                      "type": "string",
                                      "description": "The instance type to customize its weight\n",
                                      "example": "c4.large"
                                    },
                                    "weightedCapacity": {
                                      "type": "integer",
                                      "description": "The weight\n",
                                      "example": 8
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "subnetIds": {
                            "type": "array",
                            "description": "A comma-separated list of subnet identifiers for your group.\nWhen this parameter is set, compute.availabilityZones should be left unused.\n",
                            "items": {
                              "type": "string",
                              "example": [
                                "subnet-4c1d1538",
                                "subnet-2791bb61",
                                "subnet-703a6f58",
                                "subnet-c62846fc"
                              ]
                            }
                          },
                          "availabilityZones": {
                            "type": "array",
                            "description": "One or more availability Zones for the group.\nWhen this parameter is set, compute.subnetIds should be left unused.\n",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The Availability Zone name\n",
                                  "example": "us-west-2a"
                                },
                                "subnetIds": {
                                  "type": "array",
                                  "description": "A comma-separated list of subnet identifiers for your group.\n",
                                  "items": {
                                    "type": "string",
                                    "example": [
                                      "subnet-4333093a"
                                    ]
                                  }
                                },
                                "placementGroupName": {
                                  "type": "string",
                                  "description": "specify a Placement Group name, the instances will be launched in the Placement Group for the AZ.\n"
                                }
                              }
                            }
                          },
                          "preferredAvailabilityZones": {
                            "type": "array",
                            "description": "The AZs to prioritize when launching Spot instances.\nIf no markets are available in the Preferred AZs, Spot instances are launched in the non-preferred AZs.\n* Must be a sublist of compute.AvailabilityZones\n* strategy.availabilityVsCost must not be equalAzDistribution\n",
                            "items": {
                              "type": "string",
                              "example": [
                                "us-east-1a",
                                "us-east-1b"
                              ]
                            }
                          },
                          "launchSpecification": {
                            "type": "object",
                            "properties": {
                              "creditSpecification": {
                                "type": "object",
                                "description": "creditSpecification is a parameter that indicates in what mode t2/t3 instances will be launched with. It consists of one key: cpuCredits (String)\n",
                                "properties": {
                                  "cpuCredits": {
                                    "type": "string",
                                    "enum": [
                                      "unlimited",
                                      "standard"
                                    ],
                                    "example": "unlimited"
                                  }
                                }
                              },
                              "loadBalancersConfig": {
                                "type": "object",
                                "description": "Elastic Load Balancers configurations\n",
                                "properties": {
                                  "loadBalancers": {
                                    "type": "array",
                                    "description": "List of classic load balancers and/or application load balancer target groups and/or Multai load balancer target sets\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The AWS resource name. Required for Classic Load Balancer. Optional for Application Load Balancer.\n",
                                          "example": "MyTargetGroup"
                                        },
                                        "arn": {
                                          "type": "string",
                                          "description": "The AWS resource ARN (Required only for ALB target groups)\n",
                                          "example": "arn:aws:elasticloadbalancing:us-west-2:922761411234:targetgroup/MyTargetGroup/1fe63217f8ff1234"
                                        },
                                        "type": {
                                          "type": "string",
                                          "description": "The resource type.\n",
                                          "enum": [
                                            "CLASSIC",
                                            "TARGET_GROUP",
                                            "MULTAI_TARGET_SET"
                                          ],
                                          "example": "TARGET_GROUP"
                                        },
                                        "balancerId": {
                                          "type": "string",
                                          "description": "The Multai load balancer ID\n",
                                          "example": "lb-123456789"
                                        },
                                        "targetSetId": {
                                          "description": "The Multai load target set ID\n",
                                          "type": "string",
                                          "example": "ts-123456789"
                                        },
                                        "azAwareness": {
                                          "description": "`AZ Awareness` will ensure that instances within the same AZ are using the corresponding MLB runtime instance in the same AZ. This feature reduces multi-zone data transfer fees\n",
                                          "type": "boolean",
                                          "example": false
                                        },
                                        "autoWeight": {
                                          "description": "`Auto Weight` will automatically provide a higher weight for instances that are larger as appropriate. For example, if you have configured your Elastigroup with m4.large and m4.xlarge instances the m4.large will have half the weight of an m4.xlarge. This ensures that larger instances receive a higher number of MLB requests\n",
                                          "type": "boolean",
                                          "example": true
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "itf": {
                                "title": "Intelligent Traffic Flow (ITF) Configuration",
                                "type": "object",
                                "description": "Contains the configuration details of Intelligent Traffic Flow (ITF).\n",
                                "properties": {
                                  "fixedTargetGroups": {
                                    "type": "boolean",
                                    "description": "Boolean to control whether to keep the set of target groups fixed. When set to true, all target groups will be created in advance upon create/update group, and will not be deleted even when not being used anymore.\n",
                                    "default": false,
                                    "example": false
                                  },
                                  "weightStrategy": {
                                    "type": "string",
                                    "description": "Distribution strategy (either 'vcpu' or 'custom'). 'Custom' strategy can be set only when the group is configured with custom weights.\n",
                                    "enum": [
                                      "vcpu",
                                      "custom"
                                    ],
                                    "default": "vcpu",
                                    "example": "custom"
                                  },
                                  "migrationHealthinessThreshold": {
                                    "type": "integer",
                                    "description": "Threshold for the minimum healthiness level of the target groups that is needed before activating the ITF rules. Integer representing the percentage of healthy instances within the target groups. Valid values: integer between 0-100.\n",
                                    "default": 50,
                                    "example": 80
                                  },
                                  "loadBalancers": {
                                    "type": "array",
                                    "description": "The load balancer associated with the ITF. Array with a single element.\n",
                                    "items": {
                                      "$ref": "#/paths/~1aws~1ec2~1group/post/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/compute/properties/launchSpecification/properties/itf/properties/loadBalancers/items"
                                    }
                                  },
                                  "targetGroupConfig": {
                                    "title": "ITF Target Group Configuration",
                                    "type": "object",
                                    "description": "Contains the configuration details of an ITF target group.\n",
                                    "allOf": [
                                      {
                                        "$ref": "#/paths/~1aws~1ec2~1group/post/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/compute/properties/launchSpecification/properties/itf/properties/targetGroupConfig/allOf/0"
                                      }
                                    ]
                                  }
                                }
                              },
                              "healthCheckType": {
                                "type": "string",
                                "description": "The service to use for the health check.\n",
                                "enum": [
                                  "ELB",
                                  "HCS",
                                  "TARGET_GROUP",
                                  "MLB",
                                  "ECS_CLUSTER_INSTANCE",
                                  "EC2",
                                  "OPSWORKS",
                                  "MULTAI_TARGET_SET",
                                  "K8S_NODE",
                                  "NOMAD_NODE"
                                ],
                                "example": "EC2"
                              },
                              "healthCheckGracePeriod": {
                                "type": "integer",
                                "description": "The amount of time, in seconds, after the instance has launched to starts and check its health.\n",
                                "default": 300,
                                "example": 600
                              },
                              "healthCheckUnhealthyDurationBeforeReplacement": {
                                "type": "integer",
                                "description": "The amount of time, in seconds, an existing instance should remain active after becoming unhealthy.\nAfter the set time out the instance will be replaced\n",
                                "example": 60
                              },
                              "securityGroupIds": {
                                "type": "array",
                                "description": "One or more security group IDs. In case of update it will override the existing Security Group with the new given array\n",
                                "items": {
                                  "type": "string",
                                  "example": [
                                    "sg-0dfc2c8760df6fec7"
                                  ]
                                }
                              },
                              "monitoring": {
                                "type": "boolean",
                                "description": "Describes whether instance Enhanced Monitoring is enabled\n",
                                "example": false
                              },
                              "ebsOptimized": {
                                "type": "boolean",
                                "description": "Enable EBS optimization for supported instance which is not enabled by default.\nNote - additional charges will be applied.\n",
                                "example": false
                              },
                              "imageId": {
                                "type": "string",
                                "description": "The ID of the image used to launch the instance.\n* The following instance types are supported by HVM image: M3, M4, C3, C4, D2, G2, R3, CC2, CC1, CG1, CR1.\n* The following instance types are supported by PV image: M1, M2, M3, C1, C3.\n* In case of conflict between Instance type to image type, an error message will be returned\n",
                                "example": "ami-01e24be29428c15b2"
                              },
                              "keyPair": {
                                "type": "string",
                                "description": "Specify a Key Pair to attach to the instances\n",
                                "example": "labs-oregon"
                              },
                              "blockDeviceMappings": {
                                "type": "array",
                                "description": "Array list of block devices that are exposed to the instance, You can specify virtual devices and EBS volumes.\n",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "deviceName": {
                                      "type": "string",
                                      "description": "Set device name\n",
                                      "example": "/dev/xvdcz"
                                    },
                                    "ebs": {
                                      "type": "object",
                                      "description": "Set EBS properties\n",
                                      "properties": {
                                        "iops": {
                                          "type": "integer",
                                          "minimum": 0,
                                          "description": "Must be greater than or equal to 0\n",
                                          "example": 0
                                        },
                                        "throughput": {
                                          "type": "integer",
                                          "minimum": 125,
                                          "maximum": 1000,
                                          "example": 125,
                                          "description": "The amount of data transferred to or from a storage device per second, you can use this param just in a case that volumetype=‘gp3’.\n"
                                        },
                                        "volumeType": {
                                          "type": "string",
                                          "description": "Set volume type\n",
                                          "example": "gp2"
                                        },
                                        "deleteOnTermination": {
                                          "type": "boolean",
                                          "description": "Flag to delete the EBS on instance termination\n",
                                          "example": true
                                        },
                                        "volumeSize": {
                                          "type": "integer",
                                          "description": "Set volume size (in GB). When using this property - don't use dynamicVolumeSize.\nVolume size should be greater or equal than the size configured in the AMI\n",
                                          "example": 12
                                        },
                                        "dynamicVolumeSize": {
                                          "type": "object",
                                          "description": "Set dynamic volume size properties. When using this object, you cannot use volumeSize. You must use one or the other.\n",
                                          "properties": {
                                            "baseSize": {
                                              "type": "integer",
                                              "description": "Initial size for volume\n",
                                              "example": 50
                                            },
                                            "resource": {
                                              "type": "string",
                                              "example": "CPU"
                                            },
                                            "sizePerResourceUnit": {
                                              "type": "integer",
                                              "description": "Additional size per resource unit (in GB). For example: if baseSize=50, and sizePerResourceUnit=20, and an instance with 2 CPU is launched - its disk size will be: 90GB\n",
                                              "example": 20
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "networkInterfaces": {
                                "type": "array",
                                "description": "List of network interfaces in an EC2 instance.\nIf you define network interface, please pay attention to omit these properties from other sections in this JSON and set them here: subnetId - compute.availabilityZones\n",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "description": "The description of the network interface. Applies only if creating a network interface when launching an instance.\n"
                                    },
                                    "deviceIndex": {
                                      "type": "integer",
                                      "description": "The position of the network interface in the attachment order.\nA primary network interface has a device index of 0.\nIf you specify a network interface when launching an instance, you must specify the device index.\n",
                                      "example": 0
                                    },
                                    "secondaryPrivateIpAddressCount": {
                                      "type": "integer",
                                      "description": "The number of secondary private IPv4 addresses to assign to a network interface.\nWhen you specify a number of secondary IPv4 addresses, Amazon EC2 selects these IP addresses within the subnet's IPv4 CIDR range.\nYou can't specify this option and specify more than one private IP address using privateIpAddresses.\nThe number of IP addresses you can assign to a network interface varies by instance type.\nFor more information, see IP Addresses Per ENI Per Instance Type in the Amazon Virtual Private Cloud User Guide.\n"
                                    },
                                    "associatePublicIpAddress": {
                                      "type": "boolean",
                                      "description": "Indicates whether to assign a public IPv4 address to an instance you launch in a VPC.\nThe public IP address can only be assigned to a network interface for eth0, and can only be assigned to a new network interface, not an existing one.\nYou cannot specify more than one network interface in the request.\nIf launching into a default subnet, the default value is true.\n",
                                      "example": true
                                    },
                                    "deleteOnTermination": {
                                      "type": "boolean",
                                      "description": "If set to true, the interface is deleted when the instance is terminated.\nYou can specify true only if creating a new network interface when launching an instance.\n"
                                    },
                                    "networkInterfaceId": {
                                      "type": "string",
                                      "description": "The ID of the network interface. Used to attach the specified network interface to the instance.\n"
                                    },
                                    "privateIpAddresses": {
                                      "type": "array",
                                      "description": "One or more private IPv4 addresses to assign to the network interface.\nOnly one private IPv4 address can be designated as primary.\nYou cannot specify this option if you're launching more than one instance in a RunInstances request.\n",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "privateIpAddress": {
                                            "type": "string",
                                            "description": "The private IPv4 address.\n"
                                          },
                                          "primary": {
                                            "type": "boolean",
                                            "description": "Indicates whether the private IPv4 address is the primary private IPv4 address. Only one IPv4 address can be designated as primary.\n"
                                          }
                                        }
                                      }
                                    },
                                    "subnetId": {
                                      "type": "string",
                                      "description": "The ID of the subnet to associate with the network interface.\nRequired when creating a new Network Interface, and not attaching an existing one via networkInterfaceId.\n"
                                    },
                                    "associateIpv6Address": {
                                      "type": "boolean",
                                      "description": "Indicates whether to assign an IPv6 address. Amazon EC2 chooses the IPv6 addresses from the range of the subnet.\n"
                                    }
                                  }
                                }
                              },
                              "iamRole": {
                                "type": "object",
                                "description": "The instance profile iamRole\n",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "The iamRole name\n",
                                    "example": "my-iamRole"
                                  }
                                }
                              },
                              "userData": {
                                "type": "string",
                                "format": "byte",
                                "description": "The Base64-encoded MIME user data to make available to the instances\n",
                                "example": "dXNlcmJhc2g2NGVuY29kZWQ="
                              },
                              "shutdownScript": {
                                "type": "string",
                                "format": "byte",
                                "description": "The Base64-encoded shutdown script to execute prior to instance termination. For more information please see: [Shutdown Script](https://docs.spot.io/integration-docs/elastigroup/concepts/compute-concepts/shutdown-scripts/)\n",
                                "example": "dXNlcmJhc2g2NGVuY29kZWQ="
                              },
                              "tags": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "tagKey": {
                                      "type": "string",
                                      "description": "The tag's key\n",
                                      "example": "Creator"
                                    },
                                    "tagValue": {
                                      "type": "string",
                                      "description": "The tag's value\n",
                                      "example": "John Doe"
                                    }
                                  }
                                }
                              },
                              "metadataOptions": {
                                "title": "Metadata Options",
                                "type": "object",
                                "description": "Optional field. Used for IMDSv2. In Create route can't be null. In Update route can be null.",
                                "required": [
                                  "httpTokens"
                                ],
                                "properties": {
                                  "httpTokens": {
                                    "title": "HTTP Tokens",
                                    "type": "string",
                                    "description": "Required for IMDSv2. Can’t be null in Create or Update. Values can be \"optional\" or \"required\".",
                                    "example": "optional"
                                  },
                                  "httpPutResponseHopLimit": {
                                    "type": "integer",
                                    "example": "33",
                                    "description": "An integer within 1,64 range (including).\nThe desired HTTP PUT response hop limit for instance metadata requests.\nThe larger the number, the further instance metadata requests can travel.\n"
                                  }
                                }
                              },
                              "cpuOptions": {
                                "title": "CPU options",
                                "type": "object",
                                "description": "Optional field. The CPU options for the instances that are launched within the group.",
                                "required": [
                                  "threadsPerCore"
                                ],
                                "properties": {
                                  "threadsPerCore": {
                                    "title": "thread per core",
                                    "type": "integer",
                                    "example": "1",
                                    "description": "The number of threads per CPU core.\nTo disable multithreading for the instances, specify a value of 1 .\nOtherwise, specify the default value of 2 .\n"
                                  }
                                }
                              },
                              "resourceTagSpecification": {
                                "type": "object",
                                "description": "Optional field. User will specified which resources should be tagged with group tags.",
                                "properties": {
                                  "volumes": {
                                    "type": "object",
                                    "description": "Optional field. Tag specification for Volume resources.",
                                    "properties": {
                                      "shouldTag": {
                                        "type": "boolean",
                                        "description": "Optional field. Volume resources will be tagged with group tags.",
                                        "default": false,
                                        "example": false
                                      }
                                    }
                                  },
                                  "snapshots": {
                                    "type": "object",
                                    "description": "Optional field. Tag specification for Snapshot resources.",
                                    "properties": {
                                      "shouldTag": {
                                        "type": "boolean",
                                        "description": "Optional field. Snapshot resources will be tagged with group tags.",
                                        "default": true,
                                        "example": true
                                      }
                                    }
                                  },
                                  "enis": {
                                    "type": "object",
                                    "description": "Optional field. Tag specification for ENI resources.",
                                    "properties": {
                                      "shouldTag": {
                                        "type": "boolean",
                                        "description": "Optional field. ENI resources will be tagged with group tags.",
                                        "default": false,
                                        "example": false
                                      }
                                    }
                                  },
                                  "amis": {
                                    "type": "object",
                                    "description": "Optional field. Tag specification for AMI resources.",
                                    "properties": {
                                      "shouldTag": {
                                        "type": "boolean",
                                        "description": "Optional field. AMI resources will be tagged with group tags.",
                                        "default": true,
                                        "example": true
                                      }
                                    }
                                  }
                                }
                              },
                              "autoHealing": {
                                "type": "boolean",
                                "description": "Optional field. Auto-healing replacement won't be triggered if this parameter value is \"false\".\nIn a case of a stateful group - no recycling will start if this parameter value is \"false\".\n",
                                "default": true,
                                "example": true
                              }
                            }
                          }
                        }
                      },
                      "scaling": {
                        "type": "object",
                        "title": "Elastigroup Scaling",
                        "properties": {
                          "up": {
                            "type": "array",
                            "items": {
                              "$ref": "#/paths/~1aws~1ec2~1group/post/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/scaling/properties/up/items"
                            }
                          },
                          "down": {
                            "type": "array",
                            "items": {
                              "$ref": "#/paths/~1aws~1ec2~1group/post/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/scaling/properties/down/items"
                            }
                          },
                          "multipleMetrics": {
                            "type": "object",
                            "properties": {
                              "metrics": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/paths/~1aws~1ec2~1group/post/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/scaling/properties/multipleMetrics/properties/metrics/items"
                                }
                              },
                              "expressions": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/paths/~1aws~1ec2~1group/post/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/scaling/properties/multipleMetrics/properties/expressions/items"
                                }
                              }
                            }
                          },
                          "target": {
                            "type": "array",
                            "items": {
                              "$ref": "#/paths/~1aws~1ec2~1group/post/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/scaling/properties/target/items"
                            }
                          }
                        }
                      },
                      "scheduling": {
                        "type": "object",
                        "title": "Elastigroup Scheduling",
                        "description": "Schedule tasks to execute, using CRON expressions.\n",
                        "properties": {
                          "tasks": {
                            "type": "array",
                            "description": "The scheduling tasks for the group.\n",
                            "items": {
                              "type": "object",
                              "properties": {
                                "isEnabled": {
                                  "type": "boolean",
                                  "description": "Describes whether the task is enabled. When true the task should run when false it should not run.\n",
                                  "example": true
                                },
                                "startTime": {
                                  "type": "string",
                                  "description": "DATETIME in ISO-8601 format and is in UTC time. Sets a start time for scheduled actions.\nIf \"frequency\" or \"cronExpression\" are not used - the task will run only once at the start time and will then be deleted from the group configuration.\n",
                                  "example": "2018-05-23T10:55:09Z"
                                },
                                "frequency": {
                                  "type": "string",
                                  "description": "The recurrence frequency to run this task.\nOnly one of ‘frequency' or ‘cronExpression' should be used at a time\n",
                                  "enum": [
                                    "hourly",
                                    "daily",
                                    "weekly"
                                  ],
                                  "example": "hourly"
                                },
                                "cronExpression": {
                                  "type": "string",
                                  "description": "A valid cron expression.\nThe cron is running in UTC time zone and is in Unix cron format Cron Expression Validator Script.\nOnly one of ‘frequency' or ‘cronExpression' should be used at a time.\n",
                                  "example": "0 1 * * *"
                                },
                                "taskType": {
                                  "type": "string",
                                  "description": "The task type to run.\n",
                                  "enum": [
                                    "backup_ami",
                                    "scale",
                                    "scaleUp",
                                    "roll",
                                    "statefulUpdateCapacity",
                                    "statefulRecycle",
                                    "clusterRoll (For ECS Integration)"
                                  ],
                                  "example": "scale"
                                },
                                "scaleTargetCapacity": {
                                  "type": "integer",
                                  "description": "The target capacity of the group.\nShould be used when choosing ‘taskType' of ‘scale'.\n"
                                },
                                "scaleMinCapacity": {
                                  "type": "integer",
                                  "description": "The min capacity of the group.\nShould be used when choosing ‘taskType' of ‘scale'.\n"
                                },
                                "scaleMaxCapacity": {
                                  "type": "integer",
                                  "description": "The max capacity of the group.\nRequired when ‘taskType' is ‘scale'.\n"
                                },
                                "targetCapacity": {
                                  "type": "integer",
                                  "description": "Set a new target capacity for the Elastigroup.\nRequired when ‘taskType' is ‘statefulUpdateCapacity'.\n"
                                },
                                "MinCapacity": {
                                  "type": "integer",
                                  "description": "Set a new minimum capacity for the Elastigroup.\nRequired when ‘taskType' is ‘statefulUpdateCapacity'.\n"
                                },
                                "MaxCapacity": {
                                  "type": "integer",
                                  "description": "Set a new maximum capacity for the Elastigroup.\nRequired when ‘taskType' is ‘statefulUpdateCapacity'.\n"
                                },
                                "batchSizePercentage": {
                                  "type": "integer",
                                  "description": "The percentage size of each batch in the scheduled deployment roll.\nRequired when the taskType is roll.\n"
                                }
                              }
                            }
                          }
                        }
                      },
                      "thirdPartiesIntegration": {
                        "type": "object",
                        "title": "Elastigroup Third Party Integrations",
                        "description": "All definitions for using third-party Integrations\n",
                        "properties": {
                          "ecs": {
                            "type": "object",
                            "description": "ECS integration object.\n",
                            "properties": {
                              "clusterName": {
                                "type": "string",
                                "example": "test-ecs",
                                "description": "ECS cluster name\n"
                              },
                              "autoScale": {
                                "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/autoScaler"
                              },
                              "batch": {
                                "type": "object",
                                "properties": {
                                  "jobQueueNames": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "example": [
                                        "dumpy-big-processing"
                                      ]
                                    }
                                  }
                                }
                              },
                              "optimizeImages": {
                                "type": "object",
                                "properties": {
                                  "shouldOptimizeEcsAmi": {
                                    "type": "boolean",
                                    "example": true
                                  },
                                  "performAt": {
                                    "type": "string",
                                    "description": "Settings for maintenance strategy.\\\nperformAt of type: 'never' OR 'timeWindow' can only be applied to groups with \"availabilityOriented\" OR groups with \"persistence\",\\\nother groups allow either 'always' type or nothing which also means always.\n",
                                    "enum": [
                                      "never",
                                      "always",
                                      "timeWindow"
                                    ],
                                    "example": "timeWindow",
                                    "default": "always"
                                  },
                                  "timeWindows": {
                                    "type": "array",
                                    "description": "When performAt is 'timeWindow':\\\nmust specify a list of 'timeWindows' with at least one time window Each string is in the format of - ddd:hh:mm-ddd:hh:mm\n* ddd = day of week = Sun | Mon | Tue | Wed | Thu | Fri | Sat\n* hh = hour 24 = 0 -23\n* mm = minute = 0 - 59\n",
                                    "items": {
                                      "type": "string",
                                      "example": "Mon:03:00-Wed:02:30"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "rancher": {
                            "type": "object",
                            "description": "All definitions for using Rancher Labs integration.\n",
                            "properties": {
                              "masterHost": {
                                "type": "string",
                                "description": "Rancher master url\n",
                                "example": "http://myRancher.com:8080/v1"
                              },
                              "accessKey": {
                                "type": "string",
                                "description": "Rancher version\n",
                                "example": "1",
                                "default": "1"
                              },
                              "secretKey": {
                                "type": "string",
                                "example": "SECRET"
                              },
                              "version": {
                                "type": "string",
                                "example": 1
                              }
                            }
                          },
                          "kubernetes": {
                            "type": "object",
                            "properties": {
                              "integrationMode": {
                                "type": "string",
                                "example": "pod"
                              },
                              "clusterIdentifier": {
                                "type": "string",
                                "example": "test-k8s"
                              },
                              "autoScale": {
                                "type": "object",
                                "properties": {
                                  "isEnabled": {
                                    "type": "boolean",
                                    "example": true,
                                    "default": true
                                  },
                                  "cooldown": {
                                    "type": "integer",
                                    "example": 300
                                  },
                                  "down": {
                                    "type": "object",
                                    "description": "Auto Scaling scale down operations.\n",
                                    "properties": {
                                      "evaluationPeriods": {
                                        "type": "integer",
                                        "example": 5
                                      },
                                      "maxScaleDownPercentage": {
                                        "type": "integer",
                                        "description": "The maximum % of nodes that will be scaled down at once out of the total amount of potential nodes to scale down.\nexample: if 10 nodes can be scaled down, only 5 will be given 50% in this parameter.\nthe other 50% will be scaled down in the next autoscaling iteration.\n",
                                        "example": 70
                                      },
                                      "headroom": {
                                        "type": "object",
                                        "description": "Spare resource capacity management enabling fast assignment of Pods without waiting for new resources to launch.\n",
                                        "properties": {
                                          "cpuPerUnit": {
                                            "type": "integer",
                                            "description": "Optionally configure the number of CPUs to allocate per headroom unit. CPUs are denoted in CPU units, where 1024 units = 1 vCPU.\n",
                                            "example": 2048
                                          },
                                          "memoryPerUnit": {
                                            "type": "integer",
                                            "description": "Optionally configure the amount of memory (MiB) to allocate per headroom unit.\n",
                                            "example": 3
                                          },
                                          "numOfUnits": {
                                            "type": "integer",
                                            "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n",
                                            "example": 2
                                          },
                                          "gpuPerUnit": {
                                            "type": "integer",
                                            "example": 2
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "labels": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string",
                                          "example": "group, kops.k8s.io/instancegroup"
                                        },
                                        "value": {
                                          "type": "string",
                                          "example": "microservices"
                                        }
                                      }
                                    }
                                  },
                                  "isAutoConfig": {
                                    "type": "boolean",
                                    "example": false,
                                    "default": false
                                  }
                                }
                              }
                            }
                          },
                          "mesosphere": {
                            "type": "object",
                            "properties": {
                              "apiServer": {
                                "type": "string",
                                "example": "1.2.3.4"
                              }
                            }
                          },
                          "mlbRuntime": {
                            "type": "object",
                            "properties": {
                              "deploymentId": {
                                "type": "string",
                                "example": "dp-rm0f5b912345"
                              }
                            }
                          },
                          "nomad": {
                            "type": "object",
                            "properties": {
                              "masterHost": {
                                "type": "string",
                                "example": "https://master.host.com"
                              },
                              "masterPort": {
                                "type": "integer",
                                "example": 443
                              },
                              "autoScale": {
                                "type": "object",
                                "properties": {
                                  "isEnabled": {
                                    "type": "boolean",
                                    "description": "Enable the Autoscaler.\n",
                                    "example": true
                                  },
                                  "cooldown": {
                                    "type": "integer",
                                    "description": "Cooldown period between scaling actions. Value should be cooldown period in seconds, greater than 180\n",
                                    "example": 180
                                  },
                                  "down": {
                                    "type": "object",
                                    "description": "Auto Scaling scale down operations.\n",
                                    "properties": {
                                      "evaluationPeriods": {
                                        "type": "integer",
                                        "example": 3
                                      }
                                    }
                                  },
                                  "headroom": {
                                    "type": "object",
                                    "description": "Spare resource capacity management enabling fast assignment of Pods without waiting for new resources to launch.\n",
                                    "properties": {
                                      "cpuPerUnit": {
                                        "type": "integer",
                                        "description": "Optionally configure the number of CPUs to allocate per headroom unit. CPUs are denoted in CPU units, where 1024 units = 1 vCPU.\n",
                                        "example": 2048
                                      },
                                      "memoryPerUnit": {
                                        "type": "integer",
                                        "description": "Optionally configure the amount of memory (MiB) to allocate per headroom unit.\n",
                                        "example": 3
                                      },
                                      "numOfUnits": {
                                        "type": "integer",
                                        "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n",
                                        "example": 2
                                      }
                                    }
                                  },
                                  "constraints": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string",
                                          "example": "${node.class}"
                                        },
                                        "value": {
                                          "type": "string",
                                          "example": "value"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "aclToken": {
                                "type": "string",
                                "example": 123
                              },
                              "tlsConfig": {
                                "type": "object",
                                "description": "Configuration object for TLS integration. (optional)\n",
                                "properties": {
                                  "tlsEnabled": {
                                    "type": "boolean",
                                    "description": "When true, all communication to the master is with TLS. (required)\n",
                                    "example": true
                                  },
                                  "privateKey": {
                                    "type": "string",
                                    "description": "A generated client private key. (required)\n",
                                    "example": "PRIVATE KEY CERTIFICATE STR"
                                  },
                                  "certificate": {
                                    "type": "string",
                                    "description": "The certificates chain, first the client certificate then the ca certificate. (required)\n",
                                    "example": "PUBLIC KEY CERTIFICATE STR"
                                  }
                                }
                              }
                            }
                          },
                          "chef": {
                            "type": "object",
                            "properties": {
                              "chefServer": {
                                "type": "string",
                                "example": "https://master.host.com"
                              },
                              "organization": {
                                "type": "string",
                                "example": "ORGNAME"
                              },
                              "chefVersion": {
                                "type": "string",
                                "example": 12.1
                              },
                              "user": {
                                "type": "string",
                                "example": "User"
                              },
                              "pemKey": {
                                "type": "string",
                                "example": "Key"
                              }
                            }
                          },
                          "rightScale": {
                            "type": "object",
                            "properties": {
                              "accountId": {
                                "type": "string",
                                "example": "ID"
                              },
                              "refreshToken": {
                                "type": "string",
                                "example": "TOKEN"
                              },
                              "region": {
                                "type": "string",
                                "example": "us-east-1"
                              }
                            }
                          },
                          "route53": {
                            "type": "object",
                            "description": "Route53 integration object.\n",
                            "properties": {
                              "domains": {
                                "type": "array",
                                "description": "Route53 domain configurations.\n",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "hostedZoneId": {
                                      "type": "string",
                                      "description": "The Route53 Hosted Zone ID for the registered domain.\n",
                                      "example": "Z3UFMBCGJMYLUT"
                                    },
                                    "spotinstAccountId": {
                                      "type": "string",
                                      "description": "The Spot account ID that is linked to the AWS account that holds the Route53 hosted Zone ID.\nThe default is the user Spot account provided as a URL parameter.\n",
                                      "example": "act-1234abcd"
                                    },
                                    "recordSetType": {
                                      "type": "string",
                                      "description": "Set the type of recordSet to update.\nValid values:\n* \"a\" - means register and de-register of instances done by IP address (IPv4).\nWhen it is \"a\" you should also specify usePublicIp.\n* \"cname\" - register and de-register of instances done by CNAME. When it is \"cname\", you should also specify usePublicDns.\n",
                                      "enum": [
                                        "a",
                                        "cname"
                                      ],
                                      "example": "a",
                                      "default": "a"
                                    },
                                    "recordSets": {
                                      "type": "array",
                                      "description": "List of record sets.\n",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name of the recordSet.\n",
                                            "example": "testcname.spot.io."
                                          },
                                          "usePublicIp": {
                                            "type": "boolean",
                                            "description": "Defines whether to use public or private IP. Relevant only when recordSetType=a.\n",
                                            "example": true,
                                            "default": false
                                          },
                                          "usePublicDns": {
                                            "type": "boolean",
                                            "description": "Defines whether to use a public DNS or private DNS in the instance registration process.\nRelevant only when recordSetType=cname.\n* False=Create a new weighted CNAME recordset with same name and the instance Private DNS.\n* True=instances should be registered with public DNS.\n",
                                            "example": true,
                                            "default": false
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "dockerSwarm": {
                            "$ref": "#/paths/~1aws~1ec2~1group/post/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/thirdPartiesIntegration/properties/dockerSwarm"
                          }
                        }
                      },
                      "createdAt": {
                        "type": "string",
                        "readOnly": true,
                        "title": "Creation Time Indicator",
                        "description": "Creation Time Indicator",
                        "example": "2020-10-01T05:23:59.302Z"
                      },
                      "updatedAt": {
                        "type": "string",
                        "readOnly": true,
                        "title": "Update Time Indicator",
                        "description": "Update Time Indicator",
                        "example": "2020-10-01T05:23:59.302Z"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1aws~1ec2~1group/post/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Elastigroup",
        "description": "Delete an Elastigroup AWS\n",
        "operationId": "elastigroupAwsDelete",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Elastigroup Delete",
                    "properties": {
                      "statefulDeallocation": {
                        "type": "object",
                        "title": "Stateful deallocation options",
                        "properties": {
                          "shouldDeleteImages": {
                            "type": "boolean",
                            "default": false,
                            "example": false,
                            "description": "For stateful groups, removes persistent images\n"
                          },
                          "shouldDeleteNetworkInterfaces": {
                            "type": "boolean",
                            "default": true,
                            "example": true,
                            "description": "For stateful groups, removes network interfaces\n"
                          },
                          "shouldDeleteVolumes": {
                            "type": "boolean",
                            "default": false,
                            "example": false,
                            "description": "For stateful groups, removes persistent volumes\n"
                          },
                          "shouldDeleteSnapshots": {
                            "type": "boolean",
                            "default": false,
                            "example": false,
                            "description": "For stateful groups, removes snapshots\n"
                          }
                        }
                      },
                      "beanstalk": {
                        "type": "object",
                        "title": "Beanstalk Dellocation Options",
                        "properties": {
                          "rollbackToAsg": {
                            "type": "boolean",
                            "example": true,
                            "default": true,
                            "description": "For groups with Beanstalk integration, roll back the attached ASG to the state prior to integration.\n"
                          }
                        }
                      },
                      "amiBackup": {
                        "type": "object",
                        "title": "AMI Dellocation Options",
                        "properties": {
                          "shouldDeleteImages": {
                            "type": "boolean",
                            "example": false,
                            "default": false,
                            "description": "Mark if images collected during AMI Auto Backup should be deleted during group deletion\n"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Delete Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "3b750eff-3940-46b3-a309-aa2b415272fd",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-98765",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "DELETE",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-06-20T11:35:01.745Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Elastigroup",
        "description": "Describe a specific Elastigroup JSON\n",
        "operationId": "elastigroupAwsListElastigroup",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123456789",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "List Group Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "67582d0c-108b-4ef7-9fdc-d39678a30844",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-1234567",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-01-07T07:30:58.622Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "title": "ID",
                                          "example": "sig-1234567"
                                        },
                                        "name": {
                                          "type": "string",
                                          "title": "Name",
                                          "example": "EG"
                                        },
                                        "description": {
                                          "type": "string",
                                          "title": "Validation",
                                          "example": "validation"
                                        },
                                        "capacity": {
                                          "type": "object",
                                          "title": "Capacity",
                                          "properties": {
                                            "minimum": {
                                              "type": "integer",
                                              "title": "Min Capacity Amount",
                                              "example": 1
                                            },
                                            "maximum": {
                                              "type": "integer",
                                              "title": "Max Capacity Amount",
                                              "example": 1
                                            },
                                            "target": {
                                              "type": "integer",
                                              "title": "Target Amount",
                                              "example": 1
                                            },
                                            "unit": {
                                              "type": "string",
                                              "title": "Unit",
                                              "example": "instance"
                                            }
                                          }
                                        },
                                        "strategy": {
                                          "type": "object",
                                          "title": "Strategy",
                                          "properties": {
                                            "risk": {
                                              "type": "integer",
                                              "title": "Risk",
                                              "example": 100
                                            },
                                            "onDemandCount": {
                                              "type": "integer",
                                              "title": "On Demand Count",
                                              "example": null
                                            },
                                            "availabilityVsCost": {
                                              "type": "string",
                                              "title": "Availability VS Cost",
                                              "example": "balanced"
                                            },
                                            "lifetimePeriod": {
                                              "type": "string",
                                              "title": "Life Time Period",
                                              "example": "days"
                                            },
                                            "fallbackToOd": {
                                              "type": "boolean",
                                              "title": "Fallback To On-Demand",
                                              "example": true
                                            },
                                            "persistence": {
                                              "type": "object",
                                              "title": "Fallback To On-Demand"
                                            },
                                            "revertToSpot": {
                                              "type": "object",
                                              "title": "Revert To Spot",
                                              "properties": {
                                                "performAt": {
                                                  "type": "string",
                                                  "title": "Perform At",
                                                  "example": "always"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "compute": {
                                          "type": "object",
                                          "title": "Compute",
                                          "properties": {
                                            "instanceTypes": {
                                              "type": "object",
                                              "title": "Insatnce Types",
                                              "properties": {
                                                "ondemand": {
                                                  "type": "string",
                                                  "title": "On Demand",
                                                  "example": "c3.4xlarge"
                                                },
                                                "spot": {
                                                  "type": "string",
                                                  "title": "On Demand",
                                                  "example": [
                                                    "c3.2xlarge",
                                                    "c4.2xlarge"
                                                  ]
                                                }
                                              }
                                            },
                                            "availabilityZones": {
                                              "type": "object",
                                              "title": "Availability Zones",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "title": "Name",
                                                  "example": "eu-west-1b"
                                                },
                                                "subnetIds": {
                                                  "type": "string",
                                                  "title": "SubnetIds",
                                                  "example": [
                                                    "eu-west-1b"
                                                  ]
                                                }
                                              }
                                            },
                                            "product": {
                                              "type": "object",
                                              "title": "Product",
                                              "example": "Linux/UNIX (Amazon VPC)"
                                            },
                                            "launchSpecification": {
                                              "type": "object",
                                              "title": "Launch Specification",
                                              "properties": {
                                                "loadBalancerNames": {
                                                  "type": "string",
                                                  "title": "Load Balancer Names",
                                                  "example": null
                                                },
                                                "loadBalancersConfig": {
                                                  "type": "object",
                                                  "title": "Load Balancers Config",
                                                  "properties": {
                                                    "loadBalancers": {
                                                      "type": "string",
                                                      "title": "Load Balancer Names",
                                                      "example": null
                                                    }
                                                  }
                                                },
                                                "healthCheckGracePeriod": {
                                                  "type": "integer",
                                                  "title": "Health Check Grace Period",
                                                  "example": 300
                                                },
                                                "securityGroupIds": {
                                                  "type": "string",
                                                  "title": "Security Groups IDs",
                                                  "example": [
                                                    "sg-1234567"
                                                  ]
                                                },
                                                "monitoring": {
                                                  "type": "boolean",
                                                  "title": "Monitoring",
                                                  "example": false
                                                },
                                                "ebsOptimized": {
                                                  "type": "boolean",
                                                  "title": "EBS Optimized",
                                                  "example": false
                                                },
                                                "imageId": {
                                                  "type": "boolean",
                                                  "title": "Image ID",
                                                  "example": "ami-1234567"
                                                },
                                                "iamRole": {
                                                  "type": "object",
                                                  "title": "IAM Role",
                                                  "properties": {
                                                    "name": {
                                                      "type": "string",
                                                      "title": "Name",
                                                      "example": null
                                                    },
                                                    "arn": {
                                                      "type": "string",
                                                      "title": "ARN",
                                                      "example": "arn:aws:iam::1234356789:instance-profile/Loader"
                                                    }
                                                  }
                                                },
                                                "keyPair": {
                                                  "type": "string",
                                                  "title": "Key Pair",
                                                  "example": "PA"
                                                },
                                                "userData": {
                                                  "type": "string",
                                                  "title": "User Data",
                                                  "example": "sldkfoisnfgodng"
                                                },
                                                "shutdownScript": {
                                                  "type": "string",
                                                  "title": "Shut Down Script",
                                                  "example": null
                                                },
                                                "tags": {
                                                  "type": "object",
                                                  "title": "Tags",
                                                  "properties": {
                                                    "tagKey": {
                                                      "type": "string",
                                                      "title": "Tag Key",
                                                      "example": "Env"
                                                    },
                                                    "tagValue": {
                                                      "type": "string",
                                                      "title": "Tag Value",
                                                      "example": "TEST"
                                                    }
                                                  }
                                                },
                                                "tenancy": {
                                                  "type": "string",
                                                  "title": "Tenancy",
                                                  "example": "default"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "scaling": {
                                          "type": "object",
                                          "title": "Scaling"
                                        },
                                        "scheduling": {
                                          "type": "object",
                                          "title": "Scheduling",
                                          "properties": {
                                            "tasks": {
                                              "type": "array",
                                              "title": "Tasks",
                                              "items": [
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "frequency": {
                                                      "type": "boolean",
                                                      "title": "Frequency",
                                                      "example": "hourly"
                                                    },
                                                    "taskType": {
                                                      "type": "string",
                                                      "title": "Task Type",
                                                      "example": "backup_ami"
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "isEnabled": {
                                                      "type": "boolean",
                                                      "title": "Is Enabled",
                                                      "example": true
                                                    },
                                                    "taskType": {
                                                      "type": "boolean",
                                                      "title": "Task Type",
                                                      "example": "scale"
                                                    },
                                                    "cronExpression": {
                                                      "type": "string",
                                                      "title": "Cron Expression",
                                                      "example": "55 19 * * 0-4"
                                                    },
                                                    "scaleTargetCapacity": {
                                                      "type": "integer",
                                                      "title": "Scale Target Capacity",
                                                      "example": 1
                                                    },
                                                    "scaleMinCapacity": {
                                                      "type": "integer",
                                                      "title": "Scale Min Capacity",
                                                      "example": 1
                                                    },
                                                    "scaleMaxCapacity": {
                                                      "type": "integer",
                                                      "title": "Scale Max Capacity",
                                                      "example": 1
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "groupId": {
                                                      "type": "string",
                                                      "title": "Group Id",
                                                      "example": "sig-12345"
                                                    },
                                                    "eventType": {
                                                      "type": "string",
                                                      "title": "Event Type",
                                                      "example": "Scale"
                                                    },
                                                    "createdAt": {
                                                      "type": "string",
                                                      "title": "Created At",
                                                      "example": "2016-01-21T16:51:09.000+0000"
                                                    },
                                                    "subEvents": {
                                                      "type": "object",
                                                      "title": "Sub Event",
                                                      "properties": {
                                                        "type": {
                                                          "type": "string",
                                                          "title": "Type",
                                                          "example": "scaleUp"
                                                        },
                                                        "terminatedSpots": {
                                                          "type": "string",
                                                          "example": [
                                                            {
                                                              "spotInstanceRequestId": "sir-029404xk"
                                                            },
                                                            {
                                                              "instanceId": "i-7fb4facc"
                                                            }
                                                          ]
                                                        },
                                                        "terminatedInstances": {
                                                          "type": "array",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        "thirdPartiesIntegration": {
                                          "type": "object",
                                          "title": "Third Parties Integration"
                                        },
                                        "multai": {
                                          "type": "string",
                                          "title": "Multai",
                                          "example": null
                                        },
                                        "createdAt": {
                                          "type": "string",
                                          "title": "Created At",
                                          "example": "2015-10-23T09:00:00.000Z"
                                        },
                                        "updatedAt": {
                                          "type": "string",
                                          "title": "Updated At",
                                          "example": "2018-08-01T14:11:39.000Z"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/statefulInstance": {
      "get": {
        "summary": "List Stateful Instances",
        "description": "List all stateful instances associated with the Elastigroup\n",
        "operationId": "listStatefulInstances",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "groupId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "AWS Elastigroup ID\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "ssi-046b119c",
                                    "description": "ssi-046b119c\n"
                                  },
                                  "instanceId": {
                                    "type": "string",
                                    "example": "i-08878aad7f35d20f5",
                                    "description": "i-08878aad7f35d20f5\n"
                                  },
                                  "privateIp": {
                                    "type": "string",
                                    "example": "172.31.30.122",
                                    "description": "172.31.30.122\n"
                                  },
                                  "imageId": {
                                    "type": "string",
                                    "example": "ami-082b5a644766e0e6f",
                                    "description": "ami-082b5a644766e0e6f\n"
                                  },
                                  "state": {
                                    "type": "string",
                                    "example": "ACTIVE",
                                    "enum": [
                                      "ACTIVE",
                                      "PAUSE",
                                      "PAUSING",
                                      "PAUSED",
                                      "RESUME",
                                      "RESUMING",
                                      "RECYCLE",
                                      "RECYCLING",
                                      "DEALLOCATE",
                                      "DEALLOCATING",
                                      "DEALLOCATED",
                                      "ERROR"
                                    ],
                                    "description": "Possible values: <ul>ACTIVE The sateful instance is running.</li> <li>PAUSE Initiating a Pause action.</li> <li>PAUSING Pause in progress.</li> <li>PAUSED Stateful instance is Paused.</li> <li>RESUME Initiating a Resume action.</li> <li>RESUMING Resume in progress.</li> <li>RECYCLE Initiating a Recycle process.</li> <li>RECYCLING Recycle in progress.</li> <li>DEALLOCATE Initiating a Deallocate process.</li> <li>DEALLOCATING Deallocation in progress.</li> <li>DEALLOCATED Stateful instance is Deallocated.</li> <li>ERROR Error state.</ul>\n"
                                  },
                                  "devices": {
                                    "type": "array",
                                    "items": {
                                      "properties": {
                                        "deviceName": {
                                          "type": "string",
                                          "example": "/dev/xvda",
                                          "description": "/dev/xvda\n"
                                        },
                                        "volumeId": {
                                          "type": "string",
                                          "example": "vol-0bb1c83fb203ad686",
                                          "description": "vol-0bb1c83fb203ad686\n"
                                        },
                                        "snapshotId": {
                                          "type": "string",
                                          "example": "snap-0a2803e5e45d63c3a",
                                          "description": "snap-0a2803e5e45d63c3a\n"
                                        }
                                      }
                                    }
                                  },
                                  "launchedAt": {
                                    "type": "string",
                                    "example": "2019-12-10T08:01:43.000Z",
                                    "description": "2019-12-10T08:01:43.000Z\n"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "example": "2019-12-10T08:02:16.000Z",
                                    "description": "2019-12-10T08:02:16.000Z\n"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/statefulInstance/{StatefulInstanceId}/pause": {
      "put": {
        "summary": "Pause Stateful Instance",
        "description": "Pause a stateful instance\n",
        "operationId": "pauseStatefulInstance",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D~1statefulInstance/get/parameters/1"
          },
          {
            "in": "path",
            "name": "statefulInstanceId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "ssi-227a0005",
            "description": "Stateful instance ID\n"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/statefulInstance/{StatefulInstanceId}/resume": {
      "put": {
        "summary": "Resume Stateful Instance",
        "description": "Resume a stateful instance\n",
        "operationId": "resumeStatefulInstance",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D~1statefulInstance/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D~1statefulInstance~1%7BStatefulInstanceId%7D~1pause/put/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/statefulInstance/{StatefulInstanceId}/recycle": {
      "put": {
        "summary": "Recycle Stateful Instance",
        "description": "Recycle a stateful instance AWS\n",
        "operationId": "elastigroupAwsRecycleStatefulInstance",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D~1statefulInstance/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D~1statefulInstance~1%7BStatefulInstanceId%7D~1pause/put/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/statefulInstance/{StatefulInstanceId}/deallocate": {
      "put": {
        "summary": "De-allocate Stateful Instance",
        "description": "De-allocate a stateful instance – delete all the resources associated with the instance (network interface, snapshots, volumes)\n",
        "operationId": "elastigroupAwsDeAllocateStatefulInstance",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D~1statefulInstance/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D~1statefulInstance~1%7BStatefulInstanceId%7D~1pause/put/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/statefulInstance/{StatefulInstanceId}/volume/{VolumeId}": {
      "delete": {
        "summary": "Delete Volume in a Stateful Instance",
        "description": "Delete a Volume that is part of a paused stateful instance\n",
        "operationId": "deleteVolumeStatefulInstance",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D~1statefulInstance/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D~1statefulInstance~1%7BStatefulInstanceId%7D~1pause/put/parameters/2"
          },
          {
            "in": "path",
            "name": "volumeId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "vol-0faa4b2957a3d59c8",
            "description": "Volume ID\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "3b750eff-3940-46b3-a309-aa2b415272fd",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-98765/statefulInstance/ssi-0d29fe12/volume/vol-0faa4b2957a3d59c8",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "DELETE",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2021-11-03T11:02:55.608Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/statefulMigrationGroup": {
      "post": {
        "summary": "Import Stateful Instance",
        "description": "Create a new Stateful Elastigroup – this Elastigroup will have the same configuration and state of the imported instance.\n",
        "operationId": "importStatefulInstance",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "statefulMigrationGroup"
                    ],
                    "properties": {
                      "statefulMigrationGroup": {
                        "type": "object",
                        "required": [
                          "shouldKeepPrivateIp",
                          "originalInstanceId",
                          "name"
                        ],
                        "properties": {
                          "originalInstanceId": {
                            "type": "string",
                            "example": "i-123c53d9f152a1234",
                            "description": "The originating Instance ID. This instance will be imported along with its State.\n"
                          },
                          "shouldKeepPrivateIp": {
                            "type": "boolean",
                            "example": "false",
                            "description": "Setting this value to true will maintain the initial instance private IP. This will also require that the original instance be terminated in the import process incurring maintenance time. Note: This value must be false if you would like to configure availability zones and subnet ids.\n"
                          },
                          "shouldTerminateInstance": {
                            "type": "boolean",
                            "description": "Decide if the instance termination should be automatic or manual. True = automatic termination. False = manual termination.\n",
                            "example": true
                          },
                          "name": {
                            "type": "string",
                            "example": "MyNewElastigroup",
                            "description": "Specify the new Elastigroup name.\n"
                          },
                          "product": {
                            "type": "string",
                            "example": "Linux/UNIX (Amazon VPC)",
                            "description": "Operation system type. Possible values: Linux/UNIX | SUSE | Linux Windows | Linux/UNIX (Amazon VPC) | SUSE Linux (Amazon VPC) | Windows (Amazon VPC).\n"
                          },
                          "spotInstanceTypes": {
                            "type": "array",
                            "description": "An Array holding the types of instances to be used in the Elastigroup.\n",
                            "items": {
                              "type": "string",
                              "example": "m3.large"
                            }
                          },
                          "region": {
                            "type": "string",
                            "example": "us-west-2",
                            "description": "Specify the AWS Region the instance is running in and the new Elastigroup will be created in.\n"
                          },
                          "availabilityZones": {
                            "type": "array",
                            "description": "An Array holding an object of availabilityZones, this configures the availability zones the group may launch instances in. If this is not passed, the availability zone configuration is taken from the imported instance. Note: This field must be null if statefulMigrationGroup.shouldKeepPrivateIp is true, and must have a minimum of one availability zone.\n",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "example": "us-west-2b",
                                  "description": "This is the name of the Availability Zone, must be a valid availability zone name.\n"
                                },
                                "subnetIds": {
                                  "type": "array",
                                  "description": "This is the ids of the subnets, if this is not defined, then the default subnet for the availability zone is used.\n                Note: This field must be a valid subnet id, this field may be null.\n",
                                  "items": {
                                    "type": "string",
                                    "example": "subnet-12345678"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "smg-7f041234"
                                  },
                                  "groupId": {
                                    "type": "string",
                                    "example": "sig-1ed12345"
                                  },
                                  "state": {
                                    "type": "string",
                                    "example": "MIGRATE_START"
                                  },
                                  "data": {
                                    "type": "object",
                                    "properties": {
                                      "originalInstanceId": {
                                        "type": "string",
                                        "example": "i-0a9c53d9f15212345"
                                      },
                                      "shouldKeepPrivateIp": {
                                        "type": "boolean",
                                        "example": false
                                      },
                                      "shouldTerminateInstance": {
                                        "type": "boolean",
                                        "example": true
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:ec2:statefulMigrationGroup"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/statefulMigrationGroup/{statefulMigrationGroupId}": {
      "get": {
        "summary": "Get Stateful Import Status",
        "description": "Get the current status of the import process. Possible values are: <ul> <li>MIGRATE_PREPARE_AWS_INSTANCE</li> <li>MIGRATE_CREATE_IMAGE</li> <li>MIGRATE_AWAIT_FOR_IMAGE</li> <li>MIGRATE_AWAIT_USER_ACTION</li> <li>MIGRATE_TERMINATE_INSTANCE</li> <li>MIGRATE_AWAIT_INSTANCE_TERMINATION</li> <li>MIGRATE_UPDATE_GROUP</li> <li>MIGRATE_LAUNCH_INSTANCE</li> <li>MIGRATE_AWAIT_INSTANCE_RUNNING</li> <li>MIGRATE_RESUME_STATEFUL_INSTANCE</li> <li>MIGRATE_AWAIT_STATEFUL_INSTANCE_RUNNING</li> <li>MIGRATE_CANCEL</li> <li>MIGRATE_FINISH</li> <li>MIGRATE_ERROR</li>\n",
        "operationId": "getStatefulImportStatus",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "statefulMigrationGroupID",
            "schema": {
              "type": "string"
            },
            "example": "smg-7f041234",
            "required": true,
            "description": "The Process ID you want to query\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "statefulMigrationId": {
                                    "type": "string",
                                    "description": "smg-07791234\n"
                                  },
                                  "groupId": {
                                    "type": "string",
                                    "description": "sig-cc6b1234\n"
                                  },
                                  "instanceId": {
                                    "type": "string",
                                    "description": "i-05ab1b1c2b95a1234\n"
                                  },
                                  "state": {
                                    "type": "string",
                                    "description": "MIGRATE_START\n"
                                  },
                                  "stateDescription": {
                                    "type": "string",
                                    "description": "Creating an image from the instance, Instance Id: i-05ab1b1c2b95a1234\n"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Stateful Import Status",
        "description": "Cancel the ongoing stateful import\n",
        "operationId": "deleteStatefulImportStatus",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "statefulMigrationGroupID",
            "schema": {
              "type": "string"
            },
            "example": "smg-7f041234",
            "required": true,
            "description": "The Process ID you want to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "smg-07791234\n"
                                  },
                                  "groupId": {
                                    "type": "string",
                                    "description": "sig-cc6b1234\n"
                                  },
                                  "state": {
                                    "type": "string",
                                    "description": "MIGRATE_CANCEL\n"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/statefulMigrationGroup/{statefulMigrationGroupId}/userAction": {
      "post": {
        "summary": "Terminate Stateful Instance During Import Process",
        "description": "Manually terminate the source stateful instance during an stateful instance import.\n",
        "operationId": "elastigroupAwsTerminateStatefulInstanceDuringImportProcess",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "statefulMigrationGroupID",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The Process ID you want to terminate\n"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "userAction": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "terminate",
                            "description": "Valid values: \"terminate\"\n"
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "userAction": {
                        "type": "object"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "smg-63d3c336"
                                  },
                                  "groupId": {
                                    "type": "string",
                                    "example": "sig-de019081"
                                  },
                                  "state": {
                                    "type": "string",
                                    "example": "MIGRATE_TERMINATE_INSTANCE"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/instance/{instanceId}/lock": {
      "post": {
        "summary": "Instance Lock",
        "description": "Set termination protection for specific instance\n",
        "operationId": "awsElastigroupInstanceLock",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "example": "i-123456",
            "description": "AWS Instance ID\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "ttlInMinutes",
            "example": "23",
            "description": "Specify a TTL (in minutes) for this lock, meaning, for how long the protection will be valid for.\n",
            "schema": {
              "type": "integer"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Lock Instances Responce",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "ff3e1e5b-91b8-42fa-8267-b988efc7f662",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/instance/i-123456/lock",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2015-06-29T13:01:55.060Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/instance/{instanceId}/unlock": {
      "post": {
        "summary": "Instance Unlock",
        "description": "Remove the termination protection from specific instance\n",
        "operationId": "awsElastigroupInstanceUnlock",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1instance~1%7BinstanceId%7D~1lock/post/parameters/0"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Unlock Instances Responce",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "ff3e1e5b-91b8-42fa-8267-b988efc7f662",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/instance/i-123456/unlock",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2015-06-29T13:01:55.060Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/emr/mrScaler": {
      "get": {
        "summary": "List All Scalers",
        "description": "List all MR Scalers and their configuration.",
        "operationId": "elastigroupAwsEmrListAll",
        "tags": [
          "Elastigroup AWS EMR Scaler"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "allOf": [
                                  {
                                    "$ref": "#/paths/~1aws~1emr~1mrScaler/post/requestBody/content/application~1json/schema/allOf/0"
                                  },
                                  {
                                    "type": "object",
                                    "title": "createdAt & updatedAt object",
                                    "properties": {
                                      "createdAt": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2018-10-10T10:50:29.000+0000"
                                      },
                                      "updatedAt": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2018-11-01T10:50:29.000+0000"
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:emr:mrScaler"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "summary": "Create Scaler",
        "description": "Create a new EMR cluster.",
        "operationId": "elastigroupAwsEmrCreate",
        "tags": [
          "Elastigroup AWS EMR Scaler"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "MRScaler object Wrapper",
                    "required": [
                      "mrScaler"
                    ],
                    "properties": {
                      "mrScaler": {
                        "required": [
                          "name",
                          "region",
                          "strategy"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "MRScaler name",
                            "example": "my MRScaler"
                          },
                          "description": {
                            "type": "string",
                            "description": "description for the MRScaler",
                            "example": "this is an MRScaler created with Spot"
                          },
                          "region": {
                            "type": "string",
                            "description": "The region of the source cluster",
                            "example": "us-west-2"
                          },
                          "strategy": {
                            "type": "object",
                            "title": "Strategy Object",
                            "description": "The strategy for creating the group. At least one of `wrapping`, `cloning`, or `new` is required.\n",
                            "properties": {
                              "wrapping": {
                                "type": "object",
                                "description": "Required unless either of `strategy.cloning` or `strategy.new` is specified. In wrap mode, MRScaler will manage an existing cluster and will scale up/down cluster task groups only. MRScaler will manage only instance groups that were created by Spot.\n",
                                "properties": {
                                  "sourceClusterId": {
                                    "type": "string",
                                    "example": "c-1234"
                                  }
                                }
                              },
                              "new": {
                                "type": "object",
                                "description": "Required unless `strategy.wrapping` or `strategy.cloning` is specified. In new mode, MRScaler will create a new cluster with the parameters specified in the request.\n",
                                "properties": {
                                  "releaseLabel": {
                                    "type": "string",
                                    "example": "emr-5.17.0"
                                  },
                                  "numberOfRetries": {
                                    "type": "integer",
                                    "example": 5
                                  }
                                }
                              },
                              "cloning": {
                                "type": "object",
                                "description": "Required unless either of `strategy.wrapping` or `strategy.new` is specified. In clone mode, MRScaler will create a new cluster that will be copied from the origin cluster. MRScaler will manage the entire cluster (the origin cluster will not be affected)\n",
                                "properties": {
                                  "originClusterId": {
                                    "type": "string",
                                    "description": "The ID of the cluster to clone",
                                    "example": "j-38EE27G2QY02I"
                                  },
                                  "includeSteps": {
                                    "type": "boolean",
                                    "description": "Include cloning of steps from the original cluster",
                                    "example": false
                                  },
                                  "numberOfRetries": {
                                    "type": "integer",
                                    "description": "number of times to retry if provisioning timeout is exceeded",
                                    "example": 5
                                  }
                                }
                              },
                              "provisioningTimeout": {
                                "type": "object",
                                "description": "EMR clusters occasionally get stuck in provisioning status due to unhealthy clusters, slowness or other issues. In such cases, a timeout can be used to automatically terminate the cluster after the defined period of time.\n",
                                "properties": {
                                  "timeout": {
                                    "type": "integer",
                                    "description": "Time (minutes) after which the cluster is automatically terminated if it's still in provisioning status.\n",
                                    "example": 15
                                  },
                                  "timeoutAction": {
                                    "type": "string",
                                    "enum": [
                                      "terminate",
                                      "terminateAndRetry"
                                    ],
                                    "description": "Desired action if the timeout is exceeded. Currently `terminate` and `terminateAndRetry` are supported.\n",
                                    "example": "terminate"
                                  }
                                }
                              }
                            }
                          },
                          "compute": {
                            "type": "object",
                            "title": "Compute Object",
                            "description": "describes the compute resources for the MR scaler",
                            "properties": {
                              "ebsRootVolumeSize": {
                                "type": "integer",
                                "description": "The EBS root volume size in GB",
                                "example": 4
                              },
                              "availabilityZones": {
                                "type": "array",
                                "description": "Array of availability zone objects",
                                "items": {
                                  "type": "object",
                                  "title": "AZ Object",
                                  "description": "Availability Zone object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "AZ name - **required in clone or new strategy only**\n",
                                      "example": "us-west-2a"
                                    },
                                    "subnetId": {
                                      "type": "string",
                                      "description": "EC2/VPC subnet ID - **required in clone or new strategy only**\n",
                                      "example": "subnet-3b5b3601"
                                    }
                                  }
                                }
                              },
                              "bootstrapActions": {
                                "type": "object",
                                "title": "BootstrapActions Object",
                                "description": "Describe bootstrap actions. For more information please see: [Advanced - Using Bootstrap And Configuration Files](https://docs.spot.io/elastigroup/tools-integrations/elastic-mapreduce/advanced-import-use-bootstrap-and-configuration-files)\n",
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "title": "Configurations object",
                                    "required": [
                                      "file"
                                    ],
                                    "properties": {
                                      "file": {
                                        "type": "object",
                                        "description": "Bootstraps file for the group",
                                        "properties": {
                                          "bucket": {
                                            "type": "string",
                                            "description": "The S3 bucket name",
                                            "example": "emr-test"
                                          },
                                          "key": {
                                            "type": "string",
                                            "description": "The S3 Bucket key",
                                            "example": "MyFile.json"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Json Configuration Object",
                                    "required": [
                                      "jsonConfiguration"
                                    ],
                                    "properties": {
                                      "jsonConfiguration": {
                                        "type": "array",
                                        "description": "Bootstraps configuration for the group",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "scriptBootstrapAction"
                                          ],
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "The name of bootstrap action"
                                            },
                                            "scriptBootstrapAction": {
                                              "required": [
                                                "path"
                                              ],
                                              "type": "object",
                                              "description": "The script run by the bootstrap action.",
                                              "properties": {
                                                "path": {
                                                  "type": "string",
                                                  "description": "The S3 bucket name",
                                                  "example": "emr-test"
                                                },
                                                "args": {
                                                  "type": "array",
                                                  "description": "A list of command line arguments to pass to the bootstrap action script.",
                                                  "items": {
                                                    "type": "string",
                                                    "example": "instance.isMaster=true"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              "steps": {
                                "type": "object",
                                "title": "Steps Object",
                                "description": "Describe emr steps. For more information please see: [Advanced - Using Bootstrap And Configuration Files](https://docs.spot.io/elastigroup/tools-integrations/elastic-mapreduce/advanced-import-use-bootstrap-and-configuration-files)\n",
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "title": "Configurations object",
                                    "required": [
                                      "file"
                                    ],
                                    "properties": {
                                      "file": {
                                        "type": "object",
                                        "description": "Steps file for the group",
                                        "properties": {
                                          "bucket": {
                                            "type": "string",
                                            "description": "The S3 bucket name",
                                            "example": "emr-test"
                                          },
                                          "key": {
                                            "type": "string",
                                            "description": "The S3 Bucket key",
                                            "example": "MyFile.json"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Json Configuration Object",
                                    "required": [
                                      "jsonConfiguration"
                                    ],
                                    "properties": {
                                      "jsonConfiguration": {
                                        "type": "array",
                                        "description": "Steps configuration for the group",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "stepConfig"
                                          ],
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "The name of configured step",
                                              "example": "stepName"
                                            },
                                            "actionOnFailure": {
                                              "type": "string",
                                              "description": "Valid values \"TERMINATE_JOB_FLOW\", \"TERMINATE_CLUSTER\", \"CANCEL_AND_WAIT\", \"CONTINUE\"",
                                              "example": "CONTINUE"
                                            },
                                            "stepConfig": {
                                              "required": [
                                                "jar"
                                              ],
                                              "type": "object",
                                              "description": "The JAR file used for the step.",
                                              "properties": {
                                                "args": {
                                                  "type": "array",
                                                  "description": "A list of command line arguments passed to the JAR file's main function when executed.",
                                                  "example": "-input",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "jar": {
                                                  "type": "string",
                                                  "description": "A path to a JAR file run during the step.",
                                                  "example": "emr-test"
                                                },
                                                "mainClass": {
                                                  "type": "string",
                                                  "description": "The name of the main class in the specified Java file.",
                                                  "example": "mainClass"
                                                },
                                                "properties": {
                                                  "type": "array",
                                                  "description": "A list of Java properties that are set when the step runs.",
                                                  "items": {
                                                    "type": "object",
                                                    "required": [
                                                      "key",
                                                      "value"
                                                    ],
                                                    "properties": {
                                                      "key": {
                                                        "type": "string",
                                                        "description": "The unique identifier of a key-value pair.",
                                                        "example": "key"
                                                      },
                                                      "value": {
                                                        "type": "string",
                                                        "description": "The value part of the identified key.",
                                                        "example": "value"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              "instanceGroups": {
                                "type": "array",
                                "description": "Array of instance groups for this MR scaler",
                                "items": {
                                  "type": "object",
                                  "title": "InstanceGroup Object",
                                  "properties": {
                                    "masterGroup": {
                                      "type": "object",
                                      "title": "Master Group Object",
                                      "required": [
                                        "lifeCycle"
                                      ],
                                      "properties": {
                                        "instanceTypes": {
                                          "$ref": "#/paths/~1aws~1emr~1mrScaler/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/0/properties/mrScaler/properties/compute/properties/instanceGroups/items/properties/coreGroup/properties/instanceTypes"
                                        },
                                        "target": {
                                          "type": "integer",
                                          "description": "Number of instances in the master group - **required in clone or new strategy only**",
                                          "example": 1
                                        },
                                        "lifeCycle": {
                                          "$ref": "#/paths/~1aws~1emr~1mrScaler/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/0/properties/mrScaler/properties/compute/properties/instanceGroups/items/properties/coreGroup/properties/lifeCycle",
                                          "example": "ON_DEMAND"
                                        },
                                        "configurations": {
                                          "oneOf": [
                                            {
                                              "$ref": "#/paths/~1aws~1emr~1mrScalerOperator/post/requestBody/content/application~1json/schema/allOf/0/properties/mrScaler/properties/compute/properties/configurations/oneOf/0"
                                            },
                                            {
                                              "$ref": "#/paths/~1aws~1emr~1mrScalerOperator/post/requestBody/content/application~1json/schema/allOf/0/properties/mrScaler/properties/compute/properties/configurations/oneOf/1"
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    "coreGroup": {
                                      "type": "object",
                                      "title": "Core Group Object",
                                      "properties": {
                                        "instanceTypes": {
                                          "type": "array",
                                          "title": "Instance Types Array",
                                          "description": "Instance types to choose from for the group - **required in clone or new strategy only**",
                                          "items": {
                                            "type": "string"
                                          },
                                          "example": [
                                            "m3.xlarge",
                                            "m4.large",
                                            "m4.xlarge",
                                            "m4.2xlarge"
                                          ]
                                        },
                                        "capacity": {
                                          "type": "object",
                                          "title": "Capacity Object",
                                          "description": "Capacity specifications for the group: minimum, maximum, and target compute resources\n",
                                          "properties": {
                                            "minimum": {
                                              "type": "integer",
                                              "description": "Minimum number of instances in group",
                                              "example": 1
                                            },
                                            "target": {
                                              "type": "integer",
                                              "description": "Desired number of instances in group",
                                              "example": 5
                                            },
                                            "maximum": {
                                              "type": "integer",
                                              "description": "Maximum number of instances in group",
                                              "example": 10
                                            },
                                            "unit": {
                                              "type": "string",
                                              "description": "Unit of \"instance\" for the number of instances or unit of \"weight\" for the number of vCPU",
                                              "example": "instance"
                                            }
                                          }
                                        },
                                        "lifeCycle": {
                                          "example": "SPOT",
                                          "description": "**required** only with `clone` or `new` strategy\n",
                                          "type": "string",
                                          "title": "LifeCycle Enum",
                                          "enum": [
                                            "SPOT",
                                            "ON_DEMAND"
                                          ]
                                        },
                                        "ebsConfiguration": {
                                          "type": "object",
                                          "title": "EBS Configuration Object",
                                          "description": "Information about the EBS configurations that will be attached to each EC2 instance in the group.\n",
                                          "required": [
                                            "ebsBlockDeviceConfigs",
                                            "ebsOptimized"
                                          ],
                                          "properties": {
                                            "ebsBlockDeviceConfigs": {
                                              "type": "array",
                                              "description": "An array of Amazon EBS volume specifications attached to a cluster instance.",
                                              "items": {
                                                "type": "object",
                                                "title": "Block Device Config Object",
                                                "description": "Amazon EBS volume specification attached to a cluster instance.",
                                                "required": [
                                                  "volumeSpecification",
                                                  "volumesPerInstance"
                                                ],
                                                "properties": {
                                                  "volumeSpecification": {
                                                    "type": "object",
                                                    "title": "Volume Specification Object",
                                                    "description": "EBS volume specifications such as volume type, IOPS, and size (GiB) that will be requested for the EBS volume attached to an EC2 instance in the cluster - required if `ebsConfiguration` is defined.\n",
                                                    "properties": {
                                                      "volumeType": {
                                                        "type": "string",
                                                        "description": "The volume type. Volume types supported are `gp2`, `io1`, and `standard` - required if `ebsConfiguration` is defined\n",
                                                        "enum": [
                                                          "gp2",
                                                          "io1",
                                                          "standard"
                                                        ],
                                                        "example": "io1"
                                                      },
                                                      "dynamicVolumeSize": {
                                                        "type": "object",
                                                        "title": "Dynamic Volume Size Object",
                                                        "required": [
                                                          "baseSize",
                                                          "resource",
                                                          "sizePerResourceUnit"
                                                        ],
                                                        "description": "Set dynamic volume size properties. **When using this object, you cannot use sizeInGB**. You must use one or the other.\n",
                                                        "properties": {
                                                          "baseSize": {
                                                            "type": "integer",
                                                            "description": "Initial size for volume.",
                                                            "example": 50
                                                          },
                                                          "resource": {
                                                            "type": "string",
                                                            "description": "Valid values: \"CPU\"\n",
                                                            "enum": [
                                                              "CPU"
                                                            ],
                                                            "example": "CPU"
                                                          },
                                                          "sizePerResourceUnit": {
                                                            "type": "integer",
                                                            "description": "Additional size per resource unit (in GB). Example: if baseSize=50, and sizePerResourceUnit=20, and an instance with 2 CPU is launched - its disk size will be of size 90GB\n",
                                                            "example": 20
                                                          }
                                                        }
                                                      },
                                                      "sizeInGB": {
                                                        "type": "integer",
                                                        "description": "The volume size, in gigabytes (GiB). This can be a number from 1 - 1024. **If the volume type is EBS-optimized, the minimum value is 10** - required if `ebsConfiguration` is defined\n",
                                                        "example": 8
                                                      },
                                                      "iops": {
                                                        "type": "integer",
                                                        "description": "The number of I/O operations per second (IOPS) that the volume supports.",
                                                        "example": 200
                                                      }
                                                    }
                                                  },
                                                  "volumesPerInstance": {
                                                    "type": "integer",
                                                    "description": "Number of EBS volumes with a specific volume configuration that will be associated with every instance in the instance group - required if `ebsConfiguration` is defined.\n",
                                                    "example": 1
                                                  }
                                                }
                                              }
                                            },
                                            "ebsOptimized": {
                                              "type": "boolean",
                                              "description": "Indicates whether an Amazon EBS volume is EBS-optimized.",
                                              "example": true
                                            }
                                          }
                                        },
                                        "configurations": {
                                          "oneOf": [
                                            {
                                              "$ref": "#/paths/~1aws~1emr~1mrScalerOperator/post/requestBody/content/application~1json/schema/allOf/0/properties/mrScaler/properties/compute/properties/configurations/oneOf/0"
                                            },
                                            {
                                              "$ref": "#/paths/~1aws~1emr~1mrScalerOperator/post/requestBody/content/application~1json/schema/allOf/0/properties/mrScaler/properties/compute/properties/configurations/oneOf/1"
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    "taskGroup": {
                                      "type": "object",
                                      "title": "Task Group Object",
                                      "properties": {
                                        "instanceTypes": {
                                          "$ref": "#/paths/~1aws~1emr~1mrScaler/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/0/properties/mrScaler/properties/compute/properties/instanceGroups/items/properties/coreGroup/properties/instanceTypes"
                                        },
                                        "capacity": {
                                          "$ref": "#/paths/~1aws~1emr~1mrScaler/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/0/properties/mrScaler/properties/compute/properties/instanceGroups/items/properties/coreGroup/properties/capacity"
                                        },
                                        "lifeCycle": {
                                          "$ref": "#/paths/~1aws~1emr~1mrScaler/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/0/properties/mrScaler/properties/compute/properties/instanceGroups/items/properties/coreGroup/properties/lifeCycle",
                                          "example": "SPOT",
                                          "description": "**required** only with `clone` or `new` strategy\n"
                                        },
                                        "ebsConfiguration": {
                                          "$ref": "#/paths/~1aws~1emr~1mrScaler/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/0/properties/mrScaler/properties/compute/properties/instanceGroups/items/properties/coreGroup/properties/ebsConfiguration"
                                        },
                                        "configurations": {
                                          "oneOf": [
                                            {
                                              "$ref": "#/paths/~1aws~1emr~1mrScalerOperator/post/requestBody/content/application~1json/schema/allOf/0/properties/mrScaler/properties/compute/properties/configurations/oneOf/0"
                                            },
                                            {
                                              "$ref": "#/paths/~1aws~1emr~1mrScalerOperator/post/requestBody/content/application~1json/schema/allOf/0/properties/mrScaler/properties/compute/properties/configurations/oneOf/1"
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "instanceWeights": {
                                "type": "array",
                                "description": "An array of custom-weight settings",
                                "items": {
                                  "type": "object",
                                  "title": "Instance Weight Object",
                                  "description": "Settings for a single custom weight",
                                  "required": [
                                    "instanceType",
                                    "weightedCapacity"
                                  ],
                                  "properties": {
                                    "instanceType": {
                                      "type": "string",
                                      "description": "The instance type to set weight for\n",
                                      "example": "m4.large"
                                    },
                                    "weightedCapacity": {
                                      "type": "integer",
                                      "description": "Weight for the chosen instance type.\n",
                                      "example": 3
                                    }
                                  }
                                }
                              },
                              "emrManagedMasterSecurityGroup": {
                                "type": "string",
                                "description": "EMR Managed Security group that will be set to the master instance group",
                                "example": "sg-123456789"
                              },
                              "emrManagedSlaveSecurityGroup": {
                                "type": "string",
                                "description": "EMR Managed Security group that will be set to the slave instance group",
                                "example": "sg-123456789"
                              },
                              "additionalMasterSecurityGroups": {
                                "type": "array",
                                "description": "A list of additional Amazon EC2 security group IDs for the master node.",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "sg-123456789"
                                ]
                              },
                              "additionalSlaveSecurityGroups": {
                                "type": "array",
                                "description": "A list of additional Amazon EC2 security group IDs for the core and task nodes.",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "sg-123456789"
                                ]
                              },
                              "serviceAccessSecurityGroup": {
                                "type": "string",
                                "description": "The identifier of the Amazon EC2 security group for the Amazon EMR service to access clusters in VPC private subnets\n",
                                "example": "EMR_DefaultRole"
                              },
                              "customAmiId": {
                                "type": "string",
                                "description": "The ID of a custom Amazon EBS-backed Linux AMI if the cluster uses a custom AMI.",
                                "example": "ami-123456789"
                              },
                              "repoUpgradeOnBoot": {
                                "type": "string",
                                "description": "**Applies only when CustomAmiID is used**. Specifies the type of updates that are applied from the Amazon Linux AMI package repositories when an instance boots using the AMI.\n",
                                "enum": [
                                  "SECURITY",
                                  "NONE"
                                ],
                                "example": "SECURITY"
                              },
                              "tags": {
                                "type": "array",
                                "description": "array of key:value pairs of tags\n",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "tagKey": {
                                      "type": "string",
                                      "description": "The tag's key",
                                      "example": "Creator"
                                    },
                                    "tagValue": {
                                      "type": "string",
                                      "description": "The tag's value",
                                      "example": "someUser"
                                    }
                                  }
                                }
                              },
                              "ec2KeyName": {
                                "type": "string",
                                "description": "The name of an Amazon EC2 key-pair that can be used to `SSH` to the master node.\n",
                                "example": "myEC2KeyName"
                              },
                              "applications": {
                                "type": "array",
                                "description": "A case-insensitive array of applications for Amazon EMR to install and configure when launching the cluster.\n",
                                "items": {
                                  "type": "object",
                                  "title": "Application Object",
                                  "description": "Application for Amazon EMR to install and configure when launching the cluster",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Application name",
                                      "example": "Hue"
                                    },
                                    "args": {
                                      "type": "array",
                                      "description": "Application arguments",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "version": {
                                      "type": "string",
                                      "description": "Application version",
                                      "example": "1.0"
                                    }
                                  }
                                }
                              },
                              "configurations": {
                                "oneOf": [
                                  {
                                    "type": "array",
                                    "title": "Json Configuration Object",
                                    "required": [
                                      "jsonConfiguration"
                                    ],
                                    "description": "EMR cluster configuration in JSON format. You can use `jsonConfiguration` or `file`, but not both. Can be used in `masterGroup`, `coreGroup`, and `taskGroup`.\n",
                                    "items": {
                                      "title": "jsonConfiguration",
                                      "type": "object",
                                      "properties": {
                                        "classification": {
                                          "type": "string",
                                          "description": "The grouping within a configuration.",
                                          "example": "mapred-site"
                                        },
                                        "properties": {
                                          "type": "object",
                                          "description": "Within a configuration classification, a set of properties that represent the settings that you want to change in the configuration file. Duplicates not allowed.\n",
                                          "example": {
                                            "mapred.tasktracker.map.tasks.maximum": 2
                                          }
                                        },
                                        "configuartions": {
                                          "type": "array",
                                          "description": "Array of objects with any keys. This can include additional levels (i.e., nested) of classification, properties, and configurations.\n",
                                          "items": {
                                            "type": "object",
                                            "title": "Nested Configuration Object",
                                            "properties": {
                                              "classification": {
                                                "type": "string",
                                                "description": "The grouping within a configuration.",
                                                "example": "hadoop-env"
                                              },
                                              "properties": {
                                                "type": "object",
                                                "description": "Within a configuration classification, a set of properties that represent the settings that you want to change in the configuration file. Duplicates not allowed.\n",
                                                "example": {
                                                  "HADOOP_DATANODE_HEAPSIZE": 2048,
                                                  "HADOOP_NAMENODE_OPTS": "-XX:GCTimeRatio=19"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Configurations object",
                                    "required": [
                                      "file"
                                    ],
                                    "properties": {
                                      "file": {
                                        "type": "object",
                                        "description": "Configurations file for the group",
                                        "properties": {
                                          "bucket": {
                                            "type": "string",
                                            "description": "S3 bucket name of the configurations file for the instance group",
                                            "example": "spot-labs"
                                          },
                                          "key": {
                                            "type": "string",
                                            "description": "S3 key name of the configurations file for the instance group",
                                            "example": "emr_configurations.json"
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          },
                          "cluster": {
                            "type": "object",
                            "title": "EMR Cluster Object",
                            "description": "**Allowed only when the `new` strategy is chosen.**\n",
                            "properties": {
                              "terminationProtected": {
                                "type": "boolean",
                                "description": "Specifies whether the Amazon EC2 instances in the cluster are protected from termination by API calls, user intervention, or in the event of a job-flow error\n",
                                "example": false
                              },
                              "keepJobFlowAliveWhenNoSteps": {
                                "type": "boolean",
                                "description": "Specifies whether the cluster should remain available after completing all steps",
                                "example": true
                              },
                              "logUri": {
                                "type": "string",
                                "description": "The path to the Amazon S3 location where logs for this cluster are stored.",
                                "example": "s3://job-status"
                              },
                              "additionalInfo": {
                                "type": "string",
                                "description": "This is meta information about third-party applications that third-party vendors use for testing purposes.\n",
                                "example": "{'test':'more information'}"
                              },
                              "jobFlowRole": {
                                "type": "string",
                                "description": "The IAM role that was specified when the job flow was launched. The EC2 instances of the job flow assume this role.\n",
                                "example": "EMR_EC2_DefaultRole"
                              },
                              "serviceRole": {
                                "type": "string",
                                "description": "The IAM role that will be assumed by the Amazon EMR service to access AWS resources on your behalf\n",
                                "example": "someIAMRole"
                              },
                              "securityConfiguration": {
                                "type": "string",
                                "description": "The name of the security configuration applied to the cluster",
                                "example": "testConfig"
                              }
                            }
                          },
                          "scheduling": {
                            "type": "object",
                            "title": "Scheduling Object",
                            "description": "Schedule tasks to execute on the Elastigroup.",
                            "properties": {
                              "tasks": {
                                "type": "array",
                                "description": "An array of scheduled tasks.",
                                "items": {
                                  "type": "object",
                                  "title": "Task Object",
                                  "description": "A scheduled task",
                                  "properties": {
                                    "isEnabled": {
                                      "type": "boolean",
                                      "description": "Enable/Disable the specified scheduling task.",
                                      "example": true,
                                      "default": true
                                    },
                                    "instanceGroupType": {
                                      "type": "string",
                                      "description": "Select the EMR instance groups to execute the scheduled task on. Valid values: `task`\n",
                                      "example": "task",
                                      "enum": [
                                        "task"
                                      ]
                                    },
                                    "taskType": {
                                      "type": "string",
                                      "description": "The type of task to be scheduled. Valid values: `setCapacity`\n",
                                      "example": "setCapacity",
                                      "enum": [
                                        "setCapacity"
                                      ]
                                    },
                                    "cronExpression": {
                                      "type": "string",
                                      "description": "A valid Cron expression",
                                      "example": "* 8 * 10 *"
                                    },
                                    "targetCapacity": {
                                      "type": "integer",
                                      "description": "Set a new target capacity for the Elastigroup.",
                                      "example": 2
                                    },
                                    "minCapacity": {
                                      "type": "integer",
                                      "description": "Set a new minimum capacity for the Elastigroup.",
                                      "example": 2
                                    },
                                    "maxCapacity": {
                                      "type": "integer",
                                      "description": "Set a new maximum capacity for the Elastigroup.",
                                      "example": 2
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "scaling": {
                            "type": "object",
                            "title": "Scaling Object",
                            "description": "Set scaling polices.",
                            "properties": {
                              "up": {
                                "type": "array",
                                "title": "Scaling Up Object",
                                "description": "A scale-up policy",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "policyName": {
                                      "type": "string",
                                      "description": "The Scaling policy name",
                                      "example": "myScaleUpPolicyName"
                                    },
                                    "metricName": {
                                      "type": "string",
                                      "description": "The name of the metric",
                                      "default": "AppsPending",
                                      "example": "AppsPending"
                                    },
                                    "unit": {
                                      "type": "string",
                                      "description": "The unit for the alarm's associated metric.",
                                      "example": "count",
                                      "enum": [
                                        "seconds",
                                        "microseconds",
                                        "milliseconds",
                                        "bytes",
                                        "kilobytes",
                                        "megabytes",
                                        "gigabytes",
                                        "terabytes",
                                        "bits",
                                        "kilobits",
                                        "megabits",
                                        "gigabits",
                                        "terabits",
                                        "percent",
                                        "count",
                                        "bytes/second",
                                        "kilobytes/second",
                                        "megabytes/second",
                                        "gigabytes/second",
                                        "terabytes/second",
                                        "bits/second",
                                        "kilobits/second",
                                        "megabits/second",
                                        "gigabits/second",
                                        "terabits/second",
                                        "count/second",
                                        "none"
                                      ]
                                    },
                                    "threshold": {
                                      "type": "integer",
                                      "description": "The value against which the specified statistic is compared.",
                                      "example": 100
                                    },
                                    "action": {
                                      "type": "object",
                                      "title": "Scaling up Action Object",
                                      "description": "The action to take when scale up is needed.",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "description": "The type of the action to take when scale up is needed. Valid Values: `adjustment` | `updateCapacity` | `setMinTarget`\n",
                                          "enum": [
                                            "adjustment",
                                            "updateCapacity",
                                            "setMinTarget"
                                          ],
                                          "example": "adjustment"
                                        },
                                        "minTargetCapacity": {
                                          "type": "integer",
                                          "description": "Required if using `setMinTarget` as action type. A number specifying the target capacity needed.\n",
                                          "example": 1
                                        },
                                        "adjustment": {
                                          "type": "integer",
                                          "description": "Required if using `adjustment` as action type. The number associated with the specified adjustment type.\n",
                                          "example": 2
                                        },
                                        "target": {
                                          "type": "integer",
                                          "description": "Required if using `updateCapacity` as action type and neither `minimum` nor `maximum` are defined. The desired number of instances.\n",
                                          "example": 2
                                        },
                                        "minimum": {
                                          "type": "integer",
                                          "description": "Required if using `updateCapacity` as action type and neither `target` nor `maximum` are defined. The lower limit number of instances that you can scale down to.\n",
                                          "example": 1
                                        },
                                        "maximum": {
                                          "type": "integer",
                                          "description": "Required if using `updateCapacity` as action type and neither `target` nor `minimum` defined. The upper limit number of instances that you can scale up to.\n",
                                          "example": 5
                                        }
                                      }
                                    },
                                    "adjustment": {
                                      "type": "integer",
                                      "description": "**Cannot be used if using `action` or `minTargetCapacity`**. The number associated with the specified adjustment type.\n",
                                      "example": 2
                                    },
                                    "period": {
                                      "type": "integer",
                                      "description": "The period in seconds over which the statistic is applied.",
                                      "example": 300
                                    },
                                    "evaluationPeriods": {
                                      "type": "integer",
                                      "description": "The number of periods over which data is compared to the specified threshold",
                                      "example": 1
                                    },
                                    "dimensions": {
                                      "type": "array",
                                      "description": "The dimensions for the alarm's associated metric.",
                                      "items": {
                                        "type": "object",
                                        "description": "The dimension for the alarm's associated metric.",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "the dimension name",
                                            "example": "JobFlowId"
                                          }
                                        }
                                      }
                                    },
                                    "operator": {
                                      "type": "string",
                                      "description": "The operator to use in order to determine if the scaling policy is applicable. Valid values: `gt` | `gte` | `lt` | `lte`\n",
                                      "enum": [
                                        "gte",
                                        "lte",
                                        "lt",
                                        "gt"
                                      ],
                                      "example": "gte"
                                    },
                                    "statistic": {
                                      "type": "string",
                                      "description": "The metric statistics to return.  Valid Values: `average`, `sum`, `sampleCount`, `maximum`, `minimum`\n",
                                      "enum": [
                                        "average",
                                        "sum",
                                        "sampleCount",
                                        "maximum",
                                        "minimum"
                                      ]
                                    },
                                    "namespace": {
                                      "type": "string",
                                      "description": "The namespace for the alarm's associated metric.",
                                      "default": "AWS/ElasticMapReduce",
                                      "example": "AWS/ElasticMapReduce"
                                    }
                                  }
                                }
                              },
                              "down": {
                                "type": "array",
                                "title": "Scaling Down Object",
                                "description": "A scale-down policy",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "policyName": {
                                      "type": "string",
                                      "description": "The Scaling policy name",
                                      "example": "myScaleDownPolicyName"
                                    },
                                    "metricName": {
                                      "type": "string",
                                      "description": "The name of the metric",
                                      "default": "AppsPending",
                                      "example": "AppsPending"
                                    },
                                    "unit": {
                                      "type": "string",
                                      "description": "The unit for the alarm's associated metric.",
                                      "example": "count",
                                      "enum": [
                                        "seconds",
                                        "microseconds",
                                        "milliseconds",
                                        "bytes",
                                        "kilobytes",
                                        "megabytes",
                                        "gigabytes",
                                        "terabytes",
                                        "bits",
                                        "kilobits",
                                        "megabits",
                                        "gigabits",
                                        "terabits",
                                        "percent",
                                        "count",
                                        "bytes/second",
                                        "kilobytes/second",
                                        "megabytes/second",
                                        "gigabytes/second",
                                        "terabytes/second",
                                        "bits/second",
                                        "kilobits/second",
                                        "megabits/second",
                                        "gigabits/second",
                                        "terabits/second",
                                        "count/second",
                                        "none"
                                      ]
                                    },
                                    "threshold": {
                                      "type": "integer",
                                      "description": "The value against which the specified statistic is compared.",
                                      "example": 100
                                    },
                                    "action": {
                                      "type": "object",
                                      "title": "Scaling Down Action Object",
                                      "description": "The action to take when scale down is needed.",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "description": "The type of the action to take when scale down is needed. Valid Values: `adjustment` | `updateCapacity` | `setMaxTarget`\n",
                                          "enum": [
                                            "adjustment",
                                            "updateCapacity",
                                            "setMaxTarget"
                                          ],
                                          "example": "adjustment"
                                        },
                                        "maxTargetCapacity": {
                                          "type": "integer",
                                          "description": "Required if using `setMaxTarget` as action type. A number specifying the target capacity needed.\n",
                                          "example": 1
                                        },
                                        "adjustment": {
                                          "type": "integer",
                                          "description": "Required if using `adjustment` as action type. The number associated with the specified adjustment type.\n",
                                          "example": 2
                                        },
                                        "target": {
                                          "type": "integer",
                                          "description": "Required if using `updateCapacity` as action type and neither `minimum` nor `maximum` are defined. The desired number of instances.\n",
                                          "example": 2
                                        },
                                        "minimum": {
                                          "type": "integer",
                                          "description": "Required if using `updateCapacity` as action type and neither `target` nor `maximum` are defined. The lower limit number of instances that you can scale down to.\n",
                                          "example": 1
                                        },
                                        "maximum": {
                                          "type": "integer",
                                          "description": "Required if using `updateCapacity` as action type and neither `target` nor `minimum` defined. The upper limit number of instances that you can scale up to.\n",
                                          "example": 5
                                        }
                                      }
                                    },
                                    "adjustment": {
                                      "type": "integer",
                                      "description": "**Cannot be used if using `action` or `maxTargetCapacity`**. The number associated with the specified adjustment type.\n",
                                      "example": 2
                                    },
                                    "period": {
                                      "type": "integer",
                                      "description": "The period in seconds over which the statistic is applied.",
                                      "example": 300
                                    },
                                    "evaluationPeriods": {
                                      "type": "integer",
                                      "description": "The number of periods over which data is compared to the specified threshold",
                                      "example": 1
                                    },
                                    "dimensions": {
                                      "type": "array",
                                      "description": "The dimensions for the alarm's associated metric.",
                                      "items": {
                                        "type": "object",
                                        "description": "The dimension for the alarm's associated metric.",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "the dimension name",
                                            "example": "JobFlowId"
                                          }
                                        }
                                      }
                                    },
                                    "operator": {
                                      "type": "string",
                                      "description": "The operator to use in order to determine if the scaling policy is applicable. Valid values: `gt` | `gte` | `lt` | `lte`\n",
                                      "enum": [
                                        "gte",
                                        "lte",
                                        "lt",
                                        "gt"
                                      ],
                                      "example": "lte"
                                    },
                                    "statistic": {
                                      "type": "string",
                                      "description": "The metric statistics to return.  Valid Values: `average`, `sum`, `sampleCount`, `maximum`, `minimum`\n",
                                      "enum": [
                                        "average",
                                        "sum",
                                        "sampleCount",
                                        "maximum",
                                        "minimum"
                                      ]
                                    },
                                    "namespace": {
                                      "type": "string",
                                      "description": "The namespace for the alarm's associated metric.",
                                      "default": "AWS/ElasticMapReduce",
                                      "example": "AWS/ElasticMapReduce"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "terminationPolicies": {
                            "type": "array",
                            "description": "Termination policies for EMR clusters based on CloudWatch Metrics.\n",
                            "items": {
                              "type": "object",
                              "title": "Termination Policy Object",
                              "description": "A termination policy for EMR clusters based on CloudWatch Metrics.",
                              "properties": {
                                "statements": {
                                  "type": "array",
                                  "description": "Array of termination statements to execute",
                                  "items": {
                                    "type": "object",
                                    "title": "Termination Statement Object",
                                    "description": "A termination statement to execute",
                                    "required": [
                                      "namespace",
                                      "metricName",
                                      "threshold"
                                    ],
                                    "properties": {
                                      "namespace": {
                                        "type": "string",
                                        "description": "**Must be `AWS/ElasticMapReduce`\"\n",
                                        "example": "AWS/ElasticMapReduce"
                                      },
                                      "metricName": {
                                        "type": "string",
                                        "description": "The name of the metric in CloudWatch which the statement will be based on.",
                                        "example": "AppsRunning"
                                      },
                                      "statistic": {
                                        "type": "string",
                                        "description": "The aggregation method of the given metric",
                                        "enum": [
                                          "average",
                                          "sum",
                                          "sampleCount",
                                          "maximum",
                                          "minimum"
                                        ],
                                        "default": "sum"
                                      },
                                      "unit": {
                                        "type": "string",
                                        "description": "The unit for a given metric.",
                                        "example": "count",
                                        "enum": [
                                          "seconds",
                                          "microseconds",
                                          "milliseconds",
                                          "bytes",
                                          "kilobytes",
                                          "megabytes",
                                          "gigabytes",
                                          "terabytes",
                                          "bits",
                                          "kilobits",
                                          "megabits",
                                          "gigabits",
                                          "terabits",
                                          "percent",
                                          "count",
                                          "bytes/second",
                                          "kilobytes/second",
                                          "megabytes/second",
                                          "gigabytes/second",
                                          "terabytes/second",
                                          "bits/second",
                                          "kilobits/second",
                                          "megabits/second",
                                          "gigabits/second",
                                          "terabits/second",
                                          "count/second",
                                          "none"
                                        ],
                                        "default": "count"
                                      },
                                      "threshold": {
                                        "type": "number",
                                        "format": "double",
                                        "description": "The value that the specified statistic is compared to.",
                                        "example": 2
                                      },
                                      "period": {
                                        "type": "integer",
                                        "description": "The period in seconds over which the statistic is applied.",
                                        "example": 300
                                      },
                                      "evaluationPeriods": {
                                        "type": "integer",
                                        "description": "The number of periods over which data is compared to the specified threshold",
                                        "example": 1
                                      },
                                      "operator": {
                                        "type": "string",
                                        "description": "The operator to use in order to determine if the scaling policy is applicable. Valid values: `gt` | `gte` | `lt` | `lte`\n",
                                        "enum": [
                                          "gte",
                                          "lte",
                                          "lt",
                                          "gt"
                                        ],
                                        "example": "gte",
                                        "default": "gte"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1aws~1emr~1mrScaler/post/requestBody/content/application~1json/schema/allOf/0"
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:emr:mrScaler"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/emr/mrScalerOperator": {
      "post": {
        "summary": "Create Scaler Operator",
        "description": "mrScaler – required will have the same configuration as in createMrScaler with one exception:\nwe will only work with strategy of “new”, no “clone”/”warp” will be allowed.\n",
        "operationId": "elastigroupAwsEmrOperatorCreate",
        "tags": [
          "Elastigroup AWS EMR Scaler"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "MRScaler object Wrapper",
                    "required": [
                      "mrScaler"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "GuyEmrOperatorTest"
                      },
                      "mrScaler": {
                        "required": [
                          "name",
                          "region",
                          "strategy"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "MRScaler name",
                            "example": "my MRScaler"
                          },
                          "description": {
                            "type": "string",
                            "description": "description for the MRScaler",
                            "example": "this is an MRScaler created with Spot"
                          },
                          "region": {
                            "type": "string",
                            "description": "The region of the source cluster",
                            "example": "us-west-2"
                          },
                          "strategy": {
                            "$ref": "#/paths/~1aws~1emr~1mrScaler/post/requestBody/content/application~1json/schema/allOf/0/properties/mrScaler/properties/strategy"
                          },
                          "compute": {
                            "$ref": "#/paths/~1aws~1emr~1mrScaler/post/requestBody/content/application~1json/schema/allOf/0/properties/mrScaler/properties/compute"
                          },
                          "cluster": {
                            "$ref": "#/paths/~1aws~1emr~1mrScaler/post/requestBody/content/application~1json/schema/allOf/0/properties/mrScaler/properties/cluster"
                          },
                          "scheduling": {
                            "$ref": "#/paths/~1aws~1emr~1mrScaler/post/requestBody/content/application~1json/schema/allOf/0/properties/mrScaler/properties/scheduling"
                          },
                          "scaling": {
                            "$ref": "#/paths/~1aws~1emr~1mrScaler/post/requestBody/content/application~1json/schema/allOf/0/properties/mrScaler/properties/scaling"
                          },
                          "terminationPolicies": {
                            "type": "array",
                            "description": "Termination policies for EMR clusters based on CloudWatch Metrics.\n",
                            "items": {
                              "$ref": "#/paths/~1aws~1emr~1mrScaler/post/requestBody/content/application~1json/schema/allOf/0/properties/mrScaler/properties/terminationPolicies/items"
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1aws~1emr~1mrScaler/post/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/emr/mrScaler/{mrScalerId}": {
      "get": {
        "summary": "Get Scaler",
        "description": "Get a description of a specific MR Scaler and its configuration.",
        "operationId": "elastigroupAwsEmrListScaler",
        "tags": [
          "Elastigroup AWS EMR Scaler"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "mrScalerId",
            "required": true,
            "description": "The MRScaler ID\n",
            "schema": {
              "type": "string"
            },
            "example": "simrs-12223"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1aws~1emr~1mrScaler/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Scaler",
        "description": "Update an MR Scaler. Partial updating is supported.",
        "operationId": "elastigroupAwsEmrUpdateScaler",
        "tags": [
          "Elastigroup AWS EMR Scaler"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1emr~1mrScaler~1%7BmrScalerId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "description": "An EMR Scaler Object",
                    "properties": {
                      "mrScaler": {
                        "type": "object",
                        "description": "MR Scaler Object - Update Task Capacity",
                        "properties": {
                          "compute": {
                            "type": "object",
                            "properties": {
                              "instanceGroups": {
                                "type": "object",
                                "properties": {
                                  "taskGroup": {
                                    "type": "object",
                                    "properties": {
                                      "capacity": {
                                        "type": "object",
                                        "properties": {
                                          "maximum": {
                                            "type": "integer",
                                            "example": 0
                                          },
                                          "target": {
                                            "type": "integer",
                                            "example": 0
                                          },
                                          "minimum": {
                                            "type": "integer",
                                            "example": 0
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "description": "An EMR Scaler Object",
                    "properties": {
                      "mrScaler": {
                        "type": "object",
                        "description": "MR Scaler Object - Update Dynamic Volume Size in EBS Configuration",
                        "properties": {
                          "compute": {
                            "type": "object",
                            "properties": {
                              "instanceGroups": {
                                "type": "object",
                                "properties": {
                                  "taskGroup": {
                                    "type": "object",
                                    "properties": {
                                      "ebsConfiguration": {
                                        "type": "object",
                                        "properties": {
                                          "ebsBlockDeviceConfigs": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "volumeSpecification": {
                                                  "type": "object",
                                                  "properties": {
                                                    "dynamicVolumeSize": {
                                                      "type": "object",
                                                      "properties": {
                                                        "baseSize": {
                                                          "type": "integer",
                                                          "example": 30
                                                        },
                                                        "resource": {
                                                          "type": "string",
                                                          "example": "CPU"
                                                        },
                                                        "sizePerResourceUnit": {
                                                          "type": "integer",
                                                          "example": 15
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1aws~1emr~1mrScaler/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Scaler",
        "description": "Delete an MR Scaler",
        "operationId": "elastigroupAwsEmrDeleteMrsScaler",
        "tags": [
          "Elastigroup AWS EMR Scaler"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1emr~1mrScaler~1%7BmrScalerId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/emr/mrScaler/{mrScalerId}/instance": {
      "get": {
        "summary": "List Instances",
        "description": "Get a list of all instances and instances groups in the cluster",
        "operationId": "elastigroupAwsEmrListInstances",
        "tags": [
          "Elastigroup AWS EMR Scaler"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1emr~1mrScaler~1%7BmrScalerId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "EMR Scaler Instance Object",
                                "description": "An instance in the cluster",
                                "properties": {
                                  "instanceId": {
                                    "type": "string",
                                    "description": "The instance ID",
                                    "example": "i-asdfjk3989"
                                  },
                                  "instanceGroupId": {
                                    "type": "string",
                                    "example": "ig-asdfjl2",
                                    "description": "The instance group ID"
                                  },
                                  "instanceGroupRole": {
                                    "type": "string",
                                    "example": "MASTER",
                                    "description": "The instance group role"
                                  },
                                  "instanceType": {
                                    "type": "string",
                                    "example": "m1.medium",
                                    "description": "The instance type"
                                  },
                                  "availabilityZone": {
                                    "type": "string",
                                    "example": "us-east-1a",
                                    "description": "The availability zone for the instance"
                                  },
                                  "status": {
                                    "type": "string",
                                    "example": "Running",
                                    "description": "The instance status"
                                  },
                                  "updatedAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2015-08-02T09:11:16.356Z",
                                    "description": "The last date-time this item was updated"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:emr:mrScaler:instance"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/emr/mrScaler/{mrScalerId}/scale/up": {
      "put": {
        "summary": "Scale Up",
        "description": "Scale up MR Scaler instances",
        "operationId": "elastigroupAwsEmrScaleUp",
        "tags": [
          "Elastigroup AWS EMR Scaler"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1emr~1mrScaler~1%7BmrScalerId%7D/get/parameters/1"
          },
          {
            "in": "query",
            "name": "adjustment",
            "schema": {
              "type": "integer",
              "example": 3
            },
            "description": "Number of instances to add to the MR Scaler",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "An EMR Scale Up Object",
                                "description": "An EMR Scale Up Object",
                                "properties": {
                                  "modifiedInstanceGroups": {
                                    "type": "array",
                                    "description": "The groups modified by this change",
                                    "items": {
                                      "type": "string"
                                    },
                                    "example": [
                                      "ig-2470IUVXLJ652S",
                                      "ig-9870IUVXMYYW9"
                                    ]
                                  },
                                  "newInstanceGroups": {
                                    "type": "array",
                                    "description": "Newly launched instances due to this change",
                                    "items": {
                                      "type": "string"
                                    },
                                    "example": [
                                      "ig-0570LPWAZXBSR3"
                                    ]
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:emr:mrScaler:scale"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/emr/mrScaler/{mrScalerId}/scale/down": {
      "put": {
        "summary": "Scale Down",
        "description": "Scale down MR Scaler instances",
        "operationId": "elastigroupAwsEmrScaleDown",
        "tags": [
          "Elastigroup AWS EMR Scaler"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1emr~1mrScaler~1%7BmrScalerId%7D/get/parameters/1"
          },
          {
            "in": "query",
            "name": "adjustment",
            "description": "Number of instances to remove from the MR Scaler",
            "schema": {
              "type": "integer",
              "example": 3
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "An EMR Scale Down Object",
                                "description": "An EMR Scale Down Object",
                                "properties": {
                                  "modifiedInstanceGroups": {
                                    "type": "array",
                                    "description": "The groups modified by this change",
                                    "items": {
                                      "type": "string"
                                    },
                                    "example": [
                                      "ig-2470IUVXLJ652S",
                                      "ig-9870IUVXMYYW9"
                                    ]
                                  },
                                  "victimInstances": {
                                    "type": "array",
                                    "description": "Terminated instances due to this change",
                                    "items": {
                                      "type": "string"
                                    },
                                    "example": [
                                      "ig-0570LPWAZXBSR3"
                                    ]
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:emr:mrScaler:scale"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/emr/mrScaler/{mrScalerId}/cluster": {
      "get": {
        "summary": "List Scalers",
        "description": "Get MR Scaler cluster",
        "operationId": "elastigroupAwsEmrListMrScalerClusters",
        "tags": [
          "Elastigroup AWS EMR Scaler"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1emr~1mrScaler~1%7BmrScalerId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "MR Scaler Cluster Object",
                                "description": "An MR Scaler cluster",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The cluster's ID",
                                    "example": "j-3N7WPI3R0D1R7"
                                  },
                                  "availabilityZone": {
                                    "type": "string",
                                    "description": "The cluster's AZ",
                                    "example": "us-east-1a"
                                  },
                                  "state": {
                                    "type": "string",
                                    "description": "The cluster's state",
                                    "example": "terminated"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The date-time this cluster was created",
                                    "example": "2015-08-02T09:11:16.356Z"
                                  },
                                  "updatedAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The date-time this cluster was last updated",
                                    "example": "2015-08-02T10:11:16.356Z"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:emr:mrScaler:cluster"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/emr/mrScaler/{mrScalerId}/costs": {
      "get": {
        "summary": "Get Scaler Costs",
        "description": "Get financial information on the MR Scaler, including running time, costs, and savings",
        "operationId": "elastigroupAwsEmrListMrScalerCosts",
        "tags": [
          "Elastigroup AWS EMR Scaler"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1aws~1emr~1mrScaler~1%7BmrScalerId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "MR Scaler Costs Object",
                                "description": "MR Scaler Costs Object",
                                "properties": {
                                  "running": {
                                    "type": "object",
                                    "description": "Info about the running duration of this MR Scaler",
                                    "properties": {
                                      "value": {
                                        "type": "number",
                                        "format": "float",
                                        "description": "The duration this object has been running, denominated in `unit`\n",
                                        "example": 294.3
                                      },
                                      "unit": {
                                        "type": "string",
                                        "example": "hours",
                                        "description": "Unit of denomination\n"
                                      }
                                    }
                                  },
                                  "savings": {
                                    "type": "object",
                                    "description": "Info about the savings accrued on this MR Scaler",
                                    "properties": {
                                      "value": {
                                        "type": "number",
                                        "format": "float",
                                        "description": "The savings accrued during the running duration\n",
                                        "example": 60.5263
                                      },
                                      "unit": {
                                        "type": "string",
                                        "example": "percentage",
                                        "description": "Unit of denomination\n"
                                      }
                                    }
                                  },
                                  "costs": {
                                    "type": "object",
                                    "description": "Info on the costs of running this MR Scaler",
                                    "properties": {
                                      "actual": {
                                        "type": "number",
                                        "format": "float",
                                        "description": "The costs during the running duration\n",
                                        "example": 8.829
                                      },
                                      "potential": {
                                        "type": "number",
                                        "format": "float",
                                        "description": "The costs that would have been incurred if this MR Scaler wasn't running on Spot\n",
                                        "example": 22.3668
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:emr:mrScaler:costs"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/status": {
      "get": {
        "summary": "Get Elastigroup Status",
        "description": "Describes the current status of a specific Elastigroup – entailing information regarding running instance and their status\n",
        "operationId": "elastigroupAwsStatus",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123456789",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "e593ff58-067d-4340-92f9-8b1c0bad70d7",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-12345678/status",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-06-20T11:35:01.745Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "object",
                                    "title": "Instance Status",
                                    "properties": {
                                      "spotInstanceRequestId": {
                                        "type": "string",
                                        "title": "Spot Instance Request ID",
                                        "example": "sir-3thgagpn"
                                      },
                                      "instanceId": {
                                        "type": "string",
                                        "title": "Instance ID",
                                        "example": "i-0cc289f12538e4758"
                                      },
                                      "instanceType": {
                                        "type": "string",
                                        "title": "Instance Type",
                                        "example": "t2.micro"
                                      },
                                      "product": {
                                        "type": "string",
                                        "title": "Operating System",
                                        "example": "Linux/UNIX"
                                      },
                                      "groupId": {
                                        "type": "string",
                                        "title": "Group ID",
                                        "example": "sig-12345678"
                                      },
                                      "availabilityZone": {
                                        "type": "string",
                                        "title": "AWS Availability Zone",
                                        "example": "us-west-2a"
                                      },
                                      "privateIp": {
                                        "type": "string",
                                        "title": "Private IP",
                                        "example": "172.31.28.210"
                                      },
                                      "createdAt": {
                                        "type": "string",
                                        "title": "Creation Date & Time",
                                        "example": "2018-06-25T11:49:00.000Z"
                                      },
                                      "publicIp": {
                                        "type": "string",
                                        "title": "Public IP",
                                        "example": "10.10.10.10"
                                      },
                                      "status": {
                                        "type": "string",
                                        "title": "Status",
                                        "example": "fulfilled"
                                      },
                                      "lockStatus": {
                                        "type": "string",
                                        "title": "Lock Status",
                                        "example": "locked",
                                        "enum": [
                                          "locked",
                                          "unlocked"
                                        ]
                                      },
                                      "protectedUntil": {
                                        "type": "string",
                                        "title": "Protected Until",
                                        "example": "2021-12-29T11:23:02.714Z"
                                      }
                                    }
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 2,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/events": {
      "get": {
        "summary": "Activity Events",
        "description": "Get historical data on events that happened in a specific Elastigroup like update, scaling activities, creation of new instances, etc.\n",
        "operationId": "elastigroupAwsActivityEvents",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "fromDate",
            "example": "2016-10-01",
            "description": "Starting date to fetch the events from\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123456789",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-12345/events?fromDate=2016-10-01",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2016-01-21T17:12:51.451Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "array",
                                      "items": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "groupId": {
                                              "type": "string",
                                              "title": "Group Id",
                                              "example": "sig-12345"
                                            },
                                            "eventType": {
                                              "type": "string",
                                              "title": "Event Type",
                                              "example": "Update"
                                            },
                                            "createdAt": {
                                              "type": "string",
                                              "title": "Created At",
                                              "example": "2016-01-21T17:10:04.000+0000"
                                            },
                                            "subEvents": {
                                              "type": "object",
                                              "title": "Sub Event",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "title": "Type",
                                                  "example": "scaleUp"
                                                },
                                                "newSpots": {
                                                  "type": "string",
                                                  "example": [
                                                    {
                                                      "spotInstanceRequestId": "sir-0294dbzt"
                                                    },
                                                    {
                                                      "spotInstanceRequestId": "sir-02940b7h"
                                                    },
                                                    {
                                                      "spotInstanceRequestId": "sir-028z1age"
                                                    },
                                                    {
                                                      "spotInstanceRequestId": "sir-028z456e"
                                                    },
                                                    {
                                                      "spotInstanceRequestId": "sir-028wg6gr"
                                                    },
                                                    {
                                                      "spotInstanceRequestId": "sir-0294a9v5"
                                                    }
                                                  ]
                                                },
                                                "newInstances": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "groupId": {
                                              "type": "string",
                                              "title": "Group Id",
                                              "example": "sig-12345"
                                            },
                                            "eventType": {
                                              "type": "string",
                                              "title": "Event Type",
                                              "example": "Update"
                                            },
                                            "createdAt": {
                                              "type": "string",
                                              "title": "Created At",
                                              "example": "2016-01-21T17:10:04.000+0000"
                                            },
                                            "subEvents": {
                                              "type": "object",
                                              "title": "Sub Event",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "title": "Type",
                                                  "example": "scaleUp"
                                                },
                                                "newSpots": {
                                                  "type": "string",
                                                  "example": [
                                                    {
                                                      "spotInstanceRequestId": "sir-0294dbzt"
                                                    },
                                                    {
                                                      "spotInstanceRequestId": "sir-02940b7h"
                                                    },
                                                    {
                                                      "spotInstanceRequestId": "sir-028z1age"
                                                    },
                                                    {
                                                      "spotInstanceRequestId": "sir-028z456e"
                                                    },
                                                    {
                                                      "spotInstanceRequestId": "sir-028wg6gr"
                                                    },
                                                    {
                                                      "spotInstanceRequestId": "sir-0294a9v5"
                                                    }
                                                  ]
                                                },
                                                "newInstances": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "groupId": {
                                              "type": "string",
                                              "title": "Group Id",
                                              "example": "sig-12345"
                                            },
                                            "eventType": {
                                              "type": "string",
                                              "title": "Event Type",
                                              "example": "Update"
                                            },
                                            "createdAt": {
                                              "type": "string",
                                              "title": "Created At",
                                              "example": "2016-01-21T17:10:04.000+0000"
                                            },
                                            "subEvents": {
                                              "type": "object",
                                              "title": "Sub Event",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "title": "Type",
                                                  "example": "scaleUp"
                                                },
                                                "newSpots": {
                                                  "type": "string",
                                                  "example": [
                                                    {
                                                      "spotInstanceRequestId": "sir-0294dbzt"
                                                    },
                                                    {
                                                      "spotInstanceRequestId": "sir-02940b7h"
                                                    },
                                                    {
                                                      "spotInstanceRequestId": "sir-028z1age"
                                                    },
                                                    {
                                                      "spotInstanceRequestId": "sir-028z456e"
                                                    },
                                                    {
                                                      "spotInstanceRequestId": "sir-028wg6gr"
                                                    },
                                                    {
                                                      "spotInstanceRequestId": "sir-0294a9v5"
                                                    }
                                                  ]
                                                },
                                                "newInstances": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "groupId": {
                                              "type": "string",
                                              "title": "Group Id",
                                              "example": "sig-12345"
                                            },
                                            "eventType": {
                                              "type": "string",
                                              "title": "Event Type",
                                              "example": "Update"
                                            },
                                            "createdAt": {
                                              "type": "string",
                                              "title": "Created At",
                                              "example": "2016-01-21T17:10:04.000+0000"
                                            },
                                            "subEvents": {
                                              "type": "object",
                                              "title": "Sub Event",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "title": "Type",
                                                  "example": "scaleUp"
                                                },
                                                "newSpots": {
                                                  "type": "string",
                                                  "example": [
                                                    {
                                                      "spotInstanceRequestId": "sir-0294dbzt"
                                                    },
                                                    {
                                                      "spotInstanceRequestId": "sir-02940b7h"
                                                    },
                                                    {
                                                      "spotInstanceRequestId": "sir-028z1age"
                                                    },
                                                    {
                                                      "spotInstanceRequestId": "sir-028z456e"
                                                    },
                                                    {
                                                      "spotInstanceRequestId": "sir-028wg6gr"
                                                    },
                                                    {
                                                      "spotInstanceRequestId": "sir-0294a9v5"
                                                    }
                                                  ]
                                                },
                                                "newInstances": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/logs": {
      "get": {
        "summary": "Get Elastilog",
        "description": "You can fetch a group's (Elastigroup/Ocean/Managed Instance) elastilog via the Spot API, in order to be able to consume elastilog from various tools used for log storing and analyzing. Logs have retention of 3 months back, so minimal fromDate should be up to 3 months back at runtime.\n",
        "operationId": "elastigroupAwsGetLogs",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "fromDate",
            "example": "1540036800000",
            "description": "Epoch number that represents the date from which to collect the log (millisecond format)\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "toDate",
            "example": "1542715200000",
            "description": "Epoch number that represents the date until which log is collected (millisecond format)\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "severity",
            "example": "ALL",
            "description": "Severity of log entries to extract. Valid Values: ALL, INFO,DEBUG,WARN. Default: ALL\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "resourceId",
            "example": "i-12345678",
            "description": "Filter extracted log entries for a specific resource id. Default: Null\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "example": "i-12345678",
            "description": "Maximum number of lines to extract in a response. Max value allowed - 1000. Default: 500\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-123456/logs",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group:log",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "example": [
                                        {
                                          "message": "ECS Max Capacity. ECS Autoscaler - Cannot scale up since group has reached maximum capacity",
                                          "severity": "WARN",
                                          "createdAt": "2018-11-19T14:38:34.000Z"
                                        },
                                        {
                                          "message": "Group sig-e0a2bd7c successfully created.",
                                          "severity": "INFO",
                                          "createdAt": "2018-11-19T14:34:15.000Z"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 2,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/capacity": {
      "put": {
        "summary": "Update Capacity",
        "description": "Update the capacity of an Elastigroup",
        "operationId": "elastigroupAwsUpdateCapacity",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "capacity": {
                        "type": "object",
                        "title": "Capacity",
                        "properties": {
                          "minimum": {
                            "type": "integer",
                            "example": 1,
                            "default": 0,
                            "description": "Number that indicates minimum instance amount\n"
                          },
                          "maximum": {
                            "type": "integer",
                            "example": 10,
                            "default": 0,
                            "description": "Number that indicates minimum instance amount\n"
                          },
                          "target": {
                            "type": "integer",
                            "example": 2,
                            "default": 0,
                            "description": "Number that indicates amount of desired instances\n"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "3ab3fdf7-3af3-46db-9e63-b88cfdac058c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-b255ac/capacity?accountId=act-567c21",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "PUT",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-08-20T15:31:12.730Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group:capacity",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D~1capacity/put/requestBody/content/application~1json/schema/allOf/0"
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/scale/up": {
      "put": {
        "summary": "Scale Up",
        "description": "Add instances to your Elastigroup",
        "operationId": "elastigroupAwsScaleUp",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "adjustment",
            "example": "1",
            "description": "The number of instances to add to the Elastigroup\n",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "b57207d0-3ab1-4170-8122-a3db9ac92093",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-abcd1234/scale/up?adjustment=2",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "PUT",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2017-10-04T08:56:38.071Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:scale",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "newSpotRequests": {
                                          "type": "array",
                                          "description": "New Spot Requests",
                                          "example": [
                                            {
                                              "spotInstanceRequestId": "sir-45sr8c7n",
                                              "instanceId": "i-12345abcde12345",
                                              "availabilityZone": "us-west-2a",
                                              "instanceType": "m3.medium"
                                            },
                                            {
                                              "spotInstanceRequestId": "sir-pzb8a2an",
                                              "instanceId": "i-abcde12345abcde",
                                              "availabilityZone": "us-west-2a",
                                              "instanceType": "m3.medium"
                                            }
                                          ]
                                        },
                                        "newInstances": {
                                          "type": "string",
                                          "description": "New Instances",
                                          "example": null
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/scale/down": {
      "put": {
        "summary": "Scale Down",
        "description": "Remove instances from your Elastigroup. Note - Scale Advanced expression Remove instances from your Elastigroup",
        "operationId": "elastigroupAwsScaleDown",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "adjustment",
            "example": "1",
            "description": "The number of instances to add to the Elastigroup\n",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "ff3e1e5b-91b8-42fa-8267-b988efc7f662",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-12345/scale/down?adjustment=1",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "PUT",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "time": {
                                  "type": "string",
                                  "example": "2015-06-29T13:01:55.060Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:scale",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "victimSpotRequests": {
                                          "type": "array",
                                          "description": "Victim Spot Requests",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "spotInstanceRequestId": {
                                                "type": "string",
                                                "description": "Spot Instance Request ID",
                                                "example": "sir-02447qg2"
                                              },
                                              "instanceId": {
                                                "type": "string",
                                                "description": "Instance ID",
                                                "example": "i-933esr1"
                                              }
                                            }
                                          }
                                        },
                                        "victimInstances": {
                                          "type": "array",
                                          "description": "Victim Instances",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "instanceId": {
                                                "type": "string",
                                                "description": "Instance ID",
                                                "example": "i-02447t22"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/scale/suspendPolicy": {
      "post": {
        "summary": "Suspend Scaling Policies",
        "description": "Suspend processes inside your Elastigroup",
        "operationId": "elastigroupAwsSuspendScalingPolicies",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "policyName",
            "example": "Example Policy Name",
            "description": "Policy Name of scaling policy to suspend\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "suspension": {
                        "type": "object",
                        "title": "Suspension",
                        "properties": {
                          "ttlInMinutes": {
                            "type": "integer",
                            "example": 10,
                            "description": "Set TTL in minutes. min value: 1 (one minute). max value: 10080 (one week)\n"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Suspend Scaling Policies Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "0bb5db74-2457-4a34-b8f3-174e6bf5578e",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-12345/scale/suspendPolicy?accountId=act-1234567&policyName=myscalingpolicyname",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2016-06-19T08:41:57.516Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:suspension",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "groupId": {
                                          "type": "string",
                                          "title": "Group ID",
                                          "example": "sig-12345"
                                        },
                                        "policyName": {
                                          "type": "string",
                                          "title": "Policy Name",
                                          "example": "myscalingpolicyname"
                                        },
                                        "state": {
                                          "type": "string",
                                          "title": "State",
                                          "example": "suspended"
                                        },
                                        "expiresAt": {
                                          "type": "string",
                                          "title": "Expires At",
                                          "example": "2016-06-19T08:51:00:00Z"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/suspension": {
      "post": {
        "summary": "Suspend Processes",
        "description": "Suspend processes inside your Elastigroup",
        "operationId": "elastigroupAwsSuspend",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "groupId": {
                        "type": "array",
                        "description": "groupId",
                        "items": {
                          "type": "string",
                          "example": "sig-12345"
                        }
                      },
                      "suspensions": {
                        "type": "array",
                        "description": "Suspensions",
                        "items": {
                          "type": "object",
                          "example": [
                            {
                              "name": "AUTO_SCALE",
                              "expiresAt": null
                            },
                            {
                              "name": "OUT_OF_STRATEGY",
                              "expiresAt": "2018-10-03T07:23:24.000+0000"
                            },
                            {
                              "name": "PREVENTIVE_REPLACEMENT",
                              "expiresAt": "2018-10-03T09:03:24.000+0000"
                            },
                            {
                              "name": "REVERT_PREFERRED",
                              "expiresAt": null
                            },
                            {
                              "name": "SCHEDULING",
                              "expiresAt": null
                            }
                          ]
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Suspend Processes  Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "0bb5db74-2457-4a34-b8f3-174e6bf5578e",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-12345/suspension",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2016-06-19T08:41:57.516Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:suspension",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "groupId": {
                                        "type": "string",
                                        "description": "Elastigroup ID",
                                        "example": "sig-12345"
                                      },
                                      "processes": {
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "example": [
                                            "AUTO_SCALE"
                                          ]
                                        }
                                      },
                                      "suspensions": {
                                        "type": "array",
                                        "description": "Suspensions",
                                        "items": {
                                          "type": "object",
                                          "example": [
                                            {
                                              "name": "AUTO_SCALE",
                                              "expiresAt": null
                                            },
                                            {
                                              "name": "OUT_OF_STRATEGY",
                                              "expiresAt": "2018-10-03T07:23:24.000+0000"
                                            },
                                            {
                                              "name": "PREVENTIVE_REPLACEMENT",
                                              "expiresAt": "2018-10-03T09:03:24.000+0000"
                                            },
                                            {
                                              "name": "REVERT_PREFERRED",
                                              "expiresAt": null
                                            },
                                            {
                                              "name": "SCHEDULING",
                                              "expiresAt": null
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 4,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Suspended Processes",
        "description": "List all active Suspended processes for specific Elastigroup",
        "operationId": "elastigroupAwsListSuspended",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123456789",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "List Suspended Processes  Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "67582d0c-108b-4ef7-9fdc-d39678a30844",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-12345/suspension",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-01-07T07:30:58.622Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:suspension",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "groupId": {
                                        "type": "string",
                                        "example": "sig-12345",
                                        "description": "Elastigroup ID"
                                      },
                                      "processes": {
                                        "type": "string",
                                        "description": "Processes",
                                        "example": [
                                          "AUTO_SCALE"
                                        ]
                                      }
                                    }
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Remove Suspended Processes",
        "description": "Remove active suspension from Elastigroup",
        "operationId": "elastigroupAwsRemoveSuspended",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123456789",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "processes": {
                        "type": "array",
                        "title": "Processes",
                        "description": "The list of processes to remove from suspension. Valid values are: AUTO_SCALE, AUTO_HEALING, OUT_OF_STRATEGY, PREVENTIVE_REPLACEMENT, REVERT_PREFERRED, SCHEDULING\n",
                        "items": {
                          "type": "string",
                          "example": [
                            "AUTO_SCALE"
                          ]
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Remove Suspended Processes  Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "848f3db7-b731-4b1b-9227-253a545e90eb",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-12345/suspension",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "DELETE",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-06-21T11:54:12.513Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:suspension",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "object",
                                    "title": "Metadata Options Update",
                                    "description": "Request - Example 6 - Update Metadata Options",
                                    "properties": {
                                      "group": {
                                        "type": "object",
                                        "title": "AWS Elastigroup",
                                        "properties": {
                                          "compute": {
                                            "type": "object",
                                            "title": "Compute Attribute",
                                            "properties": {
                                              "launchSpecification": {
                                                "type": "object",
                                                "title": "Launch Specification Attribute",
                                                "properties": {
                                                  "metadataOptions": {
                                                    "type": "object",
                                                    "title": "Metadata Options Attribute",
                                                    "properties": {
                                                      "httpTokens": {
                                                        "type": "string",
                                                        "example": "optional",
                                                        "description": "Http Token\n"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 0,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/scale/suspensions": {
      "get": {
        "summary": "List Suspended Scaling Policies",
        "description": "Suspended scaling policies inside your Elastigroup",
        "operationId": "elastigroupAwsListSuspendScalingPolicies",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123456789",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "List Suspended Scaling Policies  Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "0bb5db74-2457-4a34-b8f3-174e6bf5578e",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-12345/scale/suspensions?accountId=act-1234567",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2016-06-19T08:41:57.516Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:suspension",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "scalePolicySuspensions": {
                                        "type": "object",
                                        "example": [
                                          {
                                            "groupId": "sig-12345",
                                            "policyName": "test",
                                            "state": "suspended"
                                          },
                                          {
                                            "groupId": "sig-12345",
                                            "policyName": "down Scaling Policy 1",
                                            "state": "suspended"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 2,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/scale/resumePolicy": {
      "post": {
        "summary": "Remove Suspended Scaling Policies",
        "description": "Resume suspended scaling policies inside your Elastigroup",
        "operationId": "elastigroupAwsResumeScalingPolicies",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123456789",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "policyName",
            "example": "policy_1",
            "description": "Name of the suspended scaling policy to remove from suspension\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "848f3db7-b731-4b1b-9227-253a545e90eb",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-12345/scale/resumePolicy?policyName=myscalingpolicyname",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-06-21T11:54:12.513Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:suspension",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 0,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/potentialSavings": {
      "get": {
        "summary": "Potential Savings",
        "description": "Describe Potential Savings for AWS resources like - ASG (Auto-scaling groups), Beanstalk, ELB, ECS, EMR and tagged instances. The response will provide Potential monthly savings in USD",
        "operationId": "elastigroupAwsPotentialSavings",
        "tags": [
          "Insights Service"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123456789",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Potential Savings Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-12345/suspension",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:cs:aws:potentialSavings",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "resourceType": {
                                            "type": "string",
                                            "example": "Auto Scaling Group"
                                          },
                                          "name": {
                                            "type": "string",
                                            "example": "Prod_ASG"
                                          },
                                          "region": {
                                            "type": "string",
                                            "example": "us-west-1"
                                          },
                                          "instances": {
                                            "type": "integer",
                                            "example": 5
                                          },
                                          "instanceTypes": {
                                            "type": "string",
                                            "example": [
                                              "c4.4xlarge"
                                            ]
                                          },
                                          "potentialSavings": {
                                            "type": "integer",
                                            "example": 2700
                                          }
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/instancePotentialSavings": {
      "get": {
        "summary": "Instances Potential Savings",
        "description": "Describe potential savings for the listed instances. You can provide multiple instance IDs separated by a comma. The response will provide potential monthly savings in USD.",
        "operationId": "elastigroupAwsInstancesPotentialSavings",
        "tags": [
          "Insights Service"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "region",
            "example": "us-east-1",
            "description": "The AWS Region\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "instanceIds",
            "example": "i-1234567",
            "description": "The instance ID\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Instances Potential Savings Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "ff3e1e5b-91b8-42fa-8267-b988efc7f662",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/instancePotentialSavings?instanceIds=i-08674ba9a6ddb73f4%2Ci-0973dc7a755d34894®ion=us-west-2",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2015-06-29T13:01:55.060Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:cs:aws:potentialSavings",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "newSpotRequests": {
                                          "type": "array",
                                          "description": "New Spot Requests",
                                          "example": [
                                            {
                                              "resourceType": "EC2Instance",
                                              "name": "i-12345abcde12345",
                                              "instances": 1,
                                              "instanceTypes": [
                                                "t2.medium"
                                              ],
                                              "potentialSavings": 28
                                            },
                                            {
                                              "resourceType": "EC2Instance",
                                              "name": "i-0973dc7a755d34894",
                                              "instances": 1,
                                              "instanceTypes": [
                                                "m4.large"
                                              ],
                                              "potentialSavings": 60
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 2,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/costs": {
      "get": {
        "summary": "Get Costs per Account",
        "description": "Retrieve costs per specified account over a specified time period. Example of URL with with daily aggregation period over a time period of 30 days - https://api.spotinst.io/aws/ec2/account/costs?fromDate=1585699200000&toDate=1588291199000&aggregationPeriod=daily",
        "operationId": "awsCostsPerAccount",
        "tags": [
          "Insights Service"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123456789",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "fromDate",
            "example": "2018-06-20",
            "description": "Date can be either in ISO-8601 date format (yyyy-mm-dd) or in Unix Timestamp format (e.g. 1494751821472).\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "toDate",
            "example": "2018-11-20",
            "description": "Date can be either in ISO-8601 date format (yyyy-mm-dd) or in Unix Timestamp format (e.g. 1494751821472).\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "aggregationPeriod",
            "example": "daily",
            "description": "Optional. The time period over which data is aggregated. Can only be \"daily\". For example, the figures in each data set are per day\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Costs Per Account Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "67582d0c-108b-4ef7-9fdc-d39678a30844",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-01-07T07:30:58.622Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "timestamp": {
                                            "type": "string",
                                            "example": "2020-03-06T00:00:00.000Z",
                                            "description": "Time"
                                          },
                                          "spot": {
                                            "type": "object",
                                            "properties": {
                                              "runningHours": {
                                                "type": "number",
                                                "format": "float",
                                                "example": 1470.8
                                              },
                                              "actualCosts": {
                                                "type": "number",
                                                "format": "float",
                                                "example": 107.3
                                              },
                                              "potentialCosts": {
                                                "type": "number",
                                                "format": "float",
                                                "example": 378.41
                                              },
                                              "savingsPercentage": {
                                                "type": "number",
                                                "format": "float",
                                                "example": 71.64
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/costs": {
      "get": {
        "summary": "Get Costs per Elastigroup",
        "description": "Get financial information on a specific Elastigroup",
        "operationId": "awsCostsPerElastigroup",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "fromDate",
            "example": "2018-06-20",
            "description": "Data values following either a date format (YYYY-MM-DDTHH:mm:ss.SSSZ ; 2016-01-10T00:00:00.000Z) or Unix seconds Timestamp (1494751821)\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "toDate",
            "example": "2018-11-20",
            "description": "Data values following either a date format (YYYY-MM-DDTHH:mm:ss.SSSZ ; 2016-01-10T00:00:00.000Z) or Unix seconds Timestamp (1494751821)\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "aggregationPeriod",
            "example": "daily",
            "description": "Optional. The time period over which data is aggregated. Can only be \"daily\". For example, the figures in each data set are per day\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Costs Per Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-48d79900/costs?fromDate=2018-03-06&toDate=2019-02-27",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2016-01-21T17:12:51.451Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group:stats",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "running": {
                                            "type": "object",
                                            "title": "Running",
                                            "properties": {
                                              "value": {
                                                "type": "string",
                                                "example": 0,
                                                "description": "Value\n"
                                              },
                                              "unit": {
                                                "type": "string",
                                                "example": "hours",
                                                "description": "Unit\n"
                                              }
                                            }
                                          },
                                          "savings": {
                                            "type": "object",
                                            "title": "Running",
                                            "properties": {
                                              "value": {
                                                "type": "integer",
                                                "example": 0
                                              },
                                              "unit": {
                                                "type": "string",
                                                "example": "percentage"
                                              }
                                            }
                                          },
                                          "costs": {
                                            "type": "object",
                                            "title": "Running",
                                            "properties": {
                                              "actual": {
                                                "type": "integer",
                                                "example": 0
                                              },
                                              "potential": {
                                                "type": "integer",
                                                "example": 0
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/costs/detailed": {
      "get": {
        "summary": "Detailed Cost",
        "description": "Get detailed financial information on a specific Elastigroup",
        "operationId": "elastigroupAwsDetailedCosts",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "fromDate",
            "example": "2018-06-20",
            "description": "Data values following either a date format (YYYY-MM-DDTHH:mm:ss.SSSZ ; 2016-01-10T00:00:00.000Z) or Unix seconds Timestamp (1494751821)\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "toDate",
            "example": "2018-11-20",
            "description": "Data values following either a date format (YYYY-MM-DDTHH:mm:ss.SSSZ ; 2016-01-10T00:00:00.000Z) or Unix seconds Timestamp (1494751821)\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Detailed Cost Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-12345/costs/detailed",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2016-01-21T17:12:51.451Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "groupId": {
                                          "type": "string",
                                          "title": "Group Id",
                                          "example": "sig-12345"
                                        },
                                        "instanceId": {
                                          "type": "string",
                                          "title": "Instance ID",
                                          "example": "i-326129e1"
                                        },
                                        "spotInstanceRequestId": {
                                          "type": "string",
                                          "title": "Spot Instance Request ID",
                                          "example": null
                                        },
                                        "instanceType": {
                                          "type": "string",
                                          "title": "Instance Type",
                                          "example": "m3.medium"
                                        },
                                        "availabilityZone": {
                                          "type": "string",
                                          "title": "Availability Zone",
                                          "example": "us-east-1a"
                                        },
                                        "running": {
                                          "type": "object",
                                          "properties": {
                                            "value": {
                                              "type": "integer",
                                              "title": "Value",
                                              "example": 4
                                            },
                                            "unit": {
                                              "type": "string",
                                              "title": "Unit",
                                              "example": "hours"
                                            }
                                          }
                                        },
                                        "savings": {
                                          "type": "object",
                                          "properties": {
                                            "value": {
                                              "type": "integer",
                                              "title": "Value",
                                              "example": 4
                                            },
                                            "unit": {
                                              "type": "string",
                                              "title": "Unit",
                                              "example": "percentage"
                                            }
                                          }
                                        },
                                        "costs": {
                                          "type": "object",
                                          "properties": {
                                            "actual": {
                                              "type": "number",
                                              "format": "float",
                                              "title": "Actual",
                                              "example": 0.268
                                            },
                                            "potential": {
                                              "type": "number",
                                              "format": "float",
                                              "title": "Potential",
                                              "example": 0.268
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "groupId": {
                                          "type": "string",
                                          "title": "Group Id",
                                          "example": "sig-d56b9e37v"
                                        },
                                        "instanceId": {
                                          "type": "string",
                                          "title": "Instance ID",
                                          "example": "i-326129e1"
                                        },
                                        "spotInstanceRequestId": {
                                          "type": "string",
                                          "title": "Spot Instance Request ID",
                                          "example": "sir-02epa938"
                                        },
                                        "instanceType": {
                                          "type": "string",
                                          "title": "Instance Type",
                                          "example": "m3.large"
                                        },
                                        "availabilityZone": {
                                          "type": "string",
                                          "title": "Availability Zone",
                                          "example": "us-east-1a"
                                        },
                                        "running": {
                                          "type": "object",
                                          "properties": {
                                            "value": {
                                              "type": "integer",
                                              "title": "Value",
                                              "example": 4
                                            },
                                            "unit": {
                                              "type": "string",
                                              "title": "Unit",
                                              "example": "hours"
                                            }
                                          }
                                        },
                                        "savings": {
                                          "type": "object",
                                          "properties": {
                                            "value": {
                                              "type": "number",
                                              "format": "float",
                                              "title": "Value",
                                              "example": 89.3233
                                            },
                                            "unit": {
                                              "type": "string",
                                              "title": "Unit",
                                              "example": "percentage"
                                            }
                                          }
                                        },
                                        "costs": {
                                          "type": "object",
                                          "properties": {
                                            "actual": {
                                              "type": "number",
                                              "format": "float",
                                              "title": "Actual",
                                              "example": 0.0568
                                            },
                                            "potential": {
                                              "type": "number",
                                              "format": "float",
                                              "title": "Potential",
                                              "example": 0.532
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 2,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/instance/{instanceId}": {
      "get": {
        "summary": "Instance Status",
        "description": "Get the current instance status Possible status values - Active and Terminating",
        "operationId": "awsInstanceStatus",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "example": "i-123456",
            "description": "The instance ID you want to query\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Instance Status Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "ff3e1e5b-91b8-42fa-8267-b988efc7f662",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/instance/i-123456",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2015-06-29T13:01:55.060Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:instance",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "instanceId": {
                                          "type": "string",
                                          "title": "Instance ID",
                                          "example": "i-326129e1"
                                        },
                                        "lifeCycleState": {
                                          "type": "string",
                                          "title": "Lifecycle State",
                                          "example": "ACTIVE"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/instance/import": {
      "post": {
        "summary": "Import EC2 Instance",
        "description": "Import an EC2 instance into a new Elastigroup\n",
        "operationId": "elastigroupAwsImportInstance",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "region",
            "example": "us-east-2",
            "description": "The AWS region to create the new Elastigroup in\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "instanceId",
            "example": "i-008a13360040aa88e",
            "description": "Enter the AWS instance Id of the instance to import\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "group": {
                        "type": "object",
                        "title": "Group",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "EG_Name",
                            "description": "The name of the new Elastigroup\n"
                          },
                          "spotInstanceTypes": {
                            "type": "array",
                            "description": "Optionally provide a list of spot instance types to improve spot market availability for the Elastigroup. Overrides the imported instance type.\n",
                            "example": [
                              "m3.large",
                              "c3.large"
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Import EC2 Instance Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "ff3e1e5b-91b8-42fa-8267-b988efc7f662",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "string",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2015-06-29T13:01:55.060Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object"
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/amiBackup": {
      "post": {
        "summary": "AMI Backup",
        "description": "Get status of a specific deployment",
        "operationId": "elastigroupAwsAmiBackup",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "AMI Backup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-61236h9d/amiBackup",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2016-01-21T17:12:51.451Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group:amiBackup",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "example": true
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/instanceHealthiness": {
      "get": {
        "summary": "Instance Healthiness",
        "description": "Get a list of instances with health status. In case a shutdown script is configured for the group, it will also retrieve the Spot Agent health status.",
        "operationId": "elastigroupAwsInstanceHealthiness",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Instance Healthiness Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "ff3e1e5b-91b8-42fa-8267-b988efc7f662",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-1b656b92/instanceHealthiness",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2015-06-29T13:01:55.060Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group:instanceHealthiness",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "object",
                                    "title": "Instance Healthiness",
                                    "properties": {
                                      "instanceId": {
                                        "type": "string",
                                        "description": "Instance ID",
                                        "example": "i-07593cd9173cd9667"
                                      },
                                      "spotRequestId": {
                                        "type": "string",
                                        "description": "Spot Request ID",
                                        "example": "sir-xjag9yqp"
                                      },
                                      "groupId": {
                                        "type": "string",
                                        "description": "Group ID",
                                        "example": "sig-1b656b92"
                                      },
                                      "availabilityZone": {
                                        "type": "string",
                                        "description": "Availability Zone",
                                        "example": "us-west-2b"
                                      },
                                      "lifeCycle": {
                                        "type": "string",
                                        "description": "Life Cycle",
                                        "example": "SPOT"
                                      },
                                      "healthStatus": {
                                        "type": "string",
                                        "description": "Health Status",
                                        "enum": [
                                          "HEALTHY",
                                          "UNHEALTHY",
                                          "INSUFFICIENT_DATA",
                                          "UNKNOWN"
                                        ],
                                        "example": "HEALTHY"
                                      },
                                      "agentHealth": {
                                        "type": "object",
                                        "title": "Spot Agent Health",
                                        "properties": {
                                          "status": {
                                            "type": "string",
                                            "enum": [
                                              "HEALTHY",
                                              "UNHEALTHY",
                                              "UNKNOWN"
                                            ],
                                            "description": "Spot Agent health status",
                                            "example": "HEALTHY"
                                          },
                                          "lastChecked": {
                                            "type": "string",
                                            "description": "The last time Spot received a health signal from the instance",
                                            "example": "2021-12-15T14:43:46.000Z"
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/detachInstances": {
      "put": {
        "summary": "Detach Instance",
        "description": "Detach instances from your Elastigroup",
        "operationId": "elastigroupAwsDetachInstance",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "instancesToDetach": {
                        "type": "object",
                        "title": "Instances to be detached",
                        "description": "Instances to be detached",
                        "example": [
                          "i-123456",
                          "i-456798"
                        ]
                      },
                      "shouldTerminateInstances": {
                        "type": "boolean",
                        "title": "Termination criteria",
                        "description": "Should Terminate Instances Criteria",
                        "example": true
                      },
                      "shouldDecrementTargetCapacity": {
                        "type": "boolean",
                        "title": "Decrement target capacity criteria",
                        "description": "Should Decrement Target Capacity Criteria",
                        "example": false
                      },
                      "drainingTimeout": {
                        "type": "integer",
                        "title": "Time",
                        "description": "Draining Timeout",
                        "example": 300
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detach Instance Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "0bb5db74-2457-4a34-b8f3-174e6bf5578e",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-12345/detachInstances",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "PUT",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2016-06-19T08:41:57.516Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:detachInstances",
                                  "description": "The data type of each item in the response\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/autoScalingGroup/import": {
      "post": {
        "summary": "Import ASG",
        "description": "Create a new Elastigroup – this Elastigroup will have the same configuration of the imported Autoscaling group",
        "operationId": "elastigroupAwsImportAsg",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "autoScalingGroupName",
            "example": "MyASG",
            "description": "The ASG name\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "region",
            "example": "us-east-1",
            "description": "The AWS region for the ASG\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-12345",
            "description": "Your account ID in Spot\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "dryRun",
            "example": true,
            "description": "When `dryRun` is set to `true`, the API call will return the Elastigroup configuration without actually performing any action\n",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "group": {
                        "type": "object",
                        "title": "Group",
                        "properties": {
                          "product": {
                            "type": "string",
                            "title": "Product (OS)",
                            "example": "Linux/UNIX",
                            "description": "Operation system type. Possible values: Linux/UNIX | SUSE | Linux Windows | Linux/UNIX (Amazon VPC) | SUSE Linux (Amazon VPC) | Windows (Amazon VPC)\n"
                          },
                          "spotInstanceTypes": {
                            "type": "array",
                            "title": "Product (OS)",
                            "example": [
                              "c3.large",
                              "m4.large"
                            ],
                            "description": "An Array holding the types of instances to be used in the Elastigroup\n"
                          },
                          "name": {
                            "type": "string",
                            "title": "Name",
                            "example": "My Group",
                            "description": "The name of the Elastigroup to be created\n"
                          },
                          "availabilityVsCost": {
                            "type": "string",
                            "enum": [
                              "costOriented",
                              "availabilityOriented",
                              "balanced",
                              "cheapest",
                              "equalAzDistribution"
                            ],
                            "default": "balanced",
                            "description": "How Elastigroup determines which instances to add and replace.\n(please read this article before using [Equal AZ Instance Distribution](https://docs.spot.io/elastigroup-for-aws/concepts/general-concepts/equal-az-distribution))\n"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Import ASG Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "ff3e1e5b-91b8-42fa-8267-b988efc7f662",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/autoScalingGroup/import?region=us-west-2&TESTING_ASG",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2015-06-29T13:01:55.060Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "required": [
                                        "group"
                                      ],
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "title": "ID",
                                          "example": "sig-e2927aac"
                                        },
                                        "name": {
                                          "type": "string",
                                          "title": "name",
                                          "example": "TESTING_ASG"
                                        },
                                        "description": {
                                          "type": "string",
                                          "title": "name",
                                          "example": "Imported from auto scaling group TESTING_ASG"
                                        },
                                        "capacity": {
                                          "type": "object",
                                          "properties": {
                                            "target": {
                                              "type": "integer",
                                              "example": 1
                                            },
                                            "minimum": {
                                              "type": "integer",
                                              "example": 0
                                            },
                                            "maximum": {
                                              "type": "integer",
                                              "example": 5
                                            },
                                            "unit": {
                                              "type": "integer",
                                              "example": "instance"
                                            }
                                          }
                                        },
                                        "strategy": {
                                          "type": "object",
                                          "properties": {
                                            "risk": {
                                              "type": "integer",
                                              "example": 100
                                            },
                                            "drainingTimeout": {
                                              "type": "integer",
                                              "example": 0
                                            }
                                          }
                                        },
                                        "compute": {
                                          "type": "object",
                                          "properties": {
                                            "instanceTypes": {
                                              "type": "object",
                                              "properties": {
                                                "ondemand": {
                                                  "type": "string",
                                                  "example": "m3.medium"
                                                },
                                                "spot": {
                                                  "type": "string",
                                                  "example": [
                                                    "c3.large"
                                                  ]
                                                }
                                              }
                                            },
                                            "availabilityZones": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "name": {
                                                    "type": "string",
                                                    "example": "us-west-2b"
                                                  },
                                                  "subnetIds": {
                                                    "type": "string",
                                                    "example": "subnet-2e967065"
                                                  }
                                                }
                                              }
                                            },
                                            "product": {
                                              "type": "string",
                                              "example": "Linux/UNIX"
                                            },
                                            "launchSpecification": {
                                              "type": "object",
                                              "properties": {
                                                "loadBalancersConfig": {
                                                  "type": "object",
                                                  "properties": {
                                                    "loadBalancers": {
                                                      "type": "object",
                                                      "properties": {
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name",
                                                          "example": "TESTING_ASG"
                                                        },
                                                        "type": {
                                                          "type": "string",
                                                          "title": "Type",
                                                          "example": "CLASSIC"
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "healthCheckType": {
                                                    "type": "string",
                                                    "title": "Health Check Type",
                                                    "example": "EC2"
                                                  },
                                                  "healthCheckGracePeriod": {
                                                    "type": "integer",
                                                    "title": "Health Check Grace Period",
                                                    "example": 600
                                                  },
                                                  "securityGroupIds": {
                                                    "type": "string",
                                                    "title": "Security Group IDs",
                                                    "example": [
                                                      "sg-451f8b3a"
                                                    ]
                                                  },
                                                  "monitoring": {
                                                    "type": "boolean",
                                                    "title": "Monitoring",
                                                    "example": false
                                                  },
                                                  "imageId": {
                                                    "type": "string",
                                                    "title": "Image ID",
                                                    "example": "ami-485eef30"
                                                  },
                                                  "ebsOptimized": {
                                                    "type": "boolean",
                                                    "title": "EBS Optomozed",
                                                    "example": true
                                                  },
                                                  "blockDeviceMappings": {
                                                    "type": "array",
                                                    "title": "Block Device Mappings",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "deviceName": {
                                                          "type": "string",
                                                          "title": "device Name",
                                                          "example": "/dev/sda1"
                                                        },
                                                        "ebs": {
                                                          "type": "object",
                                                          "properties": {
                                                            "deleteOnTermination": {
                                                              "type": "booleang",
                                                              "title": "Delete On Termination",
                                                              "example": true
                                                            },
                                                            "volumeSize": {
                                                              "type": "integer",
                                                              "title": "Volume Size",
                                                              "example": 30
                                                            },
                                                            "volumeType": {
                                                              "type": "string",
                                                              "title": "Volume Type",
                                                              "example": "gp2"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "scaling": {
                                          "type": "object"
                                        },
                                        "createdAt": {
                                          "type": "string",
                                          "example": "2020-10-01T05:23:59.302Z"
                                        },
                                        "updatedAt": {
                                          "type": "string",
                                          "example": "2020-10-01T05:23:59.302Z"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/spotType": {
      "get": {
        "summary": "Instance Type By Region",
        "description": "Get the available spot instances types available in a specific region\n",
        "operationId": "awsElastigroupGetInstanceTypeByRegion",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "region",
            "example": "us-east-2",
            "description": "The AWS region\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Instance Type By Region Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "67582d0c-108b-4ef7-9fdc-d39678a30844",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/spotType?region=us-west-2",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-01-07T07:30:58.622Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:spot:type",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "example": [
                                        {
                                          "instanceType": "hi1.4xlarge"
                                        },
                                        {
                                          "instanceType": "r5d.4xlarge"
                                        },
                                        {
                                          "instanceType": "r5ad.12xlarge"
                                        },
                                        {
                                          "instanceType": "r4.4xlarge"
                                        },
                                        {
                                          "instanceType": "m1.xlarge"
                                        },
                                        {
                                          "instanceType": "a1.4xlarge"
                                        },
                                        {
                                          "instanceType": "m5a.4xlarge"
                                        },
                                        {
                                          "instanceType": "m3.large"
                                        },
                                        {
                                          "instanceType": "x1e.4xlarge"
                                        },
                                        {
                                          "instanceType": "m5d.4xlarge"
                                        },
                                        {
                                          "instanceType": "m5a.24xlarge"
                                        },
                                        {
                                          "instanceType": "m5a.large"
                                        },
                                        {
                                          "instanceType": "r5d.8xlarge"
                                        },
                                        {
                                          "instanceType": "m3.medium"
                                        },
                                        {
                                          "instanceType": "p2.xlarge"
                                        },
                                        {
                                          "instanceType": "m4.large"
                                        },
                                        {
                                          "instanceType": "m5.24xlarge"
                                        },
                                        {
                                          "instanceType": "r5a.4xlarge"
                                        },
                                        {
                                          "instanceType": "c5.large"
                                        },
                                        {
                                          "instanceType": "m5ad.xlarge"
                                        },
                                        {
                                          "instanceType": "m5d.large"
                                        },
                                        {
                                          "instanceType": "r5d.12xlarge"
                                        },
                                        {
                                          "instanceType": "r5a.2xlarge"
                                        },
                                        {
                                          "instanceType": "m3.2xlarge"
                                        },
                                        {
                                          "instanceType": "t3a.large"
                                        },
                                        {
                                          "instanceType": "t2.medium"
                                        },
                                        {
                                          "instanceType": "i3.2xlarge"
                                        },
                                        {
                                          "instanceType": "p3.2xlarge"
                                        },
                                        {
                                          "instanceType": "cc2.8xlarge"
                                        },
                                        {
                                          "instanceType": "i3.xlarge"
                                        },
                                        {
                                          "instanceType": "r3.2xlarge"
                                        },
                                        {
                                          "instanceType": "i3.8xlarge"
                                        },
                                        {
                                          "instanceType": "c4.8xlarge"
                                        },
                                        {
                                          "instanceType": "r5.metal"
                                        },
                                        {
                                          "instanceType": "m4.10xlarge"
                                        },
                                        {
                                          "instanceType": "m1.large"
                                        },
                                        {
                                          "instanceType": "r5d.2xlarge"
                                        },
                                        {
                                          "instanceType": "t1.micro"
                                        },
                                        {
                                          "instanceType": "i2.4xlarge"
                                        },
                                        {
                                          "instanceType": "r5a.24xlarge"
                                        },
                                        {
                                          "instanceType": "z1d.2xlarge"
                                        },
                                        {
                                          "instanceType": "r5.xlarge"
                                        },
                                        {
                                          "instanceType": "m5ad.large"
                                        },
                                        {
                                          "instanceType": "h1.4xlarge"
                                        },
                                        {
                                          "instanceType": "m5d.12xlarge"
                                        },
                                        {
                                          "instanceType": "c5.2xlarge"
                                        },
                                        {
                                          "instanceType": "x1e.8xlarge"
                                        },
                                        {
                                          "instanceType": "d2.8xlarge"
                                        },
                                        {
                                          "instanceType": "r5.8xlarge"
                                        },
                                        {
                                          "instanceType": "c3.large"
                                        },
                                        {
                                          "instanceType": "r4.xlarge"
                                        },
                                        {
                                          "instanceType": "m5ad.24xlarge"
                                        },
                                        {
                                          "instanceType": "t3a.xlarge"
                                        },
                                        {
                                          "instanceType": "d2.4xlarge"
                                        },
                                        {
                                          "instanceType": "c5.24xlarge"
                                        },
                                        {
                                          "instanceType": "c5.metal"
                                        },
                                        {
                                          "instanceType": "c1.medium"
                                        },
                                        {
                                          "instanceType": "m1.medium"
                                        },
                                        {
                                          "instanceType": "g3.8xlarge"
                                        },
                                        {
                                          "instanceType": "r4.2xlarge"
                                        },
                                        {
                                          "instanceType": "i3en.6xlarge"
                                        },
                                        {
                                          "instanceType": "t3.small"
                                        },
                                        {
                                          "instanceType": "i3en.large"
                                        },
                                        {
                                          "instanceType": "i3en.24xlarge"
                                        },
                                        {
                                          "instanceType": "t2.xlarge"
                                        },
                                        {
                                          "instanceType": "t3a.medium"
                                        },
                                        {
                                          "instanceType": "m4.16xlarge"
                                        },
                                        {
                                          "instanceType": "x1.32xlarge"
                                        },
                                        {
                                          "instanceType": "r5a.12xlarge"
                                        },
                                        {
                                          "instanceType": "c5d.4xlarge"
                                        },
                                        {
                                          "instanceType": "i3en.12xlarge"
                                        },
                                        {
                                          "instanceType": "c5d.large"
                                        },
                                        {
                                          "instanceType": "g3.16xlarge"
                                        },
                                        {
                                          "instanceType": "c3.2xlarge"
                                        },
                                        {
                                          "instanceType": "x1e.2xlarge"
                                        },
                                        {
                                          "instanceType": "a1.2xlarge"
                                        },
                                        {
                                          "instanceType": "r5ad.xlarge"
                                        },
                                        {
                                          "instanceType": "m5a.xlarge"
                                        },
                                        {
                                          "instanceType": "t2.large"
                                        },
                                        {
                                          "instanceType": "r5ad.large"
                                        },
                                        {
                                          "instanceType": "i3.metal"
                                        },
                                        {
                                          "instanceType": "t3.nano"
                                        },
                                        {
                                          "instanceType": "r5ad.2xlarge"
                                        },
                                        {
                                          "instanceType": "f1.16xlarge"
                                        },
                                        {
                                          "instanceType": "h1.8xlarge"
                                        },
                                        {
                                          "instanceType": "m5.12xlarge"
                                        },
                                        {
                                          "instanceType": "a1.medium"
                                        },
                                        {
                                          "instanceType": "i3en.3xlarge"
                                        },
                                        {
                                          "instanceType": "m5d.8xlarge"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 322,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/instanceTypeRecommendation": {
      "post": {
        "summary": "Suggested Instance Type",
        "description": "Get suggested instance types by required resources.\nNote that request must include region, and at least one of the following values - baselineInstanceType, requiredVCpu, requiredMemoryGib",
        "operationId": "elastigroupAwsSuggestedInstanceType",
        "tags": [
          "Insights Service"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "requirements": {
                        "type": "object",
                        "title": "AWS Elastigroup",
                        "properties": {
                          "region": {
                            "type": "string",
                            "description": "Set valid AWS region",
                            "example": "us-east-1"
                          },
                          "baselineInstanceType": {
                            "type": "string",
                            "description": "Set valid AWS instance type as baseline",
                            "example": "m5.large"
                          },
                          "requiredVCpu": {
                            "type": "object",
                            "description": "Set required CPU resources by min / max",
                            "properties": {
                              "minimum": {
                                "type": "integer",
                                "description": "Minimum amount of VCpu",
                                "example": 2
                              },
                              "maximum": {
                                "type": "integer",
                                "description": "Maximum amount of VCpu",
                                "example": 4
                              }
                            }
                          },
                          "requiredMemoryGib": {
                            "type": "object",
                            "description": "Set required Memory (in Gib) resources by min / max",
                            "properties": {
                              "minimum": {
                                "type": "integer",
                                "description": "Minimum amount of Gib",
                                "example": 16
                              },
                              "maximum": {
                                "type": "integer",
                                "description": "Maximum amount of Gib",
                                "example": 64
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Suggested Instance Type Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "0bb5db74-2457-4a34-b8f3-174e6bf5578e",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/instanceTypeRecommendation",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2016-06-19T08:41:57.516Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:instanceTypeRecommendation",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": null,
                                      "example": [
                                        {
                                          "instanceType": "m4.large"
                                        },
                                        {
                                          "instanceType": "m5.large"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/instance/interruption": {
      "post": {
        "summary": "Simulate an Instance Interruption",
        "description": "The simulate instance interruption API is used for simulating a spot interruption in AWS, so that customers can verify specific applicative behaviors in case an interruption takes place. Once the interruption api is called, instances posted in the API body will be terminated in AWS, thus mocking a spot interruption.",
        "operationId": "elastigroupAwsInstanceInterruption",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "instancesToInterrupt": {
                        "type": "string",
                        "description": "A list of group's instance ids to interrupt\n",
                        "example": [
                          "i-123456",
                          "i-9876543"
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Simulate An Instance Interruption",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "ff3e1e5b-91b8-42fa-8267-b988efc7f662",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/instance/interruption?accountId=act-4fb595c6",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2015-06-29T13:01:55.060Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/instance/signal": {
      "post": {
        "summary": "Create Instance Signal",
        "description": "The instance signal API is used for notifying Spot about the instance state, so Spot can act accordingly. Supported signals are - INSTANCE_READY – Whenever this signal is sent, Spot will register the instance to the ELB INSTANCE_READY_TO_SHUTDOWN – Whenever this signal is sent, Spot will terminate the instance after it was marked for termination. Important - You need to define the expected signals for your Elastigroup in the group configuration.",
        "operationId": "elastigroupAwsCreateInstanceSignal",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "instanceId": {
                        "type": "string",
                        "example": "i-123456",
                        "description": "The instance ID the signal refers to."
                      },
                      "signal": {
                        "type": "string",
                        "example": "INSTANCE_READY",
                        "description": "The specific signal you want to trigger. Valid Values - INSTANCE_READY, INSTANCE_READY_TO_SHUTDOWN"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create Instance Signal Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "67582d0c-108b-4ef7-9fdc-d39678a30844",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/instance/signal",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-01-07T07:30:58.622Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/instance/{instanceId}/standby/enter": {
      "post": {
        "summary": "Instance Standby",
        "description": "Instance Standby enables you to put an instance in Standby state , update or troubleshoot the instance, and then return the instance to service. Instances that are on standby are still part of the Elastigroup, but they don't get application traffic.\nWhenever instance is standby state -\nIt will be de-registered from all the ELBs / ALBs in the Elastigroup It won't be affected from Scale down activities in the Elastigroup The instance health won't be checked, and it won't be replaced When the instance exits the Standby state -\nThe instance will be register back to all the ELBs / ALBs that are defined in the Elastigroup It will be considered and affected from all the Elastigroup activities (helth checks, scaling, etc.)",
        "operationId": "elastigroupAwsInstanceStandBy",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "example": "i-123456",
            "description": "The instance ID you want to put in standby state\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Instance Standby Responce",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "ff3e1e5b-91b8-42fa-8267-b988efc7f662",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/instance/i-123456/standby/enter",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2015-06-29T13:01:55.060Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/instance/{instanceId}/standby/exit": {
      "post": {
        "summary": "Exit Instance Standby",
        "description": "Exit standby by mode",
        "operationId": "elastigroupAwsInstanceExitStandBy",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "example": "i-123456",
            "description": "The instance ID you want to put in standby state\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Exit Instance Standby Responce",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "ff3e1e5b-91b8-42fa-8267-b988efc7f662",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/instance/i-123456/standby/exit",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2015-06-29T13:01:55.060Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/roll": {
      "get": {
        "summary": "Group's Deployments Status",
        "description": "Get list of all the deployments of a specific Elastigroup and their status",
        "operationId": "elastigroupAwsDeploymentsStatus",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "example": "5",
            "description": "Limits results\n",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "sort",
            "example": "createdAt:ASC",
            "description": "Field to sort by the results Default: createdAt:DESC\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Group's Deployments Status Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-12345/roll?limit=5&sort=createdAt%3ADESC",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2016-01-21T17:12:51.451Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group:roll",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "title": "ID",
                                          "example": "sbgd-781c6212"
                                        },
                                        "status": {
                                          "type": "string",
                                          "title": "Status",
                                          "example": "starting"
                                        },
                                        "progress": {
                                          "type": "object",
                                          "properties": {
                                            "unit": {
                                              "type": "string",
                                              "title": "Unit",
                                              "example": "percent"
                                            },
                                            "value": {
                                              "type": "integer",
                                              "title": "Value",
                                              "example": 0
                                            }
                                          }
                                        },
                                        "createdAt": {
                                          "type": "string",
                                          "title": "Created At",
                                          "example": "2018-03-27T19:50:12.000+0000"
                                        },
                                        "updatedAt": {
                                          "type": "string",
                                          "title": "Updated At",
                                          "example": "2018-03-27T19:50:16.000+0000"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "title": "ID",
                                          "example": "sbgd-3f127ed0"
                                        },
                                        "status": {
                                          "type": "string",
                                          "title": "Status",
                                          "example": "starting"
                                        },
                                        "progress": {
                                          "type": "object",
                                          "properties": {
                                            "unit": {
                                              "type": "string",
                                              "title": "Unit",
                                              "example": "percent"
                                            },
                                            "value": {
                                              "type": "integer",
                                              "title": "Value",
                                              "example": 0
                                            }
                                          }
                                        },
                                        "createdAt": {
                                          "type": "string",
                                          "title": "Created At",
                                          "example": "2018-03-27T19:46:22.000+0000"
                                        },
                                        "updatedAt": {
                                          "type": "string",
                                          "title": "Updated At",
                                          "example": "2018-03-27T19:46:35.000+0000"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "title": "ID",
                                          "example": "sbgd-3ee19606"
                                        },
                                        "status": {
                                          "type": "string",
                                          "title": "Status",
                                          "example": "stopped"
                                        },
                                        "progress": {
                                          "type": "object",
                                          "properties": {
                                            "unit": {
                                              "type": "string",
                                              "title": "Unit",
                                              "example": "percent"
                                            },
                                            "value": {
                                              "type": "integer",
                                              "title": "Value",
                                              "example": 0
                                            }
                                          }
                                        },
                                        "createdAt": {
                                          "type": "string",
                                          "title": "Created At",
                                          "example": "2018-03-27T19:35:41.000+0000"
                                        },
                                        "updatedAt": {
                                          "type": "string",
                                          "title": "Updated At",
                                          "example": "2018-03-27T19:39:18.000+0000"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "title": "ID",
                                          "example": "sbgd-cc4c44e2"
                                        },
                                        "status": {
                                          "type": "string",
                                          "title": "Status",
                                          "example": "finished"
                                        },
                                        "progress": {
                                          "type": "object",
                                          "properties": {
                                            "unit": {
                                              "type": "string",
                                              "title": "Unit",
                                              "example": "percent"
                                            },
                                            "value": {
                                              "type": "integer",
                                              "title": "Value",
                                              "example": 100
                                            }
                                          }
                                        },
                                        "createdAt": {
                                          "type": "string",
                                          "title": "Created At",
                                          "example": "2018-03-26T19:22:45.000+0000"
                                        },
                                        "updatedAt": {
                                          "type": "string",
                                          "title": "Updated At",
                                          "example": "2018-03-26T19:26:17.000+0000"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Start Deployment",
        "description": "Deploy your Elastigroup (triggers Blue/Green Deployment that replaces the existing instances in the Elastigroup)",
        "operationId": "elastigroupAwsDeploy",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "batchSizePercentage",
                      "gracePeriod"
                    ],
                    "properties": {
                      "batchSizePercentage": {
                        "type": "integer",
                        "example": 20,
                        "description": "Indicates (in percentage) the batch size of the deployment (meaning, how many instances to replace in each batch)\n"
                      },
                      "gracePeriod": {
                        "type": "integer",
                        "example": 300,
                        "description": "Indicates (in seconds) the timeout to wait until instance become healthy based on the healthCheckType\n"
                      },
                      "healthCheckType": {
                        "type": "string",
                        "example": "EC2",
                        "description": "Define a health check type.\\\nIf no value is set the roll will use the group’s auto-healing health check.\n",
                        "enum": [
                          "ELB",
                          "ECS_CLUSTER_INSTANCE",
                          "TARGET_GROUP",
                          "OPSWORKS",
                          "NOMAD_NODE",
                          "MULTAI_TARGET_SET",
                          "HCS",
                          "EC2",
                          "NONE"
                        ]
                      },
                      "drainingTimeout": {
                        "type": "integer",
                        "default": 120,
                        "example": 60,
                        "description": "Indicates (in seconds) the timeout to drain the instances. Override the group value.\n",
                        "minimum": 0
                      },
                      "strategy": {
                        "description": "The roll strategy\n",
                        "properties": {
                          "action": {
                            "type": "string",
                            "default": "REPLACE_SERVER",
                            "example": "REPLACE_SERVER",
                            "description": "The roll action to perform.\n",
                            "enum": [
                              "REPLACE_SERVER",
                              "RESTART_SERVER"
                            ]
                          },
                          "batchMinHealthyPercentage": {
                            "type": "integer",
                            "default": 50,
                            "example": 25,
                            "description": "Indicates the threshold of minimum healthy instances in single batch.\\\nIf the amount of healthy instances in single batch is under the threshold, the deployment will fail.\\\nIn case of null as value, the default value in the backend will be 50%.\\\nValue of param should represent the number in percentage (%) of the batch.\n",
                            "minimum": 0,
                            "maximum": 100
                          },
                          "onFailure": {
                            "type": "object",
                            "required": [
                              "actionType"
                            ],
                            "description": "Set detach options to the deployment\n",
                            "properties": {
                              "actionType": {
                                "type": "string",
                                "example": "DETACH_NEW",
                                "description": "Sets the action that will take place.\n",
                                "enum": [
                                  "DETACH_OLD",
                                  "DETACH_NEW"
                                ]
                              },
                              "shouldHandleAllBatches": {
                                "type": "boolean",
                                "default": false,
                                "example": true,
                                "description": "Indicator if the action should apply to all batches of the deployment or only the latest batch\n"
                              },
                              "drainingTimeout": {
                                "type": "integer",
                                "default": "The Elastigroups draining time out",
                                "example": 120,
                                "description": "Indicates (in seconds) the timeout to drain the instances\n"
                              },
                              "shouldDecrementTargetCapacity": {
                                "type": "boolean",
                                "default": true,
                                "example": true,
                                "description": "Decrementing the group target capacity after detaching the instances\n"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Deploy Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-12345/roll?accountId=act-123456",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "PUT",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2016-01-21T17:12:51.451Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group:roll",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "title": "ID",
                                          "example": "sbgd-3ee19606"
                                        },
                                        "status": {
                                          "type": "string",
                                          "title": "Status",
                                          "example": "STARTING"
                                        },
                                        "currentBatch": {
                                          "type": "integer",
                                          "title": "Status",
                                          "example": 1
                                        },
                                        "numOfBatches": {
                                          "type": "integer",
                                          "title": "Status",
                                          "example": 1
                                        },
                                        "progress": {
                                          "type": "object",
                                          "properties": {
                                            "unit": {
                                              "type": "string",
                                              "title": "Unit",
                                              "example": "percent"
                                            },
                                            "value": {
                                              "type": "integer",
                                              "title": "Value",
                                              "example": 0
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/roll/{rollId}": {
      "put": {
        "summary": "Stop Deployment",
        "description": "Stop an existing deployment",
        "operationId": "elastigroupAwsStopDeployment",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "path",
            "name": "rollId",
            "example": "sbgd-9876",
            "description": "The deployment ID you want to stop\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "roll": {
                        "type": "object",
                        "title": "Role",
                        "properties": {
                          "status": {
                            "type": "string",
                            "title": "Status",
                            "example": "STOPPED",
                            "description": "Set the status of the group to `STOPPED\"\n"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Stop Deployment Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "ff3e1e5b-91b8-42fa-8267-b988efc7f662",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-12345/roll/sbgd-dfb956b4",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "PUT",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2015-06-29T13:01:55.060Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group:roll",
                                  "description": "The data type of each item in the response\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/roll/{rollId}/status": {
      "get": {
        "summary": "Deployment Status",
        "description": "Get status of a specific deployment",
        "operationId": "elastigroupAwsDeployStatus",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "path",
            "name": "rollId",
            "example": "sbgd-9876",
            "description": "The deployment ID you want to query\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Deploy Status Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-d8489594/deployment/sbgd-3e158755/status?spotinstAccountId=act-d48178ad",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2016-01-21T17:12:51.451Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group:roll:status",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "progress": {
                                          "type": "object",
                                          "properties": {
                                            "unit": {
                                              "type": "string",
                                              "title": "Unit",
                                              "example": "percent"
                                            },
                                            "value": {
                                              "type": "integer",
                                              "title": "Value",
                                              "example": 50
                                            }
                                          }
                                        },
                                        "numberOfBatches": {
                                          "type": "integer",
                                          "title": "Number Of Batches",
                                          "example": 2
                                        },
                                        "currentBatch": {
                                          "type": "integer",
                                          "title": "Current Batch",
                                          "example": 1
                                        },
                                        "gracePeriod": {
                                          "type": "integer",
                                          "title": "Grace Period",
                                          "example": 600
                                        },
                                        "strategyAction": {
                                          "type": "string",
                                          "title": "Strategy Action",
                                          "example": "REPLACE_SERVER"
                                        },
                                        "healthCheck": {
                                          "type": "string",
                                          "title": "Strategy Action",
                                          "example": "NONE"
                                        },
                                        "instances": {
                                          "type": "array",
                                          "items": [
                                            {
                                              "type": "object",
                                              "properties": {
                                                "blue": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "instanceId": {
                                                        "type": "string",
                                                        "example": "i-0b3f1234567890ae5"
                                                      },
                                                      "lifeCycle": {
                                                        "type": "string",
                                                        "example": "spot"
                                                      },
                                                      "batchNum": {
                                                        "type": "integer",
                                                        "example": 1
                                                      },
                                                      "status": {
                                                        "type": "string",
                                                        "example": "RUNNING"
                                                      }
                                                    }
                                                  }
                                                },
                                                "green": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "instanceId": {
                                                        "type": "string",
                                                        "example": "i-0b3f1234567890dd5"
                                                      },
                                                      "lifeCycle": {
                                                        "type": "string",
                                                        "example": "spot"
                                                      },
                                                      "batchNum": {
                                                        "type": "integer",
                                                        "example": 1
                                                      },
                                                      "status": {
                                                        "type": "string",
                                                        "example": "RUNNING"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "blue": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "instanceId": {
                                                        "type": "string",
                                                        "example": "i-0b3f1234567890aa6"
                                                      },
                                                      "lifeCycle": {
                                                        "type": "string",
                                                        "example": "spot"
                                                      },
                                                      "batchNum": {
                                                        "type": "integer",
                                                        "example": 2
                                                      },
                                                      "status": {
                                                        "type": "string",
                                                        "example": "DETACHED"
                                                      }
                                                    }
                                                  }
                                                },
                                                "green": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "instanceId": {
                                                        "type": "string",
                                                        "example": "i-0b3f1234567890dq3"
                                                      },
                                                      "lifeCycle": {
                                                        "type": "string",
                                                        "example": "spot"
                                                      },
                                                      "batchNum": {
                                                        "type": "integer",
                                                        "example": 2
                                                      },
                                                      "status": {
                                                        "type": "string",
                                                        "example": "RUNNING"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/roll/{rollId}/action": {
      "post": {
        "summary": "Deployment Actions",
        "description": "Apply a Detach action to a deployment",
        "operationId": "elastigroupAwsDeployment",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "rollId",
            "example": "sbgd-9876",
            "description": "The deployment ID to call the action on\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "actionType": {
                        "type": "string",
                        "title": "Type of action",
                        "description": "Sets the action that will take place, Accepted values are: DETACH_OLD, DETACH_NEW\n",
                        "example": "DETACH_NEW"
                      },
                      "shouldHandleAllBatches": {
                        "type": "boolean",
                        "title": "Should Hnadle All Batches Criteria",
                        "example": true,
                        "default": false,
                        "description": "Indicator if the action should apply to all batches of the deployment or only the latest batch\n"
                      },
                      "drainingTimeout": {
                        "type": "integer",
                        "title": "Draining timeout criteria",
                        "description": "Indicates (in seconds) the timeout to wait until instance are detached\n",
                        "example": 200
                      },
                      "shouldDecrementTargetCapacity": {
                        "type": "boolean",
                        "title": "Should Decrement Target Capacity criteria",
                        "example": true,
                        "default": true
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Deployment Actions Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-1b656b92/roll/sbgd-aafb7671/action",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2016-01-21T17:12:51.451Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group:roll:action",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "groupId": {
                                          "type": "string",
                                          "description": "Group ID",
                                          "example": "sig-1b656b92"
                                        },
                                        "rollId": {
                                          "type": "string",
                                          "description": "Roll ID",
                                          "example": "sbgd-aafb7671"
                                        },
                                        "actionType": {
                                          "type": "string",
                                          "description": "Roll ID",
                                          "example": "DETACH_NEW"
                                        },
                                        "detachedInstances": {
                                          "type": "string",
                                          "example": [
                                            "i-0b6974ad592f8d9ba"
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/compute/azure/group": {
      "get": {
        "summary": "List Elastigroups",
        "description": "List all Azure Elastigroups for a Spot Account\n",
        "operationId": "elastigroupAzureListAll",
        "tags": [
          "Elastigroup Azure Scale Set VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1compute~1azure~1task/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "summary": "Create Elastigroup",
        "description": "Create a new Azure Elastigroup",
        "operationId": "elastigroupAzureCreate",
        "tags": [
          "Elastigroup Azure Scale Set VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Create Elastigroup Azure Scale Set VMs Body",
                    "required": [
                      "group",
                      "name",
                      "region",
                      "capacity",
                      "strategy",
                      "compute"
                    ],
                    "properties": {
                      "group": {
                        "type": "object",
                        "required": [
                          "name",
                          "region",
                          "capacity",
                          "resourceGroupName",
                          "strategy",
                          "compute"
                        ],
                        "title": "Azure Elastigroup",
                        "description": "Azure Elastigroup Configuration",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "sig-123456789",
                            "readOnly": true,
                            "description": "Azure Elastigroup ID\n"
                          },
                          "name": {
                            "type": "string",
                            "example": "spotinst-group",
                            "description": "Azure Elastigroup Name\n"
                          },
                          "region": {
                            "type": "string",
                            "example": "eastus",
                            "description": "Valid Azure region the Elastigroup is managed in\n"
                          },
                          "resourceGroupName": {
                            "type": "string",
                            "example": "spotinst-azure",
                            "description": "The Azure resource group to associate the Elastigroup with\n"
                          },
                          "capacity": {
                            "type": "object",
                            "description": "Capacity of Elastigroup",
                            "required": [
                              "target",
                              "minimum",
                              "maximum"
                            ],
                            "properties": {
                              "target": {
                                "type": "integer",
                                "example": 8,
                                "description": "Current scale the Elastigroup will conform to"
                              },
                              "minimum": {
                                "type": "integer",
                                "example": 2,
                                "description": "The Elastigroup will not set a target below this value\n"
                              },
                              "maximum": {
                                "type": "integer",
                                "example": 10,
                                "description": "The Elastigroup will not set a target greater than this value\n"
                              }
                            }
                          },
                          "scaling": {
                            "type": "object",
                            "description": "Scaling Policies for Elastigroup. Set as many policies as needed to maximize the Elastigroup’s efficiency.",
                            "title": "Azure Scaling",
                            "properties": {
                              "up": {
                                "type": "object",
                                "title": "Scale Up Policies",
                                "description": "Provide the ability to accommodate increased workloads.",
                                "properties": {
                                  "policyName": {
                                    "title": "Policy Name",
                                    "description": "Name of scaling policy",
                                    "type": "string",
                                    "example": "cpuScale"
                                  },
                                  "metricName": {
                                    "title": "Metric Name",
                                    "description": "Metric to monitor by Azure metric display name",
                                    "type": "string",
                                    "example": "Percentage CPU"
                                  },
                                  "statistic": {
                                    "title": "Statistics",
                                    "description": "Statistic by which to evaluate the selected metric.",
                                    "type": "string",
                                    "example": "average",
                                    "enum": [
                                      "average",
                                      "sampleCount",
                                      "sum",
                                      "minimum",
                                      "maximum"
                                    ]
                                  },
                                  "threshold": {
                                    "title": "Threshold",
                                    "description": "The value at which the scaling action is triggered.",
                                    "type": "number",
                                    "format": "float",
                                    "example": 0.75
                                  },
                                  "period": {
                                    "title": "Period",
                                    "description": "Amount of time (seconds) for which the threshold must be met in order to trigger the scaling action.",
                                    "type": "integer",
                                    "example": 60
                                  },
                                  "evaluationPeriods": {
                                    "title": "Evaluation Periods",
                                    "description": "Amount of time (seconds) for which the threshold must be met in order to trigger the scaling action.",
                                    "type": "integer",
                                    "example": 3
                                  },
                                  "cooldown": {
                                    "title": "Cooldown",
                                    "description": "Time (seconds) to wait after a scaling action before resuming monitoring.",
                                    "type": "integer",
                                    "example": 300
                                  },
                                  "namespace": {
                                    "title": "namespace",
                                    "description": "Select one of the next namespaces presented in Azure configurator - https://docs.microsoft.com/en-us/azure/templates/",
                                    "type": "string",
                                    "example": "Microsoft.Network/applicationGateways",
                                    "default": "Microsoft.Compute"
                                  },
                                  "operator": {
                                    "title": "Operator",
                                    "description": "The operator used to evaluate the threshold against the current metric value.\n+ gt (Greater Than)\n+ gte (Greater Than or Equal)\n+ lt (Less Than)\n+ lte (Less Than or Equal) ",
                                    "type": "string",
                                    "example": "gte",
                                    "enum": [
                                      "gt",
                                      "gte",
                                      "lt",
                                      "lte"
                                    ]
                                  },
                                  "dimenstions": {
                                    "title": "Dimenstions",
                                    "description": "The dimensions for the alarm's associated metric. If the user mentioned name as instanceId, there is NO value",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "title": "Name",
                                          "description": "Dimenstions Name",
                                          "type": "string",
                                          "example": "resourceName"
                                        },
                                        "value": {
                                          "title": "Value",
                                          "description": "Dimenstions Value",
                                          "type": "string",
                                          "example": "TestAppGateway"
                                        }
                                      }
                                    }
                                  },
                                  "action": {
                                    "title": "Action",
                                    "description": "Scaling action to take when the policy is triggered.",
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "title": "Type",
                                        "description": "Type of scaling action to take when the scaling policy is triggered. </br> Valid Values:\n+ adjustment\n+ setMinTarget\n+ updateCapacity\n+ percentageAdjustment",
                                        "type": "string",
                                        "example": "adjustment"
                                      },
                                      "adjustment": {
                                        "title": "Adjustment",
                                        "description": "Value to which the action type will be adjusted. Required if using the next action types:\n+ numeric\n+ percentageAdjustment",
                                        "type": "string",
                                        "example": "2"
                                      },
                                      "minTargetCapacity": {
                                        "title": "Minimum Target Capacity",
                                        "description": "Value to adjust the capacity to. Required if using as action type:\n+ setMinTarget"
                                      },
                                      "target": {
                                        "title": "Target",
                                        "description": "Value to update the group target capacity to. Also you must indicate “minimum” and “maximum” amounts. Required if selected as action type:\n+ updateCapacity",
                                        "type": "integer",
                                        "example": 23
                                      },
                                      "minimum": {
                                        "title": "Target",
                                        "description": "Value to update the group minimum capacity to. Also you must indicate “target” and “maximum” amounts. Required if selected as action type:\n+ updateCapacity",
                                        "type": "integer",
                                        "example": 20
                                      },
                                      "maximum": {
                                        "title": "Target",
                                        "description": "Value to update the group minimum capacity to. Also you must indicate “target” and “minimum” amounts. Required if selected as action type:\n+ updateCapacity",
                                        "type": "integer",
                                        "example": 25
                                      }
                                    }
                                  }
                                }
                              },
                              "down": {
                                "type": "object",
                                "title": "Scale Down Policies",
                                "description": "Provide the ability to scale down to maximize cost efficiency.",
                                "properties": {
                                  "policyName": {
                                    "title": "Policy Name",
                                    "description": "Name of scaling policy",
                                    "type": "string",
                                    "example": "cpuScale"
                                  },
                                  "metricName": {
                                    "title": "Metric Name",
                                    "description": "Metric to monitor by Azure metric display name",
                                    "type": "string",
                                    "example": "Percentage CPU"
                                  },
                                  "statistic": {
                                    "title": "Statistics",
                                    "description": "Statistic by which to evaluate the selected metric.",
                                    "type": "string",
                                    "example": "average",
                                    "enum": [
                                      "average",
                                      "sampleCount",
                                      "sum",
                                      "minimum",
                                      "maximum"
                                    ]
                                  },
                                  "threshold": {
                                    "title": "Threshold",
                                    "description": "The value at which the scaling action is triggered.",
                                    "type": "number",
                                    "format": "float",
                                    "example": 0.75
                                  },
                                  "period": {
                                    "title": "Period",
                                    "description": "Amount of time (seconds) for which the threshold must be met in order to trigger the scaling action.",
                                    "type": "integer",
                                    "example": 60
                                  },
                                  "evaluationPeriods": {
                                    "title": "Evaluation Periods",
                                    "description": "Number of consecutive periods in which the threshold must be met in order to trigger the scaling action.",
                                    "type": "integer",
                                    "example": 3
                                  },
                                  "cooldown": {
                                    "title": "Cooldown",
                                    "description": "Time (seconds) to wait after a scaling action before resuming monitoring.",
                                    "type": "integer",
                                    "example": 300
                                  },
                                  "namespace": {
                                    "title": "Namespace",
                                    "description": "Select one of the next namespaces presented in Azure configurator - https://docs.microsoft.com/en-us/azure/templates/",
                                    "type": "string",
                                    "example": "Microsoft.Network/applicationGateways"
                                  },
                                  "operator": {
                                    "title": "Operator",
                                    "description": "The operator used to evaluate the threshold against the current metric value.\n+ gt (Greater Than)\n+ gte (Greater Than or Equal)\n+ lt (Less Than)\n+ lte (Less Than or Equal) ",
                                    "type": "string",
                                    "default": "lte",
                                    "example": "gte",
                                    "enum": [
                                      "gt",
                                      "gte",
                                      "lt",
                                      "lte"
                                    ]
                                  },
                                  "dimenstions": {
                                    "title": "Dimenstions",
                                    "description": "The dimensions for the alarm's associated metric. If the user mentioned name as instanceId, there is NO value",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "title": "Name",
                                          "description": "Dimenstions Name",
                                          "type": "string",
                                          "example": "resourceName"
                                        },
                                        "value": {
                                          "title": "Value",
                                          "description": "Dimenstions Name",
                                          "type": "string",
                                          "example": "TestAppGateway"
                                        }
                                      }
                                    }
                                  },
                                  "action": {
                                    "title": "Action",
                                    "description": "Scaling action to take when the policy is triggered.",
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "title": "Type",
                                        "description": "Type of scaling action to take when the scaling policy is triggered. </br> Valid Values:\n+ adjustment\n+ setMaxTarget\n+ updateCapacity\n+ percentageAdjustment",
                                        "type": "string",
                                        "example": "adjustment"
                                      },
                                      "target": {
                                        "type": "integer",
                                        "title": "Target",
                                        "description": "Desired number of instances. Also you must indicate “minimum” and “maximum” amounts. Required if selected as action type:\n+ updateCapacity",
                                        "example": 1
                                      },
                                      "minimum": {
                                        "type": "integer",
                                        "title": "Minimum",
                                        "description": "Lower limit of instances that you can scale down to. Also you must indicate “target” and “maximum” amounts. Required if selected as action type:\n+ updateCapacity",
                                        "example": 1
                                      },
                                      "maximum": {
                                        "type": "integer",
                                        "title": "Maximum",
                                        "description": "Upper limit of instances that you can scale down to. Also you must indicate “minimum” and “target” amounts. Required if selected as action type:\n+ updateCapacity",
                                        "example": 1
                                      },
                                      "adjustment": {
                                        "title": "Adjustment",
                                        "description": "Value to which the action type will be adjusted. Required if using the next action types:\n+ numeric\n+ percentageAdjustment",
                                        "type": "string",
                                        "example": "2"
                                      }
                                    },
                                    "policyName": {
                                      "type": "object",
                                      "example": "cpuScaleDown",
                                      "threshold": {
                                        "example": 0.25
                                      },
                                      "operator": {
                                        "example": "lte"
                                      },
                                      "action": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "example": "adjustment",
                                            "enum": [
                                              "adjustment",
                                              "setMaxTarget",
                                              "updateCapacity",
                                              "percentageAdjustment"
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "strategy": {
                            "type": "object",
                            "title": "Scaling Strategy",
                            "properties": {
                              "lowPriorityPercentage": {
                                "title": "Low Priority Percentage",
                                "description": "Percentage of Low Priority instances to maintain.  <a style=color:red>Required if odCount isn't specified.</a>",
                                "type": "integer",
                                "default": 100
                              },
                              "onDemandCount": {
                                "title": "On Demand Count",
                                "type": "integer",
                                "description": "Number of On-Demand instances to maintain.  <a style=color:red>Required if lowPriorityPercentage isn't specified.</a>"
                              },
                              "drainingTimeout": {
                                "title": "On Demand Count",
                                "type": "integer",
                                "description": "Time (seconds) to allow the instance be drained from incoming TCP connections and detached from MLB before terminating it during a scale down operation.",
                                "default": 120
                              }
                            }
                          },
                          "compute": {
                            "title": "Compute",
                            "description": "Elastigroup's Compute Configurtion",
                            "type": "object",
                            "required": [
                              "vmSizes",
                              "product",
                              "launchSpecification"
                            ],
                            "properties": {
                              "vmSizes": {
                                "title": "VM Sizes",
                                "description": "Sizes of On-Demand and Low-Priority VMs.",
                                "type": "object",
                                "required": [
                                  "odSizes",
                                  "lowPrioritySizes"
                                ],
                                "properties": {
                                  "odSizes": {
                                    "title": "OD Sizes",
                                    "type": "array",
                                    "description": "Array of string (s) with Available On-Demand sizes (pls chose items that correspond to your location or zone) https://docs.microsoft.com/azure/virtual-machines/sizes",
                                    "items": {
                                      "type": "string",
                                      "example": "standard_b1s"
                                    }
                                  },
                                  "lowPrioritySizes": {
                                    "title": "Low Priority Sizes",
                                    "description": "Available Low-Priority sizes. (pls chose items that correspond to your location or zone) https://docs.microsoft.com/azure/virtual-machines/sizes",
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "example": "standard_a2_v2"
                                    }
                                  }
                                }
                              },
                              "product": {
                                "type": "string",
                                "example": "Linux",
                                "enum": [
                                  "Linux",
                                  "Windows"
                                ]
                              },
                              "health": {
                                "title": "Health",
                                "description": "Autohealing of unhealthy VMs.",
                                "type": "object",
                                "properties": {
                                  "autoHealing": {
                                    "title": "Auto Healing",
                                    "description": "Enable Autohealing of unhealthy VMs.",
                                    "type": "boolean",
                                    "example": true
                                  },
                                  "healthCheckType": {
                                    "title": null,
                                    "description": "Healthcheck to use to validate VM health. </br> Valid Values:\n+ INSTANCE_STATE\n+ MULTAI_TARGET_SET\n+ HCS\n+ K8S_NODE",
                                    "type": "string",
                                    "example": "INSTANCE_STATE",
                                    "enum": [
                                      "INSTANCE_STATE"
                                    ]
                                  },
                                  "gracePeriod": {
                                    "title": "Grace Period",
                                    "description": "Period of time to wait for VM to reach healthiness before monitoring for unhealthiness.",
                                    "type": "integer",
                                    "example": 120
                                  },
                                  "unhealthyDuration": {
                                    "title": "Unhealthy Duration",
                                    "description": "amount of time to be unhealthy before a replacement is triggered",
                                    "type": "integer",
                                    "example": 360
                                  }
                                }
                              },
                              "launchSpecification": {
                                "title": "Launch Specification",
                                "description": "Launch Specification Configuration",
                                "type": "object",
                                "required": [
                                  "login",
                                  "image",
                                  "network",
                                  "subnetName"
                                ],
                                "properties": {
                                  "image": {
                                    "title": "Image",
                                    "description": "Image of VM. An image is a template for creating new VMs. Choose from Azure image catalogue (marketplace) or use a custom image.",
                                    "type": "object",
                                    "properties": {
                                      "marketplace": {
                                        "title": "Marketplace",
                                        "type": "object",
                                        "description": "Select an image from Azure's Marketplace image catalogue.  <a style=color:red;>Required if custom image isn't specified.</a>",
                                        "properties": {
                                          "publisher": {
                                            "title": "Publisher",
                                            "description": "Image publisher.  <a style=color:red;>Required if marketplace image is specified.</a>",
                                            "type": "string",
                                            "example": "OpenLogic"
                                          },
                                          "offer": {
                                            "title": "Offer",
                                            "desription": "Name of image to use.  <a style=color:red;>Required if marketplace image is specified.</a>",
                                            "type": "string",
                                            "example": "CentOS"
                                          },
                                          "sku": {
                                            "title": "Stock Keeping Unit",
                                            "description": "Image's Stock Keeping Unit, which is the specific version of the image.  <a style=color:red;>Required if marketplace image is specified.</a>",
                                            "type": "string",
                                            "example": "7.3"
                                          },
                                          "version": {
                                            "title": "Version",
                                            "description": "Image's version. if version not provided we use 'latest'",
                                            "type": "string",
                                            "example": "7.3-1611",
                                            "default": "latest"
                                          }
                                        }
                                      },
                                      "custom": {
                                        "title": "Custom",
                                        "type": "object",
                                        "description": "Custom image to launch Elastigroup with. Cannot be used with `marketplace`  <a style=color:red;>Required if marketplace image isn't specified.</a>",
                                        "properties": {
                                          "resourceGroupName": {
                                            "title": "Resource Group Name",
                                            "description": "Name of Resource Group for custom image.  <a style=color:red;>Required if custom image is specified.</a>",
                                            "type": "string",
                                            "example": "spotinst-azure"
                                          },
                                          "imageName": {
                                            "title": "Image Name",
                                            "description": "Name of the custom image.  <a style=color:red;>Required if custom image is specified.</a>",
                                            "type": "string",
                                            "example": "custom-image-name"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "loadBalancersConfig": {
                                    "title": "Load Balancer Configuration",
                                    "description": "Configure a Load Balancer",
                                    "type": "object",
                                    "properties": {
                                      "loadBalancers": {
                                        "title": "Load Balancers",
                                        "description": "Add a load balancer. For Azure Gateway, each Backend Pool is a separate load balancer.",
                                        "type": "array",
                                        "items": {
                                          "anyOf": [
                                            {
                                              "type": "object",
                                              "title": "MULTAI_TARGET_SET",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "example": "MULTAI_TARGET_SET",
                                                  "enum": [
                                                    "MULTAI_TARGET_SET"
                                                  ]
                                                },
                                                "balancerId": {
                                                  "type": "string",
                                                  "example": "lb-1ee2e3q"
                                                },
                                                "targetSetId": {
                                                  "type": "string",
                                                  "example": "ts-3eq"
                                                },
                                                "autoWeight": {
                                                  "type": "boolean",
                                                  "example": true
                                                }
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "title": "APPLICATION_GATEWAY",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "example": "APPLICATION_GATEWAY",
                                                  "enum": [
                                                    "APPLICATION_GATEWAY"
                                                  ]
                                                },
                                                "resourceGroupName": {
                                                  "type": "string",
                                                  "example": "azureResourceGroup"
                                                },
                                                "applicationGatewayName": {
                                                  "type": "string",
                                                  "example": "appGateway"
                                                },
                                                "backendPoolName": {
                                                  "type": "string",
                                                  "example": "backendpool490822"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "userData": {
                                    "title": "User Data",
                                    "description": "Base64-encoded MIME user data to make available to the instances.",
                                    "type": "string",
                                    "example": "IyEvYmluL2Jhc2gKZWNobyAidGVzdCI="
                                  },
                                  "managedServiceIdentities": {
                                    "title": "Managed Service Identities",
                                    "description": "Add a user-assigned managed identity to the VMs in the cluster.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "resourceGroupName": {
                                          "title": "Resource Group Name",
                                          "description": "The Resource Group that the user-assigned managed identity resides in.",
                                          "type": "string",
                                          "example": "Resourse Group 1"
                                        },
                                        "name": {
                                          "title": "Name",
                                          "description": "Name of the managed identity",
                                          "type": "string",
                                          "example": "Test"
                                        }
                                      }
                                    }
                                  },
                                  "shutdownScript": {
                                    "title": "Shutdown Script",
                                    "type": "string",
                                    "description": "Shutdown script for the group. Value should be passed as a string encoded at Base64 only",
                                    "example": "IyEvYmluL2Jhc2gKZWNobyAidGVzdCI="
                                  },
                                  "tags": {
                                    "title": "Tags",
                                    "description": "Key-Value pairs for VMs in the Elastigroup.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "tagKey": {
                                          "title": "Tag Key",
                                          "description": "Tag Key for Vms in Elastigroup.",
                                          "type": "string",
                                          "example": "env"
                                        },
                                        "tagValue": {
                                          "title": "Tag Value",
                                          "description": "Tag Value for VMs in Elastigroup.",
                                          "type": "string",
                                          "example": "staging"
                                        }
                                      }
                                    }
                                  },
                                  "network": {
                                    "title": "Network",
                                    "description": "Define the Virtual Network and Subnet for your Elastigroup.",
                                    "type": "object",
                                    "required": [
                                      "resourceGroupName",
                                      "virtualNetworkName",
                                      "subnetName"
                                    ],
                                    "properties": {
                                      "virtualNetworkName": {
                                        "title": "Virtual Network Name",
                                        "description": "Name of Vnet.",
                                        "type": "string",
                                        "example": "vname"
                                      },
                                      "subnetName": {
                                        "title": "Subnet Name",
                                        "description": "ID of subnet.",
                                        "type": "string",
                                        "example": "my-subnet-name"
                                      },
                                      "resourceGroupName": {
                                        "title": "Resource Group Name",
                                        "description": "Vnet Resource Group Name",
                                        "type": "string",
                                        "example": "subnetResourceGroup"
                                      },
                                      "assignPublicIp": {
                                        "title": "Assign Public Ip",
                                        "description": "Assign a public IP to each VM in the Elastigroup.",
                                        "default": false,
                                        "type": "boolean",
                                        "example": true
                                      },
                                      "additionalIPConfigurations": {
                                        "title": "Additional IP Configurations",
                                        "description": "Add array of additional IP configuration objects",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "name"
                                          ],
                                          "properties": {
                                            "name": {
                                              "title": "Name",
                                              "description": "The IP configuration name.",
                                              "type": "string",
                                              "example": "config1"
                                            },
                                            "privateIpAddressVersion": {
                                              "title": "Private IP Address Version",
                                              "description": "Available from Azure Api-Version 2017-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Valid values:\n+ IPv4\n+ IPv6",
                                              "type": "string",
                                              "example": "IPv4"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "extensions": {
                                    "title": "Extensions",
                                    "description": "List of objects for Azure extensions",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "autoUpgradeMinorVersion",
                                        "name",
                                        "publisher",
                                        "type",
                                        "typeHandlerVersion"
                                      ],
                                      "properties": {
                                        "autoUpgradeMinorVersion": {
                                          "title": "Auto Upgrade Minor Version",
                                          "description": "Required on compute.launchSpecification.extensions object",
                                          "type": "boolean",
                                          "example": true,
                                          "required": true
                                        },
                                        "name": {
                                          "title": "name",
                                          "description": "Required on compute.launchSpecification.extensions object",
                                          "type": "string",
                                          "example": "k8s-agentpool1-38611891-vmss-computeAksLinuxBilling"
                                        },
                                        "protectedSettings": {
                                          "title": "Protected Settings",
                                          "description": "Object for protected settings",
                                          "type": "object",
                                          "required": [
                                            "commandToExecute"
                                          ],
                                          "properties": {
                                            "commandToExecute": {
                                              "title": "Command To Execute",
                                              "description": "Required for compute.launchSpecification.extensions.protectedSettings object",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "publisher": {
                                          "title": "Publisher",
                                          "description": "Required on compute.launchSpecification.extensions object",
                                          "type": "string",
                                          "example": "Microsoft.AKS"
                                        },
                                        "type": {
                                          "title": "Type",
                                          "description": "Required on compute.launchSpecification.extensions object",
                                          "type": "string",
                                          "example": "Compute.AKS-Engine.Linux.Billing"
                                        },
                                        "typeHandlerVersion": {
                                          "title": "Type Handler Version",
                                          "description": "Required on compute.launchSpecification.extensions object",
                                          "type": "string",
                                          "example": "1.0"
                                        }
                                      }
                                    }
                                  },
                                  "customData": {
                                    "title": "Custom Data",
                                    "description": "This value will hold the YML in base64 and will be added to the scaleSets",
                                    "type": "string",
                                    "example": "IyEvYmluL2Jhc2gKZWNobyAidGVzdCI="
                                  },
                                  "login": {
                                    "title": "Login",
                                    "description": "Set admin access for accessing your VMs.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "userName"
                                      ],
                                      "properties": {
                                        "userName": {
                                          "title": "User Name",
                                          "description": "User name for admin access to VMs.\n+ for windows: compute.launchSpecification.login.password\n+ for linux: compute.launchSpecification.login.sshPublicKey",
                                          "type": "string",
                                          "example": "spotinst"
                                        },
                                        "sshPublicKey": {
                                          "title": "SSH Public Key",
                                          "description": "SSH for admin access to Linux VMs.  <a style = color:red>Required for Linux.  Can not exist simultaneously with 'password'</a>",
                                          "type": "string"
                                        },
                                        "password": {
                                          "title": "Password",
                                          "description": "Password for admin access to Windows VMs.  <a style = color:red>Required for Windows. Can not exist simultaneously with 'sshPublicKey'</a>",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "thirdPartiesIntegration": {
                            "title": "Third Parties Integration",
                            "description": "Settings for 3rd party integrations on group.",
                            "type": "object",
                            "properties": {
                              "kubernetes": {
                                "title": "Kubernetes Integration Configuration",
                                "description": "Define Kubernetes integration on group",
                                "type": "object",
                                "required": [
                                  "clusterIdentifier"
                                ],
                                "properties": {
                                  "clusterIdentifier": {
                                    "title": "Cluster Identifier",
                                    "description": "Must match the clusterIdentifier that was sent when the Spot Controller was installed.  <a style = color:red>Required on thirdPartiesIntegration.kubernetes object</a>",
                                    "type": "string",
                                    "example": "aks-engine-cluser"
                                  },
                                  "autoScale": {
                                    "title": "Auto Scale",
                                    "description": "K8's auto scaler configuration",
                                    "type": "object",
                                    "properties": {
                                      "isEnabled": {
                                        "title": "Is Enabled Criteria",
                                        "description": "Is the auto scaler enabled or not",
                                        "type": "boolean",
                                        "example": true
                                      },
                                      "isAutoConfig": {
                                        "title": "Is Auto Config Criteria",
                                        "description": "Set to true if you want to use the Automated headroom feature",
                                        "type": "boolean",
                                        "example": false
                                      },
                                      "cooldown": {
                                        "title": "Cooldown",
                                        "description": "Cool down period between scaling actions",
                                        "type": "integer",
                                        "example": 180
                                      },
                                      "down": {
                                        "title": "Down",
                                        "description": "Auto scaler Scale down configuration",
                                        "type": "object",
                                        "properties": {
                                          "maxScaleDownPercentage": {
                                            "title": "Max Scale Down Percentage",
                                            "description": "Would represent the maximum % to scale-down. Number between 1-100",
                                            "type": "integer",
                                            "example": 50
                                          }
                                        }
                                      },
                                      "headroom": {
                                        "title": "Headroom",
                                        "description": "Headroom configuration of the auto scaler",
                                        "type": "object",
                                        "properties": {
                                          "cpuPerUnit": {
                                            "title": "cpuPerUnit",
                                            "description": "Optionally configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.",
                                            "type": "integer",
                                            "example": 2
                                          },
                                          "memoryPerUnit": {
                                            "title": "memoryPerUnit",
                                            "description": "Optionally configure the amount of memory (MiB) to allocate the headroom.",
                                            "type": "integer",
                                            "example": 2
                                          },
                                          "gpuPerUnit": {
                                            "title": "GPU Per Unit",
                                            "description": "How much GPU allocate for headroom unit.",
                                            "type": "integer",
                                            "example": 2
                                          },
                                          "numOfUnits": {
                                            "title": "Number Of Units",
                                            "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.",
                                            "type": "integer",
                                            "example": 2
                                          }
                                        }
                                      },
                                      "labels": {
                                        "title": "Labels",
                                        "description": "Key/value pairs to use as constraints.",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "key": {
                                              "title": "Key",
                                              "description": "Key of constraint",
                                              "type": "string",
                                              "example": "group"
                                            },
                                            "value": {
                                              "title": "Value",
                                              "description": "Value of constraint",
                                              "type": "string",
                                              "example": "microservices"
                                            }
                                          }
                                        }
                                      },
                                      "resourceLimits": {
                                        "title": "Resource Limits",
                                        "description": "Optionally set upper and lower bounds on the resource usage of the cluster.",
                                        "type": "object",
                                        "properties": {
                                          "maxVCpu": {
                                            "title": "MAX VCpu",
                                            "description": "The maximum cpu in vCpu units that can be allocated to the cluster.",
                                            "type": "integer",
                                            "example": 4
                                          },
                                          "maxMemoryGib": {
                                            "title": "MAX Memory Gib",
                                            "description": "The maximum memory in GiB units that can be allocated to the cluster.",
                                            "type": "integer",
                                            "example": 4
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "hpcGridEngine": {
                                "type": "object",
                                "required": [
                                  "clusterId"
                                ],
                                "properties": {
                                  "clusterId": {
                                    "type": "string",
                                    "example": "spotinst-uge-cluster",
                                    "description": "Must match the clusterId used by the [controller](https://api.spot.io/elastigroup-for-azure/hpc/introduction/)\n"
                                  },
                                  "queues": {
                                    "type": "array",
                                    "description": "If defined the autoscaler will only match this Elastigroup to jobs associated with the queues listed here. If empty or null, then all queues will be monitored.\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "example": "burst.q",
                                          "description": "The name of the queue to monitor\n"
                                        }
                                      }
                                    }
                                  },
                                  "distribution": {
                                    "type": "string",
                                    "enum": [
                                      "sge",
                                      "uge"
                                    ],
                                    "description": "The specific distribution of grid engine. Defaults to `sge`\n",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1compute~1azure~1task/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/compute/azure/group/{groupId}": {
      "delete": {
        "summary": "Delete Elastigroup",
        "description": "Delete an Elastigroup Azure\n",
        "operationId": "elastigroupAzureDelete",
        "tags": [
          "Elastigroup Azure Scale Set VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get Elastigroup",
        "description": "List all properties for single Azure Elastigroup\n",
        "operationId": "elastigroupAzureDescribe",
        "tags": [
          "Elastigroup Azure Scale Set VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1compute~1azure~1task/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Elastigroup",
        "description": "Update an Azure Elastigroup\n",
        "operationId": "elastigroupAzureUpdate",
        "tags": [
          "Elastigroup Azure Scale Set VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/paths/~1compute~1azure~1task/post/requestBody/content/application~1json/schema/allOf/0"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "group": {
                        "type": "object"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1compute~1azure~1task/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/compute/azure/group/{groupId}/status": {
      "get": {
        "summary": "Get Elastigroup Status",
        "description": "Get the status for all instances that are memebers of the Elastigroup",
        "operationId": "elastigroupAzureGetStatus",
        "tags": [
          "Elastigroup Azure Scale Set VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "components": {
        "responses": {
          "groupStatus": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects.\n"
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array.\n"
                                },
                                "kind": {
                                  "type": "string",
                                  "description": "The data type of each item in the response.\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/schemas/groupStatus"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "schemas": {
          "groupStatus": {
            "type": "object",
            "properties": {
              "instanceId": {
                "type": "string",
                "example": "ec5410ea-fec7-4a03-a989-3b27b7ee2ed5"
              },
              "region": {
                "type": "string",
                "example": "eastus"
              },
              "vmSize": {
                "type": "string",
                "example": "standard_a1_v2"
              },
              "lifeCycle": {
                "type": "string",
                "example": "low-priority",
                "enum": [
                  "low-priority",
                  "regular"
                ]
              },
              "privateIp": {
                "type": "string",
                "example": "10.0.0.8"
              },
              "publicIp": {
                "type": "string",
                "example": "168.62.168.93"
              },
              "state": {
                "type": "string",
                "example": "running",
                "enum": [
                  "running",
                  "reimaging",
                  "creating",
                  "starting"
                ]
              },
              "createdAt": {
                "type": "string",
                "example": "2018-06-20T11:16:32.000Z"
              }
            }
          }
        },
        "parameters": {
          "groupId": {
            "in": "path",
            "name": "groupId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Elastigroup Azure ID\n"
          }
        }
      }
    },
    "/compute/azure/group/{groupId}/detachInstances": {
      "put": {
        "summary": "Detach Instances",
        "description": "Detach one or more instances from an Azure Elastigroup\n",
        "operationId": "elastigroupAzureDetachInstances",
        "tags": [
          "Elastigroup Azure Scale Set VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "instancesToDetach": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "shouldDecrementTargetCapacity": {
                    "type": "boolean",
                    "example": true
                  },
                  "drainingTimeout": {
                    "type": "integer",
                    "example": 300
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1detachInstances/components/responses/groupStatus"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "components": {
        "responses": {
          "groupStatus": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1detachInstances/components/schemas/detachResponse"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "schemas": {
          "detachResponse": {
            "type": "object",
            "properties": {
              "detachedOd": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "detachedLowPriority": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/compute/azure/group/{groupId}/roll": {
      "get": {
        "summary": "List Deployments",
        "description": "Historical list of all deployments for an Azure Elastigroup\n",
        "operationId": "elastigroupAzureDeploymentList",
        "tags": [
          "Elastigroup Azure Scale Set VMs"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "Your Spotinst accountid associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          },
          {
            "in": "query",
            "name": "limit",
            "example": 5,
            "description": "Limits results\n",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "sort",
            "example": "created:ASC",
            "description": "Field to sort by the results\n",
            "schema": {
              "type": "integer"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "sbgd-9876"
                                  },
                                  "status": {
                                    "type": "string",
                                    "example": "ROLL_STARTING",
                                    "enum": "ROLL_STARTING PENDING RUNNING DETACHED ERROR RESTARTED",
                                    "currentBatch": {
                                      "type": "integer",
                                      "readOnly": true,
                                      "example": 1,
                                      "description": "Batch number that is currenlty being deployed\n"
                                    },
                                    "numOfBatches": {
                                      "type": "integer",
                                      "readOnly": true,
                                      "example": 2,
                                      "description": "Total number of batches the deployment will process\n"
                                    },
                                    "progress": {
                                      "type": "object",
                                      "readOnly": true,
                                      "properties": {
                                        "unit": {
                                          "type": "string",
                                          "example": "percentage"
                                        },
                                        "value": {
                                          "type": "integer",
                                          "example": 10
                                        }
                                      }
                                    },
                                    "groupId": {
                                      "type": "string",
                                      "example": "sig-12345",
                                      "readOnly": true,
                                      "description": "The Azure Elastigroup the deployment is executing on\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Start Deployment",
        "description": "Start a new Azure Elastigroup deployment\n",
        "operationId": "elastigroupAzureDeploymentStart",
        "tags": [
          "Elastigroup Azure Scale Set VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "batchSizePercentage": {
                    "title": "Batch Size Percentage",
                    "type": "integer",
                    "example": 50,
                    "description": "Indicates (in percentage) the batch size of the roll (meaning, how many nodes to replace in each batch)"
                  },
                  "gracePeriod": {
                    "title": "Grace Period",
                    "type": "integer",
                    "description": "Indicates (in seconds) the timeout to wait until node become healthy in the ELB",
                    "example": 300
                  },
                  "healthCheckType": {
                    "title": "Health Check Type",
                    "type": "string",
                    "description": "Define a health check type. valid values: mlb, node_state, none (wait the entire grace period for each batch). If no value is set the roll will use the group’s auto-healing health check.",
                    "example": "INSTANCE_STATE"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Start Deployment Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/compute/azure/group/sig-12345/roll",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "PUT",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2016-01-21T17:12:51.451Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "example": "sbgd-9876"
                                        },
                                        "status": {
                                          "type": "string",
                                          "example": "ROLL_STARTING"
                                        },
                                        "currentBatch": {
                                          "type": "integer",
                                          "readOnly": true,
                                          "example": 1,
                                          "description": "Batch number that is currenlty being deployed\n"
                                        },
                                        "numOfBatches": {
                                          "type": "integer",
                                          "readOnly": true,
                                          "example": 2,
                                          "description": "Total number of batches the deployment will process\n"
                                        },
                                        "progress": {
                                          "type": "object",
                                          "readOnly": true,
                                          "properties": {
                                            "unit": {
                                              "type": "string",
                                              "example": "percentage"
                                            },
                                            "value": {
                                              "type": "integer",
                                              "example": 10
                                            }
                                          }
                                        },
                                        "groupId": {
                                          "type": "string",
                                          "example": "sig-12345",
                                          "readOnly": true,
                                          "description": "The Azure Elastigroup the deployment is executing on\n"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/compute/azure/group/{groupId}/roll/{rollId}": {
      "get": {
        "summary": "Roll Status",
        "description": "Get status of a specific roll\n",
        "operationId": "lowPriorityVMsRollStatus",
        "tags": [
          "Elastigroup Azure Scale Set VMs"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "example": "sig-12345",
            "description": "The Elasticgroup id you want to roll\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "rollId",
            "example": "sbgd-9876",
            "description": "The roll id you want to query\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "Your Spotinst accountid associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Roll Status Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/compute/azure/group/sig-12345/roll/sbgd-dfb956b4",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2016-01-21T17:12:51.451Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "example": "sbgd-9876"
                                        },
                                        "status": {
                                          "type": "string",
                                          "example": "ROLL_FINISHED"
                                        },
                                        "progress": {
                                          "type": "object",
                                          "properties": {
                                            "unit": {
                                              "type": "string",
                                              "example": "percent"
                                            },
                                            "value": {
                                              "type": "integer",
                                              "example": 100
                                            }
                                          }
                                        },
                                        "createdAt": {
                                          "type": "string",
                                          "example": "2017-01-31T13:54:53.000+0000"
                                        },
                                        "updatedAt": {
                                          "type": "string",
                                          "example": "2017-01-31T14:26:37.000+0000"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Task",
        "description": "Update an Elastigroup Azure\n",
        "operationId": "tasksScaleSetsAzureUpdate",
        "tags": [
          "Elastigroup Azure Scale Set VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/paths/~1compute~1azure~1task/post/requestBody/content/application~1json/schema/allOf/0"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "group": {
                        "type": "object",
                        "required": [
                          "name"
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1compute~1azure~1task/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/compute/azure/group/{groupId}/roll/{deploymentId}": {
      "get": {
        "summary": "Get Deployment",
        "description": "Describe a single deployment for an Azure Elastigroup\n",
        "operationId": "elastigroupAzureDeploymentDescribe",
        "tags": [
          "Elastigroup Azure Scale Set VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          },
          {
            "in": "path",
            "name": "deploymentId",
            "schema": {
              "type": "string"
            },
            "example": "sbgd-9876",
            "required": true,
            "description": "Azure Elastigroup ID\n"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1roll/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Stop Deployment",
        "description": "Stop a deployment\n",
        "operationId": "elastigroupAzureDeploymentStop",
        "tags": [
          "Elastigroup Azure Scale Set VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1roll~1%7BdeploymentId%7D/get/parameters/2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "roll": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "default": "ROLL_STOPPED",
                            "description": "set the status of the roll to `ROLL_STOPPED`\n"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/compute/azure/task": {
      "get": {
        "summary": "List Tasks",
        "description": "List all Azure Tasks for a Spot Account\n",
        "operationId": "tasksScaleSetsAzureListAll",
        "tags": [
          "Elastigroup Azure Scale Set VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1compute~1azure~1task/post/requestBody/content/application~1json/schema/allOf/0"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "summary": "Create Task",
        "description": "Create a new Azure Task",
        "operationId": "tasksScaleSetsAzureCreate",
        "tags": [
          "Elastigroup Azure Scale Set VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Elastigroup Wrapper",
                    "required": [
                      "group"
                    ],
                    "properties": {
                      "group": {
                        "type": "object",
                        "title": "Azure Elastigroup",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "sig-123456789",
                            "readOnly": true,
                            "description": "Azure Elastigroup ID\n"
                          },
                          "name": {
                            "type": "string",
                            "example": "spotinst-group",
                            "description": "Azure Elastigroup Name\n"
                          },
                          "region": {
                            "type": "string",
                            "example": "eastus",
                            "description": "Valid Azure region the Elastigroup is managed in\n"
                          },
                          "resourceGroupName": {
                            "type": "string",
                            "example": "spotinst-azure",
                            "description": "The Azure resource group to associate the Elastigroup with\n"
                          },
                          "capacity": {
                            "type": "object",
                            "properties": {
                              "target": {
                                "type": "integer",
                                "example": 8,
                                "description": "Current scale the Elastigroup will conform to"
                              },
                              "minimum": {
                                "type": "integer",
                                "example": 2,
                                "description": "The Elastigroup will not set a target below this value\n"
                              },
                              "maximum": {
                                "type": "integer",
                                "example": 10,
                                "description": "The Elastigroup will not set a target greater than this value\n"
                              }
                            }
                          },
                          "scaling": {
                            "type": "object",
                            "title": "Azure Scaling",
                            "properties": {
                              "up": {
                                "type": "array",
                                "items": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "policyName": {
                                          "type": "string",
                                          "example": "cpuScale"
                                        },
                                        "metricName": {
                                          "type": "string",
                                          "example": "Percentage CPU"
                                        },
                                        "statistic": {
                                          "type": "string",
                                          "example": "average",
                                          "enum": [
                                            "average",
                                            "sampleCount",
                                            "sum",
                                            "minimum",
                                            "maximum"
                                          ]
                                        },
                                        "threshold": {
                                          "type": "number",
                                          "format": "float",
                                          "example": 0.75
                                        },
                                        "period": {
                                          "type": "integer",
                                          "example": 60
                                        },
                                        "evaluationPeriods": {
                                          "type": "integer",
                                          "example": 3
                                        },
                                        "cooldown": {
                                          "type": "integer",
                                          "example": 300
                                        },
                                        "namespace": {
                                          "type": "string",
                                          "example": "Microsoft.Network/applicationGateways"
                                        },
                                        "operator": {
                                          "type": "string",
                                          "example": "gte",
                                          "enum": [
                                            "gt",
                                            "gte",
                                            "lt",
                                            "lte"
                                          ]
                                        },
                                        "dimenstions": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "type": "string",
                                                "example": "resourceName"
                                              },
                                              "value": {
                                                "type": "string",
                                                "example": "TestAppGateway"
                                              }
                                            }
                                          }
                                        },
                                        "action": {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "example": "adjustment"
                                            },
                                            "adjustment": {
                                              "type": "string",
                                              "example": "2"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "policyName": {
                                          "example": "cpuScaleUp"
                                        },
                                        "threshold": {
                                          "example": 0.75
                                        },
                                        "operator": {
                                          "example": "gte"
                                        },
                                        "action": {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "example": "adjustment",
                                              "enum": [
                                                "adjustment",
                                                "setMinTarget",
                                                "updateCapacity",
                                                "percentageAdjustment"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "down": {
                                "type": "array",
                                "items": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1compute~1azure~1task/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/group/properties/scaling/properties/up/items/allOf/0"
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "policyName": {
                                          "example": "cpuScaleDown"
                                        },
                                        "threshold": {
                                          "example": 0.25
                                        },
                                        "operator": {
                                          "example": "lte"
                                        },
                                        "action": {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "example": "adjustment",
                                              "enum": [
                                                "adjustment",
                                                "setMaxTarget",
                                                "updateCapacity",
                                                "percentageAdjustment"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "strategy": {
                            "type": "object",
                            "title": "Scaling Strategy",
                            "properties": {
                              "lowPriorityPercentage": {
                                "type": "integer"
                              },
                              "odCount": {
                                "type": "integer"
                              },
                              "drainingTimeout": {
                                "type": "integer"
                              }
                            }
                          },
                          "compute": {
                            "type": "object",
                            "properties": {
                              "vmSizes": {
                                "type": "object",
                                "properties": {
                                  "odSizes": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "example": "standard_a1_v1"
                                    }
                                  },
                                  "lowPrioritySizes": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "example": "standard_a2_v2"
                                    }
                                  }
                                }
                              },
                              "product": {
                                "type": "string",
                                "example": "Linux",
                                "enum": [
                                  "Linux",
                                  "Windows"
                                ]
                              },
                              "health": {
                                "type": "object",
                                "properties": {
                                  "autoHealing": {
                                    "type": "boolean",
                                    "example": true
                                  },
                                  "healthCheckType": {
                                    "type": "string",
                                    "example": "INSTANCE_STATE",
                                    "enum": [
                                      "INSTANCE_STATE"
                                    ]
                                  },
                                  "gracePeriod": {
                                    "type": "integer",
                                    "example": 120
                                  }
                                }
                              },
                              "launchSpecification": {
                                "type": "object",
                                "properties": {
                                  "image": {
                                    "type": "object",
                                    "properties": {
                                      "marketplace": {
                                        "type": "object",
                                        "description": "Azure Marketplace VM Image. Cannot be used with `custom`",
                                        "properties": {
                                          "publisher": {
                                            "type": "string",
                                            "example": "OpenLogic"
                                          },
                                          "offer": {
                                            "type": "string",
                                            "example": "CentOS"
                                          },
                                          "sku": {
                                            "type": "string",
                                            "example": "7.3"
                                          },
                                          "version": {
                                            "type": "string",
                                            "example": "7.3-1611"
                                          }
                                        }
                                      },
                                      "shutdownScript": {
                                        "type": "string",
                                        "example": "IyEvdXNyL2Jpbi9lbnYgYmFzaAoiR29vZGJ5ZSBvbGQgaW5zdGFuY2Ui"
                                      },
                                      "custom": {
                                        "type": "object",
                                        "description": "Custom VM image.  Cannot be used with `marketplace`\n",
                                        "properties": {
                                          "resourceGroupName": {
                                            "type": "string",
                                            "example": "spotinst-azure"
                                          },
                                          "imageName": {
                                            "type": "string",
                                            "example": "custom-image-name"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "loadBalancersConfig": {
                                    "type": "object",
                                    "properties": {
                                      "loadBalancers": {
                                        "type": "array",
                                        "items": {
                                          "anyOf": [
                                            {
                                              "type": "object",
                                              "title": "MULTAI_TARGET_SET",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "example": "MULTAI_TARGET_SET",
                                                  "enum": [
                                                    "MULTAI_TARGET_SET"
                                                  ]
                                                },
                                                "balancerId": {
                                                  "type": "string",
                                                  "example": "lb-1ee2e3q"
                                                },
                                                "targetSetId": {
                                                  "type": "string",
                                                  "example": "ts-3eq"
                                                },
                                                "autoWeight": {
                                                  "type": "boolean",
                                                  "example": true
                                                }
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "title": "APPLICATION_GATEWAY",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "example": "APPLICATION_GATEWAY",
                                                  "enum": [
                                                    "APPLICATION_GATEWAY"
                                                  ]
                                                },
                                                "resourceGroupName": {
                                                  "type": "string",
                                                  "example": "azureResourceGroup"
                                                },
                                                "applicationGatewayName": {
                                                  "type": "string",
                                                  "example": "appGateway"
                                                },
                                                "backendPoolName": {
                                                  "type": "string",
                                                  "example": "backendpool490822"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "userData": {
                                    "type": "string"
                                  },
                                  "managedServiceIdentities": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": "string",
                                        "example": "mySI2"
                                      },
                                      "resourceGroupName": {
                                        "resourceGroupName": "string",
                                        "example": "myResourceGroup"
                                      }
                                    }
                                  },
                                  "tags": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "tagKey": {
                                          "type": "string",
                                          "example": "env"
                                        },
                                        "tagValue": {
                                          "type": "string",
                                          "example": "staging"
                                        }
                                      }
                                    }
                                  },
                                  "network": {
                                    "type": "object",
                                    "properties": {
                                      "virtualNetworkName": {
                                        "type": "string",
                                        "example": "vname"
                                      },
                                      "subnetName": {
                                        "type": "string",
                                        "example": "my-subnet-name"
                                      },
                                      "resourceGroupName": {
                                        "type": "string",
                                        "example": "subnetResourceGroup"
                                      },
                                      "assignPublicIp": true,
                                      "additionalIpConfigurations": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "example": "config1"
                                            },
                                            "privateIpAddressVersion": {
                                              "type": "string",
                                              "example": "IPv4"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "extensions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "autoUpgradeMinorVersion": {
                                          "type": "boolean",
                                          "example": true
                                        },
                                        "name": {
                                          "type": "string",
                                          "example": "k8s-agentpool1-38611891-vmss-computeAksLinuxBilling"
                                        },
                                        "protectedSettings": {
                                          "type": "string",
                                          "example": null
                                        },
                                        "publisher": {
                                          "type": "string",
                                          "example": "Microsoft.AKS"
                                        },
                                        "type": {
                                          "type": "string",
                                          "example": "Compute.AKS-Engine.Linux.Billing"
                                        },
                                        "typeHandlerVersion": {
                                          "type": "string",
                                          "example": "1.0"
                                        }
                                      }
                                    }
                                  },
                                  "customData": {
                                    "type": "string"
                                  },
                                  "login": {
                                    "type": "object",
                                    "properties": {
                                      "userName": {
                                        "type": "string",
                                        "example": "spotinst"
                                      },
                                      "sshPublicKey": {
                                        "type": "string"
                                      },
                                      "password": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "thirdPartiesIntegration": {
                            "type": "object",
                            "properties": {
                              "kubernetes": {
                                "type": "object",
                                "properties": {
                                  "clusterIdentifier": {
                                    "type": "string",
                                    "example": "aks-engine-cluser",
                                    "description": "Must mastch the clusterIdentifier that was sent when\n the [Spot Controller](https://api.spot.io/container-management/kubernetes/kubernetes-tutorials/installing-kubernetes-controller/)\n was installed.\n"
                                  }
                                }
                              },
                              "hpcGridEngine": {
                                "type": "object",
                                "required": [
                                  "clusterId"
                                ],
                                "properties": {
                                  "clusterId": {
                                    "type": "string",
                                    "example": "spotinst-uge-cluster",
                                    "description": "Must match the clusterId used by the [controller](https://api.spot.io/elastigroup-for-azure/hpc/introduction/)\n"
                                  },
                                  "queues": {
                                    "type": "array",
                                    "description": "If defined the autoscaler will only match this Elastigroup to jobs associated with the queues listed here. If empty or null, then all queues will be monitored.\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "example": "burst.q",
                                          "description": "The name of the queue to monitor\n"
                                        }
                                      }
                                    }
                                  },
                                  "distribution": {
                                    "type": "string",
                                    "enum": [
                                      "sge",
                                      "uge"
                                    ],
                                    "description": "The specific distribution of grid engine. Defaults to `sge`\n",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tortuga": {
                                    "type": "object",
                                    "description": "Optional configuration for `uge` distribution managed with Tortuga\n",
                                    "properties": {
                                      "softwareProfile": {
                                        "type": "string",
                                        "example": "execd",
                                        "description": "An existing Tortuga software profile\n"
                                      },
                                      "hardwareProfile": {
                                        "type": "string",
                                        "example": "execd-elastigroup",
                                        "description": "An existing Torguga hardware profile that is configured for remote nodes and dynamic hostnames\n"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "group": {
                        "type": "object",
                        "required": [
                          "name"
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1compute~1azure~1task/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/compute/azure/task/{taskId}": {
      "delete": {
        "summary": "Delete Task",
        "description": "Delete an Elastigroup Azure\n",
        "operationId": "tasksScaleSetsAzureDelete",
        "tags": [
          "Elastigroup Azure Scale Set VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Task",
        "description": "Update an Elastigroup Azure\n",
        "operationId": "tasksScaleSetsAzureUpdate",
        "tags": [
          "Elastigroup Azure Scale Set VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/paths/~1compute~1azure~1task/post/requestBody/content/application~1json/schema/allOf/0"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "group": {
                        "type": "object",
                        "required": [
                          "name"
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1compute~1azure~1task/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/costs": {
      "get": {
        "summary": "Get Costs Per Account",
        "description": "Get costs per time filter.\n",
        "operationId": "azureCostsPerAccount",
        "tags": [
          "Elastigroup Azure Scale Set VMs"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123456789",
            "description": "The ID of the account associated with your token.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "fromDate",
            "required": true,
            "description": "Get items on or after this date (ISO 8601 or Unix timestamp)\n",
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/paths/~1azure~1costs/get/parameters/1/components/schemas/unix"
                },
                {
                  "$ref": "#/paths/~1azure~1costs/get/parameters/1/components/schemas/dateTime"
                }
              ]
            },
            "example": "2020-09-01 or fromDate=1598918400000",
            "components": {
              "schemas": {
                "unix": {
                  "type": "string",
                  "description": "A valid Unix timestamp: 1598918400000"
                },
                "dateTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "A valid date-time string : 2020-09-01"
                }
              }
            }
          },
          {
            "in": "query",
            "name": "toDate",
            "required": true,
            "description": "Get items on or before this date (ISO 8601 or Unix timestamp)",
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/paths/~1azure~1costs/get/parameters/2/components/schemas/unix"
                },
                {
                  "$ref": "#/paths/~1azure~1costs/get/parameters/2/components/schemas/dateTime"
                }
              ]
            },
            "example": "2020-09-01 or toDate=1598918400000",
            "components": {
              "schemas": {
                "unix": {
                  "type": "string",
                  "description": "A valid Unix timestamp: 1598918400000"
                },
                "dateTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "A valid date-time string : 2020-09-01"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Costs Per Account Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "67582d0c-108b-4ef7-9fdc-d39678a30844"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/azure/costs"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-01-07T07:30:58.622Z"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:azure:costs"
                                },
                                "items": {
                                  "type": "array",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "lowPriority": {
                                          "type": "object",
                                          "properties": {
                                            "runningHours": {
                                              "type": "number",
                                              "format": "float",
                                              "example": 1470.8
                                            },
                                            "actualCosts": {
                                              "type": "number",
                                              "format": "float",
                                              "example": 107.3
                                            },
                                            "potentialCosts": {
                                              "type": "number",
                                              "format": "float",
                                              "example": 378.41
                                            },
                                            "savingsPercentage": {
                                              "type": "number",
                                              "format": "float",
                                              "example": 71.64
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/{groupId}": {
      "put": {
        "summary": "Update Elastigroup",
        "description": "Update an Azure Elastigroup cluster.\n",
        "operationId": "elastigroupAzureSpotVmsUpdate",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "groupId",
            "example": "sig-123123",
            "description": "Elastigroup's ID\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Update Elasitgroup Azure Spot VMs - Request Available fields",
                    "required": [
                      "group"
                    ],
                    "properties": {
                      "group": {
                        "type": "object",
                        "title": "Azure Elastigroup",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "spotinst-group",
                            "description": "Azure Elastigroup Name\n"
                          },
                          "description": {
                            "type": "string",
                            "example": "This is my example elastigroup",
                            "description": "Describe your Azure Elastigroup\n"
                          },
                          "capacity": {
                            "$ref": "#/paths/~1azure~1compute~1group~1%7BgroupId%7D~1capacity/put/requestBody/content/application~1json/schema/allOf/0/properties/capacity"
                          },
                          "strategy": {
                            "type": "object",
                            "title": "Elastigroup Strategy",
                            "description": "Strategy for Elastigroup.\n",
                            "properties": {
                              "spotPercentage": {
                                "type": "integer",
                                "example": 50,
                                "default": 100,
                                "description": "Percentage of Spot-VMs to maintain.\\\nRequired if odCount isn't specified.\n"
                              },
                              "onDemandCount": {
                                "type": "integer",
                                "description": "Percentage of Spot-VMs to maintain.\\\nRequired if spotPercentage isn't specified.\n",
                                "writeOnly": true
                              },
                              "drainingTimeout": {
                                "type": "integer",
                                "example": 30,
                                "default": 120,
                                "description": "Time (in seconds) to allow the VM be drained from incoming TCP connections and detached from MLB before terminating it during a scale down operation.\n"
                              },
                              "fallbackToOd": {
                                "type": "boolean",
                                "description": "In case of no spots available, Elastigroup will launch an On-demand instance instead\n",
                                "example": true
                              },
                              "revertToSpot": {
                                "description": "Hold settings for strategy correction - replacing On-Demand for Spot VMs\n",
                                "type": "object",
                                "properties": {
                                  "performAt": {
                                    "type": "string",
                                    "description": "Settings for maintenance strategy.\n",
                                    "enum": [
                                      "timeWindow",
                                      "never",
                                      "always"
                                    ],
                                    "example": "timeWindow",
                                    "default": "always"
                                  }
                                }
                              },
                              "optimizationWindows": {
                                "type": "array",
                                "description": "valid format: \"ddd:hh:mm-ddd:hh:mm (day:hour(0-23):minute(0-59))\", not empty if revertToSpot.performAt = timeWindow\n",
                                "example": [
                                  "Mon:03:00-Wed:02:30"
                                ]
                              },
                              "signals": {
                                "type": "array",
                                "description": "The signals defined for this group.\n",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "description": "The type of the signal defined for the group.\n",
                                      "enum": [
                                        "vmReady",
                                        "vmReadyToShutdown"
                                      ],
                                      "example": "vmReady"
                                    },
                                    "timeout": {
                                      "type": "integer",
                                      "description": "The timeout in seconds to hold the vm until a signal is sent.\\\nIf no signal is sent the vm will be replaced (vmReady) or we will terminate the vm (vmReadyToShutdown) after the timeout.\n",
                                      "example": 180,
                                      "default": 1800,
                                      "minimum": 60,
                                      "maximum": 1800
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "scaling": {
                            "type": "object",
                            "title": "Elastigroup Scaling",
                            "description": "Scaling Policies for Elastigroup.\n",
                            "properties": {
                              "up": {
                                "type": "array",
                                "description": "Defines scaling up policy.\n",
                                "items": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "policyName": {
                                          "type": "string",
                                          "description": "Name of scaling policy.\n",
                                          "example": "cpuScale"
                                        },
                                        "metricName": {
                                          "type": "string",
                                          "description": "Metric to monitor by Azure metric display name\n",
                                          "example": "Percentage CPU"
                                        },
                                        "statistic": {
                                          "type": "string",
                                          "description": "Statistic by which to evaluate the selected metric.\n",
                                          "example": "Average",
                                          "enum": [
                                            "Average",
                                            "total",
                                            "minimum",
                                            "maximum",
                                            "count"
                                          ]
                                        },
                                        "unit": {
                                          "type": "string",
                                          "description": "Unit to measure to evaluate the selected metric\n",
                                          "enum": [
                                            "percent",
                                            "seconds",
                                            "microseconds",
                                            "milliseconds",
                                            "bytes",
                                            "kilobytes",
                                            "megabytes",
                                            "gigabytes",
                                            "terabytes",
                                            "bits",
                                            "kilobits",
                                            "megabits",
                                            "gigabits",
                                            "terabits",
                                            "count",
                                            "bytes/second",
                                            "kilobytes/second",
                                            "megabytes/second",
                                            "gigabytes/second",
                                            "terabytes/second",
                                            "bits/second",
                                            "kilobits/second",
                                            "megabits/second",
                                            "gigabits/second",
                                            "terabits/second",
                                            "count/second",
                                            "none"
                                          ]
                                        },
                                        "threshold": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "The value at which the scaling action is triggered.\n",
                                          "example": 0.75
                                        },
                                        "namespace": {
                                          "type": "string",
                                          "description": "Should be one of the namespaces:\n* Microsoft.AnalysisServices/servers\n* Microsoft.ApiManagement/service\n* Microsoft.Automation/automationAccounts\n* Microsoft.Batch/batchAccounts\n* Microsoft.Cache/redis\n* Microsoft.Compute\n* Microsoft.CognitiveServices/accounts\n* Microsoft.ContainerInstance/containerGroups\n* Microsoft.ContainerService/managedClusters\n* Microsoft.CustomerInsights/hubs\n* Microsoft.DataFactory/datafactories\n* Microsoft.DataFactory/factories\n* Microsoft.DataLakeAnalytics/accounts\n* Microsoft.DataLakeStore/accounts\n* Microsoft.DBforMariaDB/servers\n* Microsoft.DBforMySQL/servers\n* Microsoft.DBforPostgreSQL/servers\n* Microsoft.Devices/IotHubs\n* Microsoft.Devices/provisioningServices\n* Microsoft.DocumentDB/databaseAccounts\n* Microsoft.EventGrid/topics\n* Microsoft.EventGrid/eventSubscriptions\n* Microsoft.EventGrid/extensionTopics\n* Microsoft.EventHub/namespaces\n* Microsoft.EventHub/clusters\n* Microsoft.HDInsight/clusters\n* Microsoft.Insights/AutoscaleSettings\n* Microsoft.Insights/Components\n* Microsoft.KeyVault/vaults\n* Microsoft.Kusto/Clusters\n* Microsoft.LocationBasedServices/accounts\n* Microsoft.Logic/workflows\n* Microsoft.NetApp/netAppAccounts/capacityPools/Volumes\n* Microsoft.NetApp/netAppAccounts/capacityPools\n* Microsoft.Network/networkInterfaces\n* Microsoft.Network/loadBalancers\n* Microsoft.Network/dnszones\n* Microsoft.Network/publicIPAddresses\n* Microsoft.Network/applicationGateways\n* Microsoft.Network/virtualNetworkGateways\n* Microsoft.Network/expressRouteCircuits\n* Microsoft.Network/expressRouteCircuits/peerings\n* Microsoft.Network/connections\n* Microsoft.Network/trafficManagerProfiles\n* Microsoft.Network/networkWatchers/connectionMonitors\n* Microsoft.Network/frontdoors\n* Microsoft.NotificationHubs/Namespaces/NotificationHubs\n* Microsoft.OperationalInsights/workspaces\n* Microsoft.PowerBIDedicated/capacities\n* Microsoft.Relay/namespaces\n* Microsoft.Search/searchServices\n* Microsoft.ServiceBus/namespaces\n* Microsoft.SignalRService/SignalR\n* Microsoft.Sql/servers/databases\n* Microsoft.Sql/servers/elasticPools\n* Microsoft.Sql/managedInstances\n* Microsoft.Storage/storageAccounts\n* Microsoft.Storage/storageAccounts/blobServices\n* Microsoft.Storage/storageAccounts/fileServices\n* Microsoft.Storage/storageAccounts/queueServices\n* Microsoft.Storage/storageAccounts/tableServices\n* Microsoft.StreamAnalytics/streamingjobs\n* Microsoft.TimeSeriesInsights/environments\n* Microsoft.TimeSeriesInsights/environments/eventsources\n* Microsoft.Web/serverfarms\n* Microsoft.Web/sites (excluding functions)\n* Microsoft.Web/sites (functions)\n* Microsoft.Web/sites/slots\n* Microsoft.Web/hostingEnvironments/multiRolePools\n* Microsoft.Web/hostingEnvironments/workerPools\n",
                                          "default": "Microsoft.Compute",
                                          "example": "Microsoft.Network/applicationGateways"
                                        },
                                        "period": {
                                          "type": "integer",
                                          "description": "Amount of time (seconds) for which the threshold must be met in order to trigger the scaling action.\n",
                                          "enum": [
                                            60,
                                            300,
                                            900,
                                            1800,
                                            3600,
                                            7200
                                          ],
                                          "example": 60
                                        },
                                        "evaluationPeriods": {
                                          "type": "integer",
                                          "description": "Number of consecutive periods in which the threshold must be met in order to trigger the scaling action.\n",
                                          "minimum": 1,
                                          "example": 3
                                        },
                                        "cooldown": {
                                          "type": "integer",
                                          "description": "Time (seconds) to wait after a scaling action before resuming monitoring.\\\nmultiple of 60.\n",
                                          "minimum": 0,
                                          "example": 300
                                        },
                                        "dimenstions": {
                                          "type": "array",
                                          "description": "Required if scaling.up.namespace is different from \"Microsoft.Compute\".\\\n2 dimensions are required.\n",
                                          "items": [
                                            {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "example": "resourceName"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "example": "testApplicationGateway"
                                                }
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "example": "resourceGroupName"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "example": "testResourceGroup"
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "operator": {
                                          "type": "string",
                                          "description": "The operator used to evaluate the threshold against the current metric value.\\\nValid Values:\n* \"gt\" (Greater Than)\n* \"gte\" (Greater Than or Equal)\n* \"lt\" (Less Than)\n* \"lte\" (Less Than or Equal)\n",
                                          "example": "gte",
                                          "enum": [
                                            "gt",
                                            "gte",
                                            "lt",
                                            "lte"
                                          ]
                                        },
                                        "action": {
                                          "type": "object",
                                          "description": "Scaling action to take when the policy is triggered.\n",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "Type of scaling action to take when the scaling policy is triggered.\n",
                                              "enum": [
                                                "adjustment",
                                                "updateCapacity"
                                              ],
                                              "example": "adjustment"
                                            },
                                            "adjustment": {
                                              "type": "string",
                                              "description": "Value to which the action type will be adjusted.\\\nRequired if using \"adjustment\" action type.\n",
                                              "example": "2"
                                            },
                                            "target": {
                                              "type": "integer",
                                              "description": "Value to update the group target capacity to.\\\nRequired if using “updateCapacity” as action type\\\nand “minimum” and “maximum” are undefined.\n"
                                            },
                                            "minimum": {
                                              "type": "integer",
                                              "description": "Value to update the group mimimum capacity to.\\\nRequired if using “updateCapacity” as action type\\\nand “target” and“maximum” are undefined.\n"
                                            },
                                            "maximum": {
                                              "type": "integer",
                                              "description": "Value to update the group mimimum capacity to.\\\nRequired if using “updateCapacity” as action type\\\nand “target” and “minimum” are undefined.\n"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "policyName": {
                                          "example": "cpuScaleUp"
                                        },
                                        "threshold": {
                                          "example": 0.75
                                        },
                                        "operator": {
                                          "example": "gte"
                                        },
                                        "action": {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "example": "adjustment",
                                              "enum": [
                                                "adjustment",
                                                "updateCapacity"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "down": {
                                "type": "array",
                                "description": "Defines scaling down policy.\n",
                                "items": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1azure~1compute~1group/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/scaling/properties/up/items/allOf/0"
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "policyName": {
                                          "example": "cpuScaleDown"
                                        },
                                        "threshold": {
                                          "example": 0.25
                                        },
                                        "operator": {
                                          "example": "lte"
                                        },
                                        "action": {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "example": "adjustment",
                                              "enum": [
                                                "adjustment",
                                                "updateCapacity"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "compute": {
                            "type": "object",
                            "title": "Elastigroup Compute Update",
                            "description": "Compute settings for Elastigroup.\n",
                            "properties": {
                              "vmSizes": {
                                "type": "object",
                                "description": "amount of time to be unhealthy before a replacement is triggered\n",
                                "properties": {
                                  "odSizes": {
                                    "type": "array",
                                    "description": "Available On-Demand sizes.\n",
                                    "items": {
                                      "type": "string",
                                      "example": "standard_a1_v1"
                                    }
                                  },
                                  "spotSizes": {
                                    "type": "array",
                                    "description": "Available Spot-VM sizes.\n",
                                    "items": {
                                      "type": "string",
                                      "example": "standard_a2_v2"
                                    }
                                  },
                                  "preferredSpotSizes": {
                                    "type": "array",
                                    "description": "Prioritize Spot VM sizes when launching Spot VMs for the group.\n<a style=color:red>Must be a sublist of compute.vmSizes.spotSizes. </a>\n",
                                    "items": {
                                      "type": "string",
                                      "example": "standard_a2_v2"
                                    }
                                  }
                                }
                              },
                              "launchSpecification": {
                                "type": "object",
                                "properties": {
                                  "customData": {
                                    "type": "string",
                                    "format": "byte",
                                    "description": "This value will hold the YML in base64 and will be added to the scaleSets\n",
                                    "example": ""
                                  },
                                  "image": {
                                    "title": "Image",
                                    "description": "Image of VM. An image is a template for creating new VMs. Choose from Azure image catalogue (marketplace) or use a custom image or chosen from shared gallery image.",
                                    "type": "object",
                                    "properties": {
                                      "marketplace": {
                                        "title": "Marketplace",
                                        "type": "object",
                                        "description": "Select an image from Azure's Marketplace image catalogue. Cannot be used with `custom` or `gallery`. <a style=color:red;>Required if custom or gallery image are not specified.</a>",
                                        "properties": {
                                          "publisher": {
                                            "title": "Publisher",
                                            "description": "Image publisher.  <a style=color:red;>Required if marketplace image is specified.</a>",
                                            "type": "string",
                                            "example": "OpenLogic"
                                          },
                                          "offer": {
                                            "title": "Offer",
                                            "desription": "Name of image to use.  <a style=color:red;>Required if marketplace image is specified.</a>",
                                            "type": "string",
                                            "example": "CentOS"
                                          },
                                          "sku": {
                                            "title": "Stock Keeping Unit",
                                            "description": "Image's Stock Keeping Unit, which is the specific version of the image.  <a style=color:red;>Required if marketplace image is specified.</a>",
                                            "type": "string",
                                            "example": "7.3"
                                          },
                                          "version": {
                                            "title": "Version",
                                            "description": "Image's version. if version not provided we use 'latest'",
                                            "type": "string",
                                            "example": "7.3-1611",
                                            "default": "latest"
                                          }
                                        }
                                      },
                                      "custom": {
                                        "title": "Custom",
                                        "type": "object",
                                        "description": "Custom image to launch Elastigroup with. Cannot be used with `marketplace` or `gallery`. <a style=color:red;>Required if marketplace or gallery image are not specified.</a>",
                                        "properties": {
                                          "resourceGroupName": {
                                            "title": "Resource Group Name",
                                            "description": "Name of Resource Group for custom image.  <a style=color:red;>Required if custom image is specified.</a>",
                                            "type": "string",
                                            "example": "spotinst-azure"
                                          },
                                          "name": {
                                            "title": "Image Name",
                                            "description": "Name of the custom image.  <a style=color:red;>Required if custom image is specified.</a>",
                                            "type": "string",
                                            "example": "custom-image-name"
                                          }
                                        }
                                      },
                                      "gallery": {
                                        "title": "Gallery",
                                        "type": "object",
                                        "description": "Gallery image to launch Elastigroup with. Cannot be used with `marketplace` or `custom`. <a style=color:red;>Required if marketplace or custom image are not specified.</a>",
                                        "properties": {
                                          "resourceGroupName": {
                                            "title": "Resource Group Name",
                                            "description": "Name of Resource Group for custom image.  <a style=color:red;>Required if gallery image is specified.</a>",
                                            "type": "string",
                                            "example": "spotinst-azure"
                                          },
                                          "galleryName": {
                                            "title": "Gallery Name",
                                            "description": "Name of the gallery.  <a style=color:red;>Required if gallery image is specified.</a>",
                                            "type": "string",
                                            "example": "gallery-name"
                                          },
                                          "imageName": {
                                            "title": "Image Name",
                                            "description": "Name of the gallery image.  <a style=color:red;>Required if gallery image is specified.</a>",
                                            "type": "string",
                                            "example": "gallery-image-name"
                                          },
                                          "version": {
                                            "title": "Version",
                                            "description": "Image's version. Can be in the format x.x.x or 'latest'. <a style=color:red;>Required if gallery image is specified.</a>",
                                            "type": "string",
                                            "example": "0.0.1"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "network": {
                                    "title": "Network",
                                    "description": "Define the Virtual Network and Subnet for your Elastigroup.",
                                    "type": "object",
                                    "required": [
                                      "resourceGroupName",
                                      "virtualNetworkName",
                                      "networkInterfaces"
                                    ],
                                    "properties": {
                                      "resourceGroupName": {
                                        "title": "Resource Group Name",
                                        "description": "Vnet Resource Group Name",
                                        "type": "string",
                                        "example": "subnetResourceGroup"
                                      },
                                      "virtualNetworkName": {
                                        "title": "Virtual Network Name",
                                        "description": "Virtual Network",
                                        "type": "string",
                                        "example": "vname"
                                      },
                                      "networkInterfaces": {
                                        "title": "Virtual Network Name",
                                        "description": "Virtual Network",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "isPrimary",
                                            "subnetName"
                                          ],
                                          "properties": {
                                            "isPrimary": {
                                              "title": "Is Primary Criteria",
                                              "description": "Defines whether the network interface is primary or not.",
                                              "type": "boolean",
                                              "example": true
                                            },
                                            "subnetName": {
                                              "title": "Subnet Name",
                                              "description": "Subnet name",
                                              "type": "string",
                                              "example": "testSubnet"
                                            },
                                            "assignPublicIp": {
                                              "title": "Assign Publick IP",
                                              "description": "Assign public IP",
                                              "type": "boolean",
                                              "example": true
                                            },
                                            "publicIpSku": {
                                              "title": null,
                                              "description": "Required if assignPublicIp=true values=[STANDARD/BASIC]",
                                              "type": "string",
                                              "example": "STANDARD"
                                            },
                                            "securityGroup": {
                                              "title": "Security Group",
                                              "description": "Security Group",
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "title": "Name",
                                                  "description": "Requires valid security group name. Required if security group is specified.",
                                                  "type": "string",
                                                  "example": "test"
                                                },
                                                "resourceGroupName": {
                                                  "title": "Resource Group Name",
                                                  "description": "Requires valid resource group name. Required if security group is specified.",
                                                  "type": "string",
                                                  "example": "test"
                                                }
                                              }
                                            },
                                            "publicIps": {
                                              "description": "Defined a pool of Public Ips (from Azure), that will be associated to the network interface. We will associate one public ip per instance until the pool is exhausted, in which case, we will create a new one.",
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "resourceGroupName",
                                                  "name"
                                                ],
                                                "properties": {
                                                  "resourceGroupName": {
                                                    "description": "The resource group of the public ip.",
                                                    "type": "string",
                                                    "example": "resourceGroup"
                                                  },
                                                  "name": {
                                                    "description": "The name of the public ip.",
                                                    "type": "string",
                                                    "example": "name"
                                                  }
                                                }
                                              }
                                            },
                                            "enableIPForwarding": {
                                              "title": "Enable IP Forwarding",
                                              "description": "Enable IP Forwarding",
                                              "type": "boolean",
                                              "example": true
                                            },
                                            "additionalIpConfigurations": {
                                              "title": "Additional IP Configurations",
                                              "description": "Additional configuration of network interface",
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "name": {
                                                    "title": "Name",
                                                    "description": "Required if additionalConfiguration has been specified.",
                                                    "type": "string",
                                                    "example": "test"
                                                  },
                                                  "privateIpAddressVersion": {
                                                    "title": "Private IP Address Version",
                                                    "description": "Possible values:\n+ IPv4\n+ IPv6",
                                                    "default": "IPv4"
                                                  }
                                                }
                                              }
                                            },
                                            "applicationSecurityGroups": {
                                              "description": "List of Application Security Groups that will be associated to the primary ip configration of the network interface.",
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "resourceGroupName",
                                                  "name"
                                                ],
                                                "properties": {
                                                  "resourceGroupName": {
                                                    "description": "The resource group of the Application Security Group.",
                                                    "type": "string",
                                                    "example": "AsgResourceGroup"
                                                  },
                                                  "name": {
                                                    "description": "The name of the Application Security group",
                                                    "type": "string",
                                                    "example": "AsgName"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "login": {
                                    "type": "object",
                                    "description": "Set admin access for accessing your VMs. Password/SSH is required for Linux. <a style=color:red;>Required null if specialized image is set.</a>",
                                    "properties": {
                                      "userName": {
                                        "type": "string",
                                        "description": "user name for admin access to VMs.\\\nLogin can be set:\n* for windows: compute.launchSpecification.login.password\n* for linux: compute.launchSpecification.login.sshPublicKey\n\nJust user name, without pwd or SSH key\n",
                                        "example": "spotinst"
                                      },
                                      "sshPublicKey": {
                                        "type": "string",
                                        "description": "SSH for admin access to Linux VMs.\\\nOptional for Linux.\n",
                                        "example": "ssh-rsa"
                                      },
                                      "password": {
                                        "type": "string",
                                        "writeOnly": true,
                                        "description": "Password for admin access to Windows VMs.\\\nRequired for Windows.\n"
                                      }
                                    }
                                  },
                                  "loadBalancersConfig": {
                                    "type": "object",
                                    "description": "Configure a Load Balancer.\n",
                                    "properties": {
                                      "loadBalancers": {
                                        "type": "array",
                                        "description": "Add a load balancer. For Azure Gateway, each Backend Pool is a separate load balancer.\n",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "The type of load balancer.\n",
                                              "enum": [
                                                "loadBalancer",
                                                "applicationGateway"
                                              ],
                                              "example": "loadBalancer"
                                            },
                                            "resourceGroupName": {
                                              "type": "string",
                                              "description": "The Resource Group name of the Load Balancer.\n",
                                              "example": "testResourceGroup"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the Application Gateway/Load Balancer\n",
                                              "example": "testLoadBalancer"
                                            },
                                            "sku": {
                                              "type": "string",
                                              "description": "*if type is LoadBalancer then possible values are “Standard/Basic”;\n*if ApplicationGateway then possible values are “Standard_Large”,“Standard_Medium”,“Standard_Small”,“Standard_v2”,“WAF_Large”,“WAF_Medium”,“WAF_v2\"\n",
                                              "example": "Standard"
                                            },
                                            "backendPoolNames": {
                                              "type": "array",
                                              "description": "Name of the Backend Pool to register the Elastigroup VMs to. Each Backend Pool is a separate load balancer.\\\nRequired if Type is APPLICATION_GATEWAY.\n",
                                              "example": [
                                                "testBackendPool1",
                                                "testBackendPool2"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "managedServiceIdentities": {
                                    "type": "array",
                                    "writeOnly": true,
                                    "description": "Add a user-assigned managed identity to the VMs in the cluster.\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "name of the managed identity\n",
                                          "example": "mySI2"
                                        },
                                        "resourceGroupName": {
                                          "type": "string",
                                          "description": "The Resource Group that the user-assigned managed identity resides in.\n",
                                          "example": "myResourceGroup"
                                        }
                                      }
                                    }
                                  },
                                  "shutdownScript": {
                                    "type": "string",
                                    "format": "byte",
                                    "writeOnly": true,
                                    "example": "IyEvdXNyL2Jpbi9lbnYgYmFzaAoiR29vZGJ5ZSBvbGQgaW5zdGFuY2Ui",
                                    "description": "shutdown script for the group. Value should be passed as a string encoded at Base64 only\n"
                                  },
                                  "tags": {
                                    "type": "array",
                                    "description": "Key-Value pairs for VMs in the Elastigroup.\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "tagKey": {
                                          "type": "string",
                                          "description": "Tag Key for Vms in Elastigroup.\n",
                                          "example": "env"
                                        },
                                        "tagValue": {
                                          "type": "string",
                                          "description": "Tag Value for VMs in Elastigroup.\n",
                                          "example": "staging"
                                        }
                                      }
                                    }
                                  },
                                  "extensions": {
                                    "type": "array",
                                    "description": "List of objects for azure extensions\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "Required on compute.launchSpecification.extensions object\n",
                                          "required": true,
                                          "example": "extensionName"
                                        },
                                        "type": {
                                          "type": "string",
                                          "required": true,
                                          "description": "Required on compute.launchSpecification.extensions object\n",
                                          "example": "customScript"
                                        },
                                        "publisher": {
                                          "type": "string",
                                          "description": "Required on compute.launchSpecification.extensions object\n",
                                          "required": true,
                                          "example": "MMicrosoft.Azure.Extensions"
                                        },
                                        "apiVersion": {
                                          "type": "string",
                                          "description": "The API version of the extension. Required if extension specified.\n",
                                          "example": "2.0"
                                        },
                                        "minorVersionAutoUpgrade": {
                                          "type": "boolean",
                                          "required": true,
                                          "description": "Required on compute.launchSpecification.extensions object\n",
                                          "example": true
                                        },
                                        "publicSettings": {
                                          "type": "object",
                                          "description": "Object for public settings\n"
                                        },
                                        "protectedSettings": {
                                          "type": "object",
                                          "description": "Object for protected settings\n"
                                        }
                                      }
                                    }
                                  },
                                  "dataDisks": {
                                    "type": "array",
                                    "description": "list of data disks to be attached to the vms in the group.\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "sizeGB": {
                                          "type": "integer",
                                          "description": "The size of the data disk in GB, Required if dataDisks is specified.\n",
                                          "minimum": 1,
                                          "maximum": 1023,
                                          "example": 1
                                        },
                                        "lun": {
                                          "type": "integer",
                                          "description": "The lun of the data disk, Required if dataDisks is specified.\n",
                                          "example": 1
                                        },
                                        "type": {
                                          "type": "string",
                                          "description": "The type of the data disk\n",
                                          "enum": [
                                            "Standard_LRS",
                                            "Premium_LRS",
                                            "StandardSSD_LRS"
                                          ],
                                          "example": "Standard_LRS"
                                        }
                                      }
                                    }
                                  },
                                  "osDisk": {
                                    "type": "object",
                                    "description": "Specify OS disk specification other than default.\n",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "The type of the OS disk,\n",
                                        "enum": [
                                          "Standard_LRS",
                                          "Premium_LRS",
                                          "StandardSSD_LRS"
                                        ],
                                        "example": "Standard_LRS"
                                      },
                                      "sizeGB": {
                                        "type": "integer",
                                        "description": "The size of the data disk in GB, Required if dataDisks is specified.\n",
                                        "minimum": 1,
                                        "maximum": 1023,
                                        "example": 30
                                      }
                                    }
                                  },
                                  "bootDiagnostics": {
                                    "type": "object",
                                    "description": "Will enable boot diagnostics in Azure when a new VM is launched",
                                    "properties": {
                                      "isEnabled": {
                                        "type": "boolean",
                                        "required": true,
                                        "description": "Allows you to enable and disable the configuration of boot diagnostics at launch"
                                      },
                                      "type": {
                                        "type": "string",
                                        "required": true,
                                        "description": "Defines the type of storage on VM launch  in Azure.",
                                        "enum": [
                                          "managed",
                                          "unmanaged"
                                        ]
                                      },
                                      "storageUri": {
                                        "type": "string",
                                        "description": "The storage URI that is used if type is unmanaged. The storage URI must follow the blob storage URI format (\"https://<blobstoragename>.blob.core.windows.net/\"). StorageUri is required if the type is unmanaged. StorageUri must be ‘null’ in case the boot diagnostics type is managed"
                                      }
                                    },
                                    "example": {
                                      "isEnabled": true,
                                      "type": "unmanaged",
                                      "storageUri": "https://example.blob.core.windows.net/"
                                    }
                                  },
                                  "secrets": {
                                    "title": "secrets",
                                    "type": "array",
                                    "description": "Set of certificates that should be installed the VM\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "sourceVault": {
                                          "type": "object",
                                          "description": "The key vault reference, contains the required certificates\n",
                                          "properties": {
                                            "resourceGroupName": {
                                              "type": "string",
                                              "required": true,
                                              "description": "The resource group name of the key vault\n"
                                            },
                                            "name": {
                                              "type": "string",
                                              "required": true,
                                              "description": "The name of the key vault\n"
                                            }
                                          }
                                        },
                                        "vaultCertificates": {
                                          "type": "array",
                                          "required": true,
                                          "description": "The required certificate references\n",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "certificateUrl": {
                                                "type": "string",
                                                "required": true,
                                                "description": "The URL of the certificate under the key vault\n"
                                              },
                                              "certificateStore": {
                                                "type": "string",
                                                "required": true,
                                                "description": "The certificate store directory the VM. The directory is created in the LocalMachine account.\n* This field is required only when using windows OS type\n* This field must be ‘null’ when the OS type is Linux\n"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "zones": {
                                "type": "array",
                                "description": "List of Azure Availability Zones in the defined region; If not defined, Virtual machines will be launched regionally.",
                                "items": {
                                  "enum": [
                                    1,
                                    2,
                                    3
                                  ],
                                  "type": "string",
                                  "example": 1
                                }
                              },
                              "preferredZones": {
                                "type": "array",
                                "description": "The AZs to prioritize when launching VMs. If no markets are available in the Preferred AZs, VMs are launched in the non-preferred AZs.\n<a style=color:red>Must be a sublist of compute.zones. </a>\n",
                                "items": {
                                  "enum": [
                                    1,
                                    2,
                                    3
                                  ],
                                  "type": "string",
                                  "example": 1
                                }
                              }
                            }
                          },
                          "health": {
                            "type": "object",
                            "title": "Elastigroup Health",
                            "description": "Autohealing of unhealthy VMs.\n",
                            "properties": {
                              "healthCheckTypes": {
                                "type": "array",
                                "description": "Healthcheck to use to validate VM health.\n",
                                "enum": [
                                  "vmState",
                                  "applicationGateway"
                                ],
                                "example": [
                                  "vmState"
                                ]
                              },
                              "gracePeriod": {
                                "type": "integer",
                                "description": "Period of time to wait for VM to reach healthiness before monitoring for unhealthiness.\n",
                                "example": 120
                              },
                              "autoHealing": {
                                "type": "boolean",
                                "example": true,
                                "description": "Enable Autohealing of unhealthy VMs.\n"
                              },
                              "unhealthyDuration": {
                                "type": "integer",
                                "description": "amount of time to be unhealthy before a replacement is triggered\n",
                                "example": 360
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2018-10-10T10:50:29.000+0000"
                          },
                          "updatedAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2018-11-01T10:50:29.000+0000"
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "group": {
                        "type": "object"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/group/sig-12345"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1azure~1compute~1group/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:compute:group"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get Elastigroup",
        "description": "List an Elastigroup cluster.\n",
        "operationId": "elastigroupAzureSpotVmsGetGroup",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/group/sig-12345"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1azure~1compute~1group/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:compute:group"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Elastigroup",
        "description": "Delete an Elastigroup cluster.\n",
        "operationId": "elastigroupAzureSpotVmsDelete",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/group/sig-12345"
                            },
                            "method": {
                              "example": "DELETE"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/{groupId}/capacity": {
      "put": {
        "summary": "Update Capacity",
        "description": "Update the capacity of an Elastigroup",
        "operationId": "elastigroupAzureSpotUpdateCapacity",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Elastigroup Capacity",
                    "description": "Capacity of Elastigroup.\n",
                    "properties": {
                      "capacity": {
                        "type": "object",
                        "title": "Capacity",
                        "description": "Capacity of Elastigroup.\n",
                        "properties": {
                          "target": {
                            "type": "integer",
                            "description": "Desired number of VMs for Elastigroup to maintain.\n",
                            "example": 8
                          },
                          "minimum": {
                            "type": "integer",
                            "example": 2,
                            "description": "Minimum number of VMs.\n"
                          },
                          "maximum": {
                            "type": "integer",
                            "example": 10,
                            "description": "Maximum number of VMs.\n"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "properties": {
                                "id": {
                                  "example": "3ab3fdf7-3af3-46db-9e63-b88cfdac058c"
                                },
                                "url": {
                                  "example": "/azure/compute/group/sig-b255ac/capacity?accountId=act-567c21"
                                },
                                "method": {
                                  "example": "PUT"
                                },
                                "timestamp": {
                                  "example": "2018-08-20T15:31:12.730Z"
                                }
                              }
                            },
                            "response": {
                              "properties": {
                                "kind": {
                                  "example": "spotinst:azure:compute:group:capacity"
                                },
                                "count": {
                                  "example": 1
                                },
                                "items": {
                                  "items": [
                                    {
                                      "$ref": "#/paths/~1azure~1compute~1group~1%7BgroupId%7D~1capacity/put/requestBody/content/application~1json/schema/allOf/0/properties/capacity"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group": {
      "post": {
        "summary": "Create Elastigroup",
        "description": "Create a new Elastigroup cluster.",
        "operationId": "elastigroupAzureSpotVmsCreate",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Create Elastigroup Azure Spot VMs Body",
                    "required": [
                      "group",
                      "name",
                      "region",
                      "capacity",
                      "strategy",
                      "compute"
                    ],
                    "properties": {
                      "group": {
                        "type": "object",
                        "required": [
                          "name",
                          "region",
                          "capacity",
                          "resourceGroupName",
                          "strategy",
                          "compute"
                        ],
                        "title": "Azure Elastigroup",
                        "description": "Azure Elastigroup Configuration",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "sig-123456789",
                            "readOnly": true,
                            "description": "Azure Elastigroup ID\n"
                          },
                          "name": {
                            "type": "string",
                            "example": "spotinst-group",
                            "description": "Azure Elastigroup Name\n"
                          },
                          "description": {
                            "type": "string",
                            "example": "This is my example elastigroup",
                            "description": "Describe your Azure Elastigroup\n"
                          },
                          "region": {
                            "type": "string",
                            "example": "eastus",
                            "description": "Valid Azure region the Elastigroup is managed in\n"
                          },
                          "resourceGroupName": {
                            "type": "string",
                            "example": "spotinst-azure",
                            "description": "The Azure resource group to associate the Elastigroup with\n"
                          },
                          "capacity": {
                            "type": "object",
                            "description": "Capacity of Elastigroup",
                            "required": [
                              "target",
                              "minimum",
                              "maximum"
                            ],
                            "properties": {
                              "target": {
                                "type": "integer",
                                "example": 8,
                                "description": "Current scale the Elastigroup will conform to"
                              },
                              "minimum": {
                                "type": "integer",
                                "example": 2,
                                "description": "The Elastigroup will not set a target below this value\n"
                              },
                              "maximum": {
                                "type": "integer",
                                "example": 10,
                                "description": "The Elastigroup will not set a target greater than this value\n"
                              }
                            }
                          },
                          "scaling": {
                            "type": "object",
                            "description": "Scaling Policies for Elastigroup. Set as many policies as needed to maximize the Elastigroup’s efficiency.",
                            "title": "Azure Scaling",
                            "properties": {
                              "up": {
                                "type": "object",
                                "title": "Scale Up Policies",
                                "description": "Provide the ability to accommodate increased workloads.",
                                "required": [
                                  "policyName",
                                  "metricName",
                                  "statistic",
                                  "threshold",
                                  "period",
                                  "evaluationPeriods",
                                  "cooldown",
                                  "action",
                                  "operator",
                                  "namespace"
                                ],
                                "properties": {
                                  "policyName": {
                                    "title": "Policy Name",
                                    "description": "Name of scaling policy",
                                    "type": "string",
                                    "example": "cpuScale"
                                  },
                                  "metricName": {
                                    "title": "Metric Name",
                                    "description": "Metric to monitor by Azure metric display name",
                                    "type": "string",
                                    "example": "Percentage CPU"
                                  },
                                  "statistic": {
                                    "title": "Statistics",
                                    "description": "Statistic by which to evaluate the selected metric.",
                                    "type": "string",
                                    "example": "average",
                                    "enum": [
                                      "average",
                                      "sampleCount",
                                      "sum",
                                      "minimum",
                                      "maximum"
                                    ]
                                  },
                                  "unit": {
                                    "title": "Unit",
                                    "description": "Unit to measure to evaluate the selected metric:  Valid Values:\n+ Count\n+ Bytes\n+ Percent\n+ CountPerSecond\n+ Milliseconds\n+ BytesPerSecond\n+ Seconds",
                                    "type": "string",
                                    "example": "Count"
                                  },
                                  "threshold": {
                                    "title": "Threshold",
                                    "description": "The value at which the scaling action is triggered.",
                                    "type": "number",
                                    "format": "float",
                                    "example": 0.75
                                  },
                                  "period": {
                                    "title": "Period",
                                    "description": "Amount of time (seconds) for which the threshold must be met in order to trigger the scaling action.",
                                    "type": "integer",
                                    "example": 60
                                  },
                                  "evaluationPeriods": {
                                    "title": "Evaluation Periods",
                                    "description": "Amount of time (seconds) for which the threshold must be met in order to trigger the scaling action.",
                                    "type": "integer",
                                    "example": 3
                                  },
                                  "cooldown": {
                                    "title": "Cooldown",
                                    "description": "Time (seconds) to wait after a scaling action before resuming monitoring.",
                                    "type": "integer",
                                    "example": 300
                                  },
                                  "namespace": {
                                    "title": "namespace",
                                    "description": "Select one of the next namespaces presented in Azure configurator - https://docs.microsoft.com/en-us/azure/templates/",
                                    "type": "string",
                                    "example": "Microsoft.Network/applicationGateways",
                                    "default": "Microsoft.Compute"
                                  },
                                  "operator": {
                                    "title": "Operator",
                                    "description": "The operator used to evaluate the threshold against the current metric value.\n+ gt (Greater Than)\n+ gte (Greater Than or Equal)\n+ lt (Less Than)\n+ lte (Less Than or Equal) ",
                                    "type": "string",
                                    "example": "gte",
                                    "enum": [
                                      "gt",
                                      "gte",
                                      "lt",
                                      "lte"
                                    ]
                                  },
                                  "dimenstions": {
                                    "title": "Dimenstions",
                                    "description": "Required if scaling.up.namespace is different from 'Microsoft.Compute'. 2 dimensions are required, example: “dimensions”:  [  {  “key” : “resourceGroupName”,  “value” : “testResourceGroup”  }  {  “key” : “resourceName”,  “value” : “testApplicationGateway”  }  ]",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "title": "Key",
                                          "description": "Azure resource group for the scaling.down.dimensions. Required if using namespace different from \"Microsoft.Compute\".",
                                          "type": "string",
                                          "example": "resourceGroupName"
                                        },
                                        "value": {
                                          "title": "Value",
                                          "description": "Azure resource the scaling.down.dimensions. Required if using namespace different from \"Microsoft.Compute\".",
                                          "type": "string",
                                          "example": "TestAppGateway"
                                        }
                                      }
                                    }
                                  },
                                  "action": {
                                    "title": "Action",
                                    "description": "Scaling action to take when the policy is triggered.",
                                    "type": "object",
                                    "required": [
                                      "type"
                                    ],
                                    "properties": {
                                      "type": {
                                        "title": "Type",
                                        "description": "Type of scaling action to take when the scaling policy is triggered. </br> Valid Values:\n+ adjustment\n+ setMinTarget<\n+ updateCapacity\n+ percentageAdjustment",
                                        "type": "string",
                                        "example": "adjustment"
                                      },
                                      "adjustment": {
                                        "title": "Adjustment",
                                        "description": "Value to which the action type will be adjusted. Required if using the next action types:\n+ numeric\n+ percentageAdjustment",
                                        "type": "string",
                                        "example": "2"
                                      },
                                      "target": {
                                        "title": "Target",
                                        "description": "Value to update the group target capacity to. Also you must indicate “minimum” and “maximum” amounts. Required if selected as action type:\n+ updateCapacity",
                                        "type": "integer",
                                        "example": 23
                                      },
                                      "minimum": {
                                        "title": "Target",
                                        "description": "Value to update the group minimum capacity to. Also you must indicate “target” and “maximum” amounts. Required if selected as action type:\n+ updateCapacity",
                                        "type": "integer",
                                        "example": 20
                                      },
                                      "maximum": {
                                        "title": "Target",
                                        "description": "Value to update the group mimimum capacity to. Also you must indicate “target” and “minimum” amounts. Required if selected as action type: + updateCapacity",
                                        "type": "integer",
                                        "example": 25
                                      }
                                    }
                                  }
                                }
                              },
                              "down": {
                                "type": "object",
                                "title": "Scale Down Policies",
                                "description": "Provide the ability to scale down to maximize cost efficiency.",
                                "required": [
                                  "policyName",
                                  "metricName",
                                  "statistic",
                                  "threshold",
                                  "period",
                                  "evaluationPeriods",
                                  "cooldown",
                                  "action",
                                  "operator",
                                  "namespace"
                                ],
                                "properties": {
                                  "policyName": {
                                    "title": "Policy Name",
                                    "description": "Name of scaling policy",
                                    "type": "string",
                                    "example": "cpuScale"
                                  },
                                  "metricName": {
                                    "title": "Metric Name",
                                    "description": "Metric to monitor by Azure metric display name",
                                    "type": "string",
                                    "example": "Percentage CPU"
                                  },
                                  "statistic": {
                                    "title": "Statistics",
                                    "description": "Statistic by which to evaluate the selected metric.",
                                    "type": "string",
                                    "example": "average",
                                    "enum": [
                                      "average",
                                      "sampleCount",
                                      "sum",
                                      "minimum",
                                      "maximum"
                                    ]
                                  },
                                  "unit": {
                                    "title": "Unit",
                                    "description": "Unit to measure to evaluate the selected metric:  Valid Values:\n+ Count\n+ Bytes\n+ Percent<\n+ CountPerSecond\n+ Milliseconds\n+ BytesPerSecond\n+ Seconds",
                                    "type": "string",
                                    "example": "Count"
                                  },
                                  "threshold": {
                                    "title": "Threshold",
                                    "description": "The value at which the scaling action is triggered.",
                                    "type": "number",
                                    "format": "float",
                                    "example": 0.75
                                  },
                                  "period": {
                                    "title": "Period",
                                    "description": "Amount of time (seconds) for which the threshold must be met in order to trigger the scaling action.",
                                    "type": "integer",
                                    "example": 60
                                  },
                                  "evaluationPeriods": {
                                    "title": "Evaluation Periods",
                                    "description": "Number of consecutive periods in which the threshold must be met in order to trigger the scaling action.",
                                    "type": "integer",
                                    "example": 3
                                  },
                                  "cooldown": {
                                    "title": "Cooldown",
                                    "description": "Time (seconds) to wait after a scaling action before resuming monitoring.",
                                    "type": "integer",
                                    "example": 300
                                  },
                                  "namespace": {
                                    "title": "Namespace",
                                    "description": "Select one of the next namespaces presented in Azure configurator - https://docs.microsoft.com/en-us/azure/templates/",
                                    "type": "string",
                                    "example": "Microsoft.Network/applicationGateways"
                                  },
                                  "operator": {
                                    "title": "Operator",
                                    "description": "The operator used to evaluate the threshold against the current metric value.\n+ gt (Greater Than)\n+ gte (Greater Than or Equal)\n+ lt (Less Than)\n+ lte (Less Than or Equal) ",
                                    "type": "string",
                                    "default": "lte",
                                    "example": "gte",
                                    "enum": [
                                      "gt",
                                      "gte",
                                      "lt",
                                      "lte"
                                    ]
                                  },
                                  "dimenstions": {
                                    "title": "Dimenstions",
                                    "description": "Required if scaling.up.namespace is different from 'Microsoft.Compute'. 2 dimensions are required, example: “dimensions”:  [  {  “key” : “resourceGroupName”,  “value” : “testResourceGroup”  }  {  “key” : “resourceName”,  “value” : “testApplicationGateway”  }  ]",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "title": "Key",
                                          "description": "Azure resource group for the scaling.down.dimensions. Required if using namespace different from \"Microsoft.Compute\".",
                                          "type": "string",
                                          "example": "resourceGroupName"
                                        },
                                        "value": {
                                          "title": "Value",
                                          "description": "Azure resource the scaling.down.dimensions. Required if using namespace different from \"Microsoft.Compute\".",
                                          "type": "string",
                                          "example": "TestAppGateway"
                                        }
                                      }
                                    }
                                  },
                                  "action": {
                                    "title": "Action",
                                    "description": "Scaling action to take when the policy is triggered.",
                                    "type": "object",
                                    "required": [
                                      "type",
                                      "adjustment",
                                      "target",
                                      "minimum",
                                      "maximum"
                                    ],
                                    "properties": {
                                      "type": {
                                        "title": "Type",
                                        "description": "Type of scaling action to take when the scaling policy is triggered. </br> Valid Values:\n+ adjustment\n+ setMaxTarget\n+ updateCapacity\n+ percentageAdjustment",
                                        "type": "string",
                                        "example": "adjustment"
                                      },
                                      "target": {
                                        "type": "integer",
                                        "title": "Target",
                                        "description": "Desired number of instances. Also you must indicate “minimum” and “maximum” amounts. Required if selected as action type:\n+ updateCapacity",
                                        "example": 1
                                      },
                                      "minimum": {
                                        "type": "integer",
                                        "title": "Minimum",
                                        "description": "Lower limit of instances that you can scale down to. Also you must indicate “target” and “maximum” amounts. Required if selected as action type:\n+ updateCapacity",
                                        "example": 1
                                      },
                                      "maximum": {
                                        "type": "integer",
                                        "title": "Maximum",
                                        "description": "Upper limit of instances that you can scale down to. Also you must indicate “minimum” and “target” amounts. Required if selected as action type:\n+ updateCapacity",
                                        "example": 1
                                      },
                                      "adjustment": {
                                        "title": "Adjustment",
                                        "description": "Value to which the action type will be adjusted. Required if using the next action types:\n+ numeric\n+ percentageAdjustment",
                                        "type": "string",
                                        "example": "2"
                                      }
                                    },
                                    "policyName": {
                                      "type": "object",
                                      "example": "cpuScaleDown",
                                      "threshold": {
                                        "example": 0.25
                                      },
                                      "operator": {
                                        "example": "lte"
                                      },
                                      "action": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "example": "adjustment",
                                            "enum": [
                                              "adjustment",
                                              "setMaxTarget",
                                              "updateCapacity",
                                              "percentageAdjustment"
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "strategy": {
                            "type": "object",
                            "title": "Scaling Strategy",
                            "properties": {
                              "spotPercentage": {
                                "title": "Spot Percentage",
                                "description": "Percentage of Spot-VMs to maintain.  <a style=color:red>Required if odCount isn't specified.</a>",
                                "type": "integer",
                                "default": 100,
                                "example": 100
                              },
                              "onDemandCount": {
                                "title": "On Demand Count",
                                "type": "integer",
                                "description": "Number of On-Demand VMs to maintain.  <a style=color:red>Required if spotPercentage isn't specified.</a>",
                                "example": 3
                              },
                              "drainingTimeout": {
                                "title": "Draining Timeout",
                                "type": "integer",
                                "description": "Time (seconds) to allow the VM be drained from incoming TCP connections and detached from MLB before terminating it during a scale down operation.",
                                "default": 120
                              },
                              "revertToSpot": {
                                "title": "Revert To Spot",
                                "type": "object",
                                "description": "Hold settings for strategy correction - replacing On-Demand for Spot VMs",
                                "properties": {
                                  "performAt": {
                                    "title": "Perform At",
                                    "type": "string",
                                    "description": "Settings for maintenance strategy - possible values:\n+ timeWindow\n+ never\n+ always",
                                    "default": "always"
                                  }
                                }
                              },
                              "optimizationWindows": {
                                "title": "Optimization Windows",
                                "description": "Valid format:\n+ ddd:hh:mm-ddd:hh:mm (day:hour(0-23):minute(0-59))\n+ not empty if revertToSpot.performAt = timeWindow",
                                "type": "array"
                              },
                              "signals": {
                                "title": "Signals",
                                "description": "The signals defined for this group.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "timeout": {
                                      "title": "Timeout",
                                      "description": "The timeout in seconds to hold the vm until a signal is sent. If no signal is sent the vm will be replaced (vmReady) or we will terminate the vm (vmReadyToShutdown) after the timeout. (Maximum is 1800 seconds, Minimum is 60 seconds)",
                                      "default": 30,
                                      "type": "integer",
                                      "example": 50
                                    },
                                    "type": {
                                      "title": "Type",
                                      "description": "The type of the signal defined for the group. Valid Values: vmReady, vmReadyToShutdown",
                                      "type": "string",
                                      "example": "vmReady"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "health": {
                            "title": "Health",
                            "description": "Autohealing of unhealthy VMs.",
                            "type": "object",
                            "properties": {
                              "autoHealing": {
                                "title": "Auto Healing",
                                "description": "Enable Autohealing of unhealthy VMs.",
                                "type": "boolean",
                                "example": false
                              },
                              "healthCheckTypes": {
                                "title": "Health Check Types",
                                "description": "Healthcheck to use to validate VM health. </br>Valid Values:\n+ vmState\n+ applicationGateway",
                                "type": "string",
                                "example": "vmState"
                              },
                              "gracePeriod": {
                                "title": "Grace Period",
                                "description": "Period of time to wait for VM to reach healthiness before monitoring for unhealthiness.",
                                "type": "integer",
                                "example": 300
                              },
                              "unhealthyDuration": {
                                "title": "Unhealthy Duration",
                                "description": "Amount of time to be unhealthy before a replacement is triggered",
                                "type": "integer",
                                "example": 360
                              }
                            }
                          },
                          "compute": {
                            "title": "Compute",
                            "description": "Elastigroup's Compute Configurtion",
                            "type": "object",
                            "required": [
                              "vmSizes",
                              "os",
                              "launchSpecification"
                            ],
                            "properties": {
                              "vmSizes": {
                                "title": "VM Sizes",
                                "description": "Sizes of On-Demand and Low-Priority VMs.",
                                "type": "object",
                                "required": [
                                  "odSizes",
                                  "spotSizes"
                                ],
                                "properties": {
                                  "odSizes": {
                                    "title": "OD Sizes",
                                    "type": "array",
                                    "description": "Array of string (s) with Available On-Demand sizes (pls chose items that correspond to your location or zone) https://docs.microsoft.com/uk-ua/azure/virtual-machines/sizes:",
                                    "items": {
                                      "type": "string",
                                      "example": "standard_b1s"
                                    }
                                  },
                                  "spotSizes": {
                                    "title": "Spot Sizes",
                                    "description": "Available Spot-VM sizes. Find the list in Azure https://docs.microsoft.com/en-us/azure/virtual-machines/spot-vms?toc=/azure/virtual-machines/linux/toc.json&bc=/azure/virtual-machines/linux/breadcrumb/toc.json",
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "example": "standard_a1_v2"
                                    }
                                  },
                                  "preferredSpotSizes": {
                                    "type": "array",
                                    "description": "Prioritize Spot VM sizes when launching Spot VMs for the group.\n<a style=color:red>Must be a sublist of compute.vmSizes.spotSizes. </a>\n",
                                    "items": {
                                      "type": "string",
                                      "example": "standard_a2_v2"
                                    }
                                  }
                                }
                              },
                              "os": {
                                "type": "string",
                                "example": "Linux",
                                "enum": [
                                  "Linux",
                                  "Windows"
                                ]
                              },
                              "launchSpecification": {
                                "title": "Launch Specification",
                                "description": "Launch Specification Configuration",
                                "type": "object",
                                "required": [
                                  "image",
                                  "network",
                                  "subnetName"
                                ],
                                "properties": {
                                  "image": {
                                    "title": "Image",
                                    "description": "Image of VM. An image is a template for creating new VMs. Choose from Azure image catalogue (marketplace) or use a custom image or chosen from shared gallery image.",
                                    "type": "object",
                                    "properties": {
                                      "marketplace": {
                                        "title": "Marketplace",
                                        "type": "object",
                                        "description": "Select an image from Azure's Marketplace image catalogue. Cannot be used with `custom` or `gallery`. <a style=color:red;>Required if custom or gallery image are not specified.</a>",
                                        "properties": {
                                          "publisher": {
                                            "title": "Publisher",
                                            "description": "Image publisher.  <a style=color:red;>Required if marketplace image is specified.</a>",
                                            "type": "string",
                                            "example": "OpenLogic"
                                          },
                                          "offer": {
                                            "title": "Offer",
                                            "desription": "Name of image to use.  <a style=color:red;>Required if marketplace image is specified.</a>",
                                            "type": "string",
                                            "example": "CentOS"
                                          },
                                          "sku": {
                                            "title": "Stock Keeping Unit",
                                            "description": "Image's Stock Keeping Unit, which is the specific version of the image.  <a style=color:red;>Required if marketplace image is specified.</a>",
                                            "type": "string",
                                            "example": "7.3"
                                          },
                                          "version": {
                                            "title": "Version",
                                            "description": "Image's version. if version not provided we use 'latest'",
                                            "type": "string",
                                            "example": "7.3-1611",
                                            "default": "latest"
                                          }
                                        }
                                      },
                                      "custom": {
                                        "title": "Custom",
                                        "type": "object",
                                        "description": "Custom image to launch Elastigroup with. Cannot be used with `marketplace` or `gallery`. <a style=color:red;>Required if marketplace or gallery image are not specified.</a>",
                                        "properties": {
                                          "resourceGroupName": {
                                            "title": "Resource Group Name",
                                            "description": "Name of Resource Group for custom image.  <a style=color:red;>Required if custom image is specified.</a>",
                                            "type": "string",
                                            "example": "spotinst-azure"
                                          },
                                          "name": {
                                            "title": "Image Name",
                                            "description": "Name of the custom image.  <a style=color:red;>Required if custom image is specified.</a>",
                                            "type": "string",
                                            "example": "custom-image-name"
                                          }
                                        }
                                      },
                                      "gallery": {
                                        "title": "Gallery",
                                        "type": "object",
                                        "description": "Gallery image to launch Elastigroup with. Cannot be used with `marketplace` or `custom`. <a style=color:red;>Required if marketplace or custom image are not specified.</a>",
                                        "properties": {
                                          "resourceGroupName": {
                                            "title": "Resource Group Name",
                                            "description": "Name of Resource Group for custom image.  <a style=color:red;>Required if gallery image is specified.</a>",
                                            "type": "string",
                                            "example": "spotinst-azure"
                                          },
                                          "galleryName": {
                                            "title": "Gallery Name",
                                            "description": "Name of the gallery.  <a style=color:red;>Required if gallery image is specified.</a>",
                                            "type": "string",
                                            "example": "gallery-name"
                                          },
                                          "imageName": {
                                            "title": "Image Name",
                                            "description": "Name of the gallery image.  <a style=color:red;>Required if gallery image is specified.</a>",
                                            "type": "string",
                                            "example": "gallery-image-name"
                                          },
                                          "version": {
                                            "title": "Version",
                                            "description": "Image's version. Can be in the format x.x.x or 'latest'. <a style=color:red;>Required if gallery image is specified.</a>",
                                            "type": "string",
                                            "example": "0.0.1"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "loadBalancersConfig": {
                                    "title": "Load Balancer Configuration",
                                    "description": "Configure a Load Balancer",
                                    "type": "object",
                                    "properties": {
                                      "loadBalancers": {
                                        "title": "Load Balancers",
                                        "description": "Add a load balancer. For Azure Gateway, each Backend Pool is a separate load balancer.",
                                        "type": "array",
                                        "items": {
                                          "anyOf": [
                                            {
                                              "type": "object",
                                              "title": "MULTAI_TARGET_SET",
                                              "properties": {
                                                "type": {
                                                  "title": "Type",
                                                  "description": "The type of load balancer.  Valid Values:\n+ MULTAI_TARGET_SET\n+ APPLICATION_GATEWAY",
                                                  "type": "string",
                                                  "example": "MULTAI_TARGET_SET",
                                                  "enum": [
                                                    "MULTAI_TARGET_SET"
                                                  ]
                                                },
                                                "balancerId": {
                                                  "type": "string",
                                                  "example": "lb-1ee2e3q"
                                                },
                                                "targetSetId": {
                                                  "type": "string",
                                                  "example": "ts-3eq"
                                                },
                                                "autoWeight": {
                                                  "type": "boolean",
                                                  "example": true
                                                }
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "title": "APPLICATION_GATEWAY",
                                              "properties": {
                                                "type": {
                                                  "title": "Type",
                                                  "description": "The type of load balancer.  Valid Values:\n+ MULTAI_TARGET_SET\n+ APPLICATION_GATEWAY",
                                                  "type": "string",
                                                  "example": "APPLICATION_GATEWAY",
                                                  "enum": [
                                                    "APPLICATION_GATEWAY"
                                                  ]
                                                },
                                                "resourceGroupName": {
                                                  "title": "Resource Group Name",
                                                  "description": "The Resource Group name of the Load Balancer.",
                                                  "type": "string",
                                                  "example": "azureResourceGroup"
                                                },
                                                "applicationGatewayName": {
                                                  "type": "string",
                                                  "example": "appGateway"
                                                },
                                                "backendPoolName": {
                                                  "type": "string",
                                                  "example": "backendpool490822"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "managedServiceIdentities": {
                                    "title": "Managed Service Identities",
                                    "description": "Add a user-assigned managed identity to the VMs in the cluster.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "resourceGroupName": {
                                          "title": "Resource Group Name",
                                          "description": "The Resource Group that the user-assigned managed identity resides in.",
                                          "type": "string",
                                          "example": "Resourse Group 1"
                                        },
                                        "name": {
                                          "title": "Name",
                                          "description": "Name of the managed identity",
                                          "type": "string",
                                          "example": "Test"
                                        }
                                      }
                                    }
                                  },
                                  "shutdownScript": {
                                    "title": "Shutdown Script",
                                    "description": "Shutdown script for the group. Value should be passed as a string encoded at Base64 only",
                                    "type": "string",
                                    "example": "IyEvYmluL2Jhc2gKZWNobyAidGVzdCI="
                                  },
                                  "tags": {
                                    "title": "Tags",
                                    "description": "Key-Value pairs for VMs in the Elastigroup.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "tagKey": {
                                          "title": "Tag Key",
                                          "description": "Tag Key for Vms in Elastigroup.",
                                          "type": "string",
                                          "example": "env"
                                        },
                                        "tagValue": {
                                          "title": "Tag Value",
                                          "description": "Tag Value for VMs in Elastigroup.",
                                          "type": "string",
                                          "example": "staging"
                                        }
                                      }
                                    }
                                  },
                                  "network": {
                                    "title": "Network",
                                    "description": "Define the Virtual Network and Subnet for your Elastigroup.",
                                    "type": "object",
                                    "required": [
                                      "resourceGroupName",
                                      "virtualNetworkName",
                                      "networkInterfaces"
                                    ],
                                    "properties": {
                                      "resourceGroupName": {
                                        "title": "Resource Group Name",
                                        "description": "Vnet Resource Group Name",
                                        "type": "string",
                                        "example": "subnetResourceGroup"
                                      },
                                      "virtualNetworkName": {
                                        "title": "Virtual Network Name",
                                        "description": "Virtual Network",
                                        "type": "string",
                                        "example": "vname"
                                      },
                                      "networkInterfaces": {
                                        "title": "Virtual Network Name",
                                        "description": "Virtual Network",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "isPrimary",
                                            "subnetName"
                                          ],
                                          "properties": {
                                            "isPrimary": {
                                              "title": "Is Primary Criteria",
                                              "description": "Defines whether the network interface is primary or not.",
                                              "type": "boolean",
                                              "example": true
                                            },
                                            "subnetName": {
                                              "title": "Subnet Name",
                                              "description": "Subnet name",
                                              "type": "string",
                                              "example": "testSubnet"
                                            },
                                            "assignPublicIp": {
                                              "title": "Assign Publick IP",
                                              "description": "Assign public IP",
                                              "type": "boolean",
                                              "example": true
                                            },
                                            "publicIpSku": {
                                              "title": null,
                                              "description": "Required if assignPublicIp=true values=[STANDARD/BASIC]",
                                              "type": "string",
                                              "example": "STANDARD"
                                            },
                                            "securityGroup": {
                                              "title": "Security Group",
                                              "description": "Security Group",
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "title": "Name",
                                                  "description": "Requires valid security group name. Required if security group is specified.",
                                                  "type": "string",
                                                  "example": "test"
                                                },
                                                "resourceGroupName": {
                                                  "title": "Resource Group Name",
                                                  "description": "Requires valid resource group name. Required if security group is specified.",
                                                  "type": "string",
                                                  "example": "test"
                                                }
                                              }
                                            },
                                            "publicIps": {
                                              "description": "Defined a pool of Public Ips (from Azure), that will be associated to the network interface. We will associate one public ip per instance until the pool is exhausted, in which case, we will create a new one.",
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "resourceGroupName",
                                                  "name"
                                                ],
                                                "properties": {
                                                  "resourceGroupName": {
                                                    "description": "The resource group of the public ip.",
                                                    "type": "string",
                                                    "example": "resourceGroup"
                                                  },
                                                  "name": {
                                                    "description": "The name of the public ip.",
                                                    "type": "string",
                                                    "example": "name"
                                                  }
                                                }
                                              }
                                            },
                                            "enableIPForwarding": {
                                              "title": "Enable IP Forwarding",
                                              "description": "Enable IP Forwarding",
                                              "type": "boolean",
                                              "example": true
                                            },
                                            "additionalIpConfigurations": {
                                              "title": "Additional IP Configurations",
                                              "description": "Additional configuration of network interface",
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "name": {
                                                    "title": "Name",
                                                    "description": "Required if additionalConfiguration has been specified.",
                                                    "type": "string",
                                                    "example": "test"
                                                  },
                                                  "privateIpAddressVersion": {
                                                    "title": "Private IP Address Version",
                                                    "description": "Possible values:\n+ IPv4\n+ IPv6",
                                                    "default": "IPv4"
                                                  }
                                                }
                                              }
                                            },
                                            "privateIpAddresses": {
                                              "type": "array",
                                              "description": "A list with unique items that every item is a valid IP",
                                              "items": {
                                                "type": "string",
                                                "example": [
                                                  "172.232.5.3",
                                                  "172.23.5.4",
                                                  "172.23.5.7",
                                                  "172.23.5.8",
                                                  "172.23.5.9",
                                                  "172.23.5.10"
                                                ]
                                              }
                                            },
                                            "applicationSecurityGroups": {
                                              "description": "List of Application Security Groups that will be associated to the primary ip configration of the network interface.",
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "resourceGroupName",
                                                  "name"
                                                ],
                                                "properties": {
                                                  "resourceGroupName": {
                                                    "description": "The resource group of the Application Security Group.",
                                                    "type": "string",
                                                    "example": "AsgResourceGroup"
                                                  },
                                                  "name": {
                                                    "description": "The name of the Application Security group",
                                                    "type": "string",
                                                    "example": "AsgName"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "extensions": {
                                    "title": "Extensions",
                                    "description": "List of objects for Azure extensions",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "autoUpgradeMinorVersion",
                                        "name",
                                        "publisher",
                                        "type"
                                      ],
                                      "properties": {
                                        "autoUpgradeMinorVersion": {
                                          "title": "Auto Upgrade Minor Version",
                                          "description": "Required on compute.launchSpecification.extensions object",
                                          "type": "boolean",
                                          "example": true,
                                          "required": true
                                        },
                                        "name": {
                                          "title": "name",
                                          "description": "Required on compute.launchSpecification.extensions object",
                                          "type": "string",
                                          "example": "k8s-agentpool1-38611891-vmss-computeAksLinuxBilling"
                                        },
                                        "protectedSettings": {
                                          "title": "Protected Settings",
                                          "description": "Object for protected settings",
                                          "type": "object",
                                          "required": [
                                            "commandToExecute"
                                          ],
                                          "properties": {
                                            "commandToExecute": {
                                              "title": "Command To Execute",
                                              "description": "Required for compute.launchSpecification.extensions.protectedSettings object",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "publicSettings": {
                                          "title": "Public Settings",
                                          "description": "Public Settings",
                                          "type": "object"
                                        },
                                        "publisher": {
                                          "title": "Publisher",
                                          "description": "Required on compute.launchSpecification.extensions object",
                                          "type": "string",
                                          "example": "Microsoft.AKS"
                                        },
                                        "type": {
                                          "title": "Type",
                                          "description": "Required on compute.launchSpecification.extensions object",
                                          "type": "string",
                                          "example": "Compute.AKS-Engine.Linux.Billing"
                                        },
                                        "apiVersion": {
                                          "title": "API Version",
                                          "description": "The API version of the extension. Required if extension specified.",
                                          "type": "string",
                                          "example": 1
                                        },
                                        "minorVersionAutoUpgrade": {
                                          "title": "minorVersionAutoUpgrade",
                                          "description": "Enable minor version upgrades of the extension. Required if extension specified.",
                                          "type": "boolean",
                                          "example": true
                                        }
                                      }
                                    }
                                  },
                                  "dataDisks": {
                                    "title": "Data Disks",
                                    "description": "List of data disks to be attached to the vms in the group.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "title": "Type",
                                          "description": "The type of the data disk. Required if dataDisks is specified. Possible values:\n+ Standard_LRS\n+ Premium_LRS\n+ StandardSSD_LRS",
                                          "type": "string",
                                          "example": "Standard_LRS"
                                        },
                                        "lun": {
                                          "title": "Lun",
                                          "description": "The lun of the data disk, Required if dataDisks is specified.",
                                          "type": "integer",
                                          "example": 6
                                        },
                                        "sizeGB": {
                                          "title": "Size GB",
                                          "description": "The size of the data disk in GB, Required if dataDisks is specified. Minimum value: 1 Maximum value: 1023",
                                          "type": "integer",
                                          "example": 10
                                        }
                                      }
                                    }
                                  },
                                  "osDisk": {
                                    "title": "OS Disk",
                                    "description": "Specify OS disk specification other than default.",
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "title": "Type",
                                        "description": "The type of the OS disk. Required if dataDisks is specified. Possible values:\n+ Standard_LRS\n+ Premium_LRS\n+ StandardSSD_LRS",
                                        "type": "string",
                                        "example": "Standard_LRS"
                                      },
                                      "size": {
                                        "title": "Size",
                                        "description": "The size of the OS disk in GB, Required if dataDisks is specified. Minimum value: 1 Maximum value: 1023",
                                        "type": "integer",
                                        "example": 6
                                      }
                                    }
                                  },
                                  "customData": {
                                    "title": "Custom Data",
                                    "description": "This value will hold the YML in base64 and will be added to the scaleSets",
                                    "type": "string",
                                    "example": "IyEvYmluL2Jhc2gKZWNobyAidGVzdCI="
                                  },
                                  "login": {
                                    "title": "Login",
                                    "description": "Set admin access for accessing your VMs. <a style=color:red;>Required if custom, marketplace or generalized gallery image are specified. If specialized image is set, Login should not be defined</a>",
                                    "type": "object",
                                    "required": [
                                      "userName"
                                    ],
                                    "properties": {
                                      "userName": {
                                        "title": "User Name",
                                        "description": "User name for admin access to VMs. + for windows: compute.launchSpecification.login.password + for linux: compute.launchSpecification.login.sshPublicKey",
                                        "type": "string",
                                        "example": "spotinst"
                                      },
                                      "sshPublicKey": {
                                        "title": "SSH Public Key",
                                        "description": "SSH for admin access to Linux VMs.  <a style = color:red>Required for Linux.  Can not exist simultaneously with 'password'</a>",
                                        "type": "string"
                                      },
                                      "password": {
                                        "title": "Password",
                                        "description": "Password for admin access to Windows VMs.  <a style = color:red>Required for Windows. Can not exist simultaneously with 'sshPublicKey'</a>",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "bootDiagnostics": {
                                    "type": "object",
                                    "description": "Will enable boot diagnostics in Azure when a new VM is launched",
                                    "properties": {
                                      "isEnabled": {
                                        "type": "boolean",
                                        "required": true,
                                        "description": "Allows you to enable and disable the configuration of boot diagnostics at launch"
                                      },
                                      "type": {
                                        "type": "string",
                                        "required": true,
                                        "description": "Defines the type of storage on VM launch  in Azure.",
                                        "enum": [
                                          "managed",
                                          "unmanaged"
                                        ]
                                      },
                                      "storageUri": {
                                        "type": "string",
                                        "description": "The storage URI that is used if type is unmanaged. The storage URI must follow the blob storage URI format (\"https://<blobstoragename>.blob.core.windows.net/\"). StorageUri is required if the type is unmanaged. StorageUri must be ‘null’ in case the boot diagnostics type is managed"
                                      }
                                    },
                                    "example": {
                                      "isEnabled": true,
                                      "type": "unmanaged",
                                      "storageUri": "https://example.blob.core.windows.net/"
                                    }
                                  },
                                  "secrets": {
                                    "title": "secrets",
                                    "type": "array",
                                    "description": "Set of certificates that should be installed the VM\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "sourceVault": {
                                          "type": "object",
                                          "description": "The key vault reference, contains the required certificates\n",
                                          "properties": {
                                            "resourceGroupName": {
                                              "type": "string",
                                              "required": true,
                                              "description": "The resource group name of the key vault\n"
                                            },
                                            "name": {
                                              "type": "string",
                                              "required": true,
                                              "description": "The name of the key vault\n"
                                            }
                                          }
                                        },
                                        "vaultCertificates": {
                                          "type": "array",
                                          "required": true,
                                          "description": "The required certificate references\n",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "certificateUrl": {
                                                "type": "string",
                                                "required": true,
                                                "description": "The URL of the certificate under the key vault\n"
                                              },
                                              "certificateStore": {
                                                "type": "string",
                                                "required": true,
                                                "description": "The certificate store directory the VM. The directory is created in the LocalMachine account.\n* This field is required only when using windows OS type\n* This field must be ‘null’ when the OS type is Linux\n"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "zones": {
                                "type": "array",
                                "description": "List of Azure Availability Zones in the defined region; If not defined, Virtual machines will be launched regionally.",
                                "items": {
                                  "enum": [
                                    1,
                                    2,
                                    3
                                  ],
                                  "type": "string",
                                  "example": 1
                                }
                              },
                              "preferredZones": {
                                "type": "array",
                                "description": "The AZs to prioritize when launching VMs. If no markets are available in the Preferred AZs, VMs are launched in the non-preferred AZs.\n<a style=color:red>Must be a sublist of compute.zones.</a>\n",
                                "items": {
                                  "enum": [
                                    1,
                                    2,
                                    3
                                  ],
                                  "type": "string",
                                  "example": 1
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/group"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1azure~1compute~1group/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:compute:group"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Elastigroups",
        "description": "List Elastigroup clusters.\n",
        "operationId": "elastigroupAzureSpotVmsListAll",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "NAME",
            "example": "name",
            "description": "Filters to find the Elastigroup via a specific name.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "REGION",
            "example": "region",
            "description": "Filters to find all the groups in a specific region.\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/group"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Elasitgroup Azure Spot VMs",
                                "required": [
                                  "name",
                                  "region",
                                  "resourceGroupName",
                                  "capacity",
                                  "strategy",
                                  "compute"
                                ],
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "sig-123456789",
                                    "readOnly": true,
                                    "description": "Azure Elastigroup ID\n"
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "spotinst-group",
                                    "description": "Azure Elastigroup Name\n"
                                  },
                                  "description": {
                                    "type": "string",
                                    "example": "This is my example elastigroup",
                                    "description": "Describe your Azure Elastigroup\n"
                                  },
                                  "region": {
                                    "type": "string",
                                    "example": "westus2",
                                    "description": "The Azure region your Elastigroup will be created in.\n"
                                  },
                                  "resourceGroupName": {
                                    "type": "string",
                                    "example": "spotinst-azure",
                                    "description": "Name of the Resource Group for Elastigroup.\n"
                                  },
                                  "capacity": {
                                    "$ref": "#/paths/~1azure~1compute~1group~1%7BgroupId%7D~1capacity/put/requestBody/content/application~1json/schema/allOf/0/properties/capacity"
                                  },
                                  "strategy": {
                                    "$ref": "#/paths/~1azure~1compute~1group~1%7BgroupId%7D/put/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/strategy"
                                  },
                                  "scaling": {
                                    "$ref": "#/paths/~1azure~1compute~1group~1%7BgroupId%7D/put/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/scaling"
                                  },
                                  "compute": {
                                    "type": "object",
                                    "title": "Elastigroup Compute",
                                    "description": "Compute settings for Elastigroup.\n",
                                    "required": [
                                      "vmSizes",
                                      "os",
                                      "launchSpecification"
                                    ],
                                    "properties": {
                                      "vmSizes": {
                                        "type": "object",
                                        "description": "amount of time to be unhealthy before a replacement is triggered\n",
                                        "properties": {
                                          "odSizes": {
                                            "type": "array",
                                            "description": "Available On-Demand sizes.\n",
                                            "items": {
                                              "type": "string",
                                              "example": "standard_a1_v1"
                                            }
                                          },
                                          "spotSizes": {
                                            "type": "array",
                                            "description": "Available Spot-VM sizes.\n",
                                            "items": {
                                              "type": "string",
                                              "example": "standard_a2_v2"
                                            }
                                          },
                                          "preferredSpotSizes": {
                                            "type": "array",
                                            "description": "Prioritize Spot VM sizes when launching Spot VMs for the group.\n<a style=color:red>Must be a sublist of compute.vmSizes.spotSizes. </a>\n",
                                            "items": {
                                              "type": "string",
                                              "example": "standard_a2_v2"
                                            }
                                          }
                                        }
                                      },
                                      "os": {
                                        "type": "string",
                                        "example": "Linux",
                                        "description": "Type of operating system.\n",
                                        "enum": [
                                          "Linux",
                                          "Windows"
                                        ]
                                      },
                                      "launchSpecification": {
                                        "type": "object",
                                        "properties": {
                                          "customData": {
                                            "type": "string",
                                            "format": "byte",
                                            "description": "This value will hold the YAML in base64 and will be executed upon VM launch.\n",
                                            "example": ""
                                          },
                                          "image": {
                                            "type": "object",
                                            "description": "Image of VM. An image is a template for creating new VMs.\n",
                                            "properties": {
                                              "marketplace": {
                                                "type": "object",
                                                "description": "Select an image from Azure's Marketplace image catalogue\\\nRequired if custom image or gallery image are not specified.\n",
                                                "properties": {
                                                  "publisher": {
                                                    "type": "string",
                                                    "description": "Image publisher.\n",
                                                    "example": "OpenLogic"
                                                  },
                                                  "offer": {
                                                    "type": "string",
                                                    "description": "Name of image to use.\n",
                                                    "example": "CentOS"
                                                  },
                                                  "sku": {
                                                    "type": "string",
                                                    "description": "Image's Stock Keeping Unit, which is the specific version of the image.\n",
                                                    "example": "7.3"
                                                  },
                                                  "version": {
                                                    "type": "string",
                                                    "description": "Image's version. if version not provided we use \"latest\"\n",
                                                    "default": "lastest",
                                                    "example": "7.3-1611"
                                                  }
                                                }
                                              },
                                              "custom": {
                                                "type": "object",
                                                "description": "Custom image to launch Elastigroup with.\n",
                                                "properties": {
                                                  "resourceGroupName": {
                                                    "type": "string",
                                                    "description": "Name of Resource Group for custom image.\n",
                                                    "example": "spotinst-azure"
                                                  },
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the custom image.\n",
                                                    "example": "custom-image-name"
                                                  }
                                                }
                                              },
                                              "gallery": {
                                                "title": "Gallery",
                                                "type": "object",
                                                "description": "Gallery image to launch Elastigroup with. Required if custom image or marketplace image are not specified.\n",
                                                "properties": {
                                                  "resourceGroupName": {
                                                    "title": "Resource Group Name",
                                                    "description": "Name of Resource Group for custom image\n",
                                                    "type": "string",
                                                    "example": "spotinst-azure"
                                                  },
                                                  "galleryName": {
                                                    "title": "Gallery Name",
                                                    "description": "Name of the gallery.\n",
                                                    "type": "string",
                                                    "example": "gallery-name"
                                                  },
                                                  "imageName": {
                                                    "title": "Image Name",
                                                    "description": "Name of the gallery image.\n",
                                                    "type": "string",
                                                    "example": "gallery-image-name"
                                                  },
                                                  "version": {
                                                    "title": "Version",
                                                    "description": "Image's version. Can be in the format x.x.x or 'latest'.\n",
                                                    "type": "string",
                                                    "example": "0.0.1"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "network": {
                                            "title": "Network",
                                            "description": "Define the Virtual Network and Subnet for your Elastigroup.",
                                            "type": "object",
                                            "required": [
                                              "resourceGroupName",
                                              "virtualNetworkName",
                                              "networkInterfaces"
                                            ],
                                            "properties": {
                                              "resourceGroupName": {
                                                "title": "Resource Group Name",
                                                "description": "Vnet Resource Group Name",
                                                "type": "string",
                                                "example": "subnetResourceGroup"
                                              },
                                              "virtualNetworkName": {
                                                "title": "Virtual Network Name",
                                                "description": "Virtual Network",
                                                "type": "string",
                                                "example": "vname"
                                              },
                                              "networkInterfaces": {
                                                "title": "Virtual Network Name",
                                                "description": "Virtual Network",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "required": [
                                                    "isPrimary",
                                                    "subnetName"
                                                  ],
                                                  "properties": {
                                                    "isPrimary": {
                                                      "title": "Is Primary Criteria",
                                                      "description": "Defines whether the network interface is primary or not.",
                                                      "type": "boolean",
                                                      "example": true
                                                    },
                                                    "subnetName": {
                                                      "title": "Subnet Name",
                                                      "description": "Subnet name",
                                                      "type": "string",
                                                      "example": "testSubnet"
                                                    },
                                                    "assignPublicIp": {
                                                      "title": "Assign Publick IP",
                                                      "description": "Assign public IP",
                                                      "type": "boolean",
                                                      "example": true
                                                    },
                                                    "publicIpSku": {
                                                      "title": null,
                                                      "description": "Required if assignPublicIp=true values=[STANDARD/BASIC]",
                                                      "type": "string",
                                                      "example": "STANDARD"
                                                    },
                                                    "securityGroup": {
                                                      "title": "Security Group",
                                                      "description": "Security Group",
                                                      "type": "object",
                                                      "properties": {
                                                        "name": {
                                                          "title": "Name",
                                                          "description": "Requires valid security group name. Required if security group is specified.",
                                                          "type": "string",
                                                          "example": "test"
                                                        },
                                                        "resourceGroupName": {
                                                          "title": "Resource Group Name",
                                                          "description": "Requires valid resource group name. Required if security group is specified.",
                                                          "type": "string",
                                                          "example": "test"
                                                        }
                                                      }
                                                    },
                                                    "publicIps": {
                                                      "description": "Defined a pool of Public Ips (from Azure), that will be associated to the network interface. We will associate one public ip per instance until the pool is exhausted, in which case, we will create a new one.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "required": [
                                                          "resourceGroupName",
                                                          "name"
                                                        ],
                                                        "properties": {
                                                          "resourceGroupName": {
                                                            "description": "The resource group of the public ip.",
                                                            "type": "string",
                                                            "example": "resourceGroup"
                                                          },
                                                          "name": {
                                                            "description": "The name of the public ip.",
                                                            "type": "string",
                                                            "example": "name"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "enableIPForwarding": {
                                                      "title": "Enable IP Forwarding",
                                                      "description": "Enable IP Forwarding",
                                                      "type": "boolean",
                                                      "example": true
                                                    },
                                                    "additionalIpConfigurations": {
                                                      "title": "Additional IP Configurations",
                                                      "description": "Additional configuration of network interface",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "name": {
                                                            "title": "Name",
                                                            "description": "Required if additionalConfiguration has been specified.",
                                                            "type": "string",
                                                            "example": "test"
                                                          },
                                                          "privateIpAddressVersion": {
                                                            "title": "Private IP Address Version",
                                                            "description": "Possible values:\n+ IPv4\n+ IPv6",
                                                            "default": "IPv4"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "privateIpAddresses": {
                                                      "type": "array",
                                                      "description": "A list with unique items that every item is a valid IP",
                                                      "items": {
                                                        "type": "string",
                                                        "example": [
                                                          "172.23.4.20"
                                                        ]
                                                      }
                                                    },
                                                    "applicationSecurityGroups": {
                                                      "description": "List of Application Security Groups that will be associated to the primary ip configration of the network interface.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "required": [
                                                          "resourceGroupName",
                                                          "name"
                                                        ],
                                                        "properties": {
                                                          "resourceGroupName": {
                                                            "description": "The resource group of the Application Security Group.",
                                                            "type": "string",
                                                            "example": "AsgResourceGroup"
                                                          },
                                                          "name": {
                                                            "description": "The name of the Application Security group",
                                                            "type": "string",
                                                            "example": "AsgName"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "login": {
                                            "type": "object",
                                            "description": "Set admin access for accessing your VMs. Password/SSH is required for Linux.\n",
                                            "properties": {
                                              "userName": {
                                                "type": "string",
                                                "description": "user name for admin access to VMs.\\\nLogin can be set:\n* for windows: compute.launchSpecification.login.password\n* for linux: compute.launchSpecification.login.sshPublicKey\n\nJust user name, without pwd or SSH key\n",
                                                "example": "spotinst"
                                              },
                                              "sshPublicKey": {
                                                "type": "string",
                                                "description": "SSH for admin access to Linux VMs.\\\nOptional for Linux.\n",
                                                "example": "ssh-rsa"
                                              },
                                              "password": {
                                                "type": "string",
                                                "writeOnly": true,
                                                "description": "Password for admin access to Windows VMs.\\\nRequired for Windows.\n"
                                              }
                                            }
                                          },
                                          "loadBalancersConfig": {
                                            "type": "object",
                                            "description": "Configure a Load Balancer.\n",
                                            "properties": {
                                              "loadBalancers": {
                                                "type": "array",
                                                "description": "Add a load balancer. For Azure Gateway, each Backend Pool is a separate load balancer.\n",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "description": "The type of load balancer.\n",
                                                      "enum": [
                                                        "loadBalancer",
                                                        "applicationGateway"
                                                      ],
                                                      "example": "loadBalancer"
                                                    },
                                                    "resourceGroupName": {
                                                      "type": "string",
                                                      "description": "The Resource Group name of the Load Balancer.\n",
                                                      "example": "testResourceGroup"
                                                    },
                                                    "name": {
                                                      "type": "string",
                                                      "description": "Name of the Application Gateway/Load Balancer\n",
                                                      "example": "testLoadBalancer"
                                                    },
                                                    "sku": {
                                                      "type": "string",
                                                      "description": "* if type is LoadBalancer then possible values are:\n * “Standard\"\n * Basic”\n* if ApplicationGateway then possible values are:\n * “Standard_Large”\n * “Standard_Medium”\n * “Standard_Small”\n * “Standard_v2\n * “WAF_Large”\n * “WAF_Medium\"\n * “WAF_v2\"\n",
                                                      "example": "Standard"
                                                    },
                                                    "backendPoolNames": {
                                                      "type": "array",
                                                      "description": "Name of the Backend Pool to register the Elastigroup VMs to.\\\nEach Backend Pool is a separate load balancer.\\\nRequired if Type is APPLICATION_GATEWAY.\n",
                                                      "example": [
                                                        "testBackendPool1",
                                                        "testBackendPool2"
                                                      ]
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "managedServiceIdentities": {
                                            "type": "array",
                                            "writeOnly": true,
                                            "description": "Add a user-assigned managed identity to the VMs in the cluster.\n",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "description": "name of the managed identity\n",
                                                  "example": "mySI2"
                                                },
                                                "resourceGroupName": {
                                                  "type": "string",
                                                  "description": "The Resource Group that the user-assigned managed identity resides in.\n",
                                                  "example": "myResourceGroup"
                                                }
                                              }
                                            }
                                          },
                                          "shutdownScript": {
                                            "type": "string",
                                            "format": "byte",
                                            "writeOnly": true,
                                            "example": "IyEvdXNyL2Jpbi9lbnYgYmFzaAoiR29vZGJ5ZSBvbGQgaW5zdGFuY2Ui",
                                            "description": "shutdown script for the group. Value should be passed as a string encoded at Base64 only\n"
                                          },
                                          "tags": {
                                            "type": "array",
                                            "description": "Key-Value pairs for VMs in the Elastigroup.\n",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "tagKey": {
                                                  "type": "string",
                                                  "description": "Tag Key for Vms in Elastigroup.\n",
                                                  "example": "env"
                                                },
                                                "tagValue": {
                                                  "type": "string",
                                                  "description": "Tag Value for VMs in Elastigroup.\n",
                                                  "example": "staging"
                                                }
                                              }
                                            }
                                          },
                                          "extensions": {
                                            "type": "array",
                                            "description": "List of objects for azure extensions\n",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "description": "Required on compute.launchSpecification.extensions object\n",
                                                  "required": true,
                                                  "example": "extensionName"
                                                },
                                                "type": {
                                                  "type": "string",
                                                  "required": true,
                                                  "description": "Required on compute.launchSpecification.extensions object\n",
                                                  "example": "customScript"
                                                },
                                                "publisher": {
                                                  "type": "string",
                                                  "description": "Required on compute.launchSpecification.extensions object\n",
                                                  "required": true,
                                                  "example": "MMicrosoft.Azure.Extensions"
                                                },
                                                "apiVersion": {
                                                  "type": "string",
                                                  "description": "The API version of the extension. Required if extension specified.\n",
                                                  "example": "2.0"
                                                },
                                                "minorVersionAutoUpgrade": {
                                                  "type": "boolean",
                                                  "required": true,
                                                  "description": "Required on compute.launchSpecification.extensions object\n",
                                                  "example": true
                                                },
                                                "publicSettings": {
                                                  "type": "object",
                                                  "description": "Object for public settings\n"
                                                },
                                                "protectedSettings": {
                                                  "type": "object",
                                                  "description": "Object for protected settings\n"
                                                }
                                              }
                                            }
                                          },
                                          "dataDisks": {
                                            "type": "array",
                                            "description": "list of data disks to be attached to the vms in the group.\n",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "sizeGB": {
                                                  "type": "integer",
                                                  "description": "The size of the data disk in GB, Required if dataDisks is specified.\n",
                                                  "minimum": 1,
                                                  "maximum": 1023,
                                                  "example": 1
                                                },
                                                "lun": {
                                                  "type": "integer",
                                                  "description": "The lun of the data disk, Required if dataDisks is specified.\n",
                                                  "example": 1
                                                },
                                                "type": {
                                                  "type": "string",
                                                  "description": "The type of the data disk\n",
                                                  "enum": [
                                                    "Standard_LRS",
                                                    "Premium_LRS",
                                                    "StandardSSD_LRS"
                                                  ],
                                                  "example": "Standard_LRS"
                                                }
                                              }
                                            }
                                          },
                                          "osDisk": {
                                            "type": "object",
                                            "description": "Specify OS disk specification other than default.\n",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "description": "The type of the OS disk,\n",
                                                "enum": [
                                                  "Standard_LRS",
                                                  "Premium_LRS",
                                                  "StandardSSD_LRS"
                                                ],
                                                "example": "Standard_LRS"
                                              },
                                              "sizeGB": {
                                                "type": "integer",
                                                "description": "The size of the data disk in GB, Required if dataDisks is specified.\n",
                                                "minimum": 1,
                                                "maximum": 1023,
                                                "example": 30
                                              }
                                            }
                                          },
                                          "bootDiagnostics": {
                                            "type": "object",
                                            "description": "Will enable boot diagnostics in Azure when a new VM is launched",
                                            "properties": {
                                              "isEnabled": {
                                                "type": "boolean",
                                                "required": true,
                                                "description": "Allows you to enable and disable the configuration of boot diagnostics at launch"
                                              },
                                              "type": {
                                                "type": "string",
                                                "required": true,
                                                "description": "Defines the type of storage on VM launch  in Azure.",
                                                "enum": [
                                                  "managed",
                                                  "unmanaged"
                                                ]
                                              },
                                              "storageUri": {
                                                "type": "string",
                                                "description": "The storage URI that is used if type is unmanaged. The storage URI must follow the blob storage URI format (\"https://<blobstoragename>.blob.core.windows.net/\"). StorageUri is required if the type is unmanaged. StorageUri must be ‘null’ in case the boot diagnostics type is managed"
                                              }
                                            },
                                            "example": {
                                              "isEnabled": true,
                                              "type": "unmanaged",
                                              "storageUri": "https://example.blob.core.windows.net/"
                                            }
                                          },
                                          "secrets": {
                                            "title": "secrets",
                                            "type": "array",
                                            "description": "Set of certificates that should be installed the VM\n",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "sourceVault": {
                                                  "type": "object",
                                                  "description": "The key vault reference, contains the required certificates\n",
                                                  "properties": {
                                                    "resourceGroupName": {
                                                      "type": "string",
                                                      "required": true,
                                                      "description": "The resource group name of the key vault\n"
                                                    },
                                                    "name": {
                                                      "type": "string",
                                                      "required": true,
                                                      "description": "The name of the key vault\n"
                                                    }
                                                  }
                                                },
                                                "vaultCertificates": {
                                                  "type": "array",
                                                  "required": true,
                                                  "description": "The required certificate references\n",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "certificateUrl": {
                                                        "type": "string",
                                                        "required": true,
                                                        "description": "The URL of the certificate under the key vault\n"
                                                      },
                                                      "certificateStore": {
                                                        "type": "string",
                                                        "required": true,
                                                        "description": "The certificate store directory the VM. The directory is created in the LocalMachine account.\n* This field is required only when using windows OS type\n* This field must be ‘null’ when the OS type is Linux\n"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "zones": {
                                        "type": "array",
                                        "description": "List of Azure Availability Zones in the defined region; If not defined, Virtual machines will be launched regionally.",
                                        "items": {
                                          "enum": [
                                            1,
                                            2,
                                            3
                                          ],
                                          "type": "string",
                                          "example": 1
                                        }
                                      },
                                      "preferredZones": {
                                        "type": "array",
                                        "description": "The AZs to prioritize when launching VMs. If no markets are available in the Preferred AZs, VMs are launched in the non-preferred AZs.\n<a style=color:red>Must be a sublist of compute.zones.</a>\n",
                                        "items": {
                                          "enum": [
                                            1,
                                            2,
                                            3
                                          ],
                                          "type": "string",
                                          "example": 1
                                        }
                                      }
                                    }
                                  },
                                  "health": {
                                    "$ref": "#/paths/~1azure~1compute~1group~1%7BgroupId%7D/put/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/health"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "readOnly": true,
                                    "format": "date-time",
                                    "example": "2018-10-10T10:50:29.000+0000"
                                  },
                                  "updatedAt": {
                                    "type": "string",
                                    "readOnly": true,
                                    "format": "date-time",
                                    "example": "2018-11-01T10:50:29.000+0000"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:compute:group"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/{groupId}/status": {
      "get": {
        "summary": "Get Elastigroup Status",
        "description": "Get status of Elastigroup cluster.",
        "operationId": "elastigroupAzureSpotVmsGetStatus",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "type": "string",
                                    "example": "ready",
                                    "enum": [
                                      "ready",
                                      "rolling",
                                      "replacing",
                                      "recycling"
                                    ]
                                  },
                                  "vms": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "vmName": {
                                          "type": "string",
                                          "example": "vm-12345"
                                        },
                                        "region": {
                                          "type": "string",
                                          "example": "eastus"
                                        },
                                        "vmSize": {
                                          "type": "string",
                                          "example": "standard_a1_v2"
                                        },
                                        "lifeCycle": {
                                          "type": "string",
                                          "example": "spot"
                                        },
                                        "os": {
                                          "type": "string",
                                          "example": "Linux"
                                        },
                                        "privateIp": {
                                          "type": "integer",
                                          "example": "192.0.0.1"
                                        },
                                        "publicIp": {
                                          "type": "integer",
                                          "example": "183.123.67.79"
                                        },
                                        "provisioningState": {
                                          "type": "string",
                                          "example": "succeeded"
                                        },
                                        "powerState": {
                                          "type": "string",
                                          "example": "running"
                                        },
                                        "createdAt": {
                                          "type": "string",
                                          "example": "2020-06-18T12:02:49.000Z"
                                        }
                                      }
                                    }
                                  },
                                  "suspendedProcesses": {
                                    "type": "array",
                                    "items": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "autoHealing"
                                          },
                                          "expiresAt": {
                                            "type": "string",
                                            "example": "2020-11-10T18:43:52.000Z"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "signalTimeout"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "autoScale"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "scaleDown"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "syncStrategy"
                                          },
                                          "expiresAt": {
                                            "type": "string",
                                            "example": "2020-11-10T17:43:52.000Z"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:compute:group:status"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/{groupId}/vmHealthiness": {
      "get": {
        "summary": "Vm Healthiness",
        "description": "Get a list of vms with health status.",
        "operationId": "elastigroupAzureVmHealthiness",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "groupId",
            "example": "sig-123123",
            "description": "Elastigroup's ID\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Vm Healthiness Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/group/sig-123123/vmHealthiness"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "vmName": {
                                    "type": "string",
                                    "description": "Vm Name",
                                    "example": "vm-123456789"
                                  },
                                  "lifeCycle": {
                                    "type": "string",
                                    "description": "Life Cycle",
                                    "enum": [
                                      "SPOT",
                                      "ON_DEMAND"
                                    ],
                                    "example": "SPOT"
                                  },
                                  "healthStatus": {
                                    "type": "string",
                                    "description": "Health Status",
                                    "enum": [
                                      "HEALTHY",
                                      "UNHEALTHY",
                                      "UNKNOWN"
                                    ],
                                    "example": "HEALTHY"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:compute:group:vmHealthiness"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/{groupId}/suspend": {
      "put": {
        "summary": "Suspend Group",
        "description": "Suspends the Group.\n",
        "operationId": "elastigroupAzureSpotVmsSuspend",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Create Elastigroup Azure Spot VMs Process Suspensions",
                    "required": [
                      "processes"
                    ],
                    "properties": {
                      "processes": {
                        "type": "array",
                        "description": "List of processes to create or update their suspensions\n",
                        "items": {
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Process name to create signal timeout\n",
                              "enum": [
                                "autoHealing",
                                "signalTimeout",
                                "autoScale",
                                "scaleDown",
                                "syncStrategy",
                                "preventiveReplacement"
                              ]
                            },
                            "ttlInMinutes": {
                              "type": "integer",
                              "minimum": 0,
                              "description": "The duration in minutes which the process is suspended for; \\\nif not provided, then it will remain suspended until resumed\n"
                            }
                          }
                        },
                        "example": [
                          {
                            "name": "autoHealing",
                            "ttlInMinute": 120
                          },
                          {
                            "name": "signalTimeout"
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Spot Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/group/sig-12345/suspend?accountId=act-123456789"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/{groupId}/resume": {
      "put": {
        "summary": "Resume Group",
        "description": "Resumes the Group.\n",
        "operationId": "elastigroupAzureSpotVmsResume",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Resume Elastigroup Azure Spot VMs processes",
                    "required": [
                      "processes"
                    ],
                    "properties": {
                      "processes": {
                        "type": "array",
                        "description": "List of processes to cancel their suspensions\n",
                        "items": {
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Process name to create signal timeout\n",
                              "enum": [
                                "autoHealing",
                                "signalTimeout",
                                "autoScale",
                                "scaleDown",
                                "syncStrategy",
                                "preventiveReplacement"
                              ]
                            }
                          }
                        },
                        "example": [
                          {
                            "name": "syncStrategy"
                          },
                          {
                            "name": "signalTimeout"
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Spot Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/group/sig-12345/resume?accountId=act-123456789"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/{groupId}/detachVms": {
      "put": {
        "summary": "Detach VMs",
        "description": "Scale down specific virtual machines in Elastigroup cluster.\n",
        "operationId": "elastigroupAzureSpotVmsDetachVms",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "vmsToDetach",
                  "shouldTerminateVms",
                  "shouldDecrementTargetCapacity"
                ],
                "type": "object",
                "properties": {
                  "vmsToDetach": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "vm-0fbd69f960db"
                    },
                    "description": "Array of virtual machine names to detach.\n"
                  },
                  "shouldTerminateVms": {
                    "type": "boolean",
                    "example": true,
                    "description": "Whether to terminate the VMs or not.\n"
                  },
                  "shouldDecrementTargetCapacity": {
                    "type": "boolean",
                    "example": true,
                    "description": "Prevent Elastigroup from scaling back to target capacity when virtual machines are detached.\n"
                  },
                  "drainingTimeout": {
                    "type": "string",
                    "example": 300,
                    "description": "The time in seconds to allow the virtual machine be be drained from incoming TCP connections and detached from MLB before terminating it.\n",
                    "default": 300
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "detachedVms": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "vmName": {
                                          "type": "string",
                                          "example": "vm-12345"
                                        },
                                        "region": {
                                          "type": "string",
                                          "example": "eastus"
                                        },
                                        "vmSize": {
                                          "type": "string",
                                          "example": "standard_a1_v2"
                                        },
                                        "lifeCycle": {
                                          "type": "string",
                                          "example": "spot"
                                        },
                                        "os": {
                                          "type": "string",
                                          "example": "Linux"
                                        },
                                        "privateIp": {
                                          "type": "integer",
                                          "example": "192.0.0.1"
                                        },
                                        "publicIp": {
                                          "type": "integer",
                                          "example": "183.123.67.79",
                                          "provisioningState": {
                                            "type": "string",
                                            "example": "succeeded"
                                          },
                                          "powerState": {
                                            "type": "string",
                                            "example": "detached"
                                          },
                                          "createdAt": {
                                            "type": "string",
                                            "example": "2020-06-18T12:02:49.000Z"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "newVms": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "vmName": {
                                          "type": "string",
                                          "example": "vm-56789"
                                        },
                                        "region": {
                                          "type": "string",
                                          "example": "eastus"
                                        },
                                        "vmSize": {
                                          "type": "string",
                                          "example": "standard_a1_v2"
                                        },
                                        "lifeCycle": {
                                          "type": "string",
                                          "example": "spot"
                                        },
                                        "os": {
                                          "type": "string",
                                          "example": "Linux"
                                        },
                                        "privateIp": {
                                          "type": "integer",
                                          "example": "192.0.0.1"
                                        },
                                        "publicIp": {
                                          "type": "integer",
                                          "example": "183.123.67.79"
                                        },
                                        "provisioningState": {
                                          "type": "string",
                                          "example": "succeeded"
                                        },
                                        "powerState": {
                                          "type": "string",
                                          "example": "running"
                                        },
                                        "createdAt": {
                                          "type": "string",
                                          "example": "2020-06-18T12:02:49.000Z"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:compute:group:detachVms"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/{groupId}/scale/down": {
      "put": {
        "summary": "Scale Down",
        "description": "Scale down virtual machines in Elastigroup cluster.\n",
        "operationId": "elastigroupAzureSpotVmsScaleDown",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "adjustment",
            "example": 5,
            "description": "Number of VMs to scale down\n",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1azure~1compute~1group~1%7BgroupId%7D~1status/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/{groupId}/scale/up": {
      "put": {
        "summary": "Scale Up",
        "description": "Scale up virtual machines in Elastigroup cluster.\n",
        "operationId": "elastigroupAzureSpotVmsScaleUp",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "adjustment",
            "example": 5,
            "description": "Number of VMs to scale up\n",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1azure~1compute~1group~1%7BgroupId%7D~1status/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/{groupId}/deployment": {
      "post": {
        "summary": "Start Deployment",
        "description": "Deploy the Elastigroup. This triggers a Blue/Green deployment that replaces the existing VMs in the Elastigroup.\n",
        "operationId": "elastigroupAzureSpotVmsCreateDeployment",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "deployment": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "readOnly": true,
                            "example": "sbgd-f331fb8e"
                          },
                          "groupId": {
                            "type": "string",
                            "readOnly": true,
                            "example": "sig-a7aa60cd"
                          },
                          "status": {
                            "type": "string",
                            "readOnly": true,
                            "example": "deploymentStart"
                          },
                          "currentBatch": {
                            "type": "integer",
                            "readOnly": true,
                            "example": 1
                          },
                          "numOfBatches": {
                            "type": "integer",
                            "readOnly": true,
                            "example": 2
                          },
                          "progress": {
                            "type": "object",
                            "readOnly": true,
                            "properties": {
                              "unit": {
                                "type": "string",
                                "example": "percentage"
                              },
                              "value": {
                                "type": "integer",
                                "example": 10
                              }
                            }
                          },
                          "updatedAt": {
                            "type": "string",
                            "readOnly": true,
                            "example": "2020-06-22T11:15:06.614Z"
                          },
                          "createdAt": {
                            "type": "string",
                            "readOnly": true,
                            "example": "2020-06-22T11:15:06.614Z"
                          },
                          "batchSizePercentage": {
                            "type": "integer",
                            "example": 50,
                            "writeOnly": true,
                            "description": "Indicates (in percentage) the batch size of the deployment (meaning, how many nodes to replace in each batch).\\\nCannot be null.\n",
                            "default": 25,
                            "minimum": 1,
                            "maximum": 100
                          },
                          "gracePeriod": {
                            "type": "integer",
                            "example": 300,
                            "writeOnly": true,
                            "description": "Indicates (in seconds) the timeout to wait until the node becomes healthy.\n",
                            "default": 600,
                            "minimum": 300
                          },
                          "batchMinHealthyPercentage": {
                            "type": "integer",
                            "example": 100,
                            "writeOnly": true,
                            "description": "Indicates the threshold of minimum healthy virtual machines in a single batch.\\\nIf the amount of healthy virtual machines in a single batch is under the threshold, the deployment will fail.\\\nThe value of the parameter should represent the number in percentage (%) of the batch.\n",
                            "default": 50,
                            "minimum": 1,
                            "maximum": 100
                          },
                          "drainingTimeout": {
                            "type": "integer",
                            "example": 120,
                            "writeOnly": true,
                            "description": "Indicates (in seconds) the timeout to drain the instances. Can be null.\\\nDefault - The Elastigroups draining time out or 120.\n",
                            "minimum": 0
                          },
                          "healthCheckTypes": {
                            "type": "array",
                            "enum": [
                              "vmState",
                              "applicationGateway"
                            ],
                            "example": [
                              "vmState"
                            ],
                            "writeOnly": true,
                            "description": "Define a health check type. Can be null.\\\nIf no value is set, the deployment will use the group's auto-healing health check.\n"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1azure~1compute~1group~1%7BgroupId%7D~1deployment/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get All Deployments",
        "description": "Get a list of all the deployments of a specific Elastigroup and the status of each one.\n",
        "operationId": "elastigroupAzureSpotVmsListGroupDeployment",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "LIMIT",
            "example": 14,
            "description": "Limits the number of deployments returned. Default: 5\n",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "SORT",
            "example": "createdAt:DESC",
            "description": "Field by which to sort the results. Default: createdAt:DESC\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1azure~1compute~1group~1%7BgroupId%7D~1deployment/post/requestBody/content/application~1json/schema/allOf/0/properties/deployment"
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:compute:group:deployment"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/{groupId}/deployment/{deploymentId}": {
      "get": {
        "summary": "Get Deployment",
        "description": "Get the status of a specific deployment.\n",
        "operationId": "elastigroupAzureSpotVmsDeploymentStatus",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "path",
            "name": "DEPLOYMENT_ID",
            "example": "sbgd-9876",
            "description": "The deployment ID you want to query.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1azure~1compute~1group~1%7BgroupId%7D~1deployment/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/{groupId}/deployment/{deploymentId}/details": {
      "get": {
        "summary": "Get Deployment Status",
        "description": "Get the detailed status of a specific deployment. This includes status details per batch and other information.\n",
        "operationId": "elastigroupAzureSpotVmsDeploymentStatusDetails",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "path",
            "name": "DEPLOYMENT_ID",
            "example": "sbgd-9876",
            "description": "The deployment ID you want to query.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "detailsOverview": {
                                    "type": "object",
                                    "properties": {
                                      "deploymentId": {
                                        "type": "string",
                                        "example": "sbgd-04c4658b"
                                      },
                                      "numberOfBatches": {
                                        "type": "integer",
                                        "example": 2
                                      },
                                      "currentBatch": {
                                        "type": "integer",
                                        "example": 2
                                      },
                                      "gracePeriod": {
                                        "type": "integer",
                                        "example": 2
                                      },
                                      "blueVms": {
                                        "type": "integer",
                                        "example": 2
                                      },
                                      "greenVms": {
                                        "type": "integer",
                                        "example": 1
                                      },
                                      "description": {
                                        "type": "string",
                                        "example": null
                                      },
                                      "errorMessage": {
                                        "type": "string",
                                        "example": null
                                      },
                                      "createdAt": {
                                        "type": "string",
                                        "example": "2020-06-18T05:33:18.000Z"
                                      },
                                      "healthCheck": {
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "example": "instanceState"
                                        }
                                      }
                                    }
                                  },
                                  "batches": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "batch": {
                                          "type": "integer",
                                          "example": 1
                                        },
                                        "blue": {
                                          "type": "object",
                                          "properties": {
                                            "vmName": {
                                              "type": "string",
                                              "example": "i-57ef3cf7a694"
                                            },
                                            "batchNum": {
                                              "type": "integer",
                                              "example": 1
                                            },
                                            "status": {
                                              "type": "string",
                                              "example": "detached"
                                            },
                                            "type": {
                                              "type": "string",
                                              "example": "old"
                                            },
                                            "updatedAt": {
                                              "type": "string",
                                              "example": "2020-06-18T11:16:58.000Z"
                                            }
                                          }
                                        },
                                        "green": {
                                          "type": "object",
                                          "properties": {
                                            "vmName": {
                                              "type": "string",
                                              "example": "i-f2a44ba41875"
                                            },
                                            "batchNum": {
                                              "type": "integer",
                                              "example": 1
                                            },
                                            "status": {
                                              "type": "string",
                                              "example": "detached"
                                            },
                                            "type": {
                                              "type": "string",
                                              "example": "old"
                                            },
                                            "updatedAt": {
                                              "type": "string",
                                              "example": "2020-06-18T11:16:58.000Z"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "events": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "type": "string",
                                          "example": "deploymentStart"
                                        },
                                        "eventType": {
                                          "type": "string",
                                          "example": "Batch 1 - Launching New instances"
                                        },
                                        "timestamp": {
                                          "type": "string",
                                          "example": "2020-06-18T05:33:18.000Z"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:compute:deployment:details"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/import/resourceGroup/{resourceGroupName}/scaleSet/{scaleSetName}": {
      "get": {
        "summary": "Import Group From Scale Set",
        "description": "Given a scale set, constructs a valid group configuration based on the scale set and returns it.",
        "operationId": "elastigroupAzureSpotVmsGetAScaleSet",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "example": "ExampleResourceGroup",
            "description": "Resource Group Name - Must be valid.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "scaleSetName",
            "example": "MyExampleScaleSetImport",
            "description": "Scale Set Name - Must be valid\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/group/import/resourceGroup/myResourceGroup/scaleSet/myScaleSet"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1azure~1compute~1group/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                              }
                            },
                            "kind": {
                              "example": "azure:compute:elastigroup:importScaleSet"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/import/resourceGroup/{resourceGroupName}/virtualMachine/{virtualMachineName}": {
      "get": {
        "summary": "Import Group From Virtual Machine",
        "description": "Given a virtual machine, constructs a valid group configuration based on the virtual machine and returns it.\n",
        "operationId": "elastigroupAzureSpotVmsImportFromVirtualMachine",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "example": "ExampleResourceGroup",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "virtualMachineName",
            "example": "MyExampleVirtualMachineImport",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/group/import/resourceGroup/myResourceGroup/scaleSet/myScaleSet"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1azure~1compute~1group/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                              }
                            },
                            "kind": {
                              "example": "azure:compute:elastigroup:importVirtualMachine"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/import/resourceGroup/{resourceGroupName}/loadBalancer/{loadBalancerName}/backendPool/{backendPoolName}": {
      "get": {
        "summary": "Import Group From Load Balancer",
        "description": "Given a load balancer, constructs a valid group configuration and returns it.\n",
        "operationId": "elastigroupAzureSpotVmsImportFromLoadBalancer",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "example": "ExampleResourceGroup",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "loadBalancerName",
            "example": "MyExampleLoadBalancerImport",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "backendPoolName",
            "example": "MyExampleBackendPoolName",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/group/import/resourceGroup/myResourceGroup/loadBalancer/myLoadBalancer/backendPool/myBackendPool"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1azure~1compute~1group/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                              }
                            },
                            "kind": {
                              "example": "azure:compute:group:importLoadBalancer"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/import/resourceGroup/{resourceGroupName}/applicationGateway/{applicationGatewayName}/backendPool/{backendPoolName}": {
      "get": {
        "summary": "Import Group From Application Gateway",
        "description": "Given an application gateway, constructs a valid group configuration and returns it.\n",
        "operationId": "elastigroupAzureSpotVmsImportFromApplicationGateway",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "example": "ExampleResourceGroup",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "applicationGatewayName",
            "example": "MyExampleApplicationGatewayImport",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "backendPoolName",
            "example": "MyExampleBackendPoolName",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/group/import/resourceGroup/myResourceGroup/applicationGateway/myApplicationGateway/backendPool/myBackendPool"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1azure~1compute~1group/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                              }
                            },
                            "kind": {
                              "example": "azure:compute:group:importApplicationGateway"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/vm/signal": {
      "post": {
        "summary": "Create VM Signal",
        "description": "The VM signal API is used for notifying Spot about the VM state so that Spot can act accordingly. Supported signals are vmReady – Whenever this signal is sent, Spot will register the instance to the relevant Load Balancer and Application Gateway. vmReadyToShutdown – When this signal is received after a vm is detached; we will immediately terminate the vm. You must define the expected signals for your Elastigroup in the group configuration.",
        "operationId": "elastigroupAzureSpotVmsCreateVMSignal",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "vmName",
                      "signalType"
                    ],
                    "properties": {
                      "vmName": {
                        "type": "string",
                        "example": "vm-123456",
                        "description": "The virtual machine ID the signal refers to.\n"
                      },
                      "signalType": {
                        "type": "string",
                        "enum": [
                          "vmReady",
                          "vmReadyToShutdown"
                        ],
                        "example": "vmReady",
                        "description": "The specific signal you want to trigger.\n"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "description": "Original request properties.\n",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "e593ff58-067d-4340-92f9-8b1c0bad70d7",
                              "description": "Unique identifier associated with this request.\n"
                            },
                            "url": {
                              "type": "string",
                              "description": "The URL that was used for the request.\n"
                            },
                            "method": {
                              "type": "string",
                              "description": "The HTTP **METHOD** used for the request.\n"
                            },
                            "timestamp": {
                              "type": "string",
                              "example": "2018-06-20T11:35:01.745Z",
                              "description": "When the request was received by Spot.\n"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "description": "Response package that includes status, type, and any relevant data.\n",
                          "properties": {
                            "status": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "integer",
                                  "example": 200,
                                  "description": "HTTP status code assigned to this response.\n"
                                },
                                "message": {
                                  "type": "string",
                                  "example": "OK",
                                  "description": "HTTP status message for the respective status code.\n"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/{groupId}/vm/{vmName}/protection": {
      "post": {
        "summary": "Virtual Machine Protection",
        "description": "Protect virtual machines in Elastigroup cluster.\n",
        "operationId": "elastigroupAzureSpotVmsProtect",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "path",
            "name": "vmName",
            "example": "i-f2a44ba41875",
            "description": "The virtual machine name to protect.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "ttlInMinutes",
            "example": 180,
            "description": "Specify a TTL (in minutes) for this protection, meaning, for how long the protection will be valid for. (If null, infinite protection)\n",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Set protection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "integer",
                              "example": 200
                            },
                            "message": {
                              "type": "string",
                              "example": "OK"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Virtual Machine Remove Protection",
        "description": "Un-Protect virtual machines in Elastigroup cluster.\n",
        "operationId": "elastigroupAzureSpotVmsUnProtect",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "path",
            "name": "vmName",
            "example": "i-f2a44ba41875",
            "description": "The virtual machine name to remove protection.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Remove protection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "integer",
                              "example": 200
                            },
                            "message": {
                              "type": "string",
                              "example": "OK"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/{groupId}/logs": {
      "get": {
        "summary": "Get Elastilog",
        "description": "You can fetch a Elastigroup's Elastilog via the Spot API, in order to be able to consume elastilog from various tools used for log storing and analyzing. Logs have retention of 3 months back from today, so minimal fromDate should be up to 3 months back at runtime.",
        "operationId": "elastigroupAzureSpotVmsGetElastigroupLogEntries",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/2"
          },
          {
            "in": "query",
            "name": "SEVERITY",
            "example": "WARN",
            "description": "Severity of log entries to extract.\n",
            "schema": {
              "type": "string",
              "enum": [
                "DEBUG",
                "WARN",
                "INFO",
                "ALL",
                "ERROR"
              ]
            }
          },
          {
            "in": "query",
            "name": "RESOURCE_ID",
            "example": "vm-12345678",
            "description": "Filter log extracted entires related to a specific resource id Default: Null\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "example": 500,
            "description": "Maximum number of lines to extract in a response. Max value allowed - 1000. Default is 500, if got null.\n",
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Elastigroup Wrapper",
                                "properties": {
                                  "message": {
                                    "type": "string",
                                    "example": "Successfully detached [vm-b4ab9da435aa]"
                                  },
                                  "severity": {
                                    "type": "string",
                                    "example": "INFO"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "example": "2020-07-16T16:46:49.000Z"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:ec2:group:log"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/statefulNode": {
      "post": {
        "summary": "Create Stateful Node",
        "description": "Create a new stateful node.",
        "operationId": "azureStatefulNodeCreate",
        "tags": [
          "Elastigroup Azure Stateful"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Create Azure Stateful Node",
                    "properties": {
                      "statefulNode": {
                        "type": "object",
                        "title": "Azure Stateful Node",
                        "required": "name region resourceGroupName strategy persistence compute",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "ssn-12345678",
                            "readOnly": true,
                            "description": "Azure Stateful Node ID\n"
                          },
                          "name": {
                            "type": "string",
                            "example": "Spot Stateful Node",
                            "description": "Azure stateful node name.\n"
                          },
                          "region": {
                            "type": "string",
                            "example": "westus2",
                            "description": "The Azure region your stateful node will be created in.\n"
                          },
                          "resourceGroupName": {
                            "type": "string",
                            "example": "spotResourceGroup",
                            "description": "Name of the Resource Group for stateful node.\n"
                          },
                          "description": {
                            "type": "string",
                            "example": "This is my example stateful node",
                            "description": "Describe your Azure stateful node.\n"
                          },
                          "strategy": {
                            "type": "object",
                            "title": "Stateful Node Strategy",
                            "description": "Strategy for stateful node.\n",
                            "required": [
                              "fallbackToOd"
                            ],
                            "properties": {
                              "preferredLifecycle": {
                                "type": "string",
                                "enum": [
                                  "od",
                                  "spot"
                                ],
                                "description": "The desired type of VM.\n",
                                "example": "od",
                                "default": "spot"
                              },
                              "signals": {
                                "type": "array",
                                "description": "The signals defined for the stateful node.\n",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "timeout"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "description": "The type of the signal defined for the stateful node.\n",
                                      "enum": [
                                        "vmReady",
                                        "vmReadyToShutdown"
                                      ],
                                      "example": "vmReady"
                                    },
                                    "timeout": {
                                      "type": "integer",
                                      "description": "The timeout in seconds to hold the vm until a signal is sent.\\\nIf no signal is sent the vm will be replaced (vmReady) or we will terminate the vm (vmReadyToShutdown) after the timeout.\n",
                                      "default": 1800,
                                      "minimum": 1,
                                      "example": 180
                                    }
                                  }
                                }
                              },
                              "fallbackToOd": {
                                "type": "Boolean",
                                "description": "In case of no spots available, Stateful Node will launch an On-demand instance instead\n",
                                "example": true
                              },
                              "drainingTimeout": {
                                "type": "integer",
                                "description": "Time (in seconds) to allow the VM be drained from incoming TCP connections and detached from MLB before terminating it during a scale down operation.\n",
                                "default": 120,
                                "minimum": 1,
                                "example": 30
                              },
                              "revertToSpot": {
                                "description": "Hold settings for strategy correction - replacing On-Demand for Spot VMs\n",
                                "type": "object",
                                "required": [
                                  "performAt"
                                ],
                                "properties": {
                                  "performAt": {
                                    "type": "string",
                                    "enum": [
                                      "timeWindow",
                                      "never",
                                      "always"
                                    ],
                                    "description": "Settings for maintenance strategy.\ndefault: \"always\"\n",
                                    "example": "timeWindow"
                                  }
                                }
                              },
                              "optimizationWindows": {
                                "type": "array",
                                "description": "Valid format: \"ddd:hh:mm-ddd:hh:mm (day:hour(0-23):minute(0-59))\", not empty if revertToSpot.performAt = timeWindow\n",
                                "example": [
                                  "Mon:03:00-Wed:02:30"
                                ]
                              }
                            }
                          },
                          "compute": {
                            "required": true,
                            "type": "object",
                            "title": "Stateful Node Compute",
                            "description": "Compute settings for stateful node.\n",
                            "properties": {
                              "os": {
                                "type": "string",
                                "enum": [
                                  "Linux",
                                  "Windows"
                                ],
                                "description": "Type of operating system.\n",
                                "example": "Linux"
                              },
                              "vmSizes": {
                                "type": "object",
                                "description": "Amount of time to be unhealthy before a replacement is triggered\n",
                                "required": [
                                  "odSizes",
                                  "spotSizes"
                                ],
                                "properties": {
                                  "odSizes": {
                                    "type": "array",
                                    "description": "Available On-Demand sizes.\n",
                                    "items": {
                                      "type": "string",
                                      "example": "standard_a1_v1"
                                    }
                                  },
                                  "spotSizes": {
                                    "type": "array",
                                    "description": "Available Spot-VM sizes.\n",
                                    "items": {
                                      "type": "string",
                                      "example": "standard_a2_v2"
                                    }
                                  },
                                  "preferredSpotSizes": {
                                    "type": "array",
                                    "description": "Prioritize Spot VM sizes when launching Spot VMs for the group.\n<a style=color:red>If set, must be a sublist of compute.vmSizes.spotSizes. </a>\n",
                                    "items": {
                                      "type": "string",
                                      "example": "standard_a2_v2"
                                    }
                                  }
                                }
                              },
                              "zones": {
                                "type": "array",
                                "description": "List of Azure Availability Zones in the defined region; If not defined, Virtual machines will be launched regionally.",
                                "items": {
                                  "enum": [
                                    1,
                                    2,
                                    3
                                  ],
                                  "type": "string",
                                  "example": 1
                                }
                              },
                              "preferredZones": {
                                "type": "array",
                                "description": "The AZs to prioritize when launching VMs./\nIf no markets are available in the Preferred AZs, VMs are launched in the non-preferred AZs.\n<a style=color:red>Must be a sublist of compute.zones.</a>\n",
                                "items": {
                                  "enum": [
                                    1,
                                    2,
                                    3
                                  ],
                                  "type": "string",
                                  "example": 1
                                }
                              },
                              "launchSpecification": {
                                "type": "object",
                                "required": [
                                  "image",
                                  "network"
                                ],
                                "properties": {
                                  "image": {
                                    "type": "object",
                                    "description": "The image definitions. An image is a template for creating new VMs.\n",
                                    "properties": {
                                      "marketplace": {
                                        "type": "object",
                                        "description": "Select an image from Azure's Marketplace image catalogue\\\nRequired if the custom image or gallery image are not specified.\n",
                                        "required": [
                                          "publisher",
                                          "offer",
                                          "sku",
                                          "version"
                                        ],
                                        "properties": {
                                          "publisher": {
                                            "type": "string",
                                            "description": "Image publisher.\n",
                                            "example": "OpenLogic"
                                          },
                                          "offer": {
                                            "type": "string",
                                            "description": "Image offer.\n",
                                            "example": "CentOS"
                                          },
                                          "sku": {
                                            "type": "string",
                                            "description": "Image Stock Keeping Unit, which is the specific version of the image.\n",
                                            "example": "7.3"
                                          },
                                          "version": {
                                            "type": "string",
                                            "description": "Image's version. if version not provided we use \"latest\"\n",
                                            "default": "lastest",
                                            "example": "7.3-1611"
                                          }
                                        }
                                      },
                                      "custom": {
                                        "type": "object",
                                        "description": "Custom image definitions. Required if marketplace image or gallery image are not specified.\n",
                                        "required": [
                                          "resourceGroupName",
                                          "name"
                                        ],
                                        "properties": {
                                          "resourceGroupName": {
                                            "type": "string",
                                            "description": "The resource group name for custom image.\n",
                                            "example": "spotinst-azure"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the custom image.\n",
                                            "example": "custom-image-name"
                                          }
                                        }
                                      },
                                      "gallery": {
                                        "title": "Gallery",
                                        "type": "object",
                                        "description": "Gallery image definitions. Required if custom image or marketplace image are not specified.\n",
                                        "required": [
                                          "resourceGroupName",
                                          "galleryName",
                                          "imageName",
                                          "versionName"
                                        ],
                                        "properties": {
                                          "resourceGroupName": {
                                            "title": "Resource Group Name",
                                            "description": "The resource group name for gallery image.\n",
                                            "type": "string",
                                            "example": "spotinst-azure"
                                          },
                                          "galleryName": {
                                            "title": "Gallery Name",
                                            "description": "Name of the gallery.\n",
                                            "type": "string",
                                            "example": "gallery-name"
                                          },
                                          "imageName": {
                                            "title": "Image Name",
                                            "description": "Name of the gallery image.\n",
                                            "type": "string",
                                            "example": "gallery-image-name"
                                          },
                                          "versionName": {
                                            "title": "Version",
                                            "description": "Image's version. Can be in the format x.x.x or 'latest'.\n",
                                            "type": "string",
                                            "example": "0.0.1"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "customData": {
                                    "type": "string",
                                    "format": "byte",
                                    "description": "This value will hold the YAML in base64 and will be executed upon VM launch.\n",
                                    "example": ""
                                  },
                                  "shutdownScript": {
                                    "type": "string",
                                    "format": "byte",
                                    "writeOnly": true,
                                    "example": "IyEvdXNyL2Jpbi9lbnYgYmFzaAoiR29vZGJ5ZSBvbGQgaW5zdGFuY2Ui",
                                    "description": "Shutdown script for the stateful node. Value should be passed as a string encoded at Base64 only\n"
                                  },
                                  "network": {
                                    "title": "Network",
                                    "description": "Define the Virtual Network and Subnet for your Stateful Node.",
                                    "type": "object",
                                    "required": [
                                      "resourceGroupName",
                                      "virtualNetworkName",
                                      "networkInterfaces"
                                    ],
                                    "properties": {
                                      "resourceGroupName": {
                                        "title": "Resource Group Name",
                                        "description": "Vnet Resource Group Name",
                                        "type": "string",
                                        "example": "subnetResourceGroup"
                                      },
                                      "virtualNetworkName": {
                                        "title": "Virtual Network Name",
                                        "description": "Virtual Network",
                                        "type": "string",
                                        "example": "vname"
                                      },
                                      "networkInterfaces": {
                                        "title": "Network Interfaces",
                                        "description": "Network Interfaces",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "isPrimary",
                                            "subnetName"
                                          ],
                                          "properties": {
                                            "isPrimary": {
                                              "title": "Is Primary Criteria",
                                              "description": "Defines whether the network interface is primary or not.",
                                              "type": "boolean",
                                              "example": true
                                            },
                                            "subnetName": {
                                              "title": "Subnet Name",
                                              "description": "Subnet name",
                                              "type": "string",
                                              "example": "testSubnet"
                                            },
                                            "assignPublicIp": {
                                              "title": "Assign Public IP",
                                              "description": "Assign public IP",
                                              "type": "boolean",
                                              "example": true
                                            },
                                            "publicIpSku": {
                                              "title": "Public Ip Sku",
                                              "description": "Required if assignPublicIp=true values=[STANDARD/BASIC]",
                                              "type": "string",
                                              "example": "STANDARD"
                                            },
                                            "networkSecurityGroup": {
                                              "title": "Network Security Group",
                                              "description": "Network Security Group",
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "title": "Name",
                                                  "description": "Requires valid security group name. Required if security group is specified.",
                                                  "type": "string",
                                                  "example": "test"
                                                },
                                                "resourceGroupName": {
                                                  "title": "Resource Group Name",
                                                  "description": "Requires valid resource group name. Required if security group is specified.",
                                                  "type": "string",
                                                  "example": "test"
                                                }
                                              }
                                            },
                                            "enableIPForwarding": {
                                              "title": "Enable IP Forwarding",
                                              "description": "Enable IP Forwarding",
                                              "type": "boolean",
                                              "example": true
                                            },
                                            "privateIpAddresses": {
                                              "type": "array",
                                              "description": "A list with unique items that every item is a valid IP",
                                              "items": {
                                                "type": "string",
                                                "example": [
                                                  "172.23.4.20"
                                                ]
                                              }
                                            },
                                            "additionalIpConfigurations": {
                                              "title": "Additional IP Configurations",
                                              "description": "Additional configuration of network interface",
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "privateIpAddressVersion",
                                                  "name"
                                                ],
                                                "properties": {
                                                  "name": {
                                                    "title": "Name",
                                                    "description": "Required if additionalConfiguration has been specified.",
                                                    "type": "string",
                                                    "example": "test"
                                                  },
                                                  "privateIpAddressVersion": {
                                                    "title": "Private IP Address Version",
                                                    "description": "Version of the private IP address",
                                                    "type": "string",
                                                    "enum": [
                                                      "IPv4",
                                                      "IPv6"
                                                    ],
                                                    "default": "IPv4",
                                                    "example": "IPv4"
                                                  }
                                                }
                                              }
                                            },
                                            "publicIps": {
                                              "description": "Defined a pool of Public Ips (from Azure), that will be associated to the network interface. We will associate one public ip per instance until the pool is exhausted, in which case, we will create a new one.",
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "resourceGroupName",
                                                  "name"
                                                ],
                                                "properties": {
                                                  "resourceGroupName": {
                                                    "description": "The resource group of the public ip.",
                                                    "type": "string",
                                                    "example": "resourceGroup"
                                                  },
                                                  "name": {
                                                    "description": "The name of the public ip.",
                                                    "type": "string",
                                                    "example": "name"
                                                  }
                                                }
                                              }
                                            },
                                            "applicationSecurityGroups": {
                                              "description": "List of Application Security Groups that will be associated to the primary ip configration of the network interface.",
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "resourceGroupName",
                                                  "name"
                                                ],
                                                "properties": {
                                                  "resourceGroupName": {
                                                    "description": "The resource group of the Application Security Group.",
                                                    "type": "string",
                                                    "example": "AsgResourceGroup"
                                                  },
                                                  "name": {
                                                    "description": "The name of the Application Security group",
                                                    "type": "string",
                                                    "example": "AsgName"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "login": {
                                    "type": "object",
                                    "description": "Set admin access for accessing your VMs. Password/SSH is required for Linux.\n",
                                    "required": [
                                      "userName"
                                    ],
                                    "properties": {
                                      "userName": {
                                        "type": "string",
                                        "description": "user name for admin access to VMs.\\\nLogin can be set:\n* for windows: compute.launchSpecification.login.password\n* for linux: compute.launchSpecification.login.sshPublicKey\n\nJust user name, without pwd or SSH key\n",
                                        "example": "spotinst"
                                      },
                                      "sshPublicKey": {
                                        "type": "string",
                                        "description": "SSH for admin access to Linux VMs.\\\nOptional for Linux.\n",
                                        "example": "ssh-rsa"
                                      },
                                      "password": {
                                        "type": "string",
                                        "writeOnly": true,
                                        "description": "Password for admin access to Windows VMs.\\\nRequired for Windows.\n"
                                      }
                                    }
                                  },
                                  "loadBalancersConfig": {
                                    "type": "object",
                                    "description": "Configure a Load Balancer.\n",
                                    "properties": {
                                      "loadBalancers": {
                                        "type": "array",
                                        "description": "Add a load balancer. For Azure Gateway, each Backend Pool is a separate load balancer.\n",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "resourceGroupName",
                                            "name",
                                            "backendPoolNames"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "The type of load balancer.\n",
                                              "enum": [
                                                "loadBalancer",
                                                "applicationGateway"
                                              ],
                                              "example": "loadBalancer"
                                            },
                                            "resourceGroupName": {
                                              "type": "string",
                                              "description": "The Resource Group name of the Load Balancer.\n",
                                              "example": "testResourceGroup"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the Application Gateway/Load Balancer\n",
                                              "example": "testLoadBalancer"
                                            },
                                            "loadBalancerSku": {
                                              "type": "string",
                                              "description": "* if type is LoadBalancer then possible values are:\n * “Standard\"\n * Basic”\n* if ApplicationGateway then possible values are:\n * “Standard_Large”\n * “Standard_Medium”\n * “Standard_Small”\n * “Standard_v2\n * “WAF_Large”\n * “WAF_Medium\"\n * “WAF_v2\"\n",
                                              "example": "Standard"
                                            },
                                            "backendPoolNames": {
                                              "type": "array",
                                              "description": "Name of the Backend Pool to register the Stateful Node VMs to.\\\nEach Backend Pool is a separate load balancer.\\\nRequired if Type is APPLICATION_GATEWAY.\n",
                                              "example": [
                                                "testBackendPool1",
                                                "testBackendPool2"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "tags": {
                                    "type": "array",
                                    "description": "Unique Key-Value pairs for all Stateful Node Resources.\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "tagKey": {
                                          "type": "string",
                                          "description": "Tag Key for Stateful Node Resources.\n",
                                          "example": "env"
                                        },
                                        "tagValue": {
                                          "type": "string",
                                          "description": "Tag Value for Stateful Node Resources.\n",
                                          "example": "staging"
                                        }
                                      }
                                    },
                                    "max": 44
                                  },
                                  "managedServiceIdentities": {
                                    "type": "array",
                                    "writeOnly": true,
                                    "description": "Add a user-assigned managed identity to the Stateful Node's VM.\n",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "resourceGroupName"
                                      ],
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "name of the managed identity\n",
                                          "example": "mySI2"
                                        },
                                        "resourceGroupName": {
                                          "type": "string",
                                          "description": "The Resource Group that the user-assigned managed identity resides in.\n",
                                          "example": "myResourceGroup"
                                        }
                                      }
                                    }
                                  },
                                  "extensions": {
                                    "type": "array",
                                    "description": "A list of objects for azure extensions.\n",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "type",
                                        "publisher",
                                        "apiVersion",
                                        "minorVersionAutoUpgrade"
                                      ],
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "Required on compute.launchSpecification.extensions object\n",
                                          "required": true,
                                          "example": "extensionName"
                                        },
                                        "type": {
                                          "type": "string",
                                          "required": true,
                                          "description": "Required on compute.launchSpecification.extensions object\n",
                                          "example": "customScript"
                                        },
                                        "publisher": {
                                          "type": "string",
                                          "description": "Required on compute.launchSpecification.extensions object\n",
                                          "required": true,
                                          "example": "Microsoft.Azure.Extensions"
                                        },
                                        "apiVersion": {
                                          "type": "string",
                                          "description": "The API version of the extension. Required if extension specified.\n",
                                          "example": "2.0"
                                        },
                                        "minorVersionAutoUpgrade": {
                                          "type": "boolean",
                                          "required": true,
                                          "description": "Required on compute.launchSpecification.extensions object\n",
                                          "example": true
                                        },
                                        "publicSettings": {
                                          "type": "object",
                                          "description": "Object for public settings\n"
                                        },
                                        "protectedSettings": {
                                          "type": "object",
                                          "description": "Object for protected settings\n"
                                        }
                                      }
                                    }
                                  },
                                  "dataDisks": {
                                    "type": "array",
                                    "description": "The definitions of data disks that will be created and attached to the stateful node's VM.\n",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "sizeGB",
                                        "lun",
                                        "type"
                                      ],
                                      "properties": {
                                        "sizeGB": {
                                          "type": "integer",
                                          "description": "The size of the data disk in GB, required if dataDisks is specified.\n",
                                          "minimum": 1,
                                          "maximum": 1023,
                                          "example": 1
                                        },
                                        "lun": {
                                          "type": "integer",
                                          "description": "The LUN of the data disk.\n",
                                          "example": 1
                                        },
                                        "type": {
                                          "type": "string",
                                          "description": "The type of the data disk.\n",
                                          "enum": [
                                            "Standard_LRS",
                                            "Premium_LRS",
                                            "StandardSSD_LRS",
                                            "UltraSSD_LRS"
                                          ],
                                          "example": "Standard_LRS"
                                        }
                                      }
                                    },
                                    "min": 0,
                                    "max": 4
                                  },
                                  "osDisk": {
                                    "type": "object",
                                    "description": "Specify OS disk specification other than default.\n",
                                    "required": [
                                      "type"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "The type of the OS disk,\n",
                                        "enum": [
                                          "Standard_LRS",
                                          "Premium_LRS",
                                          "StandardSSD_LRS"
                                        ],
                                        "example": "Standard_LRS"
                                      },
                                      "sizeGB": {
                                        "type": "integer",
                                        "description": "The size of the data disk in GB.\n",
                                        "minimum": 1,
                                        "maximum": 1023,
                                        "example": 30
                                      }
                                    }
                                  },
                                  "secrets": {
                                    "title": "secrets",
                                    "type": "array",
                                    "description": "Set of certificates that should be installed on the VM\n",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "sourceVault",
                                        "vaultCertificates"
                                      ],
                                      "properties": {
                                        "sourceVault": {
                                          "type": "object",
                                          "description": "The key vault reference, contains the required certificates\n",
                                          "required": [
                                            "resourceGroupName",
                                            "name"
                                          ],
                                          "properties": {
                                            "resourceGroupName": {
                                              "type": "string",
                                              "required": true,
                                              "description": "The resource group name of the key vault\n"
                                            },
                                            "name": {
                                              "type": "string",
                                              "required": true,
                                              "description": "The name of the key vault\n"
                                            }
                                          }
                                        },
                                        "vaultCertificates": {
                                          "type": "array",
                                          "required": true,
                                          "description": "The required certificate references\n",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "certificateUrl": {
                                                "type": "string",
                                                "required": true,
                                                "description": "The URL of the certificate under the key vault\n"
                                              },
                                              "certificateStore": {
                                                "type": "string",
                                                "required": true,
                                                "description": "The certificate store directory the VM. The directory is created in the LocalMachine account.\n* This field is required only when using windows OS type\n* This field must be ‘null’ when the OS type is Linux\n"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "bootDiagnostics": {
                                    "type": "object",
                                    "description": "Will enable boot diagnostics in Azure when a new VM is launched",
                                    "properties": {
                                      "isEnabled": {
                                        "type": "boolean",
                                        "required": true,
                                        "description": "Allows you to enable and disable the configuration of boot diagnostics at launch",
                                        "example": true
                                      },
                                      "type": {
                                        "type": "string",
                                        "required": true,
                                        "description": "Defines the storage type on VM launch  in Azure.",
                                        "enum": [
                                          "managed",
                                          "unmanaged"
                                        ],
                                        "example": "managed"
                                      },
                                      "storageUri": {
                                        "type": "string",
                                        "description": "The storage URI that is used if a type is unmanaged. The storage URI must follow the blob storage URI format (\\\"https://<blobstoragename>.blob.core.windows.net/\\\"). StorageUri is required if the type is unmanaged. StorageUri must be ‘null’ in case the boot diagnostics type is managed.\n",
                                        "example": "https://example.blob.core.windows.net/"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "persistence": {
                            "type": "object",
                            "title": "Stateful Node Persistence",
                            "description": "Persistence settings for stateful node.\n",
                            "properties": {
                              "shouldPersistOsDisk": {
                                "type": "boolean",
                                "required": true,
                                "description": "Should persist os disk.\n",
                                "example": true
                              },
                              "osDiskPersistenceMode": {
                                "type": "string",
                                "enum": [
                                  "reattach",
                                  "onLaunch"
                                ],
                                "description": "The way persistency is handled in case of os disk persistence.\n",
                                "example": "onLaunch"
                              },
                              "shouldPersistDataDisks": {
                                "type": "boolean",
                                "required": true,
                                "description": "Should persist data disks.\n",
                                "example": true
                              },
                              "dataDisksPersistenceMode": {
                                "type": "string",
                                "enum": [
                                  "reattach",
                                  "onLaunch"
                                ],
                                "description": "The way persistency is handled in case of data disks persistence.\n",
                                "example": "reattach"
                              },
                              "shouldPersistNetwork": {
                                "type": "boolean",
                                "required": true,
                                "description": "Should persist network.\n",
                                "example": true
                              },
                              "shouldPersistVm": {
                                "type": "boolean",
                                "required": true,
                                "description": "Should persist vm.\n",
                                "example": false
                              }
                            }
                          },
                          "scheduling": {
                            "type": "object",
                            "title": "Stateful Node Scheduling",
                            "description": "Scheduling settings for stateful node.\n",
                            "properties": {
                              "tasks": {
                                "type": "array",
                                "description": "List of scheduled tasks to excute for the stateful node's.\n",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "isEnabled": {
                                      "type": "boolean",
                                      "description": "Is scheduled task enabled for stateful node.\n",
                                      "required": true,
                                      "example": true
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "The type of the scheduled task\n",
                                      "enum": [
                                        "pause",
                                        "resume",
                                        "recycle"
                                      ],
                                      "example": "recycle"
                                    },
                                    "cronExpression": {
                                      "type": "string",
                                      "description": "A expression which describes when to execute the scheduled task (UTC)\n",
                                      "example": "35 12 * * *"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "health": {
                            "type": "object",
                            "title": "Stateful Node Health",
                            "description": "Set the auto healing preferences for unhealthy VMs.\n",
                            "properties": {
                              "healthCheckTypes": {
                                "type": "array",
                                "description": "Healthcheck to use to validate VM health.\n",
                                "enum": [
                                  "vmState",
                                  "applicationGateway"
                                ],
                                "example": [
                                  "vmState"
                                ]
                              },
                              "gracePeriod": {
                                "type": "integer",
                                "description": "Period of time to wait for VM to reach healthiness before monitoring for unhealthiness.\n",
                                "example": 120,
                                "min": 0
                              },
                              "autoHealing": {
                                "type": "boolean",
                                "example": true,
                                "description": "Enable Autohealing of unhealthy VMs.\n"
                              },
                              "unhealthyDuration": {
                                "type": "integer",
                                "description": "Amount of time to be unhealthy before a replacement is triggered\n",
                                "example": 360,
                                "min": 120
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2022-01-01T00:00:00.000+0000"
                          },
                          "updatedAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2022-01-01T00:00:00.000+0000"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create Stateful Node Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/statefulNode/ssn-12345678"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1azure~1compute~1statefulNode/post/requestBody/content/application~1json/schema/allOf/0/properties/statefulNode"
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:statefulNode"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get All Stateful Nodes",
        "description": "Get the configurations of all stateful nodes in a specific account.",
        "operationId": "azureStatefulNodeGetAll",
        "tags": [
          "Elastigroup Azure Stateful"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "name",
            "example": "MyStatefulGroup",
            "description": "Filters to find the stateful node via a specific name.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "region",
            "example": "eastus",
            "description": "Filters to find all the stateful nodes in a specific region.\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List Stateful Node Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/statefulNode"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1azure~1compute~1statefulNode/post/requestBody/content/application~1json/schema/allOf/0/properties/statefulNode"
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:statefulNode"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/statefulNode/{nodeId}": {
      "get": {
        "summary": "Get Stateful Node",
        "description": "Get the configuration of an existing stateful node.\n",
        "operationId": "azureStatefulNodeGet",
        "tags": [
          "Elastigroup Azure Stateful"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "nodeId",
            "example": "ssn-12345678",
            "description": "The ID of the stateful node.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get Stateful Node Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/statefulNode/ssn-12345678"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1azure~1compute~1statefulNode/post/requestBody/content/application~1json/schema/allOf/0/properties/statefulNode"
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:statefulNode"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Stateful Node",
        "description": "Update an existing stateful node.\n",
        "operationId": "azureStatefulNodeUpdate",
        "tags": [
          "Elastigroup Azure Stateful"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1azure~1compute~1statefulNode~1%7BnodeId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Update Azure Stateful Node",
                    "properties": {
                      "statefulNode": {
                        "type": "object",
                        "title": "Azure Stateful Node",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "ssn-12345678",
                            "readOnly": true,
                            "description": "Azure Stateful Node ID\n"
                          },
                          "name": {
                            "type": "string",
                            "example": "Spot Stateful Node",
                            "description": "Azure Stateful Node Name\n"
                          },
                          "region": {
                            "type": "string",
                            "example": "westus2",
                            "readOnly": true,
                            "description": "The Azure region your Stateful Node will be created in.\n"
                          },
                          "resourceGroupName": {
                            "type": "string",
                            "example": "spotResourceGroup",
                            "readOnly": true,
                            "description": "Name of the Resource Group for Stateful Node.\n"
                          },
                          "description": {
                            "type": "string",
                            "example": "This is my example stateful node",
                            "description": "Describe your Azure Stateful Node\n"
                          },
                          "strategy": {
                            "type": "object",
                            "title": "Stateful Node Strategy",
                            "description": "Strategy for Stateful Node.\n",
                            "required": [
                              "fallbackToOd"
                            ],
                            "properties": {
                              "preferredLifecycle": {
                                "type": "string",
                                "enum": [
                                  "od",
                                  "spot"
                                ],
                                "description": "The desired type of VM.\n",
                                "example": "od",
                                "default": "spot"
                              },
                              "signals": {
                                "type": "array",
                                "description": "The signals defined for the stateful node.\n",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "timeout"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "description": "The type of the signal defined for the stateful node.\n",
                                      "enum": [
                                        "vmReady",
                                        "vmReadyToShutdown"
                                      ],
                                      "example": "vmReady"
                                    },
                                    "timeout": {
                                      "type": "integer",
                                      "description": "The timeout in seconds to hold the vm until a signal is sent.\\\nIf no signal is sent the vm will be replaced (vmReady) or we will terminate the vm (vmReadyToShutdown) after the timeout.\n",
                                      "default": 1800,
                                      "minimum": 1,
                                      "example": 180
                                    }
                                  }
                                }
                              },
                              "fallbackToOd": {
                                "type": "Boolean",
                                "description": "In case of no spots available, Stateful Node will launch an On-demand instance instead\n",
                                "example": true
                              },
                              "drainingTimeout": {
                                "type": "integer",
                                "description": "Time (in seconds) to allow the VM be drained from incoming TCP connections and detached from MLB before terminating it during a scale down operation.\n",
                                "default": 120,
                                "minimum": 1,
                                "example": 30
                              },
                              "revertToSpot": {
                                "description": "Hold settings for strategy correction - replacing On-Demand for Spot VMs\n",
                                "type": "object",
                                "required": [
                                  "performAt"
                                ],
                                "properties": {
                                  "performAt": {
                                    "type": "string",
                                    "enum": [
                                      "timeWindow",
                                      "never",
                                      "always"
                                    ],
                                    "description": "Settings for maintenance strategy.\ndefault: \"always\"\n",
                                    "example": "timeWindow"
                                  }
                                }
                              },
                              "optimizationWindows": {
                                "type": "array",
                                "description": "Valid format: \"ddd:hh:mm-ddd:hh:mm (day:hour(0-23):minute(0-59))\", not empty if revertToSpot.performAt = timeWindow\n",
                                "example": [
                                  "Mon:03:00-Wed:02:30"
                                ]
                              }
                            }
                          },
                          "compute": {
                            "required": true,
                            "type": "object",
                            "title": "Stateful Node Compute",
                            "description": "Compute settings for Stateful Node\n",
                            "properties": {
                              "os": {
                                "type": "string",
                                "enum": [
                                  "Linux",
                                  "Windows"
                                ],
                                "description": "Type of operating system.\n",
                                "example": "Linux"
                              },
                              "vmSizes": {
                                "type": "object",
                                "description": "Amount of time to be unhealthy before a replacement is triggered\n",
                                "required": [
                                  "odSizes",
                                  "spotSizes"
                                ],
                                "properties": {
                                  "odSizes": {
                                    "type": "array",
                                    "description": "Available On-Demand sizes.\n",
                                    "items": {
                                      "type": "string",
                                      "example": "standard_a1_v1"
                                    }
                                  },
                                  "spotSizes": {
                                    "type": "array",
                                    "description": "Available Spot-VM sizes.\n",
                                    "items": {
                                      "type": "string",
                                      "example": "standard_a2_v2"
                                    }
                                  },
                                  "preferredSpotSizes": {
                                    "type": "array",
                                    "description": "Prioritize Spot VM sizes when launching Spot VMs for the group.\n<a style=color:red>If set, must be a sublist of compute.vmSizes.spotSizes. </a>\n",
                                    "items": {
                                      "type": "string",
                                      "example": "standard_a2_v2"
                                    }
                                  }
                                }
                              },
                              "zones": {
                                "type": "array",
                                "description": "List of Azure Availability Zones in the defined region; If not defined, Virtual machines will be launched regionally.",
                                "items": {
                                  "enum": [
                                    1,
                                    2,
                                    3
                                  ],
                                  "type": "string",
                                  "example": 1
                                }
                              },
                              "preferredZones": {
                                "type": "array",
                                "description": "The AZs to prioritize when launching VMs./\nIf no markets are available in the Preferred AZs, VMs are launched in the non-preferred AZs.\n<a style=color:red>Must be a sublist of compute.zones.</a>\n",
                                "items": {
                                  "enum": [
                                    1,
                                    2,
                                    3
                                  ],
                                  "type": "string",
                                  "example": 1
                                }
                              },
                              "launchSpecification": {
                                "type": "object",
                                "required": [
                                  "image",
                                  "network"
                                ],
                                "properties": {
                                  "image": {
                                    "type": "object",
                                    "description": "Image of VM. An image is a template for creating new VMs.\n",
                                    "properties": {
                                      "marketplace": {
                                        "type": "object",
                                        "description": "Select an image from Azure's Marketplace image catalogue\\\nRequired if custom image or gallery image are not specified.\n",
                                        "required": [
                                          "publisher",
                                          "offer",
                                          "sku",
                                          "version"
                                        ],
                                        "properties": {
                                          "publisher": {
                                            "type": "string",
                                            "description": "Image publisher.\n",
                                            "example": "OpenLogic"
                                          },
                                          "offer": {
                                            "type": "string",
                                            "description": "Name of image to use.\n",
                                            "example": "CentOS"
                                          },
                                          "sku": {
                                            "type": "string",
                                            "description": "Image's Stock Keeping Unit, which is the specific version of the image.\n",
                                            "example": "7.3"
                                          },
                                          "version": {
                                            "type": "string",
                                            "description": "Image's version. if version not provided we use \"latest\"\n",
                                            "default": "lastest",
                                            "example": "7.3-1611"
                                          }
                                        }
                                      },
                                      "custom": {
                                        "type": "object",
                                        "description": "Custom image to launch Stateful Node with.\n",
                                        "required": [
                                          "resourceGroupName",
                                          "name"
                                        ],
                                        "properties": {
                                          "resourceGroupName": {
                                            "type": "string",
                                            "description": "Name of Resource Group for custom image.\n",
                                            "example": "spotinst-azure"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "Name of the custom image.\n",
                                            "example": "custom-image-name"
                                          }
                                        }
                                      },
                                      "gallery": {
                                        "title": "Gallery",
                                        "type": "object",
                                        "description": "Gallery image to launch Stateful Node with. Required if custom image or marketplace image are not specified.\n",
                                        "required": [
                                          "resourceGroupName",
                                          "galleryName",
                                          "imageName",
                                          "versionName"
                                        ],
                                        "properties": {
                                          "resourceGroupName": {
                                            "title": "Resource Group Name",
                                            "description": "Name of Resource Group for custom image\n",
                                            "type": "string",
                                            "example": "spotinst-azure"
                                          },
                                          "galleryName": {
                                            "title": "Gallery Name",
                                            "description": "Name of the gallery.\n",
                                            "type": "string",
                                            "example": "gallery-name"
                                          },
                                          "imageName": {
                                            "title": "Image Name",
                                            "description": "Name of the gallery image.\n",
                                            "type": "string",
                                            "example": "gallery-image-name"
                                          },
                                          "versionName": {
                                            "title": "Version",
                                            "description": "Image's version. Can be in the format x.x.x or 'latest'.\n",
                                            "type": "string",
                                            "example": "0.0.1"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "customData": {
                                    "type": "string",
                                    "format": "byte",
                                    "description": "This value will hold the YML in base64 and will be added to the scaleSets\n",
                                    "example": ""
                                  },
                                  "shutdownScript": {
                                    "type": "string",
                                    "format": "byte",
                                    "writeOnly": true,
                                    "example": "IyEvdXNyL2Jpbi9lbnYgYmFzaAoiR29vZGJ5ZSBvbGQgaW5zdGFuY2Ui",
                                    "description": "Shutdown script for the stateful node. Value should be passed as a string encoded at Base64 only\n"
                                  },
                                  "network": {
                                    "title": "Network",
                                    "description": "Define the Virtual Network and Subnet for your Stateful Node.",
                                    "type": "object",
                                    "required": [
                                      "resourceGroupName",
                                      "virtualNetworkName",
                                      "networkInterfaces"
                                    ],
                                    "properties": {
                                      "resourceGroupName": {
                                        "title": "Resource Group Name",
                                        "description": "Vnet Resource Group Name",
                                        "type": "string",
                                        "example": "subnetResourceGroup"
                                      },
                                      "virtualNetworkName": {
                                        "title": "Virtual Network Name",
                                        "description": "Virtual Network",
                                        "type": "string",
                                        "example": "vname"
                                      },
                                      "networkInterfaces": {
                                        "title": "Network Interfaces",
                                        "description": "Network Interfaces",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "isPrimary",
                                            "subnetName"
                                          ],
                                          "properties": {
                                            "isPrimary": {
                                              "title": "Is Primary Criteria",
                                              "description": "Defines whether the network interface is primary or not.",
                                              "type": "boolean",
                                              "example": true
                                            },
                                            "subnetName": {
                                              "title": "Subnet Name",
                                              "description": "Subnet name",
                                              "type": "string",
                                              "example": "testSubnet"
                                            },
                                            "assignPublicIp": {
                                              "title": "Assign Public IP",
                                              "description": "Assign public IP",
                                              "type": "boolean",
                                              "example": true
                                            },
                                            "publicIpSku": {
                                              "title": "Public Ip Sku",
                                              "description": "Required if assignPublicIp=true values=[STANDARD/BASIC]",
                                              "type": "string",
                                              "example": "STANDARD"
                                            },
                                            "networkSecurityGroup": {
                                              "title": "Network Security Group",
                                              "description": "Network Security Group",
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "title": "Name",
                                                  "description": "Requires valid security group name. Required if security group is specified.",
                                                  "type": "string",
                                                  "example": "test"
                                                },
                                                "resourceGroupName": {
                                                  "title": "Resource Group Name",
                                                  "description": "Requires valid resource group name. Required if security group is specified.",
                                                  "type": "string",
                                                  "example": "test"
                                                }
                                              }
                                            },
                                            "enableIPForwarding": {
                                              "title": "Enable IP Forwarding",
                                              "description": "Enable IP Forwarding",
                                              "type": "boolean",
                                              "example": true
                                            },
                                            "privateIpAddresses": {
                                              "type": "array",
                                              "description": "A list with unique items that every item is a valid IP",
                                              "items": {
                                                "type": "string",
                                                "example": [
                                                  "172.23.4.20"
                                                ]
                                              }
                                            },
                                            "additionalIpConfigurations": {
                                              "title": "Additional IP Configurations",
                                              "description": "Additional configuration of network interface",
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "privateIpAddressVersion",
                                                  "name"
                                                ],
                                                "properties": {
                                                  "name": {
                                                    "title": "Name",
                                                    "description": "Required if additionalConfiguration has been specified.",
                                                    "type": "string",
                                                    "example": "test"
                                                  },
                                                  "privateIpAddressVersion": {
                                                    "title": "Private IP Address Version",
                                                    "description": "Version of the private IP address",
                                                    "type": "string",
                                                    "enum": [
                                                      "IPv4",
                                                      "IPv6"
                                                    ],
                                                    "default": "IPv4",
                                                    "example": "IPv4"
                                                  }
                                                }
                                              }
                                            },
                                            "publicIps": {
                                              "description": "Defined a pool of Public Ips (from Azure), that will be associated to the network interface. We will associate one public ip per instance until the pool is exhausted, in which case, we will create a new one.",
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "resourceGroupName",
                                                  "name"
                                                ],
                                                "properties": {
                                                  "resourceGroupName": {
                                                    "description": "The resource group of the public ip.",
                                                    "type": "string",
                                                    "example": "resourceGroup"
                                                  },
                                                  "name": {
                                                    "description": "The name of the public ip.",
                                                    "type": "string",
                                                    "example": "name"
                                                  }
                                                }
                                              }
                                            },
                                            "applicationSecurityGroups": {
                                              "description": "List of Application Security Groups that will be associated to the primary ip configration of the network interface.",
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "resourceGroupName",
                                                  "name"
                                                ],
                                                "properties": {
                                                  "resourceGroupName": {
                                                    "description": "The resource group of the Application Security Group.",
                                                    "type": "string",
                                                    "example": "AsgResourceGroup"
                                                  },
                                                  "name": {
                                                    "description": "The name of the Application Security group",
                                                    "type": "string",
                                                    "example": "AsgName"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "login": {
                                    "type": "object",
                                    "description": "Set admin access for accessing your VMs. Password/SSH is required for Linux.\n",
                                    "required": [
                                      "userName"
                                    ],
                                    "properties": {
                                      "userName": {
                                        "type": "string",
                                        "description": "user name for admin access to VMs.\\\nLogin can be set:\n* for windows: compute.launchSpecification.login.password\n* for linux: compute.launchSpecification.login.sshPublicKey\n\nJust user name, without pwd or SSH key\n",
                                        "example": "spotinst"
                                      },
                                      "sshPublicKey": {
                                        "type": "string",
                                        "description": "SSH for admin access to Linux VMs.\\\nOptional for Linux.\n",
                                        "example": "ssh-rsa"
                                      },
                                      "password": {
                                        "type": "string",
                                        "writeOnly": true,
                                        "description": "Password for admin access to Windows VMs.\\\nRequired for Windows.\n"
                                      }
                                    }
                                  },
                                  "loadBalancersConfig": {
                                    "type": "object",
                                    "description": "Configure a Load Balancer.\n",
                                    "properties": {
                                      "loadBalancers": {
                                        "type": "array",
                                        "description": "Add a load balancer. For Azure Gateway, each Backend Pool is a separate load balancer.\n",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "resourceGroupName",
                                            "name",
                                            "backendPoolNames"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "The type of load balancer.\n",
                                              "enum": [
                                                "loadBalancer",
                                                "applicationGateway"
                                              ],
                                              "example": "loadBalancer"
                                            },
                                            "resourceGroupName": {
                                              "type": "string",
                                              "description": "The Resource Group name of the Load Balancer.\n",
                                              "example": "testResourceGroup"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the Application Gateway/Load Balancer\n",
                                              "example": "testLoadBalancer"
                                            },
                                            "loadBalancerSku": {
                                              "type": "string",
                                              "description": "* if type is LoadBalancer then possible values are:\n * “Standard\"\n * Basic”\n* if ApplicationGateway then possible values are:\n * “Standard_Large”\n * “Standard_Medium”\n * “Standard_Small”\n * “Standard_v2\n * “WAF_Large”\n * “WAF_Medium\"\n * “WAF_v2\"\n",
                                              "example": "Standard"
                                            },
                                            "backendPoolNames": {
                                              "type": "array",
                                              "description": "Name of the Backend Pool to register the Stateful Node VMs to.\\\nEach Backend Pool is a separate load balancer.\\\nRequired if Type is APPLICATION_GATEWAY.\n",
                                              "example": [
                                                "testBackendPool1",
                                                "testBackendPool2"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "tags": {
                                    "type": "array",
                                    "description": "Unique Key-Value pairs for all Stateful Node Resources.\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "tagKey": {
                                          "type": "string",
                                          "description": "Tag Key for Stateful Node Resources.\n",
                                          "example": "env"
                                        },
                                        "tagValue": {
                                          "type": "string",
                                          "description": "Tag Value for Stateful Node Resources.\n",
                                          "example": "staging"
                                        }
                                      }
                                    },
                                    "max": 44
                                  },
                                  "managedServiceIdentities": {
                                    "type": "array",
                                    "writeOnly": true,
                                    "description": "Add a user-assigned managed identity to the Stateful Node's VM.\n",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "resourceGroupName"
                                      ],
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "name of the managed identity\n",
                                          "example": "mySI2"
                                        },
                                        "resourceGroupName": {
                                          "type": "string",
                                          "description": "The Resource Group that the user-assigned managed identity resides in.\n",
                                          "example": "myResourceGroup"
                                        }
                                      }
                                    }
                                  },
                                  "extensions": {
                                    "type": "array",
                                    "description": "List of objects for azure extensions\n",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "type",
                                        "publisher",
                                        "apiVersion",
                                        "minorVersionAutoUpgrade"
                                      ],
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "Required on compute.launchSpecification.extensions object\n",
                                          "required": true,
                                          "example": "extensionName"
                                        },
                                        "type": {
                                          "type": "string",
                                          "required": true,
                                          "description": "Required on compute.launchSpecification.extensions object\n",
                                          "example": "customScript"
                                        },
                                        "publisher": {
                                          "type": "string",
                                          "description": "Required on compute.launchSpecification.extensions object\n",
                                          "required": true,
                                          "example": "Microsoft.Azure.Extensions"
                                        },
                                        "apiVersion": {
                                          "type": "string",
                                          "description": "The API version of the extension. Required if extension specified.\n",
                                          "example": "2.0"
                                        },
                                        "minorVersionAutoUpgrade": {
                                          "type": "boolean",
                                          "required": true,
                                          "description": "Required on compute.launchSpecification.extensions object\n",
                                          "example": true
                                        },
                                        "publicSettings": {
                                          "type": "object",
                                          "description": "Object for public settings\n"
                                        },
                                        "protectedSettings": {
                                          "type": "object",
                                          "description": "Object for protected settings\n"
                                        }
                                      }
                                    }
                                  },
                                  "dataDisks": {
                                    "type": "array",
                                    "description": "list of data disks to be attached to the stateful node's vm.\n",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "sizeGB",
                                        "lun",
                                        "type"
                                      ],
                                      "properties": {
                                        "sizeGB": {
                                          "type": "integer",
                                          "description": "The size of the data disk in GB, Required if dataDisks is specified.\n",
                                          "minimum": 1,
                                          "maximum": 1023,
                                          "example": 1
                                        },
                                        "lun": {
                                          "type": "integer",
                                          "description": "The lun of the data disk.\n",
                                          "example": 1
                                        },
                                        "type": {
                                          "type": "string",
                                          "description": "The type of the data disk\n",
                                          "enum": [
                                            "Standard_LRS",
                                            "Premium_LRS",
                                            "StandardSSD_LRS",
                                            "UltraSSD_LRS"
                                          ],
                                          "example": "Standard_LRS"
                                        }
                                      }
                                    },
                                    "min": 0,
                                    "max": 4
                                  },
                                  "osDisk": {
                                    "type": "object",
                                    "description": "Specify OS disk specification other than default.\n",
                                    "required": [
                                      "type"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "The type of the OS disk,\n",
                                        "enum": [
                                          "Standard_LRS",
                                          "Premium_LRS",
                                          "StandardSSD_LRS"
                                        ],
                                        "example": "Standard_LRS"
                                      },
                                      "sizeGB": {
                                        "type": "integer",
                                        "description": "The size of the data disk in GB.\n",
                                        "minimum": 1,
                                        "maximum": 1023,
                                        "example": 30
                                      }
                                    }
                                  },
                                  "secrets": {
                                    "title": "secrets",
                                    "type": "array",
                                    "description": "Set of certificates that should be installed on the VM\n",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "sourceVault",
                                        "vaultCertificates"
                                      ],
                                      "properties": {
                                        "sourceVault": {
                                          "type": "object",
                                          "description": "The key vault reference, contains the required certificates\n",
                                          "required": [
                                            "resourceGroupName",
                                            "name"
                                          ],
                                          "properties": {
                                            "resourceGroupName": {
                                              "type": "string",
                                              "required": true,
                                              "description": "The resource group name of the key vault\n"
                                            },
                                            "name": {
                                              "type": "string",
                                              "required": true,
                                              "description": "The name of the key vault\n"
                                            }
                                          }
                                        },
                                        "vaultCertificates": {
                                          "type": "array",
                                          "required": true,
                                          "description": "The required certificate references\n",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "certificateUrl": {
                                                "type": "string",
                                                "required": true,
                                                "description": "The URL of the certificate under the key vault\n"
                                              },
                                              "certificateStore": {
                                                "type": "string",
                                                "required": true,
                                                "description": "The certificate store directory the VM. The directory is created in the LocalMachine account.\n* This field is required only when using windows OS type\n* This field must be ‘null’ when the OS type is Linux\n"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "bootDiagnostics": {
                                    "type": "object",
                                    "description": "Will enable boot diagnostics in Azure when a new VM is launched",
                                    "properties": {
                                      "isEnabled": {
                                        "type": "boolean",
                                        "required": true,
                                        "description": "Allows you to enable and disable the configuration of boot diagnostics at launch",
                                        "example": true
                                      },
                                      "type": {
                                        "type": "string",
                                        "required": true,
                                        "description": "Defines the type of storage on VM launch  in Azure.",
                                        "enum": [
                                          "managed",
                                          "unmanaged"
                                        ],
                                        "example": "managed"
                                      },
                                      "storageUri": {
                                        "type": "string",
                                        "description": "The storage URI that is used if type is unmanaged. The storage URI must follow the blob storage URI format (\"https://<blobstoragename>.blob.core.windows.net/\"). StorageUri is required if the type is unmanaged. StorageUri must be ‘null’ in case the boot diagnostics type is managed",
                                        "example": "https://example.blob.core.windows.net/"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "persistence": {
                            "type": "object",
                            "title": "Stateful Node Persistence",
                            "description": "Persistence settings for stateful node\n",
                            "properties": {
                              "shouldPersistOsDisk": {
                                "type": "boolean",
                                "required": true,
                                "description": "Should persist os disk.\n",
                                "example": true
                              },
                              "osDiskPersistenceMode": {
                                "type": "string",
                                "enum": [
                                  "reattach",
                                  "onLaunch"
                                ],
                                "description": "The way persistency is handled in case of os disk persistence.\n",
                                "example": "onLaunch"
                              },
                              "shouldPersistDataDisks": {
                                "type": "boolean",
                                "required": true,
                                "description": "Should persist data disks.\n",
                                "example": true
                              },
                              "dataDisksPersistenceMode": {
                                "type": "string",
                                "enum": [
                                  "reattach",
                                  "onLaunch"
                                ],
                                "description": "The way persistency is handled in case of data disks persistence.\n",
                                "example": "reattach"
                              },
                              "shouldPersistNetwork": {
                                "type": "boolean",
                                "required": true,
                                "description": "Should persist network.\n",
                                "example": true
                              },
                              "shouldPersistVm": {
                                "type": "boolean",
                                "required": true,
                                "description": "Should persist vm.\n",
                                "example": false
                              }
                            }
                          },
                          "scheduling": {
                            "type": "object",
                            "title": "Stateful Node Scheduling",
                            "description": "Scheduling settings for stateful node\n",
                            "properties": {
                              "tasks": {
                                "type": "array",
                                "description": "List of scheduled tasks to excute for the stateful node's.\n",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "isEnabled": {
                                      "type": "boolean",
                                      "description": "Is scheduled task enabled for stateful node.\n",
                                      "required": true,
                                      "example": true
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "The type of the scheduled task\n",
                                      "enum": [
                                        "pause",
                                        "resume",
                                        "recycle"
                                      ],
                                      "example": "recycle"
                                    },
                                    "cronExpression": {
                                      "type": "string",
                                      "description": "A expression which describes when to execute the scheduled task (UTC)\n",
                                      "example": "35 12 * * *"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "health": {
                            "type": "object",
                            "title": "Stateful Node Health",
                            "description": "Autohealing of unhealthy VM.\n",
                            "properties": {
                              "healthCheckTypes": {
                                "type": "array",
                                "description": "Healthcheck to use to validate VM health.\n",
                                "enum": [
                                  "vmState",
                                  "applicationGateway"
                                ],
                                "example": [
                                  "vmState"
                                ]
                              },
                              "gracePeriod": {
                                "type": "integer",
                                "description": "Period of time to wait for VM to reach healthiness before monitoring for unhealthiness.\n",
                                "example": 120,
                                "min": 0
                              },
                              "autoHealing": {
                                "type": "boolean",
                                "example": true,
                                "description": "Enable Autohealing of unhealthy VMs.\n"
                              },
                              "unhealthyDuration": {
                                "type": "integer",
                                "description": "Amount of time to be unhealthy before a replacement is triggered\n",
                                "example": 360,
                                "min": 120
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2022-01-01T00:00:00.000+0000"
                          },
                          "updatedAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2022-01-01T00:00:00.000+0000"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Stateful Node Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/statefulNode/ssn-12345678"
                            },
                            "method": {
                              "example": "UPDATE"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1azure~1compute~1statefulNode/post/requestBody/content/application~1json/schema/allOf/0/properties/statefulNode"
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:statefulNode"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Stateful Node",
        "description": "Delete an existing stateful node from the account.\n",
        "operationId": "azureStatefulNodeDelete",
        "tags": [
          "Elastigroup Azure Stateful"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1azure~1compute~1statefulNode~1%7BnodeId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Delete Azure Stateful Node",
                    "properties": {
                      "deallocationConfig": {
                        "type": "object",
                        "title": "Delete Azure Stateful Node Configuration",
                        "required": "shouldTerminateVm",
                        "properties": {
                          "shouldTerminateVm": {
                            "type": "boolean",
                            "description": "Indicates whether to delete the stateful node's VM.\n",
                            "example": true
                          },
                          "networkDeallocationConfig": {
                            "type": "object",
                            "title": "Network Deallocation Config",
                            "description": "Network Deallocation Configuration.\n",
                            "properties": {
                              "shouldDeallocate": {
                                "type": "boolean",
                                "required": true,
                                "description": "Indicates whether to delete the stateful node's network resources.\n",
                                "example": true
                              },
                              "ttlInHours": {
                                "type": "integer",
                                "description": "Hours to keep the resource alive before deletion.\n",
                                "example": 1,
                                "min": 0,
                                "max": 371
                              }
                            }
                          },
                          "diskDeallocationConfig": {
                            "type": "object",
                            "title": "Disk Deallocation Config",
                            "description": "Disk Deallocation Configuration.\n",
                            "properties": {
                              "shouldDeallocate": {
                                "type": "boolean",
                                "required": true,
                                "description": "Indicates whether to delete the stateful node's disk resources.\n",
                                "example": true
                              },
                              "ttlInHours": {
                                "type": "integer",
                                "description": "Hours to keep the resource alive before deletion.\n",
                                "example": 1,
                                "min": 0,
                                "max": 371
                              }
                            }
                          },
                          "snapshotDeallocationConfig": {
                            "type": "object",
                            "title": "Snapshot Deallocation Config",
                            "description": "Snapshot Deallocation Configuration.\n",
                            "properties": {
                              "shouldDeallocate": {
                                "type": "boolean",
                                "required": true,
                                "description": "Indicates whether to delete the stateful node's snapshot resources.\n",
                                "example": true
                              },
                              "ttlInHours": {
                                "type": "integer",
                                "description": "Hours to keep the resource alive before deletion.\n",
                                "example": 1,
                                "min": 0,
                                "max": 371
                              }
                            }
                          },
                          "publicIpDeallocationConfig": {
                            "type": "object",
                            "title": "Public IP Deallocation Config",
                            "description": "Public IP Deallocation Configuration.\n",
                            "properties": {
                              "shouldDeallocate": {
                                "type": "boolean",
                                "required": true,
                                "description": "Indicates whether to delete the stateful node's public ip resources.\n",
                                "example": true
                              },
                              "ttlInHours": {
                                "type": "integer",
                                "description": "Hours to keep the resource alive before deletion.\n",
                                "example": 1,
                                "min": 0,
                                "max": 371
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Delete Stateful Node Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/statefulNode/ssn-12345678"
                            },
                            "method": {
                              "example": "DELETE"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/statefulNode/{nodeId}/resources": {
      "get": {
        "summary": "Get Stateful Node Resources",
        "description": "Get the node's attached resources (storage and network interfaces).\n",
        "operationId": "azureStatefulNodeGetResources",
        "tags": [
          "Elastigroup Azure Stateful"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1azure~1compute~1statefulNode~1%7BnodeId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Get Stateful Node Resources Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/statefulNode/ssn-12345678/resources"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Stateful Node Resources",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "ssn-12345678",
                                    "description": "The Stateful Node ID.\n"
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "MyStatefulNode",
                                    "description": "The name of the disk.\n"
                                  },
                                  "resourceGroupName": {
                                    "type": "string",
                                    "example": "dataDiskResourceGroup",
                                    "description": "The resource group name of the stateful node.\n"
                                  },
                                  "network": {
                                    "type": "object",
                                    "title": "Stateful Node Network Resources",
                                    "description": "Stateful Node Network Resources.\n",
                                    "properties": {
                                      "virtualNetwork": {
                                        "type": "object",
                                        "title": "Stateful Node Virtual Network Resource",
                                        "description": "Stateful Node Virtual Network Resource.\n",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "MyVirtualNetwork",
                                            "description": "The name of the disk.\n"
                                          },
                                          "resourceGroupName": {
                                            "type": "string",
                                            "example": "virtualNetworkResourceGroup",
                                            "description": "The resource group name of the virtual network.\n"
                                          }
                                        }
                                      },
                                      "networkInterfaces": {
                                        "type": "array",
                                        "description": "Network Interfaces.\n",
                                        "items": {
                                          "type": "object",
                                          "title": "Stateful Node Network Instance Resources",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "example": "MyNetworkInterface",
                                              "description": "The name of the disk.\n"
                                            },
                                            "resourceGroupName": {
                                              "type": "string",
                                              "example": "networkInterfaceResourceGroup",
                                              "description": "The resource group name of the network interface.\n"
                                            },
                                            "isPrimary": {
                                              "type": "boolean",
                                              "example": true,
                                              "description": "Is the network interface primary.\n"
                                            },
                                            "networkSecurityGroup": {
                                              "type": "object",
                                              "title": "Stateful Node Network Security Group",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "example": "MyNetworkSecurityGroup",
                                                  "description": "The name of the disk.\n"
                                                },
                                                "resourceGroupName": {
                                                  "type": "string",
                                                  "example": "networkSecurityGroupResourceGroup",
                                                  "description": "The resource group name of the network interface.\n"
                                                }
                                              }
                                            },
                                            "ipConfigurations": {
                                              "type": "array",
                                              "description": "IP Configurations.\n",
                                              "items": {
                                                "type": "object",
                                                "title": "Stateful IP Configuration Resources",
                                                "properties": {
                                                  "name": {
                                                    "type": "string",
                                                    "example": "MyIPConfiguration",
                                                    "description": "The name of the disk.\n"
                                                  },
                                                  "isPrimary": {
                                                    "type": "boolean",
                                                    "example": true,
                                                    "description": "Is the network interface primary.\n"
                                                  },
                                                  "subnet": {
                                                    "type": "object",
                                                    "title": "Stateful Node Subnet Resource",
                                                    "properties": {
                                                      "name": {
                                                        "type": "string",
                                                        "example": "MyNetworkInterface",
                                                        "description": "The name of the disk.\n"
                                                      },
                                                      "resourceGroupName": {
                                                        "type": "string",
                                                        "example": "networkInterfaceResourceGroup",
                                                        "description": "The resource group name of the network interface.\n"
                                                      },
                                                      "addressPrefix": {
                                                        "type": "string",
                                                        "example": "addressPrefix",
                                                        "description": "The resource group name of the network interface.\n"
                                                      }
                                                    }
                                                  },
                                                  "publicIp": {
                                                    "type": "object",
                                                    "title": "Stateful Node Subnet Resource",
                                                    "properties": {
                                                      "name": {
                                                        "type": "string",
                                                        "example": "MyNetworkInterface",
                                                        "description": "The name of the disk.\n"
                                                      },
                                                      "resourceGroupName": {
                                                        "type": "string",
                                                        "example": "networkInterfaceResourceGroup",
                                                        "description": "The resource group name of the network interface.\n"
                                                      },
                                                      "ipAddress": {
                                                        "type": "string",
                                                        "example": "ipAddress",
                                                        "description": "The resource group name of the network interface.\n"
                                                      },
                                                      "skuName": {
                                                        "type": "string",
                                                        "example": "skuName",
                                                        "description": "The resource group name of the network interface.\n"
                                                      }
                                                    }
                                                  },
                                                  "privateIpAddress": {
                                                    "type": "string",
                                                    "example": "privateIpAddress",
                                                    "description": "Is the network interface primary.\n"
                                                  },
                                                  "privateIPAddressVersion": {
                                                    "type": "string",
                                                    "example": "privateIPAddressVersion",
                                                    "description": "Is the network interface primary.\n"
                                                  },
                                                  "privateIpAllocationMethod": {
                                                    "type": "string",
                                                    "example": "privateIpAllocationMethod",
                                                    "description": "Is the network interface primary.\n"
                                                  },
                                                  "applicationSecurityGroups": {
                                                    "type": "array",
                                                    "description": "IP Configurations.\n",
                                                    "items": {
                                                      "type": "object",
                                                      "title": "Stateful IP Configuration Resources",
                                                      "properties": {
                                                        "name": {
                                                          "type": "string",
                                                          "example": "MyIPConfiguration",
                                                          "description": "The name of the disk.\n"
                                                        },
                                                        "resourceGroupName": {
                                                          "type": "string",
                                                          "example": "networkSecurityGroupResourceGroup",
                                                          "description": "The resource group name of the network interface.\n"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "storage": {
                                    "type": "object",
                                    "title": "Stateful Node Storage Resources",
                                    "description": "Stateful Node Storage Resources.\n",
                                    "properties": {
                                      "osDisk": {
                                        "type": "object",
                                        "title": "Stateful Node Os Disk",
                                        "description": "Stateful Node Os Disk.\n",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "myOsDisk",
                                            "description": "The name of the os disk.\n"
                                          },
                                          "resourceGroupName": {
                                            "type": "string",
                                            "example": "myResourceGroup",
                                            "description": "The name of the resource group of the os disk.\n"
                                          },
                                          "osType": {
                                            "type": "string",
                                            "example": "Windows",
                                            "description": "The os type of the os disk.\n"
                                          },
                                          "storageAccountType": {
                                            "type": "string",
                                            "example": "virtualNetworkResourceGroup",
                                            "description": "The disk type.\n"
                                          },
                                          "sizeGB": {
                                            "type": "integer",
                                            "example": 1,
                                            "description": "The size of the os disk.\n"
                                          },
                                          "snapshot": {
                                            "type": "string",
                                            "example": "myOsSnapshot",
                                            "description": "The name of the os disk snapshot.\n"
                                          },
                                          "lastCompletedSnapshot": {
                                            "type": "string",
                                            "readOnly": true,
                                            "format": "date-time",
                                            "example": "2022-01-01T00:00:00.000+0000"
                                          }
                                        }
                                      },
                                      "dataDisks": {
                                        "type": "array",
                                        "description": "Data Disks.\n",
                                        "items": {
                                          "type": "object",
                                          "title": "Stateful Node Data Disk Resources",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "example": "MyDataDisk",
                                              "description": "The name of the disk.\n"
                                            },
                                            "resourceGroupName": {
                                              "type": "string",
                                              "example": "myDataDiskResourceGroup",
                                              "description": "The data disk resource group.\n"
                                            },
                                            "storageAccountType": {
                                              "type": "string",
                                              "example": "virtualNetworkResourceGroup",
                                              "description": "The storage account type.\n"
                                            },
                                            "sizeGB": {
                                              "type": "integer",
                                              "example": 1,
                                              "description": "The size of the data disk.\n"
                                            },
                                            "lun": {
                                              "type": "integer",
                                              "example": 1,
                                              "description": "The lun number of the data disk.\n"
                                            },
                                            "snapshot": {
                                              "type": "string",
                                              "example": "mySnapshot",
                                              "description": "The snapshot name for the data disk.\n"
                                            },
                                            "lastCompletedSnapshot": {
                                              "type": "string",
                                              "readOnly": true,
                                              "format": "date-time",
                                              "example": "2022-01-01T00:00:00.000+0000"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:statefulNode:resources"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/statefulNode/{nodeId}/status": {
      "get": {
        "summary": "Get Stateful Node Status",
        "description": "Get the status of a specific stateful node.",
        "operationId": "azureStatefulNodeGetStatus",
        "tags": [
          "Elastigroup Azure Stateful"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Get Stateful Node Status Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/statefulNode/ssn-12345678/status"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1azure~1compute~1statefulNode~1status/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:statefulNode:status"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/statefulNode/status": {
      "get": {
        "summary": "Get All Stateful Node Statuses",
        "description": "Get the statuses of all stateful nodes in a specific account.",
        "operationId": "azureStatefulNodeGetAllStatus",
        "tags": [
          "Elastigroup Azure Stateful"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "List Stateful Node Status Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/statefulNode/status"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Azure Stateful Node Status",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "ssn-12345678",
                                    "readOnly": true,
                                    "description": "Azure Stateful Node ID\n"
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "Spot Stateful Node",
                                    "description": "Azure Stateful Node Name\n"
                                  },
                                  "region": {
                                    "type": "string",
                                    "example": "westus2",
                                    "description": "The Azure region of the Stateful Node.\n"
                                  },
                                  "resourceGroupName": {
                                    "type": "string",
                                    "example": "spotResourceGroup",
                                    "description": "Name of the Resource Group of the Stateful Node.\n"
                                  },
                                  "status": {
                                    "type": "string",
                                    "example": "active",
                                    "description": "State of the Stateful Node.\n"
                                  },
                                  "vmName": {
                                    "type": "string",
                                    "example": "spot-12345678-vm",
                                    "description": "Azure Stateful Node's VM Name.\n"
                                  },
                                  "vmSize": {
                                    "type": "string",
                                    "example": "spot-12345678-vm",
                                    "description": "Type of the VM.\n"
                                  },
                                  "lifecycle": {
                                    "type": "string",
                                    "description": "The desired type of VM.\n",
                                    "example": "od"
                                  },
                                  "rollbackReason": {
                                    "type": "string",
                                    "description": "Reason to roll back\n",
                                    "example": "Failed to launch virtual machine in Azure."
                                  },
                                  "errorReason": {
                                    "type": "string",
                                    "description": "Error reason\n",
                                    "example": "Deallocate action failed. Please contact our support team."
                                  },
                                  "privateIp": {
                                    "type": "string",
                                    "example": "172.23.4.20",
                                    "description": "Private IP"
                                  },
                                  "publicIp": {
                                    "type": "string",
                                    "example": "172.23.4.20",
                                    "description": "Public IP"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "readOnly": true,
                                    "format": "date-time",
                                    "example": "2022-01-01T00:00:00.000+0000"
                                  },
                                  "updatedAt": {
                                    "type": "string",
                                    "readOnly": true,
                                    "format": "date-time",
                                    "example": "2022-01-01T00:00:00.000+0000"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:statefulNode:status"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/statefulNode/{nodeId}/state": {
      "put": {
        "summary": "Update Stateful Node State",
        "description": "Update the stateful node state.",
        "operationId": "azureStatefulNodeChangeState",
        "tags": [
          "Elastigroup Azure Stateful"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1azure~1compute~1statefulNode~1%7BnodeId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Change State Of Stateful Node",
                    "properties": {
                      "state": {
                        "type": "string",
                        "enum": [
                          "pause",
                          "resume",
                          "recycle"
                        ],
                        "title": "Stateful Node State Change",
                        "example": "pause"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Change State Of Stateful Node Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/statefulNode/ssn-12345678/state"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/statefulNode/resourceGroup/{resourceGroupName}/virtualMachine/{virtualMachineName}/importConfiguration": {
      "get": {
        "summary": "Get Stateful Node from an Azure VM",
        "description": "Get the configuration of a stateful node that was built from an Azure VM. This configuration is used for the [Import VM to a Stateful Node API](https://docs.spot.io/api/#operation/azureStatefulNodeImportVm).\n",
        "operationId": "azureStatefulNodeGetImportConfiguration",
        "tags": [
          "Elastigroup Azure Stateful"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "example": "importResourceGroup",
            "description": "Name of the Resource Group of the imported VM.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "virtualMachineName",
            "example": "spot-12345678-vm",
            "description": "Name of the imported VM.\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1azure~1compute~1statefulNode/post/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/statefulNode/import": {
      "post": {
        "summary": "Import VM to a Stateful Node",
        "description": "Import an Azure VM and create a stateful node by providing a node configuration.",
        "operationId": "azureStatefulNodeImportVm",
        "tags": [
          "Elastigroup Azure Stateful"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Import VM to a Stateful Node",
                    "properties": {
                      "statefulNodeImport": {
                        "type": "object",
                        "title": "Azure Import Stateful Node",
                        "required": "originalVmName resourceGroupName node",
                        "properties": {
                          "statefulImportId": {
                            "type": "string",
                            "example": "sin-12345678",
                            "readOnly": true,
                            "description": "Azure Import Stateful Node ID\n"
                          },
                          "originalVmName": {
                            "type": "string",
                            "example": "Spot Import Stateful Node",
                            "description": "Azure Import Stateful Node Name\n"
                          },
                          "resourceGroupName": {
                            "type": "string",
                            "example": "spotResourceGroup",
                            "description": "Name of the Resource Group for Stateful Node.\n"
                          },
                          "drainingTimeout": {
                            "type": "integer",
                            "example": 1,
                            "description": "Hours to keep resources alive\n",
                            "min": 0,
                            "max": 1800
                          },
                          "resourcesRetentionTime": {
                            "type": "integer",
                            "example": 1,
                            "description": "Hours to keep resources alive\n",
                            "min": 0,
                            "max": 731
                          },
                          "node": {
                            "required": true,
                            "$ref": "#/paths/~1azure~1compute~1statefulNode/post/requestBody/content/application~1json/schema/allOf/0"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Import Stateful Node Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/statefulNode/import"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1azure~1compute~1statefulNode~1import/post/requestBody/content/application~1json/schema/allOf/0/properties/statefulNodeImport"
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:stateful:import:node"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/statefulNode/import/{importId}/status": {
      "get": {
        "summary": "Get Stateful Node Import Status",
        "description": "Get the import process status of a stateful node.\n",
        "operationId": "azureStatefulNodeGetImportStatus",
        "tags": [
          "Elastigroup Azure Stateful"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "importId",
            "example": "sin-12345678",
            "description": "Import Id.\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Stateful Node Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/statefulNode/import/ssn-12345678/status"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Import Stateful Node",
                                "properties": {
                                  "statefulImportId": {
                                    "type": "string",
                                    "example": "sin-12345678",
                                    "description": "The Import Stateful Node Id.\n"
                                  },
                                  "statefulNodeId": {
                                    "type": "string",
                                    "example": "ssn-12345678",
                                    "description": "The Import Stateful Node Id.\n"
                                  },
                                  "vmName": {
                                    "type": "string",
                                    "example": "spot-12345678-spot",
                                    "description": "The name of the imported VM.\n"
                                  },
                                  "state": {
                                    "type": "string",
                                    "example": 1,
                                    "description": "State of the imported stateful node."
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:stateful:import:node"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/statefulNode/{nodeId}/dataDisk/attach": {
      "put": {
        "summary": "Attach Data Disk to Stateful Node",
        "description": "Create a new data disk and attche it to the stateful node.",
        "operationId": "azureStatefulNodeAttachDataDisk",
        "tags": [
          "Elastigroup Azure Stateful"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1azure~1compute~1statefulNode~1%7BnodeId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Attach Data Disk To Stateful Node",
                    "required": [
                      "dataDiskName",
                      "dataDiskResourceGroupName",
                      "sizeGB",
                      "storageAccountType"
                    ],
                    "properties": {
                      "dataDiskName": {
                        "type": "string",
                        "example": "MyDisk",
                        "description": "The name of the created data disk.\n"
                      },
                      "dataDiskResourceGroupName": {
                        "type": "string",
                        "example": "dataDiskResourceGroup",
                        "description": "The resource group name in which the data disk will be created.\n"
                      },
                      "sizeGB": {
                        "type": "integer",
                        "description": "The size of the data disk in GB, Required if dataDisks is specified.\n",
                        "minimum": 1,
                        "maximum": 1023,
                        "example": 1
                      },
                      "lun": {
                        "type": "integer",
                        "default": "ordinal",
                        "description": "The LUN of the data disk.\nIf not defined, the LUN will be set in order.\n",
                        "example": 1
                      },
                      "storageAccountType": {
                        "type": "string",
                        "description": "The type of the data disk.\n",
                        "enum": [
                          "Standard_LRS",
                          "Premium_LRS",
                          "StandardSSD_LRS",
                          "UltraSSD_LRS"
                        ],
                        "example": "Standard_LRS"
                      },
                      "zone": {
                        "type": "string",
                        "enum": [
                          1,
                          2,
                          3
                        ],
                        "example": 1,
                        "description": "The Availability Zone in which the data disk will be created. If not defined, the data disk will be created regionally."
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Attach Data Disk To Stateful Node Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/statefulNode/ssn-12345678/dataDisk/attach"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Azure Disk",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "MyDisk",
                                    "description": "The name of the disk.\n"
                                  },
                                  "resourceGroupName": {
                                    "type": "string",
                                    "example": "dataDiskResourceGroup",
                                    "description": "The resource group name of the disk.\n"
                                  },
                                  "region": {
                                    "type": "string",
                                    "example": "westus2",
                                    "description": "The Azure region of the disk.\n"
                                  },
                                  "zone": {
                                    "type": "string",
                                    "enum": [
                                      1,
                                      2,
                                      3
                                    ],
                                    "example": 1,
                                    "description": "Azure Availability Zone of the disk."
                                  },
                                  "size": {
                                    "type": "integer",
                                    "description": "The size of the disk in GB.\n",
                                    "example": 1
                                  },
                                  "lun": {
                                    "type": "integer",
                                    "default": "ordinal",
                                    "description": "The lun of the disk.\n",
                                    "example": 1
                                  },
                                  "accountType": {
                                    "type": "string",
                                    "description": "The type of the disk.\n",
                                    "enum": [
                                      "Standard_LRS",
                                      "Premium_LRS",
                                      "StandardSSD_LRS",
                                      "UltraSSD_LRS"
                                    ],
                                    "example": "Standard_LRS"
                                  },
                                  "managedBy": {
                                    "type": "string",
                                    "example": "spot-12345678-vm",
                                    "description": "The resource who manages the disk.\n"
                                  },
                                  "tags": {
                                    "type": "array",
                                    "description": "Unique Key-Value pairs.\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "tagKey": {
                                          "type": "string",
                                          "description": "Tag Key of the disk.\n",
                                          "example": "env"
                                        },
                                        "tagValue": {
                                          "type": "string",
                                          "description": "Tag Value for disk.\n",
                                          "example": "staging"
                                        }
                                      }
                                    },
                                    "max": 44
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:disk"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/statefulNode/{nodeId}/dataDisk/detach": {
      "put": {
        "summary": "Detach Data Disk From Stateful Node",
        "description": "Detach a data disk from a stateful node.",
        "operationId": "azureStatefulNodeDetachDataDisk",
        "tags": [
          "Elastigroup Azure Stateful"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1azure~1compute~1statefulNode~1%7BnodeId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Attach Data Disk To Stateful Node",
                    "required": [
                      "dataDiskName",
                      "dataDiskResourceGroupName",
                      "shouldDeallocate"
                    ],
                    "properties": {
                      "dataDiskName": {
                        "type": "string",
                        "example": "MyDisk",
                        "description": "The name of the created data disk.\n"
                      },
                      "dataDiskResourceGroupName": {
                        "type": "string",
                        "example": "dataDiskResourceGroup",
                        "description": "The resource group name in which the data disk exists.\n"
                      },
                      "shouldDeallocate": {
                        "type": "boolean",
                        "description": "Indicates whether to delete the data disk in addition to detach.\n",
                        "example": true
                      },
                      "ttlInHours": {
                        "type": "integer",
                        "default": 0,
                        "description": "Hours to keep the disk alive before deletion.\n",
                        "example": 1
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detach Data Disk From Stateful Node Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/statefulNode/ssn-12345678/dataDisk/detach"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/statefulNode/{nodeId}/log": {
      "get": {
        "summary": "Get Stateful Node Logs",
        "description": "Get the logs of a stateful node according to severity and time period filter parameters.",
        "operationId": "azureStatefulNodeLogs",
        "tags": [
          "Elastigroup Azure Stateful"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1azure~1compute~1statefulNode~1%7BnodeId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/2"
          },
          {
            "in": "query",
            "name": "severity",
            "example": "WARN",
            "description": "Severity of log entries to extract.\n",
            "schema": {
              "type": "string",
              "enum": [
                "DEBUG",
                "WARN",
                "INFO",
                "ALL",
                "ERROR"
              ]
            }
          },
          {
            "in": "query",
            "name": "resourceId",
            "example": "ssn-12345678",
            "description": "Filter log extracted entires related to a specific resource id\n",
            "default": null,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "example": 100,
            "default": 500,
            "description": "Maximum number of lines to extract in a response.\n",
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Logs Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/statefulNode/ssn-12345678/log"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Logs",
                                "properties": {
                                  "message": {
                                    "type": "string",
                                    "example": "Successfully created stateful node"
                                  },
                                  "severity": {
                                    "type": "string",
                                    "example": "INFO"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "example": "2022-01-01T00:00:00.000Z"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:statefulNode:logs"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/statefulNode/cost": {
      "get": {
        "summary": "Get All Stateful Node Costs",
        "description": "Get the total costs of a single stateful node/all stateful nodes and for a specific time period.",
        "operationId": "azureGetAggregatedCosts",
        "tags": [
          "Elastigroup Azure Stateful"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/2"
          },
          {
            "in": "query",
            "name": "ownerId",
            "example": "ssn-12345678",
            "description": "Aggregates costs and usage by stateful node.\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Aggregated Costs Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/statefulNode/cost"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Aggregated Costs",
                                "properties": {
                                  "usage": {
                                    "type": "object",
                                    "properties": {
                                      "spot": {
                                        "type": "object",
                                        "properties": {
                                          "hours": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 2781.758
                                          }
                                        }
                                      },
                                      "od": {
                                        "type": "object",
                                        "properties": {
                                          "hours": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 0
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "cost": {
                                    "type": "object",
                                    "properties": {
                                      "odCost": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 0
                                      },
                                      "spotPotentialCost": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 380.9154
                                      },
                                      "spotActualCost": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 118.7367
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:statefulNode:cost"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/statefulNode/cost/daily": {
      "get": {
        "summary": "Get All Stateful Node Aggregated Daily Costs",
        "description": "Get the total costs per day of a single stateful node/all stateful nodes and for a specific time period.",
        "operationId": "azureGetDailyAggregatedCosts",
        "tags": [
          "Elastigroup Azure Stateful"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/2"
          },
          {
            "in": "query",
            "name": "ownerId",
            "example": "ssn-12345678",
            "description": "Aggregates costs and usage daily by stateful node.\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Daily Aggregated Costs Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/statefulNode/cost/daily"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Daily Aggregated Costs",
                                "properties": {
                                  "usage": {
                                    "type": "object",
                                    "properties": {
                                      "spot": {
                                        "type": "object",
                                        "properties": {
                                          "hours": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 2781.758
                                          }
                                        }
                                      },
                                      "od": {
                                        "type": "object",
                                        "properties": {
                                          "hours": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 0
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "cost": {
                                    "type": "object",
                                    "properties": {
                                      "odCost": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 0
                                      },
                                      "spotPotentialCost": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 380.9154
                                      },
                                      "spotActualCost": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 118.7367
                                      },
                                      "day": {
                                        "type": "string",
                                        "readOnly": true,
                                        "format": "date-time",
                                        "example": "2022-01-01T00:00:00.000+0000"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:statefulNode:cost"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/statefulNode/sizeUsage/daily": {
      "get": {
        "summary": "Get Stateful Node Size Usage",
        "description": "Get the daily costs per VM size of a single stateful node/all stateful nodes and for a specific time period.",
        "operationId": "azureGetDailyVmSizeUsage",
        "tags": [
          "Elastigroup Azure Stateful"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/2"
          },
          {
            "in": "query",
            "name": "ownerId",
            "example": "ssn-12345678",
            "description": "Aggregates VM size usage daily by stateful node.\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Daily VM Size Usage Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/statefulNode/sizeUsage/daily"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Daily VM Size Usage",
                                "properties": {
                                  "day": {
                                    "type": "string",
                                    "readOnly": true,
                                    "format": "date-time",
                                    "example": "2022-01-01T00:00:00.000+0000"
                                  },
                                  "cpus": {
                                    "type": "integer",
                                    "example": 60
                                  },
                                  "lifeCycle": {
                                    "type": "string",
                                    "example": "spot"
                                  },
                                  "vmSize": {
                                    "type": "string",
                                    "example": "standard_a1_v2"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:stateful:dailySizeUsage"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/gce/group": {
      "get": {
        "summary": "List Elastigroups",
        "description": "List all GCP Elastigroups for a Spot Account\n",
        "operationId": "elastigroupGcpListAll",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1gcp~1gce~1group/post/requestBody/content/application~1json/schema/allOf/0"
                              }
                            },
                            "kind": {
                              "example": "spotinst:gcp:gce:group"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "summary": "Create Elastigroup",
        "description": "Create a new GCP Elastigroup",
        "operationId": "elastigroupGcpCreate",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Elastigroup Wrapper",
                    "required": [
                      "group"
                    ],
                    "properties": {
                      "group": {
                        "type": "object",
                        "title": "GCP Elastigroup",
                        "required": [
                          "capacity",
                          "compute"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "sig-1234567",
                            "readOnly": true,
                            "description": "GCP Elastigroup\n"
                          },
                          "name": {
                            "type": "string",
                            "example": "spotinst-group",
                            "description": "GCP Elastigroup Name\n"
                          },
                          "description": {
                            "type": "string",
                            "example": "Some GCP Elastigroup description",
                            "description": "Description for your GCP Elastigroup\n"
                          },
                          "capacity": {
                            "title": "Capacity Units",
                            "type": "object",
                            "required": [
                              "target",
                              "minimum",
                              "maximum"
                            ],
                            "properties": {
                              "target": {
                                "type": "integer",
                                "example": 8,
                                "description": "Current scale the Elastigroup will conform to.\n"
                              },
                              "minimum": {
                                "type": "integer",
                                "example": 2,
                                "description": "The Elastigroup will not set a target below this value.\n"
                              },
                              "maximum": {
                                "type": "integer",
                                "example": 20,
                                "description": "The Elastigroup will not set a target greater than this value.\n"
                              },
                              "unit": {
                                "type": "string",
                                "example": "instance",
                                "description": "The base capacity unit.\n"
                              }
                            }
                          },
                          "scheduling": {
                            "title": "Scheduling Object",
                            "type": "object",
                            "properties": {
                              "tasks": {
                                "title": "Tasks Array",
                                "type": "array",
                                "items": {
                                  "title": "Task Object",
                                  "type": "object",
                                  "properties": {
                                    "isEnabled": {
                                      "type": "boolean",
                                      "example": true
                                    },
                                    "taskType": {
                                      "type": "string",
                                      "example": "setCapacity"
                                    },
                                    "cronExpression": {
                                      "type": "string",
                                      "example": "1 10 * * *"
                                    },
                                    "targetCapacity": {
                                      "type": "integer",
                                      "example": 2
                                    },
                                    "minCapacity": {
                                      "type": "integer",
                                      "example": 1
                                    },
                                    "maxCapacity": {
                                      "type": "integer",
                                      "example": 3
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "strategy": {
                            "type": "object",
                            "title": "Elastigroup Strategy",
                            "required": [
                              "preemptiblePercentage",
                              "onDemandCount",
                              "fallbackToOd"
                            ],
                            "properties": {
                              "fallbackToOd": {
                                "type": "boolean",
                                "example": true
                              },
                              "optimizationWindows": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "format": "date-time",
                                  "example": [
                                    "Mon:01:00-Mon:02:00"
                                  ]
                                }
                              },
                              "provisioningModel": {
                                "type": "string",
                                "description": "Define the provisioning model of the launched instances\n",
                                "enum": [
                                  "SPOT",
                                  "PREEMPTIBLE"
                                ],
                                "default": "PREEMPTIBLE"
                              },
                              "revertToPreemptible": {
                                "required": [
                                  "performAt"
                                ],
                                "type": "object",
                                "properties": {
                                  "performAt": {
                                    "type": "string",
                                    "example": "timeWindow"
                                  }
                                }
                              },
                              "preemptiblePercentage": {
                                "type": "integer",
                                "example": 90,
                                "description": "percentage of Preemptible instances in the Elastigroup. The remaining percentage will be On-Demand instances.\n"
                              },
                              "onDemandCount": {
                                "type": "integer",
                                "example": 2,
                                "description": "the exact number of On-Demand instances required in the Elastigroup.\n"
                              },
                              "drainingTimeout": {
                                "example": 30,
                                "type": "integer",
                                "description": "The time in seconds, the instance is allowed to run while detached from the ELB.\n"
                              }
                            }
                          },
                          "compute": {
                            "type": "object",
                            "title": "Compute Object",
                            "required": [
                              "availabilityZones",
                              "subnets",
                              "launchSpecification"
                            ],
                            "properties": {
                              "launchSpecification": {
                                "type": "object",
                                "title": "Launch Specification Object",
                                "required": [
                                  "networkInterfaces",
                                  "disks"
                                ],
                                "properties": {
                                  "metadata": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string",
                                          "example": "environment"
                                        },
                                        "value": {
                                          "type": "string",
                                          "example": "production"
                                        }
                                      }
                                    }
                                  },
                                  "tags": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "example": [
                                        "prod1",
                                        "testingfeature"
                                      ]
                                    }
                                  },
                                  "backendServiceConfig": {
                                    "type": "object",
                                    "title": "backendServiceConfig Object",
                                    "properties": {
                                      "backendServices": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "backendServiceName"
                                          ],
                                          "properties": {
                                            "backendServiceName": {
                                              "type": "string",
                                              "example": "bserv-2"
                                            },
                                            "locationType": {
                                              "type": "string",
                                              "example": "global"
                                            },
                                            "scheme": {
                                              "type": "string",
                                              "example": null
                                            },
                                            "namedPorts": {
                                              "type": "object",
                                              "required": [
                                                "name",
                                                "ports"
                                              ],
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "example": "https"
                                                },
                                                "ports": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "integer",
                                                    "example": [
                                                      443,
                                                      8443
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "disks": {
                                    "type": "array",
                                    "title": "Disks array",
                                    "required": [
                                      "type",
                                      "diskSizeGb",
                                      "sourceImage"
                                    ],
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "deviceName": {
                                          "type": "string",
                                          "example": null
                                        },
                                        "initializeParams": {
                                          "type": "object",
                                          "properties": {
                                            "diskSizeGb": {
                                              "type": "integer",
                                              "example": 10
                                            },
                                            "diskType": {
                                              "type": "string",
                                              "example": "pd-standard"
                                            },
                                            "sourceImage": {
                                              "type": "string",
                                              "example": "https://www.googleapis.com/compute/v1/projects/test/global/images/docker-image-1"
                                            }
                                          }
                                        },
                                        "mode": {
                                          "type": "string",
                                          "example": "READ_WRITE"
                                        },
                                        "source": {
                                          "type": "string",
                                          "example": null
                                        },
                                        "type": {
                                          "type": "string",
                                          "example": "PERSISTENT"
                                        },
                                        "autoDelete": {
                                          "type": "boolean",
                                          "example": true
                                        },
                                        "boot": {
                                          "type": "boolean",
                                          "example": true
                                        },
                                        "interface": {
                                          "type": "string",
                                          "example": "SCSI"
                                        }
                                      }
                                    }
                                  },
                                  "networkInterfaces": {
                                    "title": "Network Interfaces array",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "network"
                                      ],
                                      "properties": {
                                        "network": {
                                          "type": "string",
                                          "example": "spot-network"
                                        },
                                        "projectId": {
                                          "type": "string",
                                          "example": "test-project"
                                        }
                                      }
                                    }
                                  },
                                  "startupScript": {
                                    "type": "string",
                                    "example": "IyEvYmluL2Jhc2gNCnRvdWNoIHRlc3Qiquwhq38"
                                  },
                                  "shutdownScript": {
                                    "type": "string",
                                    "example": null
                                  },
                                  "ipForwarding": {
                                    "type": "boolean",
                                    "example": false
                                  },
                                  "minCpuPlatform": {
                                    "type": "string",
                                    "example": "Intel Sandy Bridge"
                                  }
                                }
                              },
                              "instanceTypes": {
                                "type": "object",
                                "title": "On Demand & Preemptible Types Object",
                                "required": [
                                  "ondemand",
                                  "preemptible"
                                ],
                                "properties": {
                                  "ondemand": {
                                    "type": "string",
                                    "example": "n1-standard-1",
                                    "description": "The type of On Demand instances to utilize\n"
                                  },
                                  "preemptible": {
                                    "type": "array",
                                    "example": [
                                      "n1-standard-1",
                                      "n1-standard-2"
                                    ],
                                    "description": "The type of Preemptible instances to utilize\n"
                                  },
                                  "custom": {
                                    "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/put/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/compute/properties/instanceTypes/properties/custom"
                                  },
                                  "preferred": {
                                    "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/put/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/compute/properties/instanceTypes/properties/preferred"
                                  }
                                }
                              },
                              "availabilityZones": {
                                "type": "array",
                                "example": [
                                  "asia-east1-a",
                                  "asia-east1-b",
                                  "asia-east1-c"
                                ],
                                "description": "Availability zones for the group"
                              },
                              "preferredAvailabilityZones": {
                                "type": "array",
                                "example": [
                                  "asia-east1-a",
                                  "asia-east1-c"
                                ],
                                "description": "prioritize availability zones when launching instances for the group <a style=color:red>Must be a sublist of compute.availabilityZones.</a>"
                              },
                              "gpu": {
                                "type": "object",
                                "title": "CPU Object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "example": "nvidia-tesla-v100"
                                  },
                                  "count": {
                                    "type": "integer",
                                    "example": 1
                                  }
                                }
                              },
                              "subnets": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "region": {
                                      "type": "string",
                                      "example": "us-west1"
                                    },
                                    "subnetNames": {
                                      "type": "array",
                                      "example": [
                                        "private"
                                      ]
                                    }
                                  }
                                },
                                "description": "Subnets your group is associated with\n"
                              }
                            }
                          },
                          "scaling": {
                            "type": "object",
                            "title": "Scaling object",
                            "properties": {
                              "up": {
                                "type": "array",
                                "items": {
                                  "title": "Up scaling object",
                                  "type": "object",
                                  "properties": {
                                    "policyName": {
                                      "type": "string",
                                      "example": "scale_up_1"
                                    },
                                    "source": {
                                      "type": "string",
                                      "example": "stackdriver"
                                    },
                                    "metricName": {
                                      "type": "string",
                                      "example": "instance/disk/read_ops_count"
                                    },
                                    "statistic": {
                                      "type": "string",
                                      "example": "average"
                                    },
                                    "unit": {
                                      "type": "string",
                                      "example": "percent"
                                    },
                                    "threshold": {
                                      "type": "integer",
                                      "example": 10000
                                    },
                                    "namespace": {
                                      "type": "string",
                                      "example": "compute"
                                    },
                                    "period": {
                                      "type": "integer",
                                      "example": 300
                                    },
                                    "evaluationPeriods": {
                                      "type": "integer",
                                      "example": 1
                                    },
                                    "cooldown": {
                                      "type": "integer",
                                      "example": 300
                                    },
                                    "operator": {
                                      "type": "string",
                                      "example": "gte"
                                    },
                                    "dimensions": {
                                      "title": "Array of dimension objects",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "storage_type"
                                          },
                                          "value": {
                                            "type": "string",
                                            "example": "pd-standard"
                                          }
                                        }
                                      }
                                    },
                                    "action": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "example": "adjustment"
                                        },
                                        "adjustment": {
                                          "type": "integer",
                                          "example": 1
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "down": {
                                "type": "array",
                                "items": {
                                  "title": "Down scaling object",
                                  "type": "object",
                                  "properties": {
                                    "policyName": {
                                      "type": "string",
                                      "example": "scale_down_1"
                                    },
                                    "source": {
                                      "type": "string",
                                      "example": "stackdriver"
                                    },
                                    "metricName": {
                                      "type": "string",
                                      "example": "instance/disk/read_ops_count"
                                    },
                                    "statistic": {
                                      "type": "string",
                                      "example": "average"
                                    },
                                    "unit": {
                                      "type": "string",
                                      "example": "percent"
                                    },
                                    "threshold": {
                                      "type": "integer",
                                      "example": 10000
                                    },
                                    "namespace": {
                                      "type": "string",
                                      "example": "compute"
                                    },
                                    "period": {
                                      "type": "integer",
                                      "example": 300
                                    },
                                    "evaluationPeriods": {
                                      "type": "integer",
                                      "example": 1
                                    },
                                    "cooldown": {
                                      "type": "integer",
                                      "example": 300
                                    },
                                    "operator": {
                                      "type": "string",
                                      "example": "lte"
                                    },
                                    "dimensions": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "storage_type"
                                          },
                                          "value": {
                                            "type": "string",
                                            "example": "pd-standard"
                                          }
                                        }
                                      }
                                    },
                                    "action": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "example": "adjustment"
                                        },
                                        "adjustment": {
                                          "type": "integer",
                                          "example": 1
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "thirdPartiesIntegration": {
                            "title": "Third Parties Integration Object",
                            "type": "object",
                            "properties": {
                              "dockerSwarm": {
                                "title": "DockerSwarm ThirdPartiesIntegration Object",
                                "type": "object",
                                "properties": {
                                  "masterHost": {
                                    "type": "string",
                                    "example": "swarm1.swarm.com"
                                  },
                                  "masterPort": {
                                    "type": "integer",
                                    "example": 1234
                                  }
                                }
                              },
                              "gke": {
                                "title": "GKE ThirdPartiesIntegration Object",
                                "type": "object",
                                "properties": {
                                  "autoUpdate": {
                                    "type": "boolean",
                                    "example": true
                                  },
                                  "autoScale": {
                                    "type": "object",
                                    "properties": {
                                      "isEnabled": {
                                        "type": "boolean",
                                        "example": true
                                      },
                                      "isAutoConfig": {
                                        "type": "boolean",
                                        "example": false
                                      },
                                      "cooldown": {
                                        "type": "integer",
                                        "example": 300
                                      },
                                      "headroom": {
                                        "type": "object",
                                        "properties": {
                                          "cpuPerUnit": {
                                            "type": "integer",
                                            "example": 1
                                          },
                                          "memoryPerUnit": {
                                            "type": "integer",
                                            "example": 0
                                          },
                                          "numOfUnits": {
                                            "type": "integer",
                                            "example": 1
                                          }
                                        }
                                      },
                                      "down": {
                                        "type": "object",
                                        "properties": {
                                          "evaluationPeriods": {
                                            "type": "integer",
                                            "example": 5
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "clusterIdentifier": {
                                    "type": "string",
                                    "example": "gke-clust-1"
                                  },
                                  "location": {
                                    "type": "string",
                                    "example": "us-west1"
                                  }
                                }
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "example": "2020-10-16T09:03:23.000Z",
                            "format": "date-time",
                            "description": "The datetime the group was created.\n"
                          },
                          "updatedAt": {
                            "type": "string",
                            "example": "2020-10-16T09:03:23.000Z",
                            "format": "date-time",
                            "description": "The datetime the group was last updated.\n"
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "group": {
                        "type": "object",
                        "required": [
                          "name",
                          "strategy"
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/gce/group/{groupId}": {
      "get": {
        "summary": "Get Elastigroup",
        "description": "List all properties for single GCP Elastigroup\n",
        "operationId": "elastigroupGcpDescribe",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "groupId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "sig-12345",
            "description": "Elastigroup ID\n"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Elastigroup",
        "description": "Delete an Elastigroup GCP\n",
        "operationId": "elastigroupGcpDelete",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Spot Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Elastigroup",
        "description": "Update an GCP Elastigroup\n",
        "operationId": "elastigroupGcpUpdate",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "GCP Elastigroup Update",
                    "required": [
                      "group"
                    ],
                    "properties": {
                      "group": {
                        "type": "object",
                        "title": "GCP Elastigroup",
                        "description": "Elastigroup Configuration",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "spotinst-group",
                            "description": "GCP Elastigroup Name\n"
                          },
                          "description": {
                            "type": "string",
                            "example": "Some GCP Elastigroup description",
                            "description": "Description for your GCP Elastigroup\n"
                          },
                          "capacity": {
                            "title": "Capacity Units",
                            "description": "Update capacity settings",
                            "type": "object",
                            "properties": {
                              "target": {
                                "type": "integer",
                                "example": 8,
                                "description": "Current scale the Elastigroup will conform to.\n"
                              },
                              "minimum": {
                                "type": "integer",
                                "example": 2,
                                "description": "The Elastigroup will not set a target below this value.\n"
                              },
                              "maximum": {
                                "type": "integer",
                                "example": 20,
                                "description": "The Elastigroup will not set a target greater than this value.\n"
                              }
                            }
                          },
                          "scheduling": {
                            "title": "Scheduling Object",
                            "description": "Schedule tasks to execute, using CRON expressions.",
                            "type": "object",
                            "properties": {
                              "tasks": {
                                "title": "Tasks Array",
                                "description": "The scheduling tasks for the group.",
                                "type": "array",
                                "items": {
                                  "title": "Task Object",
                                  "type": "object",
                                  "required": [
                                    "taskType"
                                  ],
                                  "properties": {
                                    "isEnabled": {
                                      "title": "Is Enabled",
                                      "description": "Describes whether the task is enabled. When true the task should run when false it should not run.",
                                      "type": "boolean",
                                      "example": true
                                    },
                                    "taskType": {
                                      "title": "Is Enabled",
                                      "description": "The task type to run. / Valid Values: 'setCapacity'. Required on scheduling.tasks object.",
                                      "type": "string",
                                      "example": "setCapacity"
                                    },
                                    "cronExpression": {
                                      "title": "Cron Expression",
                                      "description": "A valid cron expression. For example : * * * * * .The cron is running in UTC time zone and is in Unix cron format Cron Expression Validator Script. Only one of ‘frequency’ or ‘cronExpression’ should be used at a time.",
                                      "type": "string",
                                      "example": "1 10 * * *"
                                    },
                                    "targetCapacity": {
                                      "title": "Target Capacity",
                                      "description": "The target capacity of the group",
                                      "type": "integer",
                                      "example": 2
                                    },
                                    "minCapacity": {
                                      "title": "Min Capacity",
                                      "description": "The min capacity of the group",
                                      "type": "integer",
                                      "example": 1
                                    },
                                    "maxCapacity": {
                                      "title": "Max Capacity",
                                      "description": "The max capacity of the group",
                                      "type": "integer",
                                      "example": 3
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "strategy": {
                            "type": "object",
                            "title": "Elastigroup Strategy",
                            "description": "Update strategy settings",
                            "properties": {
                              "fallbackToOd": {
                                "title": "Fallback To Od",
                                "description": "Activate Fallback to On-Demand. When provisioning an instance, if no Preemptible market is available, Fallback to On-Demand will provision an On-Demand instance to maintain the group capacity.",
                                "type": "boolean",
                                "example": true
                              },
                              "optimizationWindows": {
                                "type": "array",
                                "title": "Optimization Windows",
                                "description": "Set time window to perform the revert to preemptible. time windows must be at least 120 minutes. Format: DayInWeek:HH-DayInWeek:HH. Required when strategy.revertToPreemptible.performAt is 'timeWindow'",
                                "items": {
                                  "type": "string",
                                  "format": "date-time",
                                  "example": [
                                    "Mon:01:00-Mon:02:00"
                                  ]
                                }
                              },
                              "provisioningModel": {
                                "type": "string",
                                "description": "Define the provisioning model of the launched instances\n",
                                "enum": [
                                  "SPOT",
                                  "PREEMPTIBLE"
                                ]
                              },
                              "revertToPreemptible": {
                                "required": [
                                  "performAt"
                                ],
                                "type": "object",
                                "description": "Setting for revert to preemptible option",
                                "properties": {
                                  "performAt": {
                                    "title": "Perform At",
                                    "description": "Required on strategy.revertToPreemptible object",
                                    "enum": [
                                      "always",
                                      "never",
                                      "timeWindow"
                                    ],
                                    "type": "string",
                                    "example": "timeWindow"
                                  }
                                }
                              },
                              "preemptiblePercentage": {
                                "type": "integer",
                                "example": 90,
                                "description": "percentage of Preemptible instances in the Elastigroup. The remaining percentage will be On-Demand instances.\n"
                              },
                              "onDemandCount": {
                                "type": "integer",
                                "example": 2,
                                "description": "the exact number of On-Demand instances required in the Elastigroup.\n"
                              },
                              "drainingTimeout": {
                                "example": 30,
                                "type": "integer",
                                "description": "The time in seconds, the instance is allowed to run while detached from the ELB.\n"
                              }
                            }
                          },
                          "compute": {
                            "type": "object",
                            "title": "Compute Object",
                            "description": "Compute Configuration",
                            "properties": {
                              "health": {
                                "title": "Health",
                                "type": "object",
                                "description": "Set autohealing properties.",
                                "required": [
                                  "healthCheckType"
                                ],
                                "properties": {
                                  "healthCheckType": {
                                    "title": "Health Check Type",
                                    "description": "Required on compute.health object.",
                                    "type": "string",
                                    "example": "K8S_NODE"
                                  },
                                  "autoHealing": {
                                    "title": "Auto Healing",
                                    "description": "Enable Autohealing of unhealthy instances",
                                    "type": "boolean",
                                    "example": true
                                  },
                                  "gracePeriod": {
                                    "type": "string",
                                    "example": 300,
                                    "title": "Grace Period",
                                    "description": "Period of time to wait to reach healthiness before monitoring for unhealthiness. The time to wait after launch before the first health check."
                                  },
                                  "unhealthyDuration": {
                                    "type": "integer",
                                    "example": 250,
                                    "title": "Unhealthy Duration",
                                    "description": "Amount of time to be unhealthy before a replacement is triggered"
                                  }
                                }
                              },
                              "launchSpecification": {
                                "type": "object",
                                "title": "Launch Specification Object",
                                "description": "Update compute.launchSpecification settings",
                                "properties": {
                                  "metadata": {
                                    "title": "Metadata",
                                    "description": "An array of the following objects, representing Key-Value pair meta data for the created instances",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "title": "Key",
                                          "description": "The meta data’s key",
                                          "type": "string",
                                          "example": "environment"
                                        },
                                        "value": {
                                          "title": "Value",
                                          "description": "The meta data’s value",
                                          "type": "string",
                                          "example": "production"
                                        }
                                      }
                                    }
                                  },
                                  "tags": {
                                    "title": "Tags",
                                    "description": "Tags to mark instances created.",
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "example": [
                                        "prod1",
                                        "testingfeature"
                                      ]
                                    }
                                  },
                                  "backendServiceConfig": {
                                    "type": "object",
                                    "title": "backendServiceConfig Object",
                                    "description": "Configure Backend Services.",
                                    "properties": {
                                      "backendServices": {
                                        "type": "array",
                                        "title": "Backend Services",
                                        "description": "Configure the Backend Service to connect the Elastigroup to",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "backendServiceName"
                                          ],
                                          "properties": {
                                            "backendServiceName": {
                                              "title": "Backend Service Name",
                                              "description": "The name of the Backend Service. Required on compute.launchSpecification.backendServiceConfig.backendServices object",
                                              "type": "string",
                                              "example": "bserv-2"
                                            },
                                            "locationType": {
                                              "title": "Location Type",
                                              "description": "Which locations the backend service should be active. Possible values should be: 'regional' 'global'",
                                              "type": "string",
                                              "example": "global"
                                            },
                                            "scheme": {
                                              "title": "Scheme",
                                              "description": "In case the locationType is 'regional' we can set the traffic for the backend service, / between the instances in the vpc / traffic from the internet",
                                              "type": "string",
                                              "enum": [
                                                "INTERNAL",
                                                "EXTERNAL",
                                                "null"
                                              ],
                                              "example": null
                                            },
                                            "namedPorts": {
                                              "title": "Named Ports",
                                              "description": "Key-Value of port name and and port tuples.",
                                              "type": "object",
                                              "required": [
                                                "name",
                                                "ports"
                                              ],
                                              "properties": {
                                                "name": {
                                                  "title": "Name",
                                                  "description": "The name mapped to the port numbers that the Backend Service sends traffic through to the Elastigroup instances. The port name is mapped to one or more port numbers. Only one port name can selected per Backend Service. Required on compute.launchSpecification.backendServiceConfig.backendServices.namedPorts object",
                                                  "type": "string",
                                                  "example": "https"
                                                },
                                                "ports": {
                                                  "title": "Port",
                                                  "description": "The ports that the Backend Service sends traffic through to the Elastigroup instances. Required on compute.launchSpecification.backendServiceConfig.backendServices.namedPorts object",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "integer",
                                                    "example": [
                                                      443,
                                                      8443
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "disks": {
                                    "type": "array",
                                    "title": "Disks array",
                                    "description": "Array of disks associated with this instance. Persistent disks must be created before you can assign them",
                                    "required": [
                                      "sourceImage"
                                    ],
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "deviceName": {
                                          "title": "Device Name",
                                          "description": "Specifies a unique device name of your choice",
                                          "type": "string",
                                          "example": null
                                        },
                                        "initializeParams": {
                                          "title": "Initialize Params",
                                          "description": "Specifies the parameters for a new disk that will be created alongside the new instance. Use initialization parameters to create boot disks or local SSDs attached to the new instance",
                                          "type": "object",
                                          "properties": {
                                            "diskSizeGb": {
                                              "title": "Disk Size Gb",
                                              "description": "Specifies the size of the disk in base-2 GB",
                                              "type": "integer",
                                              "example": 10
                                            },
                                            "diskType": {
                                              "title": "Disk Type",
                                              "description": "Specifies the disk type to use to create the instance. the default is pd-standard. Valid values: pd-ssd, local-ssd",
                                              "type": "string",
                                              "example": "pd-standard"
                                            },
                                            "sourceImage": {
                                              "title": "Source Image",
                                              "description": "A source image used to create the disk. You can provide a private (custom) image, and Compute Engine will use the corresponding image from your project. Required for compute.launchSpecification.disks.initializeParams object",
                                              "type": "string",
                                              "example": "https://www.googleapis.com/compute/v1/projects/test/global/images/docker-image-1"
                                            }
                                          }
                                        },
                                        "mode": {
                                          "title": "Mode",
                                          "description": "The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If not specified, the default is to attach the disk in READ_WRITE mode",
                                          "type": "string",
                                          "example": "READ_WRITE"
                                        },
                                        "source": {
                                          "title": "Source",
                                          "description": "Specifies a valid partial or full URL to an existing Persistent Disk resource. This field is only applicable for persistent disks.",
                                          "type": "string",
                                          "example": null
                                        },
                                        "type": {
                                          "title": "Type",
                                          "description": "Specifies the type of the disk, either SCRATCH or PERSISTENT. If not specified, the default is PERSISTENT",
                                          "type": "string",
                                          "example": "PERSISTENT"
                                        },
                                        "autoDelete": {
                                          "title": "Auto Delete",
                                          "description": "Specifies whether the disk will be auto-deleted when the instance is deleted.",
                                          "type": "boolean",
                                          "example": true
                                        },
                                        "boot": {
                                          "title": "Boot",
                                          "description": "Indicates that this is a boot disk. The virtual machine will use the first partition of the disk for its root filesystem",
                                          "type": "boolean",
                                          "example": true
                                        },
                                        "interface": {
                                          "title": "Interface",
                                          "description": "Specifies the disk interface to use for attaching this disk, which is either SCSI or NVM. The default is SCSI",
                                          "type": "string",
                                          "example": "SCSI"
                                        }
                                      }
                                    }
                                  },
                                  "networkInterfaces": {
                                    "title": "Network Interfaces array",
                                    "description": "An array of the following objects, representing network configuration for the created instances",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "network"
                                      ],
                                      "properties": {
                                        "network": {
                                          "title": "Network",
                                          "description": "Network resource for this instance elastic for the created instances",
                                          "type": "string",
                                          "example": "spot-network"
                                        },
                                        "projectId": {
                                          "title": "Project ID",
                                          "description": "Use network resource from different project. set project ID to use it's network resource. This parameter relevant only If the network resource is in different project",
                                          "type": "string",
                                          "example": "test-project"
                                        }
                                      }
                                    }
                                  },
                                  "startupScript": {
                                    "title": "Startup Script",
                                    "description": "Create and run your own startup scripts on your virtual machines to perform automated tasks every time your instance boots up.",
                                    "type": "string",
                                    "example": "IyEvYmluL2Jhc2gNCnRvdWNoIHRlc3Qiquwhq38"
                                  },
                                  "shutdownScript": {
                                    "title": "Shutdown Script",
                                    "description": "The Base64-encoded shutdown script to execute prior to instance termination. For more information please see: Shutdown Script",
                                    "type": "string",
                                    "example": null
                                  },
                                  "ipForwarding": {
                                    "title": "IP Forwarding",
                                    "description": "IP Forwarding Criteria",
                                    "type": "boolean",
                                    "example": false
                                  },
                                  "minCpuPlatform": {
                                    "title": "Min Cpu Platform",
                                    "description": "Set instance CPU platform",
                                    "type": "string",
                                    "example": "Intel Sandy Bridge"
                                  }
                                }
                              },
                              "instanceTypes": {
                                "type": "object",
                                "title": "On Demand & Preemptible Types Object",
                                "description": "Instance Types Configuration",
                                "required": [
                                  "ondemand",
                                  "preemptible"
                                ],
                                "properties": {
                                  "ondemand": {
                                    "type": "string",
                                    "example": "n1-standard-1",
                                    "description": "The type of On Demand instances to utilize\n"
                                  },
                                  "preemptible": {
                                    "type": "array",
                                    "example": [
                                      "n1-standard-1",
                                      "n1-standard-2"
                                    ],
                                    "description": "The type of Preemptible instances to utilize\n"
                                  },
                                  "custom": {
                                    "type": "object",
                                    "title": "Custom instance type",
                                    "description": "The custom types instances to utilize\n",
                                    "properties": {
                                      "vCPU": {
                                        "type": "integer",
                                        "example": "4"
                                      },
                                      "memoryGiB": {
                                        "type": "integer",
                                        "example": "3.75"
                                      }
                                    }
                                  },
                                  "preferred": {
                                    "type": "object",
                                    "title": "preferred Preemptible Types Object",
                                    "description": "prioritize instance types when launching instances for the group. <a style=color:red>Must be a sublist of the general instance types.</a>\n",
                                    "properties": {
                                      "preemptible": {
                                        "type": "array",
                                        "example": [
                                          "n1-standard-1",
                                          "n1-standard-2"
                                        ],
                                        "description": "The type of Preemptible instances to utilize\n"
                                      },
                                      "custom": {
                                        "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/put/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/compute/properties/instanceTypes/properties/custom"
                                      }
                                    }
                                  }
                                }
                              },
                              "availabilityZones": {
                                "type": "array",
                                "example": [
                                  "asia-east1-a",
                                  "asia-east1-b",
                                  "asia-east1-c"
                                ],
                                "description": "Availability zones for the group"
                              },
                              "preferredAvailabilityZones": {
                                "type": "array",
                                "example": [
                                  "asia-east1-a",
                                  "asia-east1-c"
                                ],
                                "description": "prioritize availability zones when launching instances for the group <a style=color:red>Must be a sublist of compute.availabilityZones.</a>"
                              },
                              "gpu": {
                                "type": "object",
                                "title": "CPU Object",
                                "description": null,
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "example": "nvidia-tesla-v100"
                                  },
                                  "count": {
                                    "type": "integer",
                                    "example": 1
                                  }
                                }
                              },
                              "subnets": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "region": {
                                      "type": "string",
                                      "example": "us-west1"
                                    },
                                    "subnetNames": {
                                      "type": "array",
                                      "example": [
                                        "private"
                                      ]
                                    }
                                  }
                                },
                                "description": "Subnets your group is associated with\n"
                              }
                            }
                          },
                          "scaling": {
                            "type": "object",
                            "title": "Scaling object",
                            "description": "Update scaling settings",
                            "properties": {
                              "up": {
                                "title": "Up",
                                "description": "Update scaling up settings",
                                "type": "array",
                                "items": {
                                  "title": "Up scaling object",
                                  "type": "object",
                                  "required": [
                                    "metricName",
                                    "threshold",
                                    "namespace"
                                  ],
                                  "properties": {
                                    "policyName": {
                                      "title": "Policy Name",
                                      "description": "Scaling policy name",
                                      "type": "string",
                                      "example": "scale_up_1"
                                    },
                                    "source": {
                                      "title": "Source",
                                      "description": "The source of the metric. Valid values: spectrum, stackdriver",
                                      "type": "string",
                                      "example": "stackdriver"
                                    },
                                    "metricName": {
                                      "title": "Metric Name",
                                      "description": "The name of the metric. Default value is instance/cpu/utilization. Required on scaling.up object",
                                      "type": "string",
                                      "example": "instance/disk/read_ops_count"
                                    },
                                    "statistic": {
                                      "title": "Statistic",
                                      "description": "The metric aggregator to return. Valid values: average, sum, min, max",
                                      "type": "string",
                                      "example": "average"
                                    },
                                    "unit": {
                                      "title": "Unit",
                                      "description": "The unit for the alarm’s associated metric.",
                                      "enum": [
                                        "seconds",
                                        "microseconds",
                                        "milliseconds",
                                        "bytes",
                                        "kilobytes",
                                        "megabytes",
                                        "gigabytes",
                                        "terabytes",
                                        "bits",
                                        "kilobits",
                                        "megabits",
                                        "gigabits",
                                        "terabits",
                                        "percent",
                                        "count",
                                        "bytes/second",
                                        "kilobytes/second",
                                        "megabytes/second",
                                        "gigabytes/second",
                                        "terabytes/second",
                                        "bits/second",
                                        "kilobits/second",
                                        "megabits/second",
                                        "gigabits/second",
                                        "terabits/second",
                                        "count/second",
                                        "none"
                                      ],
                                      "type": "string",
                                      "example": "percent"
                                    },
                                    "threshold": {
                                      "title": "Threshold",
                                      "description": "The value against which the specified statistic is compared. Required on scaling.up object",
                                      "type": "integer",
                                      "example": 10000
                                    },
                                    "namespace": {
                                      "title": "Namespace",
                                      "description": "The namespace for the associated metric. Valid value: compute Required on scaling.up object",
                                      "type": "string",
                                      "example": "compute"
                                    },
                                    "period": {
                                      "title": "Period",
                                      "description": "The period in seconds over which the statistic is applied",
                                      "type": "integer",
                                      "example": 300
                                    },
                                    "evaluationPeriods": {
                                      "title": "Evaluation Periods",
                                      "description": "The number of periods over which data is compared to the specified threshold",
                                      "type": "integer",
                                      "default": 1,
                                      "example": 1
                                    },
                                    "cooldown": {
                                      "title": "Cooldown",
                                      "description": "The amount of time (in seconds) after a scaling activity completes before any further trigger-related scaling activities can start",
                                      "type": "integer",
                                      "default": 300,
                                      "example": 300
                                    },
                                    "operator": {
                                      "title": "Operator",
                                      "description": "The operator to use in order to determine if the scaling policy is applicable. / Valid Values: gte (greater than or equal to) lte (lower than or equal to)",
                                      "type": "string",
                                      "default": "gte",
                                      "example": "lte"
                                    },
                                    "dimensions": {
                                      "title": "Array of dimension objects",
                                      "description": "Set metrics for scaling.up policy",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "name"
                                        ],
                                        "properties": {
                                          "name": {
                                            "title": "Name",
                                            "description": "The short labels names for filtering associated metric. For example, the metric instance/disk/read_ops_count is associated with the label compute.googleapis.com/storage_type, the short label name is storage_type",
                                            "type": "string",
                                            "example": "storage_type"
                                          },
                                          "value": {
                                            "title": "Value",
                                            "description": "Value of selected metric.can be Null",
                                            "type": "string",
                                            "example": "pd-standard"
                                          }
                                        }
                                      }
                                    },
                                    "action": {
                                      "type": "object",
                                      "title": "Action",
                                      "description": "The action to take when scale up is needed.",
                                      "required": [
                                        "type"
                                      ],
                                      "properties": {
                                        "type": {
                                          "title": "Type",
                                          "description": "The type of the action to take when scale up is needed. Valid value: adjustment. Required on scaling.up.action object",
                                          "type": "string",
                                          "example": "adjustment"
                                        },
                                        "adjustment": {
                                          "title": "Adjustment",
                                          "description": "The number associated with the specified adjustment type. Required if using adjustment as action type.",
                                          "type": "integer",
                                          "example": 1
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "down": {
                                "type": "array",
                                "title": "Down",
                                "description": "Update scaling down settings",
                                "items": {
                                  "title": "Down scaling object",
                                  "type": "object",
                                  "required": [
                                    "metricName",
                                    "threshold",
                                    "namespace"
                                  ],
                                  "properties": {
                                    "policyName": {
                                      "title": "Policy Name",
                                      "description": "The policy name",
                                      "type": "string",
                                      "example": "scale_down_1"
                                    },
                                    "source": {
                                      "title": "Source",
                                      "description": "The source of the metric. Valid values: spectrum, stackdriver",
                                      "type": "string",
                                      "example": "stackdriver"
                                    },
                                    "metricName": {
                                      "title": "Metric Name",
                                      "description": "The name of the metric. Default value is instance/cpu/utilization. Required on scaling.down object",
                                      "type": "string",
                                      "example": "instance/disk/read_ops_count"
                                    },
                                    "statistic": {
                                      "title": "Statistic",
                                      "description": "The metric aggregator to return. Valid values: average, sum, min, max",
                                      "type": "string",
                                      "example": "average"
                                    },
                                    "unit": {
                                      "title": "Unit",
                                      "description": "The unit for the alarm’s associated metric.",
                                      "enum": [
                                        "seconds",
                                        "microseconds",
                                        "milliseconds",
                                        "bytes",
                                        "kilobytes",
                                        "megabytes",
                                        "gigabytes",
                                        "terabytes",
                                        "bits",
                                        "kilobits",
                                        "megabits",
                                        "gigabits",
                                        "terabits",
                                        "percent",
                                        "count",
                                        "bytes/second",
                                        "kilobytes/second",
                                        "megabytes/second",
                                        "gigabytes/second",
                                        "terabytes/second",
                                        "bits/second",
                                        "kilobits/second",
                                        "megabits/second",
                                        "gigabits/second",
                                        "terabits/second",
                                        "count/second",
                                        "none"
                                      ],
                                      "type": "string",
                                      "example": "percent"
                                    },
                                    "threshold": {
                                      "title": "Threshold",
                                      "description": "The value against which the specified statistic is compared. Required on scaling.down object",
                                      "type": "integer",
                                      "example": 10000
                                    },
                                    "namespace": {
                                      "title": "Namespace",
                                      "description": "The namespace for the associated metric. Valid Value: compute Required on scaling.down object",
                                      "type": "string",
                                      "example": "compute"
                                    },
                                    "period": {
                                      "title": "Period",
                                      "description": "The period in seconds over which the statistic is applied",
                                      "type": "integer",
                                      "example": 300
                                    },
                                    "evaluationPeriods": {
                                      "title": "Evaluation Periods",
                                      "description": "The number of periods over which data is compared to the specified threshold.",
                                      "type": "integer",
                                      "default": 1,
                                      "example": 1
                                    },
                                    "cooldown": {
                                      "title": "Cooldown",
                                      "description": "The amount of time (in seconds) after a scaling activity completes before any further trigger-related scaling activities can start.",
                                      "type": "integer",
                                      "default": 300,
                                      "example": 300
                                    },
                                    "operator": {
                                      "title": "Operator",
                                      "description": "The operator to use in order to determine if the scaling policy is applicable. / Valid Values: gte (greater than or equal to) lte (lower than or equal to)",
                                      "type": "string",
                                      "default": "lte",
                                      "example": "gte"
                                    },
                                    "dimensions": {
                                      "title": "Dimensions",
                                      "description": "he short labels names for filtering associated metric. For example, the metric instance/disk/read_ops_count is associated with the label compute.googleapis.com/storage_type, the short label name is storage_type",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "name"
                                        ],
                                        "properties": {
                                          "name": {
                                            "title": "Name",
                                            "description": "The short labels names for filtering associated metric. For example, the metric instance/disk/read_ops_count is associated with the label compute.googleapis.com/storage_type, the short label name is storage_type Required on scaling.down.dimensions object",
                                            "type": "string",
                                            "example": "storage_type"
                                          },
                                          "value": {
                                            "title": "Value",
                                            "description": "Value of selected metric.can be Null",
                                            "type": "string",
                                            "example": "pd-standard"
                                          }
                                        }
                                      }
                                    },
                                    "action": {
                                      "title": "Action",
                                      "description": "Update the action to take when scale up is needed",
                                      "type": "object",
                                      "required": [
                                        "type"
                                      ],
                                      "properties": {
                                        "type": {
                                          "title": "Type",
                                          "description": "The type of the action to take when scale up is needed. Valid value: adjustment Required on scaling.down.action object",
                                          "type": "string",
                                          "example": "adjustment"
                                        },
                                        "adjustment": {
                                          "title": "Adjustment",
                                          "description": "The number associated with the specified adjustment type. Required if using adjustment as action type",
                                          "type": "integer",
                                          "example": 1
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "thirdPartiesIntegration": {
                            "title": "Third Parties Integration Object",
                            "description": "Third Parties Integration Configuration",
                            "type": "object",
                            "properties": {
                              "dockerSwarm": {
                                "title": "DockerSwarm ThirdPartiesIntegration Object",
                                "description": "Properties to connect docker swarm.",
                                "type": "object",
                                "properties": {
                                  "masterHost": {
                                    "title": "Master Host",
                                    "description": "Docker swarm master hostname",
                                    "type": "string",
                                    "example": "swarm1.swarm.com"
                                  },
                                  "masterPort": {
                                    "title": "Master Port",
                                    "description": "Docker swarm master port",
                                    "type": "integer",
                                    "example": 1234
                                  }
                                }
                              },
                              "gke": {
                                "title": "GKE ThirdPartiesIntegration Object",
                                "description": "Properties for GKE integration",
                                "type": "object",
                                "properties": {
                                  "autoUpdate": {
                                    "title": "Auto Update",
                                    "description": "If set to True - we check every 30 minutes if the gke version of the original node pool of the elastigroup was imported from - changed. if so - we re import the new configurations",
                                    "type": "boolean",
                                    "example": true
                                  },
                                  "autoScale": {
                                    "title": "Auto Scale",
                                    "description": "Properties for GKE integration auto scaling",
                                    "type": "object",
                                    "properties": {
                                      "isEnabled": {
                                        "title": "Is Enabled",
                                        "description": "Flag to enable / disable the auto scaling",
                                        "type": "boolean",
                                        "example": true,
                                        "default": false
                                      },
                                      "isAutoConfig": {
                                        "title": "Is Auto Config",
                                        "description": "Flag to enable / disable the headroom configuration",
                                        "type": "boolean",
                                        "example": false
                                      },
                                      "cooldown": {
                                        "title": "Cooldown",
                                        "description": "Set cooldown (in minutes)",
                                        "type": "integer",
                                        "example": 300
                                      },
                                      "headroom": {
                                        "title": "Headroom",
                                        "description": "Set headroom configuration",
                                        "type": "object",
                                        "properties": {
                                          "cpuPerUnit": {
                                            "title": "CPU Per Unit",
                                            "description": "Optionally configure the number of CPUs to allocate the headroom.",
                                            "type": "integer",
                                            "example": 1
                                          },
                                          "memoryPerUnit": {
                                            "title": "Memory Per Unit",
                                            "description": "Optionally configure the number of memory (MiB) to allocate the headroom.",
                                            "type": "integer",
                                            "example": 0
                                          },
                                          "numOfUnits": {
                                            "title": "Number Of Units",
                                            "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.",
                                            "type": "integer",
                                            "example": 1
                                          }
                                        }
                                      },
                                      "down": {
                                        "title": "Down",
                                        "description": "Set scale down properties",
                                        "type": "object",
                                        "properties": {
                                          "evaluationPeriods": {
                                            "title": "Evaluation Periods",
                                            "description": "Set number of evaluation periods for scale down. minimum value is: 3",
                                            "type": "integer",
                                            "example": 5
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "clusterIdentifier": {
                                    "title": "ClusterIdentifier",
                                    "description": "Cluster ID",
                                    "type": "string",
                                    "example": "gke-clust-1"
                                  },
                                  "location": {
                                    "title": "Location",
                                    "description": "Instance Location",
                                    "type": "string",
                                    "example": "us-west1"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "group": {
                        "type": "object"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/gce/group/gke/import": {
      "post": {
        "summary": "Import GKE Cluster",
        "description": "Import an existing GKE cluster to Elastigroup.",
        "operationId": "elastigroupGcpGkeImport",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "clusterId",
            "required": true,
            "description": "The GKE Cluster identifier\n",
            "schema": {
              "type": "string"
            },
            "example": "myGKECluster"
          },
          {
            "in": "query",
            "name": "clusterLocation",
            "required": true,
            "description": "The location of the cluster. Enter the desired zone for zonal GKE clusters or the region for regional GKE clusters.\n",
            "schema": {
              "type": "string"
            },
            "example": "us-central1-a"
          },
          {
            "in": "query",
            "name": "nodePoolName",
            "required": false,
            "description": "Set the node pool to import\n",
            "schema": {
              "type": "string"
            },
            "example": "somePoolName"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Elastigroup GKE Import Wrapper",
                    "required": [
                      "group"
                    ],
                    "properties": {
                      "group": {
                        "type": "object",
                        "title": "GCP Elastigroup",
                        "properties": {
                          "preemptiblePercentage": {
                            "type": "integer",
                            "description": "Preemptive VMs ratio in the Elastigroup",
                            "example": 70,
                            "default": 100
                          },
                          "name": {
                            "type": "string",
                            "example": "myGKE",
                            "description": "Name of the Elastigroup"
                          },
                          "capacity": {
                            "type": "object",
                            "description": "Minimum, maximum and target number of vms in the Elastigroup",
                            "properties": {
                              "minimum": {
                                "type": "integer",
                                "example": 0,
                                "description": "Minimum number of VMs to maintain in the Elastigroup"
                              },
                              "maximum": {
                                "type": "integer",
                                "example": 2,
                                "description": "Maximum number of VMs to maintain in the Elastigroup"
                              },
                              "target": {
                                "type": "integer",
                                "example": 1,
                                "description": "Desired number of VMs to maintain in the Elastigroup"
                              }
                            }
                          },
                          "instanceTypes": {
                            "type": "object",
                            "description": "Types and locations of VMs to be utilized",
                            "properties": {
                              "ondemand": {
                                "type": "string",
                                "example": "n1-highcpu-32",
                                "description": "On-demand VM type to utilize in case such VM is launched"
                              },
                              "preemtible": {
                                "type": "array",
                                "description": "On-demand VM types to utilize in case such VM(s) is/are launched",
                                "items": {
                                  "type": "string",
                                  "example": [
                                    "n1-standard-1",
                                    "n1-standard-2"
                                  ]
                                }
                              }
                            }
                          },
                          "availabilityZones": {
                            "type": "array",
                            "description": "Availability Zone pool to be use for this group",
                            "items": {
                              "type": "string",
                              "example": [
                                "us-central1-a",
                                "us-central1-b"
                              ]
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "group": {
                        "type": "object"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1gcp~1gce~1group/post/requestBody/content/application~1json/schema/allOf/0"
                              }
                            },
                            "kind": {
                              "example": "spotinst:gcp:gce:importGke"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/gce/group/{groupId}/status": {
      "get": {
        "summary": "Get Elastigroup Status",
        "description": "Get the status for all instances that are memebers of the Elastigroup",
        "operationId": "elastigroupGcpGetStatus",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "title": "Group Status Object",
                                "type": "object",
                                "properties": {
                                  "privateIpAddress": {
                                    "type": "string"
                                  },
                                  "machineType": {
                                    "type": "string"
                                  },
                                  "zone": {
                                    "type": "string"
                                  },
                                  "instanceName": {
                                    "type": "string"
                                  },
                                  "lifeCycle": {
                                    "type": "string"
                                  },
                                  "provisioningModel": {
                                    "type": "string"
                                  },
                                  "statusName": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "updatedAt": {
                                    "type": "string",
                                    "format": "date-time"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:gcp:gce:group:status"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/gce/group/{groupId}/events": {
      "get": {
        "summary": "List Activity Events",
        "description": "Get all activity events for the Elastigroup",
        "operationId": "elastigroupGcpGetActivityEvents",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          },
          {
            "in": "query",
            "name": "fromDate",
            "example": "2019-05-17",
            "required": true,
            "description": "Get items on or after this date (ISO 8601)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "toDate",
            "example": "2019-05-25",
            "required": true,
            "description": "Get items on or before this date (ISO 8601)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "title": "Activity Event Object",
                                "type": "object",
                                "properties": {
                                  "groudId": {
                                    "type": "string",
                                    "example": "sig-576g654"
                                  },
                                  "eventType": {
                                    "type": "string",
                                    "example": "RollFinished"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2018-03-01T09:58:16.000+0000"
                                  },
                                  "subEvents": {
                                    "type": "array",
                                    "items": {
                                      "title": "Activity Sub-Event Object",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "example": "sbgd-1234567"
                                        },
                                        "groupId": {
                                          "type": "string",
                                          "example": "sig-576g654"
                                        },
                                        "currentBatch": {
                                          "type": "integer",
                                          "example": 1
                                        },
                                        "numOfBatches": {
                                          "type": "integer",
                                          "example": 1
                                        },
                                        "gracePeriod": {
                                          "type": "integer",
                                          "example": 300
                                        },
                                        "type": {
                                          "type": "string",
                                          "example": "rollInfo"
                                        },
                                        "status": {
                                          "type": "string",
                                          "example": null
                                        },
                                        "createdAt": {
                                          "type": "string",
                                          "format": "date-time",
                                          "example": "2018-03-01T09:58:16.000+0000"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:gcp:gce:group:event"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/gce/group/{groupId}/log": {
      "get": {
        "summary": "Get Elastilog",
        "description": "Fetch a group's Elastilog",
        "operationId": "elastigroupGcpFetchGroupElastilog",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/2"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Maximum number of items to return.",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "default": 500,
              "example": 200
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "title": "Elastilog Object",
                                "type": "object",
                                "properties": {
                                  "message": {
                                    "type": "string",
                                    "example": "Group sig-e0a2bd7c successfully created."
                                  },
                                  "severity": {
                                    "type": "string",
                                    "enum": [
                                      "ALL",
                                      "INFO",
                                      "DEBUG",
                                      "WARN"
                                    ],
                                    "example": "INFO"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "patten": null,
                                    "example": "2019-05-19T14:34:15.000Z"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:gcp:gce:group:log"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/gce/group/{groupId}/scale/up": {
      "put": {
        "summary": "Scale Up",
        "description": "Add instances to the Elastigroup",
        "operationId": "elastigroupGcpScaleUp",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "adjustment",
            "description": "The number of instances to add to the group",
            "schema": {
              "type": "integer",
              "example": 1
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Preemptible object",
                                "properties": {
                                  "newPreemptibles": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "instanceName": {
                                          "type": "string",
                                          "example": "sin-9da52709"
                                        }
                                      }
                                    }
                                  },
                                  "newInstances": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "instanceName": {
                                          "type": "string",
                                          "example": "sin-1591c0b6"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:gcp:gce:preemptible"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/gce/group/{groupId}/scale/down": {
      "put": {
        "summary": "Scale Down",
        "description": "Remove instances from the Elastigroup",
        "operationId": "elastigroupGcpScaleDown",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "adjustment",
            "description": "The number of instances to remove from the group",
            "schema": {
              "type": "integer",
              "example": 1
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Scale object",
                                "properties": {
                                  "victimPreemptibles": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "title": "Victim Preemptible Object",
                                      "properties": {
                                        "instanceName": {
                                          "type": "string",
                                          "example": "sin-4ecd5037"
                                        },
                                        "zone": {
                                          "type": "string",
                                          "example": "asia-east1-b"
                                        },
                                        "machineType": {
                                          "type": "string",
                                          "example": "N1_STANDARD_2"
                                        }
                                      }
                                    }
                                  },
                                  "victimInstances": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "title": "Victim Instance Object",
                                      "properties": {
                                        "instanceName": {
                                          "type": "string",
                                          "example": "sin-31e0596a"
                                        },
                                        "zone": {
                                          "type": "string",
                                          "example": "europe-west1-c"
                                        },
                                        "machineType": {
                                          "type": "string",
                                          "example": "N1_STANDARD_1"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:gcp:gce:scale"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/gce/group/{groupId}/costs": {
      "get": {
        "summary": "Get Elastigroup Costs",
        "description": "Get financial information on a specific Elastigroup\n",
        "operationId": "elastigroupGcpCosts",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Group Cost Object",
                                "properties": {
                                  "running": {
                                    "type": "object",
                                    "properties": {
                                      "value": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 294.3
                                      },
                                      "unit": {
                                        "type": "string",
                                        "example": "hours"
                                      }
                                    }
                                  },
                                  "savings": {
                                    "type": "object",
                                    "properties": {
                                      "value": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 60.5263
                                      },
                                      "unit": {
                                        "type": "string",
                                        "example": "percentage"
                                      }
                                    }
                                  },
                                  "costs": {
                                    "type": "object",
                                    "properties": {
                                      "actual": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 8.829
                                      },
                                      "potential": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 22.3668
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:gcp:gce:group:costs"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/gce/group/{groupId}/roll": {
      "get": {
        "summary": "List Deployments",
        "description": "Get all of the deployments for a specific Elastigroup, and their status\n",
        "operationId": "elastigroupGcpListDeployments",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Group Deploy Object",
                    "required": [
                      "batchSizePercentage",
                      "gracePeriod"
                    ],
                    "properties": {
                      "batchSizePercentage": {
                        "type": "integer",
                        "example": 20,
                        "description": "(in percentage) the batch size of the deployment, i.e.: how many instances to replace in each batch\n"
                      },
                      "gracePeriod": {
                        "type": "integer",
                        "example": 300,
                        "description": "(in seconds) the time until an instance becomes healthy in the load balancer\n"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "title": "Group Roll Object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "example": "sbgd-01f01234"
                                      },
                                      "status": {
                                        "type": "string",
                                        "example": "STARTING"
                                      },
                                      "currentBatch": {
                                        "type": "integer",
                                        "example": 1
                                      },
                                      "numOfBatches": {
                                        "type": "integer",
                                        "example": 2
                                      },
                                      "progress": {
                                        "type": "object",
                                        "properties": {
                                          "unit": {
                                            "type": "string",
                                            "example": "percentage"
                                          },
                                          "value": {
                                            "type": "integer",
                                            "example": 0
                                          }
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "$ref": "#/paths/~1aws~1emr~1mrScaler/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/1"
                                  }
                                ]
                              }
                            },
                            "kind": {
                              "example": "spotinst:gcp:gce:group:roll"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Start Deployment",
        "description": "Deploy the Elastigroup: Triggers a Blue/Green deployment that replaces the existing instances in the Elastigroup\n",
        "operationId": "elastigroupGcpDeploy",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D~1roll/get/requestBody/content/application~1json/schema/allOf/0"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "allOf": [
                                  {
                                    "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D~1roll/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/0"
                                  }
                                ]
                              }
                            },
                            "kind": {
                              "example": "spotinst:gcp:gce:group:roll"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/gce/group/{groupId}/roll/{rollId}": {
      "get": {
        "summary": "Get Deployment",
        "description": "Get a specific deployment's status\n",
        "operationId": "elastigroupGcpDeployStatus",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "rollId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The deployment ID to query\n"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D~1roll/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Stop Deployment",
        "description": "Stop an existing deployment\n",
        "operationId": "elastigroupGcpStopDeployment",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D~1roll~1%7BrollId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "roll": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "STOPPED",
                        "description": "in this case, always set to \"STOPPED\""
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D~1roll/put/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/gce/group/{groupId}/deatchInstances": {
      "put": {
        "summary": "Detach Instances",
        "description": "Detach instances from an Elastigroup\n",
        "operationId": "elastigroupGcpDetachInstances",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Detach Instances Object",
                    "properties": {
                      "instancesToDetach": {
                        "type": "array",
                        "description": "The names of the instances to detach from the group.",
                        "example": [
                          "sin-44c02836",
                          "sin-ddf71dfa"
                        ]
                      },
                      "shouldTerminateInstances": {
                        "type": "boolean",
                        "description": "Indicates whether to terminate the instances or not."
                      },
                      "shouldDecrementTargetCapacity": {
                        "type": "boolean",
                        "description": "Indicates whether to decrement the capacity of the group, so no new instance will be launched instead of the detached one.\n"
                      },
                      "drainingTimeout": {
                        "type": "integer",
                        "description": "(Applies only if shouldTerminateInstances is on) The draining timeout (in seconds) before terminating the instance. If no draining timeout is defined, the group's draining timeout applies.\n"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "kind": {
                              "example": "spotinst:gcp:gce:detachInstances"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/gce/instance/{instanceId}": {
      "get": {
        "summary": "Get Instance Status",
        "description": "Get the current instance status. Possible status values: `ACTIVE`, `TERMINATING`\n",
        "operationId": "elastigroupGcpGetInstanceStatus",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "instanceId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "GCP Instance ID\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Instance Status Object",
                                "properties": {
                                  "instanceName": {
                                    "type": "string",
                                    "example": "sin-123"
                                  },
                                  "lifeCycleState": {
                                    "type": "string",
                                    "enum": [
                                      "ACTIVE",
                                      "TERMINATING"
                                    ],
                                    "example": "ACTIVE"
                                  },
                                  "privateIp": {
                                    "type": "string",
                                    "example": "10.0.0.1"
                                  },
                                  "groupId": {
                                    "type": "string",
                                    "example": "sig-123"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:gcp:gce:instance"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/gce/instance/{instanceId}/lock": {
      "post": {
        "summary": "Lock Instance",
        "description": "Set termination protection for a specific instance.\n",
        "operationId": "elastigroupGcpLockInstance",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1instance~1%7BinstanceId%7D/get/parameters/1"
          },
          {
            "in": "query",
            "name": "ttlInMinutes",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Specify a TTL (in minutes) for this lock, i.e.: for how long the protection will be valid for.\n"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/gce/instance/{instanceId}/unlock": {
      "post": {
        "summary": "Unlock Instance",
        "description": "Remove termination protection for a specific instance.\n",
        "operationId": "elastigroupGcpUnlockInstance",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1instance~1%7BinstanceId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/cluster": {
      "get": {
        "summary": "List Clusters",
        "description": "Get the configurations for all Ocean clusters in the specified account.\n",
        "operationId": "OceanECSClusterList",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean ECS Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster/post/requestBody/content/application~1json/schema/allOf/0"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:ecs"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "summary": "Create Cluster",
        "description": "Create a new Ocean ECS cluster in the specified account.\n",
        "operationId": "OceanECSClusterCreate",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "cluster"
                    ],
                    "properties": {
                      "cluster": {
                        "type": "object",
                        "title": "ECS Ocean",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "o-12345abc",
                            "readOnly": true,
                            "description": "Ocean cluster identifier.\n"
                          },
                          "name": {
                            "type": "string",
                            "example": "Ocean::my-elastigroup-name",
                            "description": "Add a name for the Ocean cluster.\n"
                          },
                          "clusterName": {
                            "type": "string",
                            "example": "my-ECS-cluster-name",
                            "description": "ECS cluster name.\n"
                          },
                          "autoScaler": {
                            "type": "object",
                            "title": "Ocean Autoscaler",
                            "description": "The Ocean Kubernetes Autoscaler.\n",
                            "required": [
                              "isEnabled"
                            ],
                            "properties": {
                              "isEnabled": {
                                "type": "boolean",
                                "description": "Enable the Ocean Kubernetes Autoscaler.\n",
                                "example": true
                              },
                              "cooldown": {
                                "type": "integer",
                                "description": "Cooldown period between scaling actions. Value should be cooldown period in seconds, greater than 180.\n",
                                "example": 300
                              },
                              "attributes": {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "example": "the_key"
                                  },
                                  "value": {
                                    "type": "string",
                                    "example": "the_value"
                                  }
                                }
                              },
                              "resourceLimits": {
                                "type": "object",
                                "description": "Optionally set upper and lower bounds on the resource usage of the cluster.\n",
                                "properties": {
                                  "maxMemoryGib": {
                                    "type": "integer",
                                    "description": "The maximum memory in GiB units that can be allocated to the cluster. Minimum value: 1.\n",
                                    "example": 1
                                  },
                                  "maxVcpu": {
                                    "type": "integer",
                                    "description": "The maximum CPU in vCPU units that can be allocated to the cluster. Minimum value: 1.\n",
                                    "example": 1
                                  }
                                }
                              },
                              "down": {
                                "type": "object",
                                "description": "Autoscaling scale down operations.\n",
                                "properties": {
                                  "evaluationPeriods": {
                                    "type": "integer",
                                    "example": 4
                                  },
                                  "maxScaleDownPercentage": {
                                    "type": "integer",
                                    "description": "The maximum portion (as a %) of nodes that will be scaled down at once out of the total number of potential nodes to scale down.\nExample: If there are 10 nodes to scale down and the parameter is 50%, then only 5 nodes will be scaled down at once.\nThe other 5 nodes will be scaled down in the next autoscaling iteration.\n",
                                    "example": 20
                                  }
                                }
                              },
                              "headroom": {
                                "type": "object",
                                "description": "Spare resource capacity management enabling fast assignment of pods without waiting for new resources to launch.\n",
                                "properties": {
                                  "cpuPerUnit": {
                                    "type": "integer",
                                    "description": "Optionally configure the number of CPUs to allocate per headroom unit. CPUs are denoted in CPU units, where 1024 units = 1 vCPU.\n",
                                    "example": 2048
                                  },
                                  "memoryPerUnit": {
                                    "type": "integer",
                                    "description": "Optionally configure the amount of memory (MiB) to allocate per headroom unit.\n",
                                    "example": 3
                                  },
                                  "numOfUnits": {
                                    "type": "integer",
                                    "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n",
                                    "example": 2
                                  }
                                }
                              },
                              "isAutoConfig": {
                                "type": "boolean",
                                "description": "Use automatic headroom. When set to true, the values under cluster.autoScaler.headroom are not effective, as Ocean configures and optimizes headroom automatically.\n",
                                "example": false
                              },
                              "autoHeadroomPercentage": {
                                "type": "integer",
                                "description": "Optionally set the auto-headroom percentage. Set a number between 0-200 to control the headroom % of the cluster. Relevant when isAutoConfig=true.\n",
                                "example": 20
                              },
                              "shouldScaleDownNonServiceTasks": {
                                "type": "boolean",
                                "description": "Option to scale down non-service tasks. If not set, Ocean does not scale down standalone tasks.\n",
                                "default": false,
                                "example": true
                              },
                              "enableAutomaticAndManualHeadroom": {
                                "type": "boolean",
                                "description": "When set to true, both automatic and per custom launch specification manual headroom to be saved concurrently and independently in the cluster. prerequisite: isAutoConfig must be true\n",
                                "example": false
                              }
                            }
                          },
                          "region": {
                            "type": "string",
                            "example": "us-east-1",
                            "description": "Select the region for the Ocean cluster to run in.\n"
                          },
                          "capacity": {
                            "type": "object",
                            "title": "Capacity Units",
                            "description": "Capacity specifications for the Ocean cluster.\n",
                            "required": [
                              "target",
                              "maximum",
                              "minimum"
                            ],
                            "properties": {
                              "minimum": {
                                "type": "integer",
                                "example": 1,
                                "description": "The bottom limit of instances that the cluster can scale down to.\n"
                              },
                              "maximum": {
                                "type": "integer",
                                "example": 10,
                                "description": "The upper limit of instances that the cluster can scale up to.\n",
                                "default": 1000
                              },
                              "target": {
                                "type": "integer",
                                "example": 5,
                                "description": "Number of instances to launch and maintain in cluster.h\n"
                              },
                              "unit": {
                                "type": "string",
                                "example": "instance",
                                "default": "instance",
                                "enum": [
                                  "weight",
                                  "instance"
                                ],
                                "description": "Defines how Ocean scales. Either by number of instances or by instance weights. If `weight` is used, then `weightedCapacity` is required to be set for all instance types used for this cluster.\n"
                              }
                            }
                          },
                          "strategy": {
                            "type": "object",
                            "title": "Ocean Strategy",
                            "description": "Strategy Configuration of the Ocean cluster.\n",
                            "required": [
                              "utilizeReservedInstances",
                              "fallbackToOd",
                              "spotPercentage",
                              "drainingTimeout"
                            ],
                            "properties": {
                              "utilizeReservedInstances": {
                                "type": "boolean",
                                "description": "If reserved instances exist, Ocean will use them before launching spot instances.\n",
                                "example": true,
                                "default": false
                              },
                              "fallbackToOd": {
                                "type": "boolean",
                                "description": "If no spot instance markets are available, enable Ocean to launch on-demand instances instead.\n",
                                "example": true,
                                "default": true
                              },
                              "spotPercentage": {
                                "type": "integer",
                                "example": 100
                              },
                              "drainingTimeout": {
                                "type": "integer",
                                "description": "The draining timeout (in seconds) before terminating the instance. If no draining timeout is defined, the default draining timeout will be used.\n",
                                "example": 200
                              },
                              "utilizeCommitments": {
                                "type": "boolean",
                                "description": "If savings plans commitment has available capacity, Ocean will utilize them alongside RIs (if exist) to maximize cost efficiency.\n",
                                "example": false,
                                "default": false
                              }
                            }
                          },
                          "compute": {
                            "type": "object",
                            "title": "Ocean Compute",
                            "required": [
                              "subnetIds",
                              "launchSpecification"
                            ],
                            "properties": {
                              "subnetIds": {
                                "type": "array",
                                "description": "A comma-separated list of subnet identifiers for the Ocean cluster. Subnet identifiers should be configured with auto-assign public IP.\n",
                                "items": {
                                  "type": "string",
                                  "example": "subnet-1234abcd"
                                }
                              },
                              "launchSpecification": {
                                "type": "object",
                                "description": "The default specification for container instances in the cluster. Used as a template for custom Virtual Node Groups to inherit values which are not explicitly defined in them, and as a default VNG when no other VNGs exist or match the workload’s requirements.\n",
                                "required": [
                                  "imageId",
                                  "securityGroupIds",
                                  "iamInstanceProfile"
                                ],
                                "properties": {
                                  "imageId": {
                                    "type": "string",
                                    "example": "ami-123456789abcdefgh"
                                  },
                                  "securityGroupIds": {
                                    "type": "array",
                                    "description": "One or more security group identifiers.\n",
                                    "items": {
                                      "type": "string",
                                      "example": "sg-abcdefgh123456789"
                                    }
                                  },
                                  "iamInstanceProfile": {
                                    "type": "object",
                                    "description": "The instance profile iamRole.\n",
                                    "properties": {
                                      "arn": {
                                        "type": "string",
                                        "description": "The iamRole ARN.\n",
                                        "example": "my-arn"
                                      }
                                    }
                                  },
                                  "blockDeviceMappings": {
                                    "type": "array",
                                    "description": "Block devices that are exposed to the instance. You can specify virtual devices and EBS volumes.\\\nThis parameter and rootVolumeSize cannot be in the specification at the same time.\\\nThis parameter can be null. If not null, it must contain at least one block device.\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "deviceName": {
                                          "type": "string",
                                          "description": "Set device name.\n",
                                          "example": "/dev/xvda"
                                        },
                                        "ebs": {
                                          "type": "object",
                                          "description": "Set EBS properties.\n",
                                          "properties": {
                                            "throughput": {
                                              "type": "integer",
                                              "minimum": 125,
                                              "maximum": 1000,
                                              "example": 125,
                                              "description": "The amount of data transferred to or from a storage device per second. You can use this parameter only if volumetype=‘gp3’.\n"
                                            },
                                            "deleteOnTermination": {
                                              "type": "boolean",
                                              "description": "Flag to delete the EBS on instance termination.\n",
                                              "example": false
                                            },
                                            "encrypted": {
                                              "type": "boolean",
                                              "example": false
                                            },
                                            "iops": {
                                              "type": "integer",
                                              "description": "Must be greater than or equal to 0.\n",
                                              "example": 1
                                            },
                                            "kmsKeyId": {
                                              "type": "string",
                                              "example": "alias/aws/ebs"
                                            },
                                            "snapshotId": {
                                              "type": "string",
                                              "example": "snap-abcdefghi111110"
                                            },
                                            "volumeType": {
                                              "type": "string",
                                              "description": "Set volume type.\n",
                                              "example": "gp2"
                                            },
                                            "volumeSize": {
                                              "type": "integer",
                                              "description": "Set volume size (in GB). When using this property, you cannot use dynamicVolumeSize. You must use one of the other. Volume size should be greater than or equal to the size configured in the AMI.\n"
                                            },
                                            "dynamicVolumeSize": {
                                              "type": "object",
                                              "required": [
                                                "baseSize",
                                                "resource"
                                              ],
                                              "description": "Set dynamic volume size properties. When using this object, you cannot use volumeSize. You must use one or the other.\n",
                                              "properties": {
                                                "baseSize": {
                                                  "type": "integer",
                                                  "description": "Initial size per volume.\n",
                                                  "example": 50
                                                },
                                                "resource": {
                                                  "type": "string",
                                                  "example": "CPU"
                                                },
                                                "sizePerResourceUnit": {
                                                  "type": "integer",
                                                  "description": "Additional size per resource unit (in GB). For example, if baseSize=50, and sizePerResourceUnit=20, and an instance with 2 CPU is launched, its disk size will be 90 GB.\n",
                                                  "example": 20
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "instanceMetadataOptions": {
                                    "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec/post/requestBody/content/application~1json/schema/allOf/0/properties/launchSpec/properties/instanceMetadataOptions"
                                  },
                                  "userData": {
                                    "type": "string",
                                    "format": "byte",
                                    "description": "The base 64 encoded MIME user data to make available to the instances.",
                                    "example": "Q29udGVudC1UeXBlOiBtdWx0aXBhcnQvbWl4ZWQ7IGJvdW5kYXJ5PSI9PT09PT09PT09PT09PT01MTg5MDY1Mzc3MjIyODk4NDA3PT0iCk1JTUUtVmVyc2lvbjogMS4wCgotLT09PT09PT09PT09PT09PTUxODkwNjUzNzcyMjI4OTg0MDc9PQp"
                                  }
                                }
                              },
                              "optimizeImage": {
                                "type": "object",
                                "properties": {
                                  "shouldOptimizeEcsAmi": {
                                    "type": "boolean",
                                    "example": "true"
                                  },
                                  "performAt": {
                                    "type": "string",
                                    "example": "never",
                                    "description": "Must be one of the following values: never, always, timeWindow. If performAt = timeWindow, the time window array should contain at least one time window.\n"
                                  },
                                  "timeWindows": {
                                    "type": "array",
                                    "description": "Restrict to time window regex.\n",
                                    "items": {
                                      "example": "['Sun:02:00-Sun:12:00', 'Wed:01:01-Fri:02:03']"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "scheduling": {
                            "type": "object",
                            "title": "Ocean Scheduling",
                            "description": "",
                            "required": [
                              "tasks"
                            ],
                            "properties": {
                              "tasks": {
                                "type": "array",
                                "description": "The actions in the cluster to be scheduled.\n",
                                "required": [
                                  "isEnabled",
                                  "cronExpression",
                                  "taskType"
                                ],
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "isEnabled": {
                                      "type": "boolean",
                                      "description": "Describes whether the task is enabled. When true, the task will run. When false, it does not run. Required for the object cluster.scheduling.tasks.\n",
                                      "example": false
                                    },
                                    "cronExpression": {
                                      "type": "string",
                                      "description": "A valid cron expression, for example \" * * * * * \". The cron runs in the UTC time zone and is in Unix cron format [Cron Expression Validator Script](https://www.unix.com/man-page/linux/5/crontab/). Only one of ‘frequency' or ‘cronExpression' should be used at a time. Required for cluster.scheduling.tasks.\n"
                                    },
                                    "taskType": {
                                      "type": "string",
                                      "example": "clusterRoll",
                                      "description": "Valid values: \"clusterRoll\". Required for cluster.scheduling.tasks.\n"
                                    }
                                  }
                                }
                              },
                              "shutdownHours": {
                                "type": "object",
                                "title": "Shutdown Hours",
                                "required": [
                                  "timeWindows"
                                ],
                                "properties": {
                                  "timeWindows": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "example": "Sat:08:00-Sun:08:00"
                                    }
                                  },
                                  "isEnabled": {
                                    "type": "boolean",
                                    "example": true,
                                    "description": "Flag to enable / disable the shutdown hours mechanism. When turned to false, the mechanism is deactivated and the cluster remains in its current state.\n"
                                  }
                                }
                              }
                            }
                          },
                          "logging": {
                            "type": "object",
                            "title": "Logging configuration",
                            "properties": {
                              "export": {
                                "type": "object",
                                "title": "Logging Export Configuration.",
                                "properties": {
                                  "s3": {
                                    "type": "object",
                                    "title": "Logging S3 Export configuration.",
                                    "description": "Exports your cluster's logs to the S3 bucket and subdir configured on the S3 [data integration](/#operation/DataIntegrationCreate) given.\nEach file contains logs of 3 minutes where each log is separated by a new line and saved as a JSON.\nThe file formats are `subdir`/`accountId`_`oceanId`_`oceanName`_`startTime`.log\nIf no subdir was configured, the files will be saved in the root of the bucket.\n",
                                    "required": [
                                      "id"
                                    ],
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "The identifier of The S3 data integration to export the logs to.",
                                        "example": "di-123"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2019-06-03T08:13:08.000Z",
                            "description": "A timestamp of the Ocean creation.\n"
                          },
                          "updatedAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2019-06-10T15:06:13.000Z",
                            "description": "A timestamp of the latest Ocean update.\n"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/cluster/{oceanClusterId}": {
      "get": {
        "summary": "Get Cluster",
        "description": "Get the configurations for a specified Ocean cluster.\n",
        "operationId": "OceanECSClusterGet",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "oceanClusterId",
            "example": "o-12345abc",
            "description": "Identifier of the Ocean cluster.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Cluster",
        "description": "All Ocean parameters are updatable, excluding Region and ID. This API supports partial updates, so specific fields can be updated separately.\n",
        "operationId": "OceanECSClusterUpdate",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster/post/requestBody/content/application~1json/schema/allOf/0"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Cluster",
        "description": "Delete a specified Ocean cluster.\n",
        "operationId": "OceanECSClusterDelete",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/cluster/{EcsClusterName}/import": {
      "post": {
        "summary": "Import Cluster",
        "description": "Create Ocean cluster object from an existing ECS cluster with at least one container instance to be used as input for create cluster.<br> **This route will not register the ECS cluster to Ocean.**\n",
        "operationId": "OceanECSClusterImport",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "EcsClusterName",
            "example": "ecsName",
            "description": "ECS Cluster name\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "region"
                    ],
                    "properties": {
                      "region": {
                        "type": "string",
                        "example": "us-east-1",
                        "description": "The region that the ECS cluster is running at.\n"
                      },
                      "name": {
                        "type": "string",
                        "example": "oceanName",
                        "description": "The name for the new Ocean cluster object. <br> If the name is not provided, the default will be *Ocean_{EcsClusterName}*\n"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Import Ocean ECS Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/ecs/cluster/my-ECS-cluster-name/import"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "cluster"
                                ],
                                "properties": {
                                  "cluster": {
                                    "type": "object",
                                    "title": "ECS Ocean",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "my-Ocean-ECS-cluster",
                                        "description": "The name of the Ocean cluster provided in the request. If not provided in the import request, the name will be Ocean_{EcsClusterName}.\n"
                                      },
                                      "clusterName": {
                                        "type": "string",
                                        "example": "my-ECS-cluster-name",
                                        "description": "ECS cluster name.\n"
                                      },
                                      "region": {
                                        "type": "string",
                                        "example": "us-east-1",
                                        "description": "The region for the Ocean cluster to run in. The same name as the provided ECS cluster.\n"
                                      },
                                      "compute": {
                                        "type": "object",
                                        "title": "Ocean Compute",
                                        "properties": {
                                          "subnetIds": {
                                            "type": "array",
                                            "description": "A comma-separated list of subnet identifiers for the Ocean cluster. Subnet identifiers should be configured with auto-assign public IP.\n",
                                            "items": {
                                              "type": "string",
                                              "example": "subnet-1234abcd"
                                            }
                                          },
                                          "launchSpecification": {
                                            "type": "object",
                                            "description": "The default specification for container instances in the cluster. Used as a template for custom Virtual Node Groups to inherit values which are not explicitly defined in them, and as a default VNG when no other VNGs exist or match the workload’s requirements.\n",
                                            "properties": {
                                              "imageId": {
                                                "type": "string",
                                                "example": "ami-123456789abcdefgh"
                                              },
                                              "securityGroupIds": {
                                                "type": "array",
                                                "description": "One or more security group identifiers.\n",
                                                "items": {
                                                  "type": "string",
                                                  "example": "sg-abcdefgh123456789"
                                                }
                                              },
                                              "keyPair": {
                                                "type": "string",
                                                "example": "dev-keypair"
                                              },
                                              "userData": {
                                                "type": "string",
                                                "example": "userData"
                                              },
                                              "iamInstanceProfile": {
                                                "type": "object",
                                                "description": "The instance profile iamRole.\n",
                                                "properties": {
                                                  "arn": {
                                                    "type": "string",
                                                    "description": "The iamRole arn.\n",
                                                    "example": "my-arn"
                                                  }
                                                }
                                              },
                                              "tags": {
                                                "type": "object",
                                                "description": "AWS tags from an EC2 instance registered as a container instance.\n",
                                                "properties": {
                                                  "tagKey": {
                                                    "type": "string",
                                                    "example": "env"
                                                  },
                                                  "tagValue": {
                                                    "type": "string",
                                                    "example": "dev"
                                                  }
                                                }
                                              },
                                              "instanceMetadataOptions": {
                                                "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec/post/requestBody/content/application~1json/schema/allOf/0/properties/launchSpec/properties/instanceMetadataOptions"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:ecs"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/cluster/{oceanClusterId}/log": {
      "summary": "Ocean for AWS ECS",
      "get": {
        "summary": "Fetch Elastilog",
        "description": "Get the log of an Ocean Cluster.\n",
        "operationId": "oceanEcsFetchLog",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1mcs~1ecs~1cluster~1%7BclusterName%7D~1costs/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1mcs~1ecs~1cluster~1%7BclusterName%7D~1costs/get/parameters/1"
          },
          {
            "in": "query",
            "name": "LIMIT",
            "description": "Maximum number of lines to extract in a response.\n",
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "default": 500
            },
            "required": false,
            "example": 200
          },
          {
            "in": "query",
            "name": "SEVERITY",
            "description": "Severity of log entries to extract.\n",
            "schema": {
              "type": "string",
              "enum": [
                "ALL",
                "INFO",
                "DEBUG",
                "WARN"
              ],
              "default": "ALL"
            },
            "required": false,
            "example": "INFO"
          },
          {
            "in": "query",
            "name": "resourceId",
            "example": "i-12345678",
            "description": "Filter extracted log entries for a specific resource identifier. Default: Null\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Get Log Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request": {
                      "type": "object",
                      "description": "Original request properties.\n",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "3213f42e-455e-4801-a185-cd3eb65fac5f",
                          "description": "Unique identifier associated with this request.\n"
                        },
                        "url": {
                          "type": "string",
                          "example": "/ocean/aws/ecs/cluster/o-e0a2bd7c/log?fromDate=2020-10-06&toDate=2020-10-08&severity=ALL&limit=500",
                          "description": "The URL that was used for the request.\n"
                        },
                        "method": {
                          "type": "string",
                          "example": "GET",
                          "description": "The HTTP **METHOD** used for the request.\n"
                        },
                        "timestamp": {
                          "type": "string",
                          "example": "2020-10-05T16:20:38.579Z",
                          "description": "When the request was received by Spot.\n"
                        }
                      }
                    },
                    "response": {
                      "type": "object",
                      "description": "Response package that includes status, type, and any relevant data.\n",
                      "properties": {
                        "status": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "integer",
                              "example": "200",
                              "description": "HTTP status code assigned to this response.\n"
                            },
                            "message": {
                              "type": "string",
                              "example": "OK",
                              "description": "HTTP status message for the respective status code.\n"
                            }
                          }
                        },
                        "kind": {
                          "type": "string",
                          "example": "spotinst:ocean:cluster:log"
                        },
                        "items": {
                          "type": "array",
                          "description": "Array of data objects.\n",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              },
                              "severity": {
                                "type": "string"
                              },
                              "createdAt": {
                                "type": "string"
                              }
                            }
                          },
                          "example": [
                            {
                              "message": "Instances Terminated - ECS Autoscaler ,Terminated 1, List of instances: [i-0914721d46ebbabb2]",
                              "severity": "INFO",
                              "createdAt": "2020-10-07T09:51:12.000Z"
                            },
                            {
                              "message": "Instances: [i-0914721d46ebbabb2] have been detached. Reason: Auto scale",
                              "severity": "INFO",
                              "createdAt": "2020-10-07T09:51:11.000Z"
                            }
                          ]
                        },
                        "count": {
                          "type": "integer",
                          "example": "2"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/cluster/{oceanClusterId}/rightSizing/suggestion": {
      "get": {
        "summary": "Get Right Sizing Recommendations",
        "description": "Get right-sizing recommendations for an Ocean cluster.\n",
        "operationId": "oceanEcsGetRightSizingRecommend",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean ECS Right Sizing Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "suggestedMemory": {
                                    "type": "integer",
                                    "example": 2
                                  },
                                  "requestedMemory": {
                                    "type": "integer",
                                    "example": 100
                                  },
                                  "serviceName": {
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "sg-test"
                                  },
                                  "suggestedCpu": {
                                    "type": "integer",
                                    "example": 0
                                  },
                                  "requestedCpu": {
                                    "type": "integer",
                                    "example": 128
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:ecs:cluster:rightSizing:resourceSuggestion"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/cluster/import": {
      "post": {
        "summary": "Upgrade Elastigroup to Ocean",
        "description": "Upgrade an Elastigroup with ECS integration into Ocean for ECS cluster.\n",
        "operationId": "oceanEcsUpgradeFromEG",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "groupId",
            "example": "sig-1234abcd",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The identifier of the Elastigroup to upgrade.\n"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/cluster/{oceanClusterId}/roll": {
      "post": {
        "summary": "Initiate Roll",
        "description": "Roll an entire Ocean cluster or roll subsets of the cluster by specifying launchSpecIds or instanceIds. Performing this request will start the roll immediately according to defined batches. Note that the first response for a successful request will indicate the start of a roll. In order to check the status of a roll, you can use the [GET Roll API](https://docs.spot.io/api//#operation/oceanEcsRollGetSingleRoll) using the roll identifier.\n",
        "operationId": "oceanEcsRollInit",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "title": "Roll",
                    "properties": {
                      "roll": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "batchSizePercentage": {
                                "type": "integer",
                                "description": "Value (in percent) to set size of batch in roll. Valid values are 0-100.\n",
                                "example": 20
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "comment": {
                                "type": "string",
                                "description": "Add a brief description for the roll. The comment is limited to 256 chars.\n",
                                "example": "This is why I rolled my cluster."
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "batchMinHealthyPercentage": {
                                "type": "integer",
                                "description": "Indicates the threshold of minimum healthy instances in single batch. If the amount of healthy instances in single batch is under the threshold, the cluster roll will fail. If exists, the parameter value will be in range of 1-100. In case of null as value, the default value in the backend will be 50%. Value of param should represent the number in percentage (%) of the batch.\n",
                                "example": 100,
                                "default": 50
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  {
                    "type": "object",
                    "title": "Roll with instance ids",
                    "properties": {
                      "roll": {
                        "allOf": [
                          {
                            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/properties/roll/allOf/0"
                          },
                          {
                            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/properties/roll/allOf/1"
                          },
                          {
                            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/properties/roll/allOf/2"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "instanceIds": {
                                "type": "array",
                                "description": "List of instance identifiers to be rolled. Each identifier is a string. Can be null. Cannot be used together with launchSpecIds.\n",
                                "items": {
                                  "type": "string",
                                  "example": "i-0003a99ffb566f039, i-0567a99ffb566f765"
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  {
                    "type": "object",
                    "title": "Roll with launch specification ids",
                    "properties": {
                      "roll": {
                        "allOf": [
                          {
                            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/properties/roll/allOf/0"
                          },
                          {
                            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/properties/roll/allOf/1"
                          },
                          {
                            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/properties/roll/allOf/2"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "launchSpecIds": {
                                "type": "array",
                                "description": "List of virtual node group identifiers to be rolled. Each identifier is a string. Can be null. Cannot be used together with instanceIds.\n",
                                "items": {
                                  "type": "string",
                                  "example": "ols-76694a7d, ols-56694a76"
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Rolls",
        "description": "List rolls of an Ocean cluster.\n",
        "operationId": "oceanEcsRollListRolls",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean ECS Roll Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "readOnly": true,
                                            "example": "scr-1234abcd"
                                          },
                                          "currentBatch": {
                                            "type": "integer",
                                            "readOnly": true,
                                            "example": 1,
                                            "description": "Batch number that is currenlty being deployed.\n"
                                          },
                                          "numOfBatches": {
                                            "type": "integer",
                                            "readOnly": true,
                                            "example": 2,
                                            "description": "Total number of batches the deployment will process.\n"
                                          },
                                          "progress": {
                                            "type": "object",
                                            "readOnly": true,
                                            "properties": {
                                              "unit": {
                                                "type": "string",
                                                "example": "percentage"
                                              },
                                              "value": {
                                                "type": "integer",
                                                "example": 10
                                              },
                                              "detailedStatus": {
                                                "type": "object",
                                                "properties": {
                                                  "oldInstances": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "instanceId": {
                                                          "type": "string"
                                                        },
                                                        "status": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    },
                                                    "example": [
                                                      {
                                                        "instanceId": "i-003a0281a24c01a20",
                                                        "status": "REPLACED"
                                                      },
                                                      {
                                                        "instanceId": "i-003a0281a24c01a21",
                                                        "status": "TO_BE_REPLACED"
                                                      },
                                                      {
                                                        "instanceId": "i-003a0281a24c01a22",
                                                        "status": "COULD_NOT_BE_REPLACED"
                                                      }
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "oceanId": {
                                            "type": "string",
                                            "example": "o-abcd1234",
                                            "readOnly": true,
                                            "description": "The Ocean ECS cluster that is being rolled.\n"
                                          },
                                          "createdAt": {
                                            "type": "string",
                                            "readOnly": true,
                                            "format": "date-time",
                                            "example": "2019-06-03T08:13:08.000Z",
                                            "description": "A timestamp of the roll creation.\n"
                                          },
                                          "updatedAt": {
                                            "type": "string",
                                            "readOnly": true,
                                            "format": "date-time",
                                            "example": "2019-06-10T15:06:13.000Z",
                                            "description": "The timestamp of the latest roll update.\n"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "status": {
                                            "type": "string",
                                            "description": "Sets the status of the roll.\n",
                                            "example": "IN_PROGRESS",
                                            "enum": [
                                              "IN_PROGRESS",
                                              "COMPLETED",
                                              "FAILED",
                                              "STOPPED"
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/properties/roll/allOf/1"
                                      },
                                      {
                                        "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/properties/roll/allOf/2"
                                      },
                                      {
                                        "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/1/properties/roll/allOf/3"
                                      }
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/oneOf/0/allOf/0"
                                      },
                                      {
                                        "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/oneOf/0/allOf/1"
                                      },
                                      {
                                        "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/properties/roll/allOf/1"
                                      },
                                      {
                                        "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/properties/roll/allOf/2"
                                      },
                                      {
                                        "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/2/properties/roll/allOf/3"
                                      }
                                    ]
                                  }
                                ]
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:ecs:cluster:roll"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/cluster/{oceanClusterId}/roll/{ROLL_ID}": {
      "put": {
        "summary": "Update Roll",
        "description": "Update a roll of an Ocean cluster. Performing the request will stop the next batch in a roll.\n",
        "operationId": "oceanEcsRollUpdate",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "in": "path",
            "name": "ROLL_ID",
            "example": "scr-12345abc",
            "description": "Ocean Cluster Roll identifier\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "description": "Sets the status of the roll.\n",
                        "example": "STOPPED",
                        "enum": [
                          "STOPPED"
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get Roll",
        "description": "Get status for roll of an Ocean cluster.\n",
        "operationId": "oceanEcsRollGetSingleRoll",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll~1%7BROLL_ID%7D/put/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/cluster/{oceanClusterId}/containerInstances": {
      "get": {
        "summary": "Get Cluster Container Instances",
        "description": "Get container instances data of an Ocean cluster.\n",
        "operationId": "oceanAwsEcsGetContainerInstances",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D~1nodes/get/parameters/2"
          },
          {
            "in": "query",
            "name": "instanceId",
            "schema": {
              "type": "string"
            },
            "example": "i-123",
            "description": "Get a specific container instance ec2 instance id."
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean AWS Container Instances Data Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/ecs/cluster/o-12345abc/containerInstances"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "AWS Ocean ECS Container Instance Data",
                                "description": "Container Instance of Ocean cluster.",
                                "properties": {
                                  "instanceId": {
                                    "type": "string",
                                    "example": "i-123",
                                    "description": "The AWS instance id of this container instance.\n"
                                  },
                                  "instanceType": {
                                    "type": "string",
                                    "example": "c3.large",
                                    "description": "The AWS instance type of this container instance.\n"
                                  },
                                  "availabilityZone": {
                                    "type": "string",
                                    "example": "us-west-2b",
                                    "description": "The AWS availability zone of this container instance.\n"
                                  },
                                  "launchSpecId": {
                                    "type": "string",
                                    "example": "ols-123",
                                    "description": "The container instance's launch spec id.\n"
                                  },
                                  "launchSpecName": {
                                    "type": "string",
                                    "example": "dev-launchSpec",
                                    "description": "The container instance's launch spec name.\n"
                                  },
                                  "lifeCycle": {
                                    "type": "string",
                                    "enum": [
                                      "Spot",
                                      "OD",
                                      "OD (RI)"
                                    ],
                                    "example": "Spot",
                                    "description": "The AWS lifeCycle of this container instance.\n"
                                  },
                                  "publicIp": {
                                    "type": "string",
                                    "example": "1.2.3.4",
                                    "description": "This container instance's public ip.\n"
                                  },
                                  "workloadRequestedCpuUnit": {
                                    "type": "number",
                                    "format": "double",
                                    "example": 1320,
                                    "description": "The amount of cpu units requested by the ECS workload.\n"
                                  },
                                  "workloadRequestedMemoryInMiB": {
                                    "type": "number",
                                    "example": 500,
                                    "description": "The amount of memory in MiB requested by the ECS workload.\n"
                                  },
                                  "workloadRequestedGpu": {
                                    "type": "number",
                                    "example": 1,
                                    "description": "The amount of gpus requested by the ECS workload.\n"
                                  },
                                  "headroomRequestedCpuUnit": {
                                    "type": "number",
                                    "example": 1320,
                                    "description": "The amount of cpu units saved for headroom.\n"
                                  },
                                  "headroomRequestedMemoryInMiB": {
                                    "type": "number",
                                    "example": 512,
                                    "description": "The amount of memory in MiB saved for headroom.\n"
                                  },
                                  "headroomRequestedGpu": {
                                    "type": "number",
                                    "example": 1,
                                    "description": "The amount of gpus saved for headroom.\n"
                                  },
                                  "registeredCpuUnit": {
                                    "type": "number",
                                    "example": 2000,
                                    "description": "The amount of registered cpu units as registered in ECS.\n"
                                  },
                                  "registeredMemoryInMiB": {
                                    "type": "number",
                                    "example": 3646.1,
                                    "description": "The amount of registered memory in MiB as registered in ECS.\n"
                                  },
                                  "registeredGpu": {
                                    "type": "number",
                                    "example": 1,
                                    "description": "The amount of registered gpus as registered in ECS.\n"
                                  },
                                  "containerInstanceId": {
                                    "type": "string",
                                    "example": "abcdefg",
                                    "description": "The ECS container instance id.\n"
                                  },
                                  "registrationStatus": {
                                    "type": "string",
                                    "enum": [
                                      "Registered",
                                      "Registering",
                                      "Failed"
                                    ],
                                    "example": "Registered",
                                    "description": "The registration status of this container instance.\n"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "example": "2021-10-01T05:51:06.000Z",
                                    "description": "When was this container instance's EC2 instance was created at.\n"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:ecs:containerInstances"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/launchSpec": {
      "post": {
        "summary": "Create VNG",
        "description": "Create a new Ocean ECS virtual node group in the specified account.\n",
        "operationId": "OceanECSLaunchSpecCreate",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "launchSpec"
                    ],
                    "properties": {
                      "launchSpec": {
                        "type": "object",
                        "description": "AWS Cluster Virtual Node Group (VNG).\n",
                        "required": [
                          "oceanId",
                          "name",
                          "imageId"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "readOnly": true,
                            "example": "ols-1234abcd"
                          },
                          "oceanId": {
                            "type": "string",
                            "description": "The Ocean cluster identifier. Required for to create a virtual node group.\n",
                            "example": "o-1234abcd"
                          },
                          "name": {
                            "type": "string",
                            "description": "User given name of the virtual node group.\n",
                            "example": "mySpecLauncher"
                          },
                          "imageId": {
                            "type": "string",
                            "description": "Set image identifier. Can be null.\n",
                            "example": "img2"
                          },
                          "userData": {
                            "type": "string",
                            "format": "byte",
                            "description": "Base64-encoded MIME user data to make available to the instances.\n",
                            "example": "dXNlcmJhc2g2NGVuY29kZWQ="
                          },
                          "securityGroupIds": {
                            "type": "array",
                            "description": "Set security groups. Each element in array should be a security group identifier.\n",
                            "items": {
                              "type": "string",
                              "example": "sg1, sg3"
                            }
                          },
                          "instanceTypes": {
                            "type": "array",
                            "description": "An array of supported instance types for the VNG.\n",
                            "items": {
                              "type": "string",
                              "example": "c3.2xlarge, c4.2xlarge"
                            }
                          },
                          "subnetIds": {
                            "type": "array",
                            "description": "Set the subnets in the VNG. Each element in the array should be a subnet identifier.\n",
                            "items": {
                              "type": "string",
                              "example": "subnet-01234566789abcdef, subnet-9876543210ghijkl"
                            }
                          },
                          "iamInstanceProfile": {
                            "type": "array",
                            "description": "The instance profile iamRole object.\n",
                            "items": {
                              "oneOf": [
                                {
                                  "title": "arn",
                                  "type": "string",
                                  "description": "The iamRole ARN. If set, do not set launchSpec.iamInstanceProfile.name\n",
                                  "example": "arn:aws:iam::123456789123:instance-profile"
                                },
                                {
                                  "title": "name",
                                  "type": "string",
                                  "description": "The iamRole name. If set, do not set launchSpec.iamInstanceProfile.arn\n",
                                  "example": "my-iamInstance-Profile"
                                }
                              ]
                            }
                          },
                          "attributes": {
                            "description": "Add attributes to the cluster.\n",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "key",
                                "value"
                              ],
                              "properties": {
                                "key": {
                                  "description": "Give the attribute a key.\n",
                                  "type": "string",
                                  "example": "key1"
                                },
                                "value": {
                                  "description": "Set the value of the attribute.\n",
                                  "type": "string",
                                  "example": "value1"
                                }
                              }
                            }
                          },
                          "autoScale": {
                            "type": "object",
                            "properties": {
                              "headrooms": {
                                "description": "Set custom headroom per VNG. Provide a list of launchSpec.autoscale.headroom objects.\n",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "cpuPerUnit": {
                                      "description": "Configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.\n",
                                      "type": "integer",
                                      "example": 1024
                                    },
                                    "memoryPerUnit": {
                                      "description": "Configure the amount of memory (MiB) to allocate the headroom.\n",
                                      "type": "integer",
                                      "example": 512
                                    },
                                    "numOfUnits": {
                                      "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n",
                                      "type": "integer",
                                      "example": 2
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "tags": {
                            "description": "List of kay-value pairs of tags.\n",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "tagKey": {
                                  "type": "string",
                                  "description": "Set the tag key.\n",
                                  "example": "Creator"
                                },
                                "tagValue": {
                                  "type": "string",
                                  "description": "Set the tag value.\n",
                                  "example": "John Doe"
                                }
                              }
                            }
                          },
                          "blockDeviceMappings": {
                            "type": "array",
                            "description": "Block devices that are exposed to the instance. You can specify virtual devices and EBS volumes. This parameter and rootVolumeSize cannot be in the configuration at the same time. This parameter can be null, but if not null, it must contain at least one block device.\n",
                            "items": {
                              "type": "object",
                              "properties": {
                                "deviceName": {
                                  "type": "string",
                                  "description": "Set device name.\n",
                                  "example": "/dev/xvda"
                                },
                                "ebs": {
                                  "type": "object",
                                  "description": "Set EBS properties.\n",
                                  "properties": {
                                    "throughput": {
                                      "type": "integer",
                                      "minimum": 125,
                                      "maximum": 1000,
                                      "example": 125,
                                      "description": "The amount of data transferred to or from a storage device per second. You can use this parameter only if volumetype=‘gp3’.\n"
                                    },
                                    "deleteOnTermination": {
                                      "type": "boolean",
                                      "description": "Flag to delete the EBS on instance termination.\n",
                                      "example": false
                                    },
                                    "encrypted": {
                                      "type": "boolean",
                                      "example": false
                                    },
                                    "iops": {
                                      "type": "integer",
                                      "description": "Must be greater than or equal to 0.\n",
                                      "example": 1
                                    },
                                    "kmsKeyId": {
                                      "type": "string",
                                      "example": "alias/aws/ebs"
                                    },
                                    "snapshotId": {
                                      "type": "string",
                                      "example": "snap-abcdefghi111110"
                                    },
                                    "volumeType": {
                                      "type": "string",
                                      "description": "Set volume type.\n",
                                      "example": "gp2"
                                    },
                                    "volumeSize": {
                                      "type": "integer",
                                      "description": "Set volume size (in GB). When using this property, you cannot use dynamicVolumeSize. You must use one or the other. Volume size should be greater than or equal to the size configured in the AMI.\n"
                                    },
                                    "dynamicVolumeSize": {
                                      "type": "object",
                                      "required": [
                                        "baseSize",
                                        "resource"
                                      ],
                                      "description": "Set dynamic volume size properties. When using this object, you cannot use volumeSize. You must use one or the other.\n",
                                      "properties": {
                                        "baseSize": {
                                          "type": "integer",
                                          "description": "Initial size per volume.\n",
                                          "example": 50
                                        },
                                        "resource": {
                                          "type": "string",
                                          "example": "CPU"
                                        },
                                        "sizePerResourceUnit": {
                                          "type": "integer",
                                          "description": "Additional size per resource unit (in GB). For example: if baseSize=50, and sizePerResourceUnit=20, and an instance with 2 CPU is launched, its disk size will be: 90 GB.\n",
                                          "example": 20
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "restrictScaleDown": {
                            "type": "boolean",
                            "description": "When set to True, the VNG container instances will be treated as if all tasks running have the [restrict-scale-down label](https://docs.spot.io/ocean/features/labels-and-taints). Therefore, Ocean will not scale down container instances unless they are empty.\n",
                            "example": false
                          },
                          "instanceMetadataOptions": {
                            "type": "object",
                            "title": "instanceMetadataOptions",
                            "required": [
                              "httpTokens"
                            ],
                            "description": "Ocean instance metadata options object for [IMDSv2](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-service.html).\n",
                            "properties": {
                              "httpTokens": {
                                "type": "string",
                                "description": "Determines if a signed token is required or not.\n",
                                "enum": [
                                  "optional",
                                  "required"
                                ],
                                "example": "optional"
                              },
                              "httpPutResponseHopLimit": {
                                "type": "integer",
                                "description": "An integer from 1 through 64.\nThe desired HTTP PUT response hop limit for instance metadata requests.\nThe larger the number, the further the instance metadata requests can travel.\n",
                                "example": 12
                              }
                            }
                          },
                          "scheduling": {
                            "type": "object",
                            "description": "An object used to define scheduled tasks such as a manual headroom update.\n",
                            "title": "Ocean Scheduling",
                            "properties": {
                              "tasks": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "title": "Task Definition",
                                  "required": [
                                    "isEnabled",
                                    "cronExpression",
                                    "taskType"
                                  ],
                                  "properties": {
                                    "isEnabled": {
                                      "type": "boolean",
                                      "example": true,
                                      "description": "Describes whether the task is enabled. When True, the task runs. When False, it does not run. Required for launchSpec.scheduling.tasks. In case automatic headroom is configured, please make sure to set autoScaler.enableAutomaticAndManualHeadroom on Ocean level to true in order to make sure that the manual headroom would be affective.\n"
                                    },
                                    "cronExpression": {
                                      "type": "string",
                                      "example": "0 1 * * *",
                                      "description": "A valid cron expression. For example : \" * * * * * \". The cron job runs in UTC time and is in Unix cron format. (See the Cron Expression Validator Script.)\n"
                                    },
                                    "taskType": {
                                      "type": "string",
                                      "example": "manualHeadroomUpdate",
                                      "enum": [
                                        "manualHeadroomUpdate"
                                      ],
                                      "description": "The activity that you are scheduling. Valid values: \"manualHeadroomUpdate\". Required for launchSpec.scheduling.tasks.\n"
                                    },
                                    "config": {
                                      "description": "The config of this scheduled task. Depends on the value of `taskType`.",
                                      "oneOf": [
                                        {
                                          "type": "object",
                                          "title": "manualHeadroomUpdate",
                                          "required": [
                                            "headrooms"
                                          ],
                                          "properties": {
                                            "headrooms": {
                                              "description": "Set custom headroom per VNG. Provide a list of launchSpec.autoscale.headroom objects.\n",
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "cpuPerUnit": {
                                                    "description": "Configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.\n",
                                                    "type": "integer"
                                                  },
                                                  "memoryPerUnit": {
                                                    "description": "Configure the amount of memory (MiB) to allocate the headroom.\n",
                                                    "type": "integer"
                                                  },
                                                  "numOfUnits": {
                                                    "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n",
                                                    "type": "integer"
                                                  }
                                                }
                                              },
                                              "example": [
                                                {
                                                  "cpuPerUnit": 1024,
                                                  "memoryPerUnit": 512,
                                                  "numOfUnits": 2
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "strategy": {
                            "type": "object",
                            "description": "Similar to a strategy for an Ocean cluster, but applying only to a virtual node group.\n",
                            "properties": {
                              "spotPercentage": {
                                "type": "integer",
                                "description": "The desired percentage of the Spot instances out of all running container instances. Defaults to 100 when not set.\\\nOnly available when the field is **not** set in the cluster directly (Ocean.Strategy.spotPercentage)\n",
                                "minimum": 0,
                                "maximum": 100,
                                "example": 70,
                                "default": 100
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2019-06-03T08:13:08.000Z"
                          },
                          "updatedAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2019-06-10T15:06:13.000Z"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Launch Spec Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/ecs/launchSpec"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec/post/requestBody/content/application~1json/schema/allOf/0/properties/launchSpec"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:ecs:launchSpec"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List VNGs",
        "description": "Get all the custom VNGs for all Ocean clusters in the specified account.\n",
        "operationId": "OceanECSLaunchSpecList",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Launch Spec Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/ecs/launchSpec"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec/post/requestBody/content/application~1json/schema/allOf/0/properties/launchSpec"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:ecs:launchSpec"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/launchSpec/{oceanLaunchSpecId}": {
      "get": {
        "summary": "Get VNG",
        "description": "Get a specific custom launch configuration for an Ocean cluster in the specified account.\n",
        "operationId": "OceanECSLaunchSpecGet",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "oceanLaunchSpecId",
            "description": "Ocean cluster launch specification identifier.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Launch Spec Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/ecs/launchSpec/ols-12345abc"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec/post/requestBody/content/application~1json/schema/allOf/0/properties/launchSpec"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:ecs:launchSpec"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete VNG",
        "description": "Delete a specified virtual node group in an Ocean cluster.\n",
        "operationId": "OceanECSLaunchSpecDelete",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec~1%7BoceanLaunchSpecId%7D/get/parameters/1"
          },
          {
            "in": "query",
            "name": "deleteContainerInstances",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "When set to \"true\", all instances belonging to the deleted VNG will be drained, detached, and terminated.\n",
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Launch Specification Delete Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/ecs/launchSpec/ols-12345abc"
                            },
                            "method": {
                              "example": "DELETE"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update VNG",
        "description": "Get a specific custom launch configuration for an Ocean cluster in the specified account.\n",
        "operationId": "OceanECSLaunchSpecUpdate",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec~1%7BoceanLaunchSpecId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/2"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec/post/requestBody/content/application~1json/schema/allOf/0"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Launch Spec Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/ecs/launchSpec/ols-12345abc"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec/post/requestBody/content/application~1json/schema/allOf/0/properties/launchSpec"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:ecs:launchSpec"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/cluster/{oceanClusterId}/fargateMigration": {
      "post": {
        "summary": "Import Fargate To Existing Ocean Cluster",
        "description": "Import a Fargate service into an existing Ocean ECS cluster.\nUpon Fargate service import, Spot clones the selected Fargate services and runs them with the same VPC & Subnet settings on EC2 spot Instances.\nOcean will automatically and seamlessly predict and replace spot instances before they are interrupted, ensuring the uptime of the cluster and providing cost-savings of up to 90% over Fargate-enabled ECS clusters.\n",
        "operationId": "oceanEcsFargateImportToExist",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "config",
                    "properties": {
                      "services": {
                        "type": "array",
                        "description": "List of Fargate services by their names. Must contain at least one service.\n",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "service_1",
                          "service_2"
                        ]
                      },
                      "simpleNewServiceNames": {
                        "type": "boolean",
                        "description": "Flag to align imported service names in the following format: sfm_\n",
                        "example": false,
                        "default": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean ECS Fargate Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "efm-d235b4d8"
                                  },
                                  "oceanId": {
                                    "type": "string",
                                    "example": "o-fgdfgdf"
                                  },
                                  "state": {
                                    "type": "string",
                                    "example": "STARTING"
                                  },
                                  "config": {
                                    "type": "object",
                                    "properties": {
                                      "services": {
                                        "type": "array",
                                        "description": "List of Fargate services by their names. Must contain at least one service.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "example": [
                                          "service_1",
                                          "service_2"
                                        ]
                                      }
                                    }
                                  },
                                  "simpleNewServiceNames": {
                                    "type": "boolean",
                                    "description": "Flag to align imported service names in the following format: sfm_\n",
                                    "example": false,
                                    "default": false
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/cluster/{oceanClusterId}/fargateMigration/serviceDiscovery": {
      "get": {
        "summary": "Get Fargate Services Discovery",
        "description": "Get existing Fargate services in the ECS cluster.\n",
        "operationId": "oceanEcsFargateGetServicesDiscovery",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean ECS Fargate Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "ecsClusterName": {
                                    "type": "string",
                                    "example": "EcsTestCluster"
                                  },
                                  "ecsClusterRegion": {
                                    "type": "string",
                                    "example": "us-east-2"
                                  },
                                  "serviceNames": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "example": [
                                        "test_with_1",
                                        "test_without"
                                      ]
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "type": "string",
                              "example": "spotinst:ocean:aws:ecs:fargateMigration:serviceDiscovery"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/cluster/{oceanClusterId}/fargateMigration/status": {
      "get": {
        "summary": "Get Fargate Migration Status",
        "description": "Get the status of a Fargate service import.\n",
        "operationId": "oceanEcsFargateGetMigrationStatus",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean ECS Fargate Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "ecsClusterName": {
                                    "type": "string",
                                    "example": "EcsTestCluster"
                                  },
                                  "ecsClusterRegion": {
                                    "type": "string",
                                    "example": "us-east-2"
                                  },
                                  "state": {
                                    "type": "string",
                                    "example": "FINISHED"
                                  },
                                  "importedServices": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "example": "test_with_1"
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "type": "string",
                              "example": "spotinst:ocean:aws:ecs:fargateMigration:status"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/cluster/fargate/import": {
      "post": {
        "summary": "Import Fargate To New Ocean Cluster",
        "description": "This API copies the configuration from a Fargate service into the corresponding fields of an Ocean object.\n(This process is commonly referred to as importing.)\nThe API returns an Ocean object that is suitable for use in the [Create API](https://docs.spot.io/api/#operation/oceanEcsCreate/) to create a new Ocean cluster based on your Fargate configuration.\nIf you are migrating a Fargate service that has tags, you must run the Opt In procedure on your Amazon account or IAM role.\nThis is required in order to obtain the necessary Amazon Resource Name (ARN) and resource identifier format for your ECS tasks, container instances, and services.\nFor more information about the required ARN and the Opt In procedure, see the following pages:\n\n* [Amazon Resource Names (ARNs) and identifiers](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-account-settings.html#ecs-resource-ids)\n* [Migrating your Amazon ECS deployment to the new ARN and resource identifier format](https://aws.amazon.com/blogs/compute/migrating-your-amazon-ecs-deployment-to-the-new-arn-and-resource-id-format-2/)\n\nThe API requires one of the following permissions to be defined in Spot -\n\n* Permission: Account Editor (See [User Roles](https://docs.spot.io/administration/users/)) or\n* Action: ocean:importOceanFromFargate (See [Access Policies](https://docs.spot.io/administration/access-policies/))\n",
        "operationId": "oceanEcsFargateImportToNew",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "oceanClusterName",
                      "ecsClusterName",
                      "region",
                      "services"
                    ],
                    "properties": {
                      "oceanClusterName": {
                        "type": "string",
                        "description": "Name of the cluster in new Ocean object.",
                        "example": "fargate-import-ocean"
                      },
                      "ecsClusterName": {
                        "type": "string",
                        "description": "Name of the cluster in ECS.",
                        "example": "fargateTestCluster"
                      },
                      "region": {
                        "type": "string",
                        "description": "Name of the AWS region the ECS cluster is in.",
                        "example": "us-west-1"
                      },
                      "services": {
                        "type": "array",
                        "description": "Name of the ECS Fargate service to be imported.",
                        "items": {
                          "type": "array",
                          "items": {
                            "allOf": [
                              {
                                "type": "string",
                                "example": "service_1"
                              },
                              {
                                "type": "string",
                                "example": "service_2"
                              }
                            ]
                          }
                        }
                      },
                      "keyPair": {
                        "type": "string",
                        "description": "Specify a key pair to attach to the services.",
                        "example": "spot-prod"
                      },
                      "tags": {
                        "type": "array",
                        "description": "Set tags for the service. Items should be unique.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "tagKey": {
                              "type": "string",
                              "description": "The tag's key.",
                              "example": "env"
                            },
                            "tagValue": {
                              "type": "string",
                              "description": "The tag's name.",
                              "example": "prod"
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean ECS Import Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "cluster"
                                ],
                                "properties": {
                                  "cluster": {
                                    "type": "object",
                                    "title": "ECS Ocean",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "Ocean::my-elastigroup-name",
                                        "description": "Add a name for the Ocean cluster.\n"
                                      },
                                      "clusterName": {
                                        "type": "string",
                                        "example": "my-ECS-cluster-name",
                                        "description": "ECS cluster name.\n"
                                      },
                                      "autoScaler": {
                                        "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/autoScaler"
                                      },
                                      "region": {
                                        "type": "string",
                                        "example": "us-east-1",
                                        "description": "Select the region for the Ocean cluster to run in.\n"
                                      },
                                      "capacity": {
                                        "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/capacity"
                                      },
                                      "strategy": {
                                        "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/strategy"
                                      },
                                      "compute": {
                                        "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/compute"
                                      },
                                      "scheduling": {
                                        "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/scheduling"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:ecs"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/clusterRoll": {
      "post": {
        "summary": "ECS Initiate Cluster Roll",
        "description": "Initiate a cluster roll for an Elastigroup with ECS cluster\n",
        "operationId": "elastigroupAwsEcsInitiateClusterRoll",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "roll"
                    ],
                    "properties": {
                      "roll": {
                        "type": "object",
                        "required": [
                          "batchSizePercentage"
                        ],
                        "properties": {
                          "batchSizePercentage": {
                            "type": "integer",
                            "example": 20,
                            "description": "Size of patch for roll as a percent\n"
                          },
                          "comment": {
                            "type": "string",
                            "example": "This is why I deployed my cluster.",
                            "description": "Add a comment description for the roll. comment should be limit to 256 chars.\n"
                          },
                          "batchMinHealthyPercentage": {
                            "type": "integer",
                            "default": 50,
                            "example": 100,
                            "description": "Indicates the threshold of minimum healthy instances in single batch. If the amount of healthy instances in single batch is under the threshold, the cluster roll will fail. If exists, the parameter value will be in range of 1-100. In case of null as value, the default value in the backend will be 50%. Value of param should represent the number in percentage (%) of the batch.\n"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D~1clusterRoll/put/responses/200"
          },
          "400": {
            "description": "Bad Request - Deployment already in progress",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "integer",
                                  "example": 400,
                                  "description": "HTTP status code assigned to this response\n"
                                },
                                "message": {
                                  "type": "string",
                                  "example": "Bad Request",
                                  "description": "HTTP status message for the respective status code\n"
                                }
                              }
                            },
                            "errors": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string",
                                    "example": "DEPLOYMENT_ALREADY_IN_PROGRESS"
                                  },
                                  "message": {
                                    "type": "string",
                                    "example": "A group roll is currently running. Cannot start cluster roll until the group roll completes."
                                  }
                                }
                              }
                            },
                            "count": {
                              "type": "integer",
                              "example": 1,
                              "description": "Size of the data object array\n"
                            },
                            "kind": {
                              "type": "string",
                              "description": "The data type of each item in the response\n"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "ECS Update Cluster Roll Status",
        "description": "Update a running ECS cluster roll status\n",
        "operationId": "elastigroupAwsEcsUpdateClusterRoll",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "roll"
                    ],
                    "properties": {
                      "roll": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string",
                            "example": "STOPPED",
                            "description": "Valid values: \"STOPPED\"\n"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "scr-5aaf854e"
                                  },
                                  "status": {
                                    "type": "string",
                                    "example": "IN_PROGRESS",
                                    "enum": [
                                      "IN_PROGRESS",
                                      "COMPLETED",
                                      "FAILED",
                                      "STOPPED"
                                    ]
                                  },
                                  "currentBatch": {
                                    "type": "integer",
                                    "example": 1
                                  },
                                  "numOfBatches": {
                                    "type": "integer",
                                    "example": 5
                                  },
                                  "comment": {
                                    "type": "string",
                                    "example": "This is why I deployed my cluster."
                                  },
                                  "batchMinHealthyPercentage": {
                                    "type": "integer",
                                    "example": 100
                                  },
                                  "progress": {
                                    "type": "object",
                                    "properties": {
                                      "unit": {
                                        "type": "string",
                                        "example": "percentage"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "example": 0
                                      },
                                      "detailedStatus": {
                                        "type": "object",
                                        "properties": {
                                          "oldInstances": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "instanceId": {
                                                  "type": "string"
                                                },
                                                "status": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "example": [
                                              {
                                                "instanceId": "i-003a0281a24c01a20",
                                                "status": "REPLACED"
                                              },
                                              {
                                                "instanceId": "i-003a0281a24c01a21",
                                                "status": "TO_BE_REPLACED"
                                              },
                                              {
                                                "instanceId": "i-003a0281a24c01a22",
                                                "status": "COULD_NOT_BE_REPLACED"
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "groupId": {
                                    "type": "string",
                                    "example": "sig-43a8a5ee"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "example": "2019-03-24T15:46:09.000Z"
                                  },
                                  "updatedAt": {
                                    "type": "string",
                                    "example": "2019-03-24T15:46:09.000Z"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "ECS Get All Cluster Rolls Per Elastigroup",
        "description": "Get status for every ECS cluster rolls in given Elastigroup\n",
        "operationId": "elastigroupAwsEcsGetAllClusterRollsPerElastigroup",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D~1clusterRoll/put/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/clusterRoll/{rollId}": {
      "get": {
        "summary": "ECS Get Cluster Roll Status by Roll ID",
        "description": "Get status for specific ECS cluster rolls in given Elastigroup\n",
        "operationId": "elastigroupAwsEcsGetClusterRollStatusByRollID",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          },
          {
            "in": "query",
            "name": "ROLL_ID",
            "required": true,
            "description": "The cluster roll ID you want to query\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D~1clusterRoll/put/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/beanstalk/maintenance/start": {
      "put": {
        "summary": "Start Beanstalk Maintenance",
        "description": "Put your Beanstslk Elastigroup into maintenance mode, before you start updating the beanstalk configuration.\n",
        "operationId": "elastigroupAwsStartBeanstalkMaintenance",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "groupId",
            "example": "sig-12345",
            "description": "The Spot Elastigroup ID \n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/beanstalk/maintenance/finish": {
      "put": {
        "summary": "Finish Beanstalk Maintenance",
        "description": "Finish maintenance mode, and trigger a blue-green deployment.\n",
        "operationId": "elastigroupAwsFinishBeanstalkMaintenance",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/beanstalk/maintenance/status": {
      "get": {
        "summary": "Get Beanstalk Maintenance Status",
        "description": "Get the group maintenance status.<ul>\n<li>If the status is ACTIVE: putting the group in maintenance mode is allowed.</li> <li>If the status is AWAIT_USER_UPDATE: the group is pending for manually finishing maintenance mode.</li> <li>If the status is CANCELING_MAINTENANCE_MODE: the group is in the process of canceling maintenance mode.</li> </ul>\n",
        "operationId": "elastigroupAwsBeanstalkGetMaintenance",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "type": "string",
                                    "example": "AWAIT_USER_UPDATE"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:ec2:beanstalk:status"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/beanstalk/import": {
      "get": {
        "summary": "Get Beanstalk Configuration",
        "description": "<ul> <li>Get your Beanstalk environment configuration from AWS. This call is typically used as the initial step in importing your existing Beanstalk configuration to an Elastigroup.</li> <li> Note: To optimize the availability of your Beanstalk workload on Elastigroup, instance types similar to those running in your existing configuration are automatically added to the response under instanceTypes. Should these instance types not meet your requirements you may remove them.</li> <ul>\n",
        "operationId": "elastigroupAwsGetBeanstalkConfiguration",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "environmentId",
            "example": "e-12345",
            "required": true,
            "description": "The Beanstalk name\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "region",
            "example": "us-east-1",
            "required": true,
            "description": "The AWS region for the Beanstalk\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "group"
                                ],
                                "properties": {
                                  "group": {
                                    "type": "object",
                                    "title": "AWS Elastigroup",
                                    "required": [
                                      "name"
                                    ],
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "First Elastigroup",
                                        "description": "The name of the Elastigroup\n"
                                      },
                                      "description": {
                                        "type": "string",
                                        "example": "This is the first Spot Elastigroup of many",
                                        "description": "The detailed purpose for this Elastigroup\n"
                                      },
                                      "capacity": {
                                        "type": "object",
                                        "title": "Capacity Units",
                                        "required": [
                                          "target"
                                        ],
                                        "properties": {
                                          "minimum": {
                                            "type": "integer",
                                            "example": 1,
                                            "description": "The minimum number of units Elastigroup will scale down to        \n"
                                          },
                                          "maximum": {
                                            "type": "integer",
                                            "example": 10,
                                            "description": "The maximum number of units Elastigroup will scale up to\n"
                                          },
                                          "target": {
                                            "type": "integer",
                                            "example": 5,
                                            "description": "Number of units Elastigroup will start with\n"
                                          }
                                        }
                                      },
                                      "strategy": {
                                        "type": "object",
                                        "properties": {
                                          "risk": {
                                            "type": "integer",
                                            "example": 100
                                          }
                                        }
                                      },
                                      "compute": {
                                        "type": "object",
                                        "properties": {
                                          "instanceTypes": {
                                            "type": "object",
                                            "properties": {
                                              "ondemand": {
                                                "type": "string",
                                                "example": "t2.micro"
                                              },
                                              "spot": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "availabilityZones": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "example": "us-west-2a"
                                                }
                                              }
                                            }
                                          },
                                          "launchSpecification": {
                                            "type": "object",
                                            "properties": {
                                              "loadBalancersConfig": {
                                                "type": "object",
                                                "properties": {
                                                  "loadBalancers": {
                                                    "type": "array",
                                                    "items": {
                                                      "anyOf": [
                                                        {
                                                          "type": "object",
                                                          "title": "MULTAI_TARGET_SET",
                                                          "properties": {
                                                            "name": {
                                                              "type": "string",
                                                              "example": "awseb-AWSEB-12345"
                                                            },
                                                            "arn": {
                                                              "type": "string",
                                                              "example": "arn:aws:elasticloadbalancing:us-west-2:842422002533:targetgroup/awseb-AWSEB-12345/245f20215d9ba7fc"
                                                            },
                                                            "type": {
                                                              "type": "string",
                                                              "example": "TARGET_GROUP"
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "object",
                                                          "title": "APPLICATION_GATEWAY",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string",
                                                              "example": "APPLICATION_GATEWAY",
                                                              "enum": [
                                                                "APPLICATION_GATEWAY"
                                                              ]
                                                            },
                                                            "resourceGroupName": {
                                                              "type": "string",
                                                              "example": "azureResourceGroup"
                                                            },
                                                            "applicationGatewayName": {
                                                              "type": "string",
                                                              "example": "appGateway"
                                                            },
                                                            "backendPoolName": {
                                                              "type": "string",
                                                              "example": "backendpool490822"
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                }
                                              },
                                              "healthCheckType": {
                                                "type": "string",
                                                "example": "EC2"
                                              },
                                              "securityGroupIds": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string",
                                                  "example": "sg-12345"
                                                }
                                              },
                                              "monitoring": {
                                                "type": "boolean",
                                                "example": true
                                              },
                                              "imageId": {
                                                "type": "string",
                                                "example": "ami-12345"
                                              },
                                              "iamRole": {
                                                "type": "object",
                                                "properties": {
                                                  "name": {
                                                    "type": "string",
                                                    "example": "aws-elasticbeanstalk-ec2-role"
                                                  }
                                                }
                                              },
                                              "userData": {
                                                "type": "string",
                                                "example": "Q29udGVudC1UeXBlOiBtdWx0aXBhcnQvbWl4ZWQ7IGJvdW5kYXJ5PSI9PT09PT09PT09PT09PT01MTg5MDY1Mzc3MjIyODk4NDA3PT0iCk1JTUUtVmVyc2lvbjogMS4wCgotLT09PT09PT09PT09PT09PTUxODkwNjUzNzcyMjI4OTg0MDc9PQpDb250ZW50LVR5cGU6IHRleHQvY2xvdWQtY29uZmlnOyBjaGFyc2V0PSJ1cy1hc2NpaSIKTUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogN2JpdApDb250ZW50LURpc3Bvc2l0aW9uOiBhdHRhY2htZW50OyBmaWxlbmFtZT0iY2xvdWQtY29uZmlnLnR4dCIKCiNjbG91ZC1jb25maWcKcmVwb191cGdyYWRlOiBub25lCnJlcG9fcmVsZWFzZXZlcjogMjAxNy4wOQpjbG91ZF9maW5hbF9tb2R1bGVzOgogLSBbc2NyaXB0cy11c2VyLCBhbHdheXNdCgotLT09PT09PT09PT09PT09PTUxODkwNjUzNzcyMjI4OTg0MDc9PQpDb250ZW50LVR5cGU6IHRleHQveC1zaGVsbHNjcmlwdDsgY2hhcnNldD0idXMtYXNjaWkiCk1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IDdiaXQKQ29udGVudC1EaXNwb3NpdGlvbjogYXR0YWNobWVudDsgZmlsZW5hbWU9InVzZXItZGF0YS50eHQiCgojIS9iaW4vYmFzaApleGVjID4gPih0ZWUgLWEgL3Zhci9sb2cvZWItY2ZuLWluaXQubG9nfGxvZ2dlciAtdCBbZWItY2ZuLWluaXRdIC1zIDI"
                                              },
                                              "tags": {
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "tagKey": {
                                                      "type": "string",
                                                      "example": "env"
                                                    },
                                                    "tagValue": {
                                                      "type": "string",
                                                      "example": "staging"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "scaling": {
                                        "type": "object",
                                        "properties": {
                                          "up": {
                                            "type": "array",
                                            "items": {
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "policyName": {
                                                      "type": "string",
                                                      "example": "cpuScale"
                                                    },
                                                    "metricName": {
                                                      "type": "string",
                                                      "example": "NetworkOut"
                                                    },
                                                    "statistic": {
                                                      "type": "string",
                                                      "example": "average",
                                                      "enum": [
                                                        "average",
                                                        "sampleCount",
                                                        "sum",
                                                        "minimum",
                                                        "maximum"
                                                      ]
                                                    },
                                                    "unit": {
                                                      "type": "string",
                                                      "example": "bytes"
                                                    },
                                                    "threshold": {
                                                      "type": "integer",
                                                      "example": 6000000
                                                    },
                                                    "namespace": {
                                                      "type": "string",
                                                      "example": "AWS/EC2"
                                                    },
                                                    "source": {
                                                      "type": "string",
                                                      "example": "cloudWatch"
                                                    },
                                                    "period": {
                                                      "type": "integer",
                                                      "example": 300
                                                    },
                                                    "evaluationPeriods": {
                                                      "type": "integer",
                                                      "example": 1
                                                    },
                                                    "cooldown": {
                                                      "type": "integer",
                                                      "example": 360
                                                    },
                                                    "dimenstions": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "example": "resourceName"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "action": {
                                                      "type": "object",
                                                      "properties": {
                                                        "type": {
                                                          "type": "string",
                                                          "example": "adjustment"
                                                        },
                                                        "adjustment": {
                                                          "type": "string",
                                                          "example": 1
                                                        }
                                                      }
                                                    },
                                                    "operator": {
                                                      "type": "string",
                                                      "example": "gte",
                                                      "enum": [
                                                        "gt",
                                                        "gte",
                                                        "lt",
                                                        "lte"
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "policyName": {
                                                      "example": "awseb-e-12345-stack-AWSEBCloudwatchAlarmHigh-56QPITB3WUFM"
                                                    },
                                                    "threshold": {
                                                      "example": 6000000
                                                    },
                                                    "operator": {
                                                      "example": "gte"
                                                    },
                                                    "action": {
                                                      "type": "object",
                                                      "properties": {
                                                        "type": {
                                                          "type": "string",
                                                          "example": "adjustment",
                                                          "enum": [
                                                            "adjustment",
                                                            "setMinTarget",
                                                            "updateCapacity",
                                                            "percentageAdjustment"
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          },
                                          "down": {
                                            "type": "array",
                                            "items": {
                                              "allOf": [
                                                {
                                                  "$ref": "#/paths/~1aws~1ec2~1group~1beanstalk~1import/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/group/properties/scaling/properties/up/items/allOf/0"
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "policyName": {
                                                      "example": "awseb-e-12345-stack-AWSEBCloudwatchAlarmLow-UNGVBRKT0EHP"
                                                    },
                                                    "threshold": {
                                                      "example": 2000000
                                                    },
                                                    "operator": {
                                                      "example": "lte"
                                                    },
                                                    "action": {
                                                      "type": "object",
                                                      "properties": {
                                                        "type": {
                                                          "type": "string",
                                                          "example": "adjustment",
                                                          "enum": [
                                                            "adjustment",
                                                            "setMaxTarget",
                                                            "updateCapacity",
                                                            "percentageAdjustment"
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "thirdPartiesIntegration": {
                                        "type": "object",
                                        "properties": {
                                          "elasticBeanstalk": {
                                            "type": "object",
                                            "properties": {
                                              "environmentId": {
                                                "type": "string",
                                                "example": "e-12345"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:ec2:group"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/beanstalk/reimport": {
      "put": {
        "summary": "Beanstalk Reimport",
        "description": "Re-import the beanstalk configuration\n",
        "operationId": "elastigroupAwsBeanstalkReImport",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "group": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "example": "sig-123456"
                                      },
                                      "compute": {
                                        "type": "object",
                                        "properties": {
                                          "launchSpecification": {
                                            "type": "object",
                                            "properties": {
                                              "securityGroupIds": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string",
                                                  "example": "sg-b75343cf"
                                                }
                                              },
                                              "monitoring": {
                                                "type": "boolean",
                                                "example": false
                                              },
                                              "imageId": {
                                                "type": "string",
                                                "example": "ami-3c873e5c"
                                              },
                                              "iamRole": {
                                                "type": "object",
                                                "properties": {
                                                  "name": {
                                                    "type": "string",
                                                    "example": "aws-elasticbeanstalk-ec2-role"
                                                  }
                                                }
                                              },
                                              "userData": {
                                                "type": "string",
                                                "example": "Q29udGVudC1UeXBlOiBtdWx0aXBhcnQvbWl4ZWQ7IGJvdW5kYXJ5PSI9PT09PT09PT09PT09PT01MTg5MDY1Mzc3MjIyODk4NDA3PT0iCk1JTUUtVmVyc2lvbjogMS4wCgotLT09PT09PT09PT09PT09PTUxODkwNjUzNzcyMjI4OTg0MDc9PQpDb250ZW50LVR5cGU6IHRleHQvY2xvdWQtY29uZmlnOyBjaGFyc2V0PSJ1cy1hc2NpaSIKTUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogN2JpdApDb250ZW50LURpc3Bvc2l0aW9uOiBhdHRhY2htZW50OyBmaWxlbmFtZT0iY2xvdWQtY29uZmlnLnR4dCIKCiNjbG91ZC1jb25maWcKcmVwb191cGdyYWRlOiBub25lCnJlcG9fcmVsZWFzZXZlcjogMjAxNy4wOQpjbG91ZF9maW5hbF9tb2R1bGVzOgogLSBbc2NyaXB0cy11c2VyLCBhbHdheXNdCgotLT09PT09PT09PT09PT09PTUxODkwNjUzNzcyMjI4OTg0MDc9PQpDb250ZW50LVR5cGU6IHRleHQveC1zaGVsbHNjcmlwdDsgY2hhcnNldD0idXMtYXNjaWkiCk1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IDdiaXQKQ29udGVudC1EaXNwb3NpdGlvbjogYXR0YWNobWVudDsgZmlsZW5hbWU9InVzZXItZGF0YS50eHQiCgojIS9iaW4vYmFzaApleGVjID4gPih0ZWUgLWEgL3Zhci9sb2cvZWItY2ZuLWluaXQubG9nfGxvZ2dlciAtdCBbZWItY2ZuLWluaXRdIC1zIDI"
                                              },
                                              "blockDeviceMappings": {
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "deviceName": {
                                                      "type": "string",
                                                      "example": "/dev/xvdcz"
                                                    },
                                                    "ebs": {
                                                      "type": "object",
                                                      "properties": {
                                                        "deleteOnTermination": {
                                                          "type": "boolean",
                                                          "example": true
                                                        },
                                                        "volumeSize": {
                                                          "type": "integer",
                                                          "example": 12
                                                        },
                                                        "volumeType": {
                                                          "type": "string",
                                                          "example": "gp2"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:ec2:group"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/codeDeploy/blueGreenDeployment": {
      "post": {
        "summary": "Create CodeDeploy B/G Deployment",
        "description": "Trigger a Blue-Green deployment to your Elastigroup, this will initiate a deployment that will replace the existing instances(blue) with new ones(green).\n",
        "operationId": "elastigroupAwsCreateCodeDeployB_GDeployment",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D~1codeDeploy~1blueGreenDeployment/get/requestBody/content/application~1json/schema/allOf/0"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D~1codeDeploy~1blueGreenDeployment/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get CodeDeploy B/G Deployment",
        "description": "Get CodeDeploy Elastigroup deployment status for more information see: CodeDeploy B/G Deployment\n",
        "operationId": "elastigroupAwsGetCodeDeployB_GDeployment",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "deployment": {
                        "type": "object",
                        "properties": {
                          "timeout": {
                            "type": "integer",
                            "example": 20
                          },
                          "tags": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "tagKey": {
                                  "type": "string",
                                  "example": "ver"
                                },
                                "tagValue": {
                                  "type": "string",
                                  "example": "pink"
                                }
                              }
                            }
                          },
                          "deploymentGroups": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "applicationName": {
                                  "type": "string",
                                  "example": "appTest"
                                },
                                "deploymentGroupName": {
                                  "type": "string",
                                  "example": "deploymentGroupName"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "cdbg-3ccf1234"
                                  },
                                  "groupId": {
                                    "type": "string",
                                    "example": "sig-87231234"
                                  },
                                  "state": {
                                    "type": "string",
                                    "example": "STARTING"
                                  },
                                  "config": {
                                    "type": "object",
                                    "properties": {
                                      "timeout": {
                                        "type": "integer",
                                        "example": 20
                                      },
                                      "tags": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "tagKey": {
                                              "type": "string",
                                              "example": "ver"
                                            },
                                            "tagValue": {
                                              "type": "string",
                                              "example": "pink"
                                            }
                                          }
                                        }
                                      },
                                      "deploymentGroups": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "applicationName": {
                                              "type": "string",
                                              "example": "appTest"
                                            },
                                            "deploymentGroupName": {
                                              "type": "string",
                                              "example": "deploymentGroupName"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:ec2:group:codeDeploy:blueGreenDeployment"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/itf/migration": {
      "get": {
        "summary": "List Elastigroup ITF Listener Rule Migrations",
        "description": "Get all ITF listener rule migrations of a specific Elastigroup.\n",
        "operationId": "elastigroupAwsItfListenerRuleMigrationsGet",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/aws/ec2/group/sig-12345/itf/migration?spotinstAccountId=act-123456"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "title": "ITF Listener Rule Migration",
                                "type": "object",
                                "description": "Contains the details of an ITF listener rule migration process.\n",
                                "properties": {
                                  "createdAt": {
                                    "type": "string",
                                    "example": "2020-04-10T21:41:31.000Z"
                                  },
                                  "updatedAt": {
                                    "type": "string",
                                    "example": "2020-05-12T22:37:18.000Z"
                                  },
                                  "id": {
                                    "type": "string",
                                    "example": "ilrm-12345678"
                                  },
                                  "groupId": {
                                    "type": "string",
                                    "title": "Group Id",
                                    "example": "sig-12345"
                                  },
                                  "ruleArn": {
                                    "type": "string",
                                    "example": "arn:aws:elasticloadbalancing:us-west-2:123456789012:listener-rule/app/0123456789012345/1234567890123456/234567890123456"
                                  },
                                  "status": {
                                    "type": "string",
                                    "enum": [
                                      "Starting",
                                      "In progress",
                                      "Finished",
                                      "Failed"
                                    ],
                                    "example": "Starting"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:ec2:group:itf:migration"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/itf/migration/{migrationId}": {
      "put": {
        "summary": "Update ITF Listener Rule Migration",
        "description": "Update an ITF listener rule migration object of a specific Elastigroup.\n",
        "operationId": "elastigroupAwsItfListenerRuleMigrationUpdate",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "path",
            "name": "migrationId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the ITF listener rule migration to be updated.\n",
            "example": "ilrm-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "title": "ITF Listener Rule Migration Update Request",
                    "type": "object",
                    "description": "A request to update the status of an ITF listener rule migration process. Only 'USER_RETRY' is supported, allowing to retry a previously failed migration process (having a \"Failed\" status).\n",
                    "properties": {
                      "status": {
                        "type": "string",
                        "description": "The status to be updated. Valid value is \"USER_RETRY\".",
                        "enum": [
                          "USER_RETRY"
                        ],
                        "example": "USER_RETRY"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/aws/ec2/group/sig-12345/itf/migration/ilrm-12345678?spotinstAccountId=act-123456"
                            },
                            "method": {
                              "example": "UPDATE"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D~1itf~1migration/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:ec2:group:itf:migration"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/cluster": {
      "summary": "Ocean for AWS",
      "post": {
        "summary": "Create Cluster",
        "description": "**Prerequisites**\n\nThe Ocean Controller is used to monitor the cluster resources and report back to Ocean. The Ocean Controller is required for Ocean Cloud and On-Prem.<br />\n\nTo install the Ocean Controller, complete and run the following script on a machine with the kubectl command line tool installed and configured:\n\n```\n#!/usr/bin/env bash\ncurl -fsSL http://spotinst-public.s3.amazonaws.com/integrations/kubernetes/cluster-controller/scripts/init.sh | \\\nSPOTINST_TOKEN=<ENTER YOUR TOKEN HERE> \\\nSPOTINST_ACCOUNT=<ENTER YOUR SPOTINST ACCOUNT ID HERE> \\\nSPOTINST_CLUSTER_IDENTIFIER=<ENTER YOUR CLUSTER IDENTIFIER HERE> \\\nbash\n```\n",
        "operationId": "OceanAWSClusterCreate",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "cluster"
                    ],
                    "properties": {
                      "cluster": {
                        "type": "object",
                        "description": "The object specifying the configuration of the Ocean cluster.\n",
                        "title": "AWS Cluster",
                        "required": [
                          "name",
                          "region",
                          "controllerClusterId"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The Ocean cluster identifier.\n",
                            "example": "o-abcd1234"
                          },
                          "name": {
                            "type": "string",
                            "example": "oceanName",
                            "description": "Add a name for the Ocean cluster.\n"
                          },
                          "controllerClusterId": {
                            "type": "string",
                            "example": "ocean.k8s",
                            "description": "Enter the reporting identifier for the Ocean Controller.\n"
                          },
                          "region": {
                            "type": "string",
                            "example": "us-east-1",
                            "description": "Select the region for the Ocean cluster to run in.\n"
                          },
                          "autoScaler": {
                            "type": "object",
                            "title": "auto-scaler",
                            "description": "The automatic scaling mechanism used in Ocean for Kubernetes.",
                            "properties": {
                              "isEnabled": {
                                "type": "boolean",
                                "description": "Enable the Ocean Kubernetes autoscaler.",
                                "default": true,
                                "example": true
                              },
                              "cooldown": {
                                "type": "integer",
                                "description": "A period of time (in seconds) that Ocean waits from the end of a scaling action until starting another scaling action.",
                                "default": null,
                                "example": 180
                              },
                              "resourceLimits": {
                                "type": "object",
                                "description": "Option to set upper and lower bounds on the resource usage of the cluster.",
                                "properties": {
                                  "maxMemoryGib": {
                                    "type": "integer",
                                    "description": "The maximum memory (in GiB) that can be allocated to the cluster.",
                                    "example": 1500
                                  },
                                  "maxVCpu": {
                                    "type": "integer",
                                    "description": "The maximum CPU (in vCPU units) that can be allocated to the cluster.",
                                    "example": 750
                                  }
                                }
                              },
                              "down": {
                                "type": "object",
                                "description": "Autoscaling scale down operations.",
                                "properties": {
                                  "maxScaleDownPercentage": {
                                    "type": "integer",
                                    "description": "Represents the maximum percent of your instances to scale down in a single scale-down action. Number between 1-100.",
                                    "example": 60
                                  }
                                }
                              },
                              "headroom": {
                                "type": "object",
                                "description": "Spare resource capacity management enabling fast assignment of pods without waiting for new resources to launch.",
                                "properties": {
                                  "cpuPerUnit": {
                                    "type": "integer",
                                    "description": "Option to configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.",
                                    "example": 2000
                                  },
                                  "memoryPerUnit": {
                                    "type": "integer",
                                    "description": "Option to configure the amount of memory (MiB) to allocate the headroom.",
                                    "example": 0
                                  },
                                  "gpuPerUnit": {
                                    "type": "integer",
                                    "description": "Amount of GPU to allocate for headroom.",
                                    "example": 0
                                  },
                                  "numOfUnits": {
                                    "type": "integer",
                                    "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.",
                                    "example": 4
                                  }
                                }
                              },
                              "isAutoConfig": {
                                "type": "boolean",
                                "description": "Use automatic headroom. When set to true, the values under cluster.autoScaler.headroom are not effective, as Ocean configures and optimizes headroom automatically.",
                                "default": true,
                                "example": false
                              },
                              "autoHeadroomPercentage": {
                                "type": "integer",
                                "description": "Dynamic (automatic) buffer of spare capacity, i.e., vCPU, memory, and GPU resources. Expressed as a percent of the overall cluster capacity with valid values from 0-200. Optional. Relevant when isAutoConfig=true.",
                                "example": null
                              },
                              "enableAutomaticAndManualHeadroom": {
                                "type": "boolean",
                                "description": "When set to true, both automatic and per-VNG manual headroom to be saved concurrently and independently in the cluster. prerequisite: isAutoConfig must be true\n",
                                "example": true
                              },
                              "extendedResourceDefinitions": {
                                "type": "array",
                                "description": "List of Ocean extended resource definitions to use in this cluster.\n",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "erd-123",
                                  "erd-456"
                                ]
                              }
                            }
                          },
                          "capacity": {
                            "type": "object",
                            "title": "Capacity Units",
                            "description": "The overall capability of the Ocean cluster expressed as number of instances and specified with a minimum, a maximum, and a target number of running instances.",
                            "properties": {
                              "minimum": {
                                "type": "integer",
                                "example": 0,
                                "description": "The lower limit of instances that the cluster can scale down to.\n"
                              },
                              "maximum": {
                                "type": "integer",
                                "default": 1000,
                                "example": 1000,
                                "description": "The upper limit of instances that the cluster can scale up to.\n"
                              },
                              "target": {
                                "type": "integer",
                                "example": 1,
                                "description": "Number of instances to launch and maintain in the cluster.\n"
                              }
                            }
                          },
                          "strategy": {
                            "type": "object",
                            "title": "Ocean Cluster Strategy",
                            "description": "An object defining the cluster strategy with regard to waiting periods and utilization of on-demand and reserved instances.\n",
                            "properties": {
                              "utilizeReservedInstances": {
                                "type": "boolean",
                                "default": false,
                                "example": true,
                                "description": "If reserved instances exist, Ocean will utilize them before launching spot instances.\n"
                              },
                              "fallbackToOd": {
                                "type": "boolean",
                                "default": false,
                                "example": true,
                                "description": "If no spot instance markets are available, enable Ocean to launch on-demand instances instead.\n"
                              },
                              "spotPercentage": {
                                "type": "integer",
                                "default": 100,
                                "minimum": 0,
                                "maximum": 100,
                                "description": "The desired percentage of Spot instances out of all running instances.\\\nOnly available when the field is **not** set in any VNG directly (launchSpec.strategy.spotPercentage).\n",
                                "example": 100
                              },
                              "gracePeriod": {
                                "type": "integer",
                                "default": 600,
                                "example": 600,
                                "description": "The amount of time, in seconds, from the time the instance has launched to the time its first health check starts.\n"
                              },
                              "drainingTimeout": {
                                "type": "integer",
                                "example": 60,
                                "description": "The configurable amount of time that Ocean will wait for the draining process to complete before terminating an instance. If you have not defined a draining timeout, the default of 300 seconds will be used.\n"
                              },
                              "utilizeCommitments": {
                                "type": "boolean",
                                "description": "If savings plans commitment has available capacity, Ocean will utilize them alongside RIs (if exist) to maximize cost efficiency.\n",
                                "example": false,
                                "default": false
                              }
                            }
                          },
                          "scheduling": {
                            "type": "object",
                            "description": "An object used to define times for a task such as a shutdown to be activated.\n",
                            "title": "Elastigroup Scheduling",
                            "properties": {
                              "tasks": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "title": "Task Definition",
                                  "required": [
                                    "isEnabled",
                                    "cronExpression",
                                    "taskType"
                                  ],
                                  "properties": {
                                    "isEnabled": {
                                      "type": "boolean",
                                      "example": true,
                                      "description": "Describes whether the task is enabled. When True, the task runs. When False, it does not run. Required for cluster.scheduling.tasks.\n"
                                    },
                                    "cronExpression": {
                                      "type": "string",
                                      "example": "0 1 * * *",
                                      "description": "A valid cron expression. For example : \" * * * * * \". The cron job runs in UTC time and is in Unix cron format. (See the Cron Expression Validator Script.) Only one of ‘frequency' or ‘cronExpression' can be used at a time.\n"
                                    },
                                    "taskType": {
                                      "type": "string",
                                      "example": "clusterRoll",
                                      "description": "The activity that you are scheduling. Valid values: \"clusterRoll\". Required for cluster.scheduling.tasks.\n"
                                    }
                                  }
                                }
                              },
                              "shutdownHours": {
                                "type": "object",
                                "description": "An object used to specify times that the nodes in the cluster will be taken down.\n",
                                "title": "Shutdown Hours",
                                "required": [
                                  "timeWindows"
                                ],
                                "properties": {
                                  "timeWindows": {
                                    "type": "array",
                                    "description": "The times that the shutdown hours will apply.\n",
                                    "items": {
                                      "type": "string",
                                      "example": "Sat:08:00-Sun:08:00"
                                    }
                                  },
                                  "isEnabled": {
                                    "type": "boolean",
                                    "example": true,
                                    "description": "Flag to enable or disable the shutdown hours mechanism. When False, the mechanism is deactivated, and the cluster remains in its current state.\n"
                                  }
                                }
                              }
                            }
                          },
                          "security": {
                            "type": "object",
                            "title": "Security",
                            "description": "Object for cluster security features.\n",
                            "properties": {
                              "containerImage": {
                                "type": "object",
                                "properties": {
                                  "approvedImages": {
                                    "type": "array",
                                    "description": "Set a permitted list of repositories for container images.",
                                    "items": {
                                      "type": "string",
                                      "example": [
                                        "*.ecr.*.amazonaws.com/*",
                                        "docker.*"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "compute": {
                            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1import/post/responses/200/content/application~1json/schema/properties/items/properties/compute"
                          },
                          "logging": {
                            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/logging"
                          },
                          "createdAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2021-03-17T08:13:08.000Z",
                            "description": "A timestamp of the cluster creation.\n"
                          },
                          "updatedAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2021-03-17T15:06:13.000Z",
                            "description": "A timestamp of the latest cluster update.\n"
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "cluster": {
                        "type": "object",
                        "required": [
                          "name"
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Clusters",
        "description": "List the configurations for all Ocean clusters in the specified account.\n",
        "operationId": "OceanAWSClusterList",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body\n",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "allOf": [
                                  {
                                    "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "example": "o-482d9d26"
                                      },
                                      "createdAt": {
                                        "type": "string",
                                        "example": "2018-11-05T12:55:50.000+0000"
                                      },
                                      "updatedAt": {
                                        "type": "string",
                                        "example": "2018-11-05T12:58:15.000+0000"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/cluster/{oceanClusterId}": {
      "delete": {
        "summary": "Delete Cluster",
        "description": "Delete an existing Ocean cluster.\n",
        "operationId": "OceanAWSClusterDelete",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get Cluster",
        "description": "Get the configuration of an existing Ocean cluster.\n",
        "operationId": "OceanAWSClusterGet",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "oceanClusterId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "o-abcd1234",
            "description": "Identifier of the Ocean cluster.\n"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Cluster",
        "description": "All Ocean parameters are updatable, except for region and identifier. This API supports partial updates, so specific fields can be updated separately.\n",
        "operationId": "OceanAWSClusterUpdate",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "oceanClusterId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "o-1abcd124",
            "description": "The identifier of the Ocean cluster\n"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "autoApplyTags",
            "example": "true",
            "description": "Option to update instance tags on the fly without rolling the cluster.\n",
            "schema": {
              "type": "string",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/k8s/cluster/{oceanClusterId}/controllerHeartbeat": {
      "get": {
        "summary": "Get Heartbeat Status",
        "description": "Get the heartbeat status of the Ocean Controller for the cluster. <br /> The response returns the heartbeat status and the last heartbeat timestamp.\n",
        "operationId": "oceanAwsGetHeartbeatStatus",
        "tags": [
          "Ocean AWS",
          "Ocean GKE",
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Get Heartbeat Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/k8s/cluster/o-e0a2bd7c/controllerHeartbeat"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Controller Heartbeat",
                                "properties": {
                                  "status": {
                                    "type": "string",
                                    "example": "ACTIVE"
                                  },
                                  "lastHeartbeat": {
                                    "type": "string",
                                    "example": "2019-11-24T14:33:00.746Z"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:k8s:cluster:controllerHeartbeat"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/cluster/{clusterIdentifier}/log": {
      "summary": "Ocean for AWS K8s",
      "get": {
        "summary": "Fetch Elastilog",
        "description": "Fetch the log of an Ocean cluster.\n",
        "operationId": "oceanAwsFetchLog",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "clusterIdentifier",
            "example": "o-6e3819ae",
            "description": "The reporting identifier of the Ocean Controller.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1mcs~1ecs~1cluster~1%7BclusterName%7D~1costs/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1mcs~1ecs~1cluster~1%7BclusterName%7D~1costs/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1log/get/parameters/4"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1log/get/parameters/5"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1log/get/parameters/6"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Get Log Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request": {
                      "type": "object",
                      "description": "Original request properties\n",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "3213f42e-455e-4801-a185-cd3eb65fac5f",
                          "description": "Unique identifier associated with this request\n"
                        },
                        "url": {
                          "type": "string",
                          "example": "/ocean/aws/k8s/cluster/o-e0a2bd7c/log?fromDate=2020-10-06&toDate=2020-10-08&severity=ALL&limit=500",
                          "description": "The URL that was used for the request\n"
                        },
                        "method": {
                          "type": "string",
                          "example": "GET",
                          "description": "The HTTP **METHOD** used for the request\n"
                        },
                        "timestamp": {
                          "type": "string",
                          "example": "2020-10-05T16:20:38.579Z",
                          "description": "When the request was received by Spot\n"
                        }
                      }
                    },
                    "response": {
                      "type": "object",
                      "description": "Response payload that includes status, type, and any relevant data.\n",
                      "properties": {
                        "status": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "integer",
                              "example": "200",
                              "description": "HTTP status code assigned to this response.\n"
                            },
                            "message": {
                              "type": "string",
                              "example": "OK",
                              "description": "HTTP status message for the respective status code.\n"
                            }
                          }
                        },
                        "kind": {
                          "type": "string",
                          "example": "spotinst:ocean:cluster:log"
                        },
                        "items": {
                          "type": "array",
                          "description": "Array of data objects\n",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              },
                              "severity": {
                                "type": "string"
                              },
                              "createdAt": {
                                "type": "string"
                              }
                            }
                          },
                          "example": [
                            {
                              "message": "Ocean o-e0a2bd7c successfully created.",
                              "severity": "INFO",
                              "createdAt": "2020-10-07T09:51:12.000Z"
                            }
                          ]
                        },
                        "count": {
                          "type": "integer",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/cluster/autoScalingGroup/import": {
      "post": {
        "summary": "Import ASG To Ocean Cluster",
        "description": "Create an Ocean configuration according to an AWS autoscaling group (ASG) configuration.\n",
        "operationId": "oceanAwsImportAsg",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "autoScalingGroupName",
            "example": "myAutoScalingGroup",
            "description": "The ASG name.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "region",
            "example": "us-east-1",
            "description": "Region name of the ASG.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "launchSpec": {
                        "type": "object",
                        "description": "The object specifying the configuration of the VNG.\n",
                        "properties": {
                          "instanceTypes": {
                            "type": "array",
                            "description": "List of possible instance types for the cluster.\n",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "c3.large",
                              "m4.large"
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Import ASG to Ocean Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/k8s/cluster/autoScalingGroup/import"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Ocean Import ASG Response.\n",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "TestASG1"
                                  },
                                  "controllerClusterId": {
                                    "type": "string",
                                    "example": "ocean-ed609402-8557-4d18-818a-e549333cc11e"
                                  },
                                  "region": {
                                    "type": "string",
                                    "example": "us-west-2"
                                  },
                                  "capacity": {
                                    "type": "object",
                                    "properties": {
                                      "minimum": {
                                        "type": "integer",
                                        "example": 0
                                      },
                                      "maximum": {
                                        "type": "integer",
                                        "example": 1000
                                      },
                                      "target": {
                                        "type": "integer",
                                        "example": 1
                                      }
                                    }
                                  },
                                  "compute": {
                                    "type": "object",
                                    "properties": {
                                      "subnetIds": {
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "example": [
                                            "subnet-00cab2dd9f40a9883",
                                            "subnet-0df9d512c7cbbd9e1"
                                          ]
                                        }
                                      },
                                      "launchSpecification": {
                                        "type": "object",
                                        "properties": {
                                          "securityGroupIds": {
                                            "type": "array",
                                            "items": {
                                              "type": "string",
                                              "example": [
                                                "sg-03ccf232a2bf0f4ea"
                                              ]
                                            }
                                          },
                                          "keyPair": {
                                            "type": "string",
                                            "example": "testteamkp"
                                          },
                                          "imageId": {
                                            "type": "string",
                                            "example": "ami-0ce21b51cb31a54b8"
                                          },
                                          "tags": {
                                            "type": "object",
                                            "properties": {
                                              "tagKey": {
                                                "type": "string",
                                                "example": "AmazonECSManaged"
                                              },
                                              "tagValue": {
                                                "type": "string",
                                                "example": ""
                                              }
                                            }
                                          },
                                          "associatePublicIpAddress": {
                                            "type": "boolean",
                                            "example": "false"
                                          },
                                          "instanceMetadataOptions": {
                                            "$ref": "#/paths/~1ocean~1aws~1k8s~1launchSpec/post/requestBody/content/application~1json/schema/allOf/0/properties/launchSpec/properties/instanceMetadataOptions"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:k8s"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/cluster/{oceanClusterId}/rightSizing/suggestion": {
      "post": {
        "summary": "Fetch Right Sizing Recommendations",
        "description": "Get right-sizing recommendations for an Ocean cluster and filter them according to namespace or label.\n",
        "operationId": "oceanAwsFilterRightSizingWithFilter",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "filter": {
                        "type": "object",
                        "description": "Optional - may be null.\n",
                        "properties": {
                          "namespaces": {
                            "type": "array",
                            "description": "Optional - may be null. If exists - should contain at least 1 item.\n",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "sparkSpace",
                              "kube-system"
                            ]
                          },
                          "attribute": {
                            "type": "object",
                            "description": "Optional - may be null.\n",
                            "required": [
                              "type",
                              "key"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "label",
                                  "annotation"
                                ],
                                "example": "label"
                              },
                              "key": {
                                "type": "string",
                                "description": "May be any string, but shouldn't be empty.\n",
                                "example": "app"
                              },
                              "operator": {
                                "type": "string",
                                "description": "Optional - may be null.\n",
                                "enum": [
                                  "Equals",
                                  "notEquals",
                                  "exists",
                                  "doesNotExist"
                                ],
                                "default": "Equals",
                                "example": "Equals"
                              },
                              "value": {
                                "type": "string",
                                "description": "Required whenever the operator is \"equals\" or \"notEquals\". |\nIf exists, may be any string.\n",
                                "example": "redis"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Right Sizing Recommendation Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/k8s/cluster/o-abcd1234/rightSizing/suggestion"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "resourceName": {
                                    "type": "string"
                                  },
                                  "resourceType": {
                                    "type": "string"
                                  },
                                  "namespace": {
                                    "type": "string"
                                  },
                                  "suggestedCPU": {
                                    "type": "integer"
                                  },
                                  "suggestedMemory": {
                                    "type": "integer"
                                  },
                                  "requestedCPU": {
                                    "type": "integer"
                                  },
                                  "requestedMemory": {
                                    "type": "integer"
                                  },
                                  "containers": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "requestedCPU": {
                                          "type": "integer"
                                        },
                                        "suggestedCPU": {
                                          "type": "integer"
                                        },
                                        "requestedMemory": {
                                          "type": "integer"
                                        },
                                        "suggestedMemory": {
                                          "type": "integer"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "example": [
                                {
                                  "resourceName": "redis-controller",
                                  "resourceType": "deployment",
                                  "namespace": "kube-system",
                                  "suggestedCPU": 4,
                                  "suggestedMemory": 19,
                                  "requestedCPU": 50,
                                  "requestedMemory": 50,
                                  "containers": [
                                    {
                                      "name": "dnsmasq",
                                      "requestedCPU": 10,
                                      "suggestedCPU": 2,
                                      "requestedMemory": 40,
                                      "suggestedMemory": 15
                                    },
                                    {
                                      "name": "sidecar",
                                      "requestedCPU": 40,
                                      "suggestedCPU": 2,
                                      "requestedMemory": 10,
                                      "suggestedMemory": 4
                                    }
                                  ]
                                },
                                {
                                  "resourceName": "test-redis",
                                  "resourceType": "deployment",
                                  "namespace": "sparkSpace",
                                  "suggestedCPU": 2,
                                  "suggestedMemory": 20,
                                  "requestedCPU": 50,
                                  "requestedMemory": 30,
                                  "containers": [
                                    {
                                      "name": "dns-controller",
                                      "requestedCPU": 20,
                                      "suggestedCPU": 1,
                                      "requestedMemory": 20,
                                      "suggestedMemory": 15
                                    },
                                    {
                                      "name": "kubedns",
                                      "requestedCPU": 30,
                                      "suggestedCPU": 1,
                                      "requestedMemory": 10,
                                      "suggestedMemory": 5
                                    }
                                  ]
                                }
                              ]
                            },
                            "count": {
                              "example": 2
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:k8s:cluster:rightSizing:suggestion"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/cluster/{oceanClusterId}/loadBalancer/attach": {
      "put": {
        "summary": "Attach Load Balancers",
        "description": "Add new load balancers to the existing load balancers on the Ocean Cluster.\n",
        "operationId": "OceanAWSClusterAttachLb",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "loadBalancers"
                ],
                "properties": {
                  "loadBalancers": {
                    "type": "array",
                    "description": "Load balancers to add to the Ocean cluster.\n",
                    "items": {
                      "type": "object",
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type of load balancer to use.\n",
                          "enum": [
                            "CLASSIC",
                            "TARGET_GROUP"
                          ],
                          "example": "TARGET_GROUP"
                        },
                        "name": {
                          "type": "string",
                          "description": "If type is \"CLASSIC\" then a name is required. Otherwise is not allowed.\n",
                          "example": "MyTargetGroup"
                        },
                        "arn": {
                          "type": "string",
                          "description": "If type is \"TARGET_GROUP\" then an ARN is required. Otherwise is not allowed.\n",
                          "example": "arn:aws:elasticloadbalancing:us-west-2:922761411234:targetgroup"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Cluster Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/k8s/cluster/o-12345abc/loadBalancer/attach"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:k8s"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/cluster/{oceanClusterId}/loadBalancer/detach": {
      "put": {
        "summary": "Detach Load Balancers",
        "description": "Remove load balancers from the existing load balancers on the Ocean Cluster.\n",
        "operationId": "OceanAWSClusterDetachLb",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "loadBalancers"
                ],
                "properties": {
                  "loadBalancers": {
                    "type": "array",
                    "description": "Load balancers to remove from the Ocean cluster.\n",
                    "items": {
                      "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D~1loadBalancer~1attach/put/requestBody/content/application~1json/schema/properties/loadBalancers/items"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Cluster Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/k8s/cluster/o-12345abc/loadBalancer/detach"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:k8s"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/mcs/kubernetes/cluster/{clusterIdentifier}/costs": {
      "get": {
        "summary": "Get Cluster Costs",
        "description": "Describes Kubernetes cluster costs in a time range based on resource allocation.\\\nThe response will provide the distribution of the costs per cluster, namespace, and deployment.\\\nFor each entity, the response will contain a breakdown to compute and EBS costs as well.\\\nIn addition, the response will show labels or annotations for each namespace or deployment so you can filter costs by labels or annotations.\n",
        "operationId": "oceanK8sClusterCosts",
        "tags": [
          "Ocean AWS",
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1mcs~1ecs~1cluster~1%7BclusterName%7D~1costs/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1mcs~1ecs~1cluster~1%7BclusterName%7D~1costs/get/parameters/2"
          },
          {
            "in": "query",
            "name": "aggregationPeriod",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "The time segment over which data is calculated and displayed. The period may be \"daily\" or null. If you use \"daily\" the costs will be broken into parts, e.g., the cost per each day in the period. Otherwise, there will be only one cost per resource for the whole period.\n"
          },
          {
            "in": "path",
            "name": "clusterIdentifier",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "ocean.k8s",
            "description": "The reporting identifier of the Ocean Controller as set in the cluster configuration under the \"controllerClusterId\" field.\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/mcs/kubernetes/cluster/my-cluster-identifier/costs"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "totalCost": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 279.9907
                                  },
                                  "totalComputeCost": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 279.9907
                                  },
                                  "totalEbsCost": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 0
                                  },
                                  "totalStorageCost": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 0
                                  },
                                  "namespaces": {
                                    "type": "object",
                                    "properties": {
                                      "namespace": {
                                        "type": "string",
                                        "example": "default"
                                      },
                                      "cost": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 18.00862
                                      },
                                      "computeCost": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 18.00862
                                      },
                                      "ebsCost": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 0
                                      },
                                      "storageCost": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 0
                                      },
                                      "labels": {
                                        "type": "object",
                                        "properties": {
                                          "region": {
                                            "type": "string",
                                            "example": "west"
                                          },
                                          "env": {
                                            "type": "string",
                                            "example": "prod"
                                          }
                                        }
                                      },
                                      "annotations": {
                                        "type": "object",
                                        "properties": {
                                          "region": {
                                            "type": "string",
                                            "example": "west"
                                          },
                                          "env": {
                                            "type": "string",
                                            "example": "prod"
                                          }
                                        }
                                      },
                                      "deployments": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "cpu-deployment-check5"
                                          },
                                          "namespace": {
                                            "type": "string",
                                            "example": "default"
                                          },
                                          "cost": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 3.7410312
                                          },
                                          "computeCost": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 3.7410312
                                          },
                                          "ebsCost": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 0
                                          },
                                          "storageCost": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 0
                                          },
                                          "labels": {
                                            "type": "object",
                                            "properties": {
                                              "region": {
                                                "type": "string",
                                                "example": "west"
                                              },
                                              "env": {
                                                "type": "string",
                                                "example": "prod"
                                              }
                                            }
                                          },
                                          "annotations": {
                                            "type": "object",
                                            "properties": {
                                              "region": {
                                                "type": "string",
                                                "example": "west"
                                              },
                                              "env": {
                                                "type": "string",
                                                "example": "prod"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "statefulSets": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "cpu-deployment-check5"
                                          },
                                          "namespace": {
                                            "type": "string",
                                            "example": "default"
                                          },
                                          "cost": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 3.7410312
                                          },
                                          "computeCost": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 3.7410312
                                          },
                                          "ebsCost": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 0
                                          },
                                          "storageCost": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 0
                                          },
                                          "labels": {
                                            "type": "object",
                                            "properties": {
                                              "region": {
                                                "type": "string",
                                                "example": "west"
                                              },
                                              "env": {
                                                "type": "string",
                                                "example": "prod"
                                              }
                                            }
                                          },
                                          "annotations": {
                                            "type": "object",
                                            "properties": {
                                              "region": {
                                                "type": "string",
                                                "example": "west"
                                              },
                                              "env": {
                                                "type": "string",
                                                "example": "prod"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "daemonSets": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "cpu-deployment-check5"
                                          },
                                          "namespace": {
                                            "type": "string",
                                            "example": "default"
                                          },
                                          "cost": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 3.7410312
                                          },
                                          "computeCost": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 3.7410312
                                          },
                                          "ebsCost": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 0
                                          },
                                          "storageCost": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 0
                                          },
                                          "labels": {
                                            "type": "object",
                                            "properties": {
                                              "region": {
                                                "type": "string",
                                                "example": "west"
                                              },
                                              "env": {
                                                "type": "string",
                                                "example": "prod"
                                              }
                                            }
                                          },
                                          "annotations": {
                                            "type": "object",
                                            "properties": {
                                              "region": {
                                                "type": "string",
                                                "example": "west"
                                              },
                                              "env": {
                                                "type": "string",
                                                "example": "prod"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "jobs": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "cpu-deployment-check5"
                                          },
                                          "namespace": {
                                            "type": "string",
                                            "example": "default"
                                          },
                                          "cost": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 3.7410312
                                          },
                                          "computeCost": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 3.7410312
                                          },
                                          "ebsCost": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 0
                                          },
                                          "storageCost": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 0
                                          },
                                          "labels": {
                                            "type": "object",
                                            "properties": {
                                              "region": {
                                                "type": "string",
                                                "example": "west"
                                              },
                                              "env": {
                                                "type": "string",
                                                "example": "prod"
                                              }
                                            }
                                          },
                                          "annotations": {
                                            "type": "object",
                                            "properties": {
                                              "region": {
                                                "type": "string",
                                                "example": "west"
                                              },
                                              "env": {
                                                "type": "string",
                                                "example": "prod"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "standAlonePodsCost": {
                                        "type": "number"
                                      }
                                    }
                                  },
                                  "deployments": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "cpu-deployment-check5"
                                      },
                                      "namespace": {
                                        "type": "string",
                                        "example": "default"
                                      },
                                      "cost": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 3.7410312
                                      },
                                      "computeCost": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 3.7410312
                                      },
                                      "ebsCost": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 0
                                      },
                                      "storageCost": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 0
                                      },
                                      "labels": {
                                        "type": "object",
                                        "properties": {
                                          "region": {
                                            "type": "string",
                                            "example": "west"
                                          },
                                          "env": {
                                            "type": "string",
                                            "example": "prod"
                                          }
                                        }
                                      },
                                      "annotations": {
                                        "type": "object",
                                        "properties": {
                                          "region": {
                                            "type": "string",
                                            "example": "west"
                                          },
                                          "env": {
                                            "type": "string",
                                            "example": "prod"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "headroomCost": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 0
                                  },
                                  "idleCost": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 216.10321
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/mcs/ecs/cluster/{clusterName}/costs": {
      "get": {
        "summary": "Get Cluster Costs",
        "description": "Describes ECS cluster costs in a time range.\\\nThe response will provide the distribution of the costs per cluster.\n",
        "operationId": "oceanEcsClusterCosts",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "toDate",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "End date value using either the date format \"yyyy-mm-dd; 2016-11-20\" or ms \"1494751821472\".\n"
          },
          {
            "in": "query",
            "name": "fromDate",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Beginning date value using either the date format \"yyyy-mm-dd; 2016-11-20\" or ms \"1494751821472\".\n"
          },
          {
            "in": "query",
            "name": "region",
            "example": "us-east-1",
            "description": "Region name.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "clusterName",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "ocean.ecs",
            "description": "The name of the ECS cluster, as set in the Ocean cluster configuration under the \"clusterName\" field.\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean ECS Cluster Costs Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/mcs/ecs/cluster/my-cluster-identifier/costs"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "totalCost": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 279.9907
                                  },
                                  "headroomCost": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 279.9907
                                  },
                                  "standAloneTasksCost": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 0
                                  },
                                  "ecsGroups": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "example": "default"
                                        },
                                        "cost": {
                                          "type": "number",
                                          "format": "float",
                                          "example": 18.00862
                                        },
                                        "type": {
                                          "type": "string",
                                          "example": "SERVICE",
                                          "enum": [
                                            "SERVICE",
                                            "HEADROOM",
                                            "STAND_ALONE",
                                            "IDLE"
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/cluster/import": {
      "post": {
        "summary": "Upgrade Elastigroup To Ocean",
        "description": "Upgrade an Elastigroup with Kubernetes integration to Ocean for Kubernetes cluster.\n",
        "operationId": "oceanAwsUpgradeElastigroup",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "groupId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Elastigroup identifier\n"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "kind": {
                      "type": "string",
                      "example": "spotinst:ocean:aws:k8s"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "o-482d9d26"
                        },
                        "name": {
                          "type": "string",
                          "example": "Ocean::test-k8s-batch-1"
                        },
                        "clusterName": {
                          "type": "string",
                          "example": "testEnvironment_Batch_852a670a-aa73-3d5d-9576-147a26d43401"
                        },
                        "autoScaler": {
                          "type": "object",
                          "properties": {
                            "isEnabled": {
                              "type": "boolean",
                              "example": true
                            },
                            "isAutoConfig": {
                              "type": "boolean",
                              "example": true
                            }
                          }
                        },
                        "region": {
                          "type": "string",
                          "example": "us-west-2"
                        },
                        "groupId": {
                          "type": "string",
                          "example": "sig-b6bb68fb"
                        },
                        "strategy": {
                          "type": "object",
                          "properties": {
                            "fallbackToOd": {
                              "type": "boolean",
                              "example": true
                            },
                            "spotPercentage": {
                              "type": "integer",
                              "example": 100
                            },
                            "drainingTimeout": {
                              "type": "integer",
                              "example": 120
                            }
                          }
                        },
                        "compute": {
                          "type": "object",
                          "title": "Ocean Compute",
                          "description": "Compute specifications for the Ocean cluster.\n",
                          "required": [
                            "subnetIds",
                            "launchSpecification"
                          ],
                          "properties": {
                            "subnetIds": {
                              "type": "array",
                              "description": "A comma-separated list of subnet identifiers for the Ocean cluster. Subnet identifiers should be configured with auto-assign public IP.\n",
                              "items": {
                                "type": "string"
                              },
                              "example": [
                                "subnet-4c1d1538",
                                "subnet-2791bb61"
                              ]
                            },
                            "instanceTypes": {
                              "type": "object",
                              "description": "The type of instances that may or may not be a part of the Ocean cluster.",
                              "properties": {
                                "whitelist": {
                                  "type": "array",
                                  "description": "Instance types allowed in the Ocean cluster. Cannot be configured if a deny list is configured.\n",
                                  "items": {
                                    "type": "string"
                                  },
                                  "example": [
                                    "c4.xlarge",
                                    "c4.2xlarge",
                                    "c4.4xlarge",
                                    "c4.8xlarge"
                                  ]
                                },
                                "blacklist": {
                                  "type": "array",
                                  "description": "Instance types to avoid launching in the Ocean cluster. Cannot be configured if a permit list is configured.\n",
                                  "items": {
                                    "type": "string"
                                  },
                                  "example": [
                                    "r5.large",
                                    "r5.xlarge"
                                  ]
                                }
                              }
                            },
                            "launchSpecification": {
                              "type": "object",
                              "description": "The default specification for nodes in the cluster. Used as a template for custom Virtual Node Groups to inherit values which are not explicitly defined in them, and as a default VNG when no other VNGs exist or match the workload requirements.\n",
                              "required": [
                                "imageId",
                                "securityGroupIds"
                              ],
                              "properties": {
                                "useAsTemplateOnly": {
                                  "type": "boolean",
                                  "description": "The configuration specified on the Ocean object will function only as a template for virtual node groups.\n",
                                  "default": false
                                },
                                "imageId": {
                                  "type": "string",
                                  "description": "identifier of the image used to launch the instances."
                                },
                                "userData": {
                                  "type": "string",
                                  "format": "byte",
                                  "description": "The base 64 encoded MIME user data to make available to the instances."
                                },
                                "securityGroupIds": {
                                  "type": "array",
                                  "description": "One or more security group identifiers.",
                                  "items": {
                                    "type": "string",
                                    "example": [
                                      "sg-c3d914b0"
                                    ]
                                  }
                                },
                                "iamInstanceProfile": {
                                  "type": "object",
                                  "description": "The instance profile iamRole.",
                                  "properties": {
                                    "arn": {
                                      "type": "string",
                                      "description": "The iamRole ARN.",
                                      "example": "orform"
                                    }
                                  }
                                },
                                "keyPair": {
                                  "type": "string",
                                  "description": "The key pair to attach the instances.",
                                  "example": "spotinst-labs-oregon"
                                },
                                "tags": {
                                  "type": "array",
                                  "description": "List of kay-value pairs of tags.\n",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "tagKey": {
                                        "type": "string",
                                        "description": "Set the tag key.\n",
                                        "example": "Creator"
                                      },
                                      "tagValue": {
                                        "type": "string",
                                        "description": "Set the tag value.\n",
                                        "example": "John Doe"
                                      }
                                    }
                                  }
                                },
                                "loadBalancers": {
                                  "type": "array",
                                  "description": "Configure load balancer settings for the Ocean cluster.\n",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "Type of load balancer to use. Supported types are: \"TARGET_GROUP\", and \"CLASSIC\".\n",
                                        "example": "TARGET_GROUP"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "If type is \"CLASSIC\" then a name is required. Otherwise Name is optional.\n",
                                        "example": "MyTargetGroup"
                                      },
                                      "arn": {
                                        "type": "string",
                                        "description": "If type is \"TARGET_GROUP\" then an ARN is required.\n",
                                        "example": "arn:aws:elasticloadbalancing:us-west-2:922761411234:targetgroup"
                                      }
                                    }
                                  }
                                },
                                "associatePublicIpAddress": {
                                  "type": "boolean",
                                  "description": "Configure public IP address allocation.",
                                  "default": false,
                                  "example": false
                                },
                                "monitoring": {
                                  "type": "boolean",
                                  "description": "Enable detailed monitoring for cluster. Flag will enable CloudWatch detailed monitoring (one minute increments). There are additional hourly costs for this service based on the region used.\n",
                                  "example": true
                                },
                                "ebsOptimized": {
                                  "type": "boolean",
                                  "description": "Enable EBS optimization for the cluster. A flag will enable optimized capacity for high bandwidth connectivity to the EB service for non EBS optimized instance types. For instances that are EBS optimized, this flag will be ignored.\n",
                                  "example": true
                                },
                                "rootVolumeSize": {
                                  "type": "integer",
                                  "description": "Set root volume size in GiB.",
                                  "example": 73
                                },
                                "instanceMetadataOptions": {
                                  "$ref": "#/paths/~1ocean~1aws~1k8s~1launchSpec/post/requestBody/content/application~1json/schema/allOf/0/properties/launchSpec/properties/instanceMetadataOptions"
                                }
                              }
                            }
                          }
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2018-11-05T12:55:50.000+0000"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2018-11-05T12:58:15.000+0000"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/cluster/{oceanClusterId}/roll": {
      "summary": "Ocean for AWS",
      "post": {
        "summary": "Initiate Roll",
        "description": "Roll an entire Ocean cluster or roll subsets of the cluster by specifying launchSpecIds or instanceIds. Performing this request will start the roll immediately and run it in defined batches.\nNote that the first response for a successful request will indicate the start of a roll. In order to check the status of a roll, you can use the GET Roll API.\n",
        "operationId": "oceanAwsRollInit",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "title": "Roll",
                    "properties": {
                      "roll": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "batchSizePercentage": {
                                "type": "integer",
                                "description": "Value as a percent to set the size of a batch in a roll. Valid values are 0-100.\n",
                                "example": 20
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "comment": {
                                "type": "string",
                                "description": "Add a comment description for the roll. The comment is limited to 256 chars.\n",
                                "example": "This is why I deployed my cluster."
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "respectPdb": {
                                "type": "boolean",
                                "description": "During the roll, if the parameter is set to True we honor PDB during the instance replacement.\n",
                                "example": true,
                                "default": false
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "batchMinHealthyPercentage": {
                                "type": "integer",
                                "description": "Indicates the threshold of minimum healthy instances in single batch. If the amount of healthy instances in single batch is under the threshold, the cluster roll will fail. If exists, the parameter value will be in range of 1-100. In case of null as value, the default value in the backend will be 50%. Value of param should represent the number in percentage (%) of the batch.\n",
                                "example": 100,
                                "default": 50
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  {
                    "type": "object",
                    "title": "Roll with instance ids",
                    "properties": {
                      "roll": {
                        "allOf": [
                          {
                            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/properties/roll/allOf/0"
                          },
                          {
                            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/properties/roll/allOf/1"
                          },
                          {
                            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/properties/roll/allOf/2"
                          },
                          {
                            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/properties/roll/allOf/3"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "instanceIds": {
                                "type": "array",
                                "description": "List of instance identifiers to be rolled. Each identifier is a string. InstanceIds can be null, and cannot be used together with launchSpecIds.\n",
                                "items": {
                                  "type": "string",
                                  "example": [
                                    "i-0003a99ffb566f039",
                                    "i-0567a99ffb566f765"
                                  ]
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  {
                    "type": "object",
                    "title": "Roll with launch specification ids",
                    "properties": {
                      "roll": {
                        "allOf": [
                          {
                            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/properties/roll/allOf/0"
                          },
                          {
                            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/properties/roll/allOf/1"
                          },
                          {
                            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/properties/roll/allOf/2"
                          },
                          {
                            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/oneOf/0/properties/roll/allOf/3"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "launchSpecIds": {
                                "type": "array",
                                "description": "List of virtual node group identifiers to be rolled. Each identifier is a string. LaunchSpecIds can be null, and cannot be used together with instanceIds.\n",
                                "items": {
                                  "type": "string",
                                  "example": [
                                    "ols-76694a7d",
                                    "ols-56694a76"
                                  ]
                                }
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "disableLaunchSpecAutoScaling": {
                                "type": "boolean",
                                "description": "When set to True and virtual node group identifiers are defined to roll, the specified launch spec(s) will be blocked from scaling up. (Replacements will scale up in other launch specs that match the displaced pods instead.) This is meant for different use cases of 'migrating' nodes from one launch spec to another.\n",
                                "example": true
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cluster Roll Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "scr-5aaf854e"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "IN_PROGRESS",
                        "COMPLETED",
                        "FAILED",
                        "STOPPED"
                      ],
                      "example": "IN_PROGRESS"
                    },
                    "currentBatch": {
                      "type": "integer",
                      "example": 1
                    },
                    "numOfBatches": {
                      "type": "integer",
                      "example": 5
                    },
                    "comment": {
                      "type": "string",
                      "example": "This is why I deployed my cluster."
                    },
                    "progress": {
                      "type": "object",
                      "properties": {
                        "unit": {
                          "type": "string",
                          "example": "percentage"
                        },
                        "value": {
                          "type": "integer",
                          "example": 0
                        },
                        "detailedStatus": {
                          "type": "object",
                          "properties": {
                            "oldInstances": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "instanceId": {
                                    "type": "string"
                                  },
                                  "status": {
                                    "type": "string"
                                  }
                                }
                              },
                              "example": [
                                {
                                  "instanceId": "i-003a0281a24c01a20",
                                  "status": "REPLACED"
                                },
                                {
                                  "instanceId": "i-003a0281a24c01a21",
                                  "status": "TO_BE_REPLACED"
                                },
                                {
                                  "instanceId": "i-003a0281a24c01a22",
                                  "status": "COULD_NOT_BE_REPLACED"
                                },
                                {
                                  "instanceId": "i-003a0281a24c01a23",
                                  "status": "NOT_REPLACED_DUE_TO_PDB"
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "oceanId": {
                      "type": "string",
                      "example": "o-12e31234"
                    },
                    "instanceIds": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": [
                          "i-0003a99ffb566f039",
                          "i-0567a99ffb566f765"
                        ]
                      }
                    },
                    "launchSpecIds": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": [
                          "ols-76694a7d",
                          "ols-56694a76"
                        ]
                      }
                    },
                    "respectPdb": {
                      "type": "boolean",
                      "example": true
                    },
                    "batchMinHealthyPercentage": {
                      "type": "integer",
                      "example": 100
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2019-03-24T15:46:09.000Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "example": "2019-03-24T15:46:09.000Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Rolls",
        "description": "Get status for all rolls of an Ocean cluster.\n",
        "operationId": "oceanAwsRollList",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "oceanClusterId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "o-1abcd124",
            "description": "The identifier of the Ocean cluster\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Get List Of Rolls Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "example": 200
                        },
                        "message": {
                          "type": "string",
                          "example": "OK"
                        }
                      }
                    },
                    "kind": {
                      "type": "string",
                      "example": "spotinst:ocean:aws:k8s:cluster:roll"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "scr-5aaf854e"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "IN_PROGRESS",
                              "COMPLETED",
                              "FAILED",
                              "STOPPED"
                            ],
                            "example": "IN_PROGRESS"
                          },
                          "currentBatch": {
                            "type": "integer",
                            "example": 1
                          },
                          "numOfBatches": {
                            "type": "integer",
                            "example": 5
                          },
                          "comment": {
                            "type": "string",
                            "example": "This is why I deployed my cluster."
                          },
                          "progress": {
                            "type": "object",
                            "properties": {
                              "unit": {
                                "type": "string",
                                "example": "percentage"
                              },
                              "value": {
                                "type": "integer",
                                "example": 0
                              },
                              "detailedStatus": {
                                "type": "object",
                                "properties": {
                                  "oldInstances": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "instanceId": {
                                          "type": "string"
                                        },
                                        "status": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "example": [
                                      {
                                        "instanceId": "i-003a0281a24c01a20",
                                        "status": "REPLACED"
                                      },
                                      {
                                        "instanceId": "i-003a0281a24c01a21",
                                        "status": "TO_BE_REPLACED"
                                      },
                                      {
                                        "instanceId": "i-003a0281a24c01a22",
                                        "status": "COULD_NOT_BE_REPLACED"
                                      },
                                      {
                                        "instanceId": "i-003a0281a24c01a23",
                                        "status": "NOT_REPLACED_DUE_TO_PDB"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "oceanId": {
                            "type": "string",
                            "example": "o-12e31234"
                          },
                          "instanceIds": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "example": [
                                "i-0003a99ffb566f039",
                                "i-0567a99ffb566f765"
                              ]
                            }
                          },
                          "launchSpecIds": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "example": [
                                "ols-76694a7d",
                                "ols-56694a76"
                              ]
                            }
                          },
                          "respectPdb": {
                            "type": "boolean",
                            "example": true
                          },
                          "batchMinHealthyPercentage": {
                            "type": "integer",
                            "example": 100
                          },
                          "createdAt": {
                            "type": "string",
                            "example": "2019-03-24T15:46:09.000Z"
                          },
                          "updatedAt": {
                            "type": "string",
                            "example": "2019-03-24T15:46:09.000Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/cluster/{oceanClusterId}/roll/{ROLL_ID}": {
      "summary": "Ocean for AWS",
      "put": {
        "summary": "Update Roll",
        "description": "Update a roll of an Ocean cluster.\n\n*Performing the request will stop the next batch in a roll.*\n",
        "operationId": "oceanAwsRollUpdate",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "oceanClusterId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "o-1abcd124",
            "description": "The identifier of the Ocean cluster\n"
          },
          {
            "in": "path",
            "name": "ROLL_ID",
            "example": "scr-12345abc",
            "description": "Ocean cluster roll identifier\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "roll": {
                    "type": "object",
                    "description": "Object that specifies the parameters required to initiate a roll (also called a deployment).\n",
                    "properties": {
                      "status": {
                        "type": "string",
                        "enum": [
                          "STOPPED"
                        ],
                        "description": "Set status of a roll. Valid values: \"STOPPED\"\n",
                        "example": "STOPPED"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cluster Roll Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "scr-5aaf854e"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "STOPPED"
                      ],
                      "example": "STOPPED"
                    },
                    "currentBatch": {
                      "type": "integer",
                      "example": 1
                    },
                    "numOfBatches": {
                      "type": "integer",
                      "example": 5
                    },
                    "progress": {
                      "type": "object",
                      "properties": {
                        "unit": {
                          "type": "string",
                          "example": "percentage"
                        },
                        "value": {
                          "type": "integer",
                          "example": 0
                        },
                        "detailedStatus": {
                          "type": "object",
                          "properties": {
                            "oldInstances": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "instanceId": {
                                    "type": "string"
                                  },
                                  "status": {
                                    "type": "string"
                                  }
                                }
                              },
                              "example": [
                                {
                                  "instanceId": "i-003a0281a24c01a20",
                                  "status": "REPLACED"
                                },
                                {
                                  "instanceId": "i-003a0281a24c01a21",
                                  "status": "TO_BE_REPLACED"
                                },
                                {
                                  "instanceId": "i-003a0281a24c01a22",
                                  "status": "COULD_NOT_BE_REPLACED"
                                },
                                {
                                  "instanceId": "i-003a0281a24c01a23",
                                  "status": "NOT_REPLACED_DUE_TO_PDB"
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "oceanId": {
                      "type": "string",
                      "example": "o-12e31234"
                    },
                    "respectPdb": {
                      "type": "boolean",
                      "example": true
                    },
                    "batchMinHealthyPercentage": {
                      "type": "integer",
                      "example": 100
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2019-03-24T15:46:09.000Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "example": "2019-03-24T15:46:09.000Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get Roll",
        "description": "Get status for a roll of an Ocean cluster.\n",
        "operationId": "oceanAwsRollGetSingleRoll",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "oceanClusterId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "o-1abcd124",
            "description": "The identifier of the Ocean cluster\n"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll~1%7BROLL_ID%7D/put/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D~1roll/post/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/cluster/{oceanClusterId}/nodes": {
      "get": {
        "summary": "Get Cluster Nodes",
        "description": "Get nodes data of an Ocean cluster.\n",
        "operationId": "oceanAwsGetNodes",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "in": "query",
            "name": "launchSpecId",
            "example": "ols-123abc",
            "description": "Ocean cluster launch specification identifier.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "instanceId",
            "schema": {
              "type": "string"
            },
            "example": "i-123",
            "description": "Get a specific node by instance id."
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Kubernetes AWS Nodes Data Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/k8s/cluster/o-12345abc/nodes"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "AWS Ocean kubernetes node data",
                                "description": "Node data of Ocean cluster.",
                                "properties": {
                                  "instanceId": {
                                    "type": "string",
                                    "example": "i-123",
                                    "description": "The AWS instance id of this node.\n"
                                  },
                                  "instanceType": {
                                    "type": "string",
                                    "example": "c3.large",
                                    "description": "The AWS instance type of this node.\n"
                                  },
                                  "availabilityZone": {
                                    "type": "string",
                                    "example": "us-west-2b",
                                    "description": "The AWS availability zone of this node.\n"
                                  },
                                  "launchSpecId": {
                                    "type": "string",
                                    "example": "ols-123",
                                    "description": "The node's launch spec id.\n"
                                  },
                                  "launchSpecName": {
                                    "type": "string",
                                    "example": "dev-launchSpec",
                                    "description": "The node's launch spec name.\n"
                                  },
                                  "lifeCycle": {
                                    "type": "string",
                                    "enum": [
                                      "Spot",
                                      "OD",
                                      "OD (RI)"
                                    ],
                                    "example": "Spot",
                                    "description": "The AWS lifeCycle of this node.\n"
                                  },
                                  "publicIp": {
                                    "type": "string",
                                    "example": "1.2.3.4",
                                    "description": "This node's public ip.\n"
                                  },
                                  "workloadRequestedMilliCpu": {
                                    "type": "number",
                                    "example": 1320,
                                    "description": "The amount of milli cpus requested by the kubernetes workload.\n"
                                  },
                                  "workloadRequestedMemoryInMiB": {
                                    "type": "number",
                                    "example": 500,
                                    "description": "The amount of memory in MiB requested by the kubernetes workload.\n"
                                  },
                                  "workloadRequestedGpu": {
                                    "type": "number",
                                    "example": 1,
                                    "description": "The amount of gpus requested by the kubernetes workload.\n"
                                  },
                                  "headroomRequestedMilliCpu": {
                                    "type": "number",
                                    "example": 1320,
                                    "description": "The amount of milli cpus saved for headroom.\n"
                                  },
                                  "headroomRequestedMemoryInMiB": {
                                    "type": "number",
                                    "example": 512,
                                    "description": "The amount of memory in MiB saved for headroom.\n"
                                  },
                                  "headroomRequestedGpu": {
                                    "type": "number",
                                    "example": 1,
                                    "description": "The amount of gpus saved for headroom.\n"
                                  },
                                  "allocatableMilliCpu": {
                                    "type": "number",
                                    "example": 2000,
                                    "description": "The amount of allocatable milli cpus as registered in kubernetes.\n"
                                  },
                                  "allocatableMemoryInMiB": {
                                    "type": "number",
                                    "example": 3646.1,
                                    "description": "The amount of allocatable memory in MiB as registered in kubernetes.\n"
                                  },
                                  "allocatableGpu": {
                                    "type": "number",
                                    "example": 1,
                                    "description": "The amount of allocatable gpus as registered in kubernetes.\n"
                                  },
                                  "nodeName": {
                                    "type": "string",
                                    "example": "node-1",
                                    "description": "The kubernetes node name.\n"
                                  },
                                  "registrationStatus": {
                                    "type": "string",
                                    "enum": [
                                      "Registered",
                                      "Registering",
                                      "Failed"
                                    ],
                                    "example": "Registered",
                                    "description": "The registration status of this node.\n"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "example": "2021-10-01T05:51:06.000Z",
                                    "description": "When was this node's instance was created at.\n"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:k8s:nodes"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/cluster/{oceanClusterId}/detachInstances": {
      "put": {
        "summary": "Detach Instances",
        "description": "Detach instances from your Ocean cluster.\n",
        "operationId": "oceanAwsDetachInstance",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "instancesToDetach": {
                        "type": "array",
                        "description": "Array of instance identifiers to be detached.\n",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "i-0003a99ffb566f039",
                          "i-0567a99ffb566f765"
                        ]
                      },
                      "shouldTerminateInstances": {
                        "type": "boolean",
                        "description": "Determines whether the detached EC2 instances should be terminated or not.\n",
                        "example": true
                      },
                      "shouldDecrementTargetCapacity": {
                        "type": "boolean",
                        "description": "Determines whether the Ocean cluster's target capacity should be decremented.\n",
                        "example": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detach Instances Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/k8s/cluster/o-abcd1234/detachInstances"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/launchSpec": {
      "post": {
        "summary": "Create Virtual Node Group",
        "description": "Create a Virtual Node Group.\n",
        "operationId": "OceanAWSLaunchSpecCreate",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "initialNodes",
            "example": 1,
            "description": "When set to an integer greater than 0, a corresponding number of nodes will be launched from the  virtual node group created.\n",
            "schema": {
              "type": "integer",
              "default": null
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/paths/~1ocean~1aws~1k8s~1launchSpec~1%7BoceanLaunchSpecId%7D/put/requestBody/content/application~1json/schema"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Launch Spec Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/k8s/launchSpec"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1aws~1k8s~1launchSpec~1%7BoceanLaunchSpecId%7D/put/requestBody/content/application~1json/schema/properties/launchSpec"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:k8s:launchSpec"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Virtual Node Groups",
        "description": "List the configurations of all virtual node groups for the cluster.\n",
        "operationId": "OceanAWSLaunchSpecList",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "oceanId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "o-12345abc",
            "description": "Identifier of the Ocean cluster.\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Launch Spec Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/k8s/launchSpec"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1aws~1k8s~1launchSpec~1%7BoceanLaunchSpecId%7D/put/requestBody/content/application~1json/schema/properties/launchSpec"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:k8s:launchSpec"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/launchSpec/{oceanLaunchSpecId}": {
      "delete": {
        "summary": "Delete Virtual Node Group",
        "description": "Delete a specified launch specification in an Ocean cluster.\n",
        "operationId": "OceanAWSLaunchSpecDelete",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec~1%7BoceanLaunchSpecId%7D/get/parameters/1"
          },
          {
            "in": "query",
            "name": "deleteNodes",
            "example": true,
            "description": "When set to \"true\", all instances belonging to the deleted launch specification will be drained, detached, and terminated.\n",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "name": "forceDelete",
            "example": true,
            "description": "When set to \"true\", delete even if it is the only custom launch spec remaining, and default launch spec has useAsTemlateOnly = true.\n",
            "schema": {
              "type": "boolean",
              "default": null
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Launch Specification Delete Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/k8s/launchSpec/ols-12345abc"
                            },
                            "method": {
                              "example": "DELETE"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Virtual Node Group",
        "description": "Update launch specification.\n",
        "operationId": "OceanAWSLaunchSpecUpdate",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec~1%7BoceanLaunchSpecId%7D/get/parameters/1"
          },
          {
            "in": "query",
            "name": "autoApplyTags",
            "example": true,
            "description": "Optionally update resource tags on the fly without performing a roll.\n",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "launchSpec"
                ],
                "properties": {
                  "launchSpec": {
                    "type": "object",
                    "description": "AWS Cluster Virtual Node Group (VNG).\n",
                    "required": [
                      "oceanId"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "readOnly": true,
                        "example": "ols-12345abc",
                        "description": "The virtual node group identifier.\n"
                      },
                      "oceanId": {
                        "type": "string",
                        "example": "o-123",
                        "description": "The Ocean cluster identifier. Required for Launch Spec creation.\n"
                      },
                      "name": {
                        "type": "string",
                        "example": "specialty.nodes.spotk8s.com",
                        "description": "Set launch specification name.\n"
                      },
                      "imageId": {
                        "type": "string",
                        "example": "ami-ID",
                        "description": "Set image identifier. Can be null.\n"
                      },
                      "userData": {
                        "type": "string",
                        "example": "dsa89d7uosduxq98sau9s8aux9s8aux09q0qu09axsuix0s9qas09xz",
                        "description": "Set user data script in base 64 encoded MIME.\n"
                      },
                      "iamInstanceProfile": {
                        "type": "object",
                        "title": "auto-scaler",
                        "description": "The instance profile iamRole object.\n",
                        "properties": {
                          "arn": {
                            "type": "string",
                            "example": "arn:aws:iam::123456781234:instance-profile/EKS-nodes-test-NodeInstanceProfile-ABCDEFGH123",
                            "description": "The iamRole ARN. If set, do not set launchSpec.iamInstanceProfile.name\n"
                          },
                          "name": {
                            "type": "string",
                            "description": "The iamRole name. If set, do not set launchSpec.iamInstanceProfile.arn\n",
                            "example": "EKS-nodes-test"
                          }
                        }
                      },
                      "securityGroupIds": {
                        "type": "array",
                        "description": "Set security groups. Each element in the array is a security group identifier.\n",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "sg-0ded3a2980208c30c",
                          "sg-0ded3a2980208c30d"
                        ]
                      },
                      "instanceTypes": {
                        "type": "array",
                        "description": "A list of instance types allowed to be provisioned for pods pending for the launch specification.\\\nThe list overrides the list defined for the Ocean cluster. Can be null.\n",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "c3.2xlarge",
                          "c4.2xlarge"
                        ]
                      },
                      "preferredSpotTypes": {
                        "type": "array",
                        "description": "When Ocean scales up instances, it takes your preferred types into consideration while maintaining a variety of machine types running for optimized distribution. [Learn More](https://docs.spot.io/ocean/features/launch-specifications?id=preferred-spot-instance-types-per-vng)\n",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "c3.2xlarge",
                          "c4.2xlarge"
                        ]
                      },
                      "rootVolumeSize": {
                        "type": "integer",
                        "description": "Set root volume size (in GB). This field and blockDeviceMappings cannot be used in the same specification.\n",
                        "example": 8
                      },
                      "labels": {
                        "type": "array",
                        "description": "An array of labels to add to the VNG nodes. Only custom user labels are allowed,\nand not Kubernetes built-in labels or Spot internal labels.\n",
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "Set label key.\\\nThe following are not allowed:\n* \"kubernetes.io/hostname\"\n* \"failure-domain.beta.kubernetes.io/zone\"\n* \"topology.kubernetes.io/zone\"\n* \"failure-domain.beta.kubernetes.io/region\"\n* \"topology.kubernetes.io/region\"\n* \"beta.kubernetes.io/instance-type\"\n* \"node.kubernetes.io/instance-type\"\n* \"beta.kubernetes.io/os\"\n* \"kubernetes.io/os\"\n* \"beta.kubernetes.io/arch\"\n* \"kubernetes.io/arch\"\n* \"spotinst.io/node-lifecycle\"'\n"
                            },
                            "value": {
                              "type": "string",
                              "description": "Set label value.\n"
                            }
                          }
                        },
                        "example": [
                          {
                            "key": "env",
                            "value": "test"
                          }
                        ]
                      },
                      "taints": {
                        "type": "array",
                        "description": "Add taints to Launch Spec.\n",
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "Set taint key.\n"
                            },
                            "value": {
                              "type": "string",
                              "description": "Set taint value.\n"
                            },
                            "effect": {
                              "type": "string",
                              "description": "Set taint effect.\n"
                            }
                          }
                        },
                        "example": [
                          {
                            "key": "taintKey",
                            "value": "taintValue",
                            "effect": "NoSchedule"
                          }
                        ]
                      },
                      "subnetIds": {
                        "type": "array",
                        "description": "Set subnets in launchSpec. Each element in the array is a subnet identifier.\n",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "subnet-123",
                          "subnet-456"
                        ]
                      },
                      "elasticIpPool": {
                        "type": "object",
                        "description": "Assign an Elastic IP to the instances launched by the launch spec. Can be null.\n",
                        "properties": {
                          "tagSelector": {
                            "type": "object",
                            "description": "Key-value object, which defines an Elastic IP from the customer pool. Can be null.\n",
                            "properties": {
                              "tagKey": {
                                "type": "string",
                                "description": "Elastic IP tag key. The launch spec will consider all elastic IPs tagged with this tag as a part of the elastic IP pool to use.\n",
                                "example": "color"
                              },
                              "tagValue": {
                                "type": "string",
                                "description": "Elastic IP tag value. Can be null.\n",
                                "example": "orange"
                              }
                            }
                          }
                        }
                      },
                      "autoScale": {
                        "type": "object",
                        "description": "Object specifying the automatic scaling of an Ocean VNG.\n",
                        "properties": {
                          "headrooms": {
                            "description": "Specify the custom headroom per VNG. Provide a list of headroom objects.\n",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "cpuPerUnit": {
                                  "description": "Configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.\n",
                                  "type": "integer",
                                  "example": 1024
                                },
                                "memoryPerUnit": {
                                  "description": "Configure the amount of memory (MiB) to allocate the headroom.\n",
                                  "type": "integer",
                                  "example": 512
                                },
                                "numOfUnits": {
                                  "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n",
                                  "type": "integer",
                                  "example": 2
                                },
                                "gpuPerUnit": {
                                  "type": "integer",
                                  "description": "Amont of GPU to allocate for headroom unit.\n",
                                  "example": 0
                                }
                              }
                            }
                          },
                          "autoHeadroomPercentage": {
                            "type": "integer",
                            "description": "Number between 0-200 to control the headroom % of the specific Virtual Node Group. Effective when cluster.autoScaler.isAutoConfig=true is set on the Ocean cluster.\n",
                            "example": 20
                          }
                        }
                      },
                      "tags": {
                        "type": "array",
                        "description": "List of kay-value pairs of tags.\n",
                        "items": {
                          "type": "object",
                          "properties": {
                            "tagKey": {
                              "type": "string",
                              "description": "Set the tag key.\n",
                              "example": "Creator"
                            },
                            "tagValue": {
                              "type": "string",
                              "description": "Set the tag value.\n",
                              "example": "John Doe"
                            }
                          }
                        }
                      },
                      "blockDeviceMappings": {
                        "type": "array",
                        "description": "Block devices that are exposed to the instance. You can specify virtual devices and EBS volumes.\\\nThis parameter and rootVolumeSize cannot be in the spec at the same time.\\\nThis parameter can be null, but if not null, it must contain at least one block device.\n",
                        "items": {
                          "type": "object",
                          "properties": {
                            "deviceName": {
                              "type": "string",
                              "description": "Set device name.\n",
                              "example": "/dev/xvda"
                            },
                            "ebs": {
                              "type": "object",
                              "description": "Set EBS properties.\n",
                              "properties": {
                                "throughput": {
                                  "type": "integer",
                                  "minimum": 125,
                                  "maximum": 1000,
                                  "example": 125,
                                  "description": "The amount of data transferred to or from a storage device per second. You can use this parameter only if volumetype=‘gp3’.\n"
                                },
                                "deleteOnTermination": {
                                  "type": "boolean",
                                  "description": "Flag to delete the EBS on instance termination.\n",
                                  "example": false
                                },
                                "encrypted": {
                                  "type": "boolean",
                                  "example": false
                                },
                                "iops": {
                                  "type": "integer",
                                  "description": "Must be greater than or equal to 0.\n",
                                  "example": 1
                                },
                                "kmsKeyId": {
                                  "type": "string",
                                  "example": "alias/aws/ebs"
                                },
                                "snapshotId": {
                                  "type": "string",
                                  "example": "snap-abcdefghi111110"
                                },
                                "volumeType": {
                                  "type": "string",
                                  "description": "Set volume type.\n",
                                  "enum": [
                                    "standard",
                                    "io1",
                                    "io2",
                                    "gp2",
                                    "gp3",
                                    "st1",
                                    "sc1"
                                  ],
                                  "example": "gp2"
                                },
                                "volumeSize": {
                                  "type": "integer",
                                  "description": "Set volume size (in GB). When using this property, you cannot use dynamicVolumeSize.\\\nYou must use one or the other. Volume size should be greater than or equal to the size configured in the AMI.\n"
                                },
                                "dynamicVolumeSize": {
                                  "type": "object",
                                  "required": [
                                    "baseSize",
                                    "resource"
                                  ],
                                  "description": "Set dynamic volume size properties. When using this object, you cannot use volumeSize.\\\nYou must use one or the other.\n",
                                  "properties": {
                                    "baseSize": {
                                      "type": "integer",
                                      "description": "Initial size per volume.\n",
                                      "example": 50
                                    },
                                    "resource": {
                                      "type": "string",
                                      "example": "CPU"
                                    },
                                    "sizePerResourceUnit": {
                                      "type": "integer",
                                      "description": "Additional size per resource unit (in GB).\\\nFor example: if baseSize=50, and sizePerResourceUnit=20, and an instance with 2 CPU is launched, its disk size will be 90 GB.\n",
                                      "example": 20
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "resourceLimits": {
                        "type": "object",
                        "properties": {
                          "maxInstanceCount": {
                            "description": "Option to set a maximum number of instances per launch specification.\\\nCan be null. If set, value must be greater than or equal to 0.\n",
                            "type": "integer",
                            "example": 5
                          },
                          "minInstanceCount": {
                            "description": "Option to set a minimum number of instances per launch specification.\\\nCan be null. If set, value must be greater than or equal to 0.\n",
                            "type": "integer",
                            "example": 2
                          }
                        }
                      },
                      "strategy": {
                        "type": "object",
                        "description": "Similar to a strategy for an Ocean cluster, but applying only to a virtual node group.\n",
                        "properties": {
                          "spotPercentage": {
                            "type": "integer",
                            "description": "The desired percentage of the Spot instances out of all running instances for this VNG.\\\nOnly available when the field is **not** set in the cluster directly (cluster.strategy.spotPercentage).\n",
                            "minimum": 0,
                            "maximum": 100,
                            "example": 70,
                            "default": 100
                          }
                        }
                      },
                      "associatePublicIpAddress": {
                        "type": "boolean",
                        "description": "Configure public IP address allocation.\n",
                        "default": false,
                        "example": false
                      },
                      "restrictScaleDown": {
                        "type": "boolean",
                        "description": "When set to “True”, VNG nodes will be treated as if all pods running have the [restrict-scale-down label](https://docs.spot.io/ocean/features/labels-and-taints).\nTherefore, Ocean will not scale nodes down unless empty.\n",
                        "example": false
                      },
                      "scheduling": {
                        "type": "object",
                        "description": "An object used to define scheduled tasks such as a manual headroom update.\n",
                        "title": "Ocean Scheduling",
                        "properties": {
                          "tasks": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Task Definition",
                              "required": [
                                "isEnabled",
                                "cronExpression",
                                "taskType"
                              ],
                              "properties": {
                                "isEnabled": {
                                  "type": "boolean",
                                  "example": true,
                                  "description": "Describes whether the task is enabled. When True, the task runs. When False, it does not run. Required for launchSpec.scheduling.tasks. In case automatic headroom is configured, please make sure to set autoScaler.enableAutomaticAndManualHeadroom on Ocean level to true in order to make sure that the manual headroom would be affective.\n"
                                },
                                "cronExpression": {
                                  "type": "string",
                                  "example": "0 1 * * *",
                                  "description": "A valid cron expression. For example : \" * * * * * \". The cron job runs in UTC time and is in Unix cron format. (See the Cron Expression Validator Script.)\n"
                                },
                                "taskType": {
                                  "type": "string",
                                  "example": "manualHeadroomUpdate",
                                  "enum": [
                                    "manualHeadroomUpdate"
                                  ],
                                  "description": "The activity that you are scheduling. Valid values: \"manualHeadroomUpdate\". Required for launchSpec.scheduling.tasks.\n"
                                },
                                "config": {
                                  "description": "The config of this scheduled task. Depends on the value of `taskType`.",
                                  "oneOf": [
                                    {
                                      "type": "object",
                                      "title": "manualHeadroomUpdate",
                                      "required": [
                                        "headrooms"
                                      ],
                                      "properties": {
                                        "headrooms": {
                                          "description": "Set custom headroom per VNG. Provide a list of launchSpec.autoscale.headroom objects.\n",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "cpuPerUnit": {
                                                "description": "Configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.\n",
                                                "type": "integer"
                                              },
                                              "memoryPerUnit": {
                                                "description": "Configure the amount of memory (MiB) to allocate the headroom.\n",
                                                "type": "integer"
                                              },
                                              "numOfUnits": {
                                                "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n",
                                                "type": "integer"
                                              },
                                              "gpuPerUnit": {
                                                "type": "integer",
                                                "description": "Amont of GPU to allocate for headroom unit.\n"
                                              }
                                            }
                                          },
                                          "example": [
                                            {
                                              "cpuPerUnit": 1024,
                                              "memoryPerUnit": 512,
                                              "numOfUnits": 2,
                                              "gpuPerUnit": 1
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "shutdownHours": {
                            "type": "object",
                            "title": "Shutdown Hours",
                            "description": "An object used to specify times that the nodes in the virtual node group will be taken down.\n",
                            "required": [
                              "timeWindows"
                            ],
                            "properties": {
                              "timeWindows": {
                                "type": "array",
                                "description": "The times that the shutdown hours will apply.\n",
                                "items": {
                                  "type": "string",
                                  "example": "Sat:08:00-Sun:08:00"
                                }
                              },
                              "isEnabled": {
                                "type": "boolean",
                                "example": true,
                                "description": "Flag to enable or disable the shutdown hours mechanism. When False, the mechanism is deactivated, and the virtual node group remains in its current state.\n"
                              }
                            }
                          }
                        }
                      },
                      "instanceMetadataOptions": {
                        "type": "object",
                        "title": "instanceMetadataOptions",
                        "required": [
                          "httpTokens"
                        ],
                        "description": "Ocean instance metadata options object for [IMDSv2](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-service.html).\n",
                        "properties": {
                          "httpTokens": {
                            "type": "string",
                            "description": "Determines if a signed token is required or not.\n",
                            "enum": [
                              "optional",
                              "required"
                            ],
                            "example": "optional"
                          },
                          "httpPutResponseHopLimit": {
                            "type": "integer",
                            "description": "An integer within 1,64 range (including).\nThe desired HTTP PUT response hop limit for instance metadata requests.\nThe larger the number, the further instance metadata requests can travel.\n",
                            "example": 12
                          }
                        }
                      },
                      "createdAt": {
                        "type": "string",
                        "readOnly": true,
                        "format": "date-time",
                        "example": "2021-03-17T08:13:08.000Z",
                        "description": "A timestamp of the VNG creation.\n"
                      },
                      "updatedAt": {
                        "type": "string",
                        "readOnly": true,
                        "format": "date-time",
                        "example": "2021-03-17T15:06:13.000Z",
                        "description": "A timestamp of the latest VNG update.\n"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Launch Spec Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/k8s/launchSpec/ols-12345abc"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1aws~1k8s~1launchSpec~1%7BoceanLaunchSpecId%7D/put/requestBody/content/application~1json/schema/properties/launchSpec"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:k8s:launchSpec"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get Virtual Node Group",
        "operationId": "OceanAWSLaunchSpecGet",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec~1%7BoceanLaunchSpecId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Launch Spec Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/k8s/launchSpec/ols-12345abc"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1aws~1k8s~1launchSpec~1%7BoceanLaunchSpecId%7D/put/requestBody/content/application~1json/schema/properties/launchSpec"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:k8s:launchSpec"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/launchSpec/autoScalingGroup/import": {
      "summary": "Ocean for AWS",
      "post": {
        "summary": "Import ASG To Ocean Virtual Node Group",
        "description": "Returns an Ocean Virtual Node Group (VNG) configuration in a given AWS autoscaling group (ASG). The returned value (\"Imported VNG\") can then be used as input to the Create Virtual Node Group API in order to create an actual VNG in your Ocean cluster.\n",
        "operationId": "oceanAwsImportAsgToLaunchSpec",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1launchSpec/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1autoScalingGroup~1import/post/parameters/1"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "launchSpec": {
                        "type": "object",
                        "description": "The object specifying the configuration of the VNG.\n",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Set launch specification name.\n",
                            "example": "specialty.nodes.spotk8s.com"
                          },
                          "labels": {
                            "type": "array",
                            "description": "An array of labels to add to the VNG nodes. Only custom user labels are allowed,\nand not Kubernetes built-in labels or Spot internal labels.\n",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string",
                                  "description": "Set label key. \\\nThe following are not allowed:\n* \"kubernetes.io/hostname\"\n* \"failure-domain.beta.kubernetes.io/zone\"\n* \"topology.kubernetes.io/zone\"\n* \"failure-domain.beta.kubernetes.io/region\"\n* \"topology.kubernetes.io/region\"\n* \"beta.kubernetes.io/instance-type\"\n* \"node.kubernetes.io/instance-type\"\n* \"beta.kubernetes.io/os\"\n* \"kubernetes.io/os\"\n* \"beta.kubernetes.io/arch\"\n* \"kubernetes.io/arch\"\n* \"spotinst.io/node-lifecycle\"\n"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Set label value.\n"
                                }
                              }
                            },
                            "example": [
                              {
                                "key": "env",
                                "value": "test"
                              }
                            ]
                          },
                          "taints": {
                            "type": "array",
                            "description": "Add taints to Launch Spec.\n",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string",
                                  "description": "Set taint key.\n"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Set taint value.\n"
                                },
                                "effect": {
                                  "type": "string",
                                  "description": "Set taint effect.\n",
                                  "enum": [
                                    "NoSchedule",
                                    "PreferNoSchedule",
                                    "NoExecute",
                                    "PreferNoExecute"
                                  ]
                                }
                              }
                            },
                            "example": [
                              {
                                "key": "taintKey",
                                "value": "taintValue",
                                "effect": "NoSchedule"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Import ASG to Launch Spec Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/k8s/launchSpec/autoScalingGroup/import"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Ocean Import ASG to Launch Spec Response.\n",
                                "properties": {
                                  "oceanId": {
                                    "type": "string",
                                    "example": "o-500a5d5a"
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "TestTeam1"
                                  },
                                  "imageId": {
                                    "type": "string",
                                    "example": "ami-0ce21b51cb55a48b8"
                                  },
                                  "securityGroupIds": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "example": [
                                        "sg-03ccf232a2bf0f4ea"
                                      ]
                                    }
                                  },
                                  "tags": {
                                    "type": "object",
                                    "properties": {
                                      "tagKey": {
                                        "type": "string",
                                        "example": "AmazonECSManaged"
                                      },
                                      "tagValue": {
                                        "type": "string",
                                        "example": ""
                                      }
                                    }
                                  },
                                  "instanceMetadataOptions": {
                                    "$ref": "#/paths/~1ocean~1aws~1k8s~1launchSpec/post/requestBody/content/application~1json/schema/allOf/0/properties/launchSpec/properties/instanceMetadataOptions"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:k8s:launchSpec"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/launchSpec/eksNodeGroup/import": {
      "summary": "Ocean for EKS",
      "post": {
        "summary": "Import EKS Cluster Node Group To Ocean Virtual Node Group",
        "description": "<ul> <li> Returns an Ocean Virtual Node Group (VNG) configuration based on a given AWS EKS Cluster Node Group.\n     The returned value (\"Imported VNG\") can then be used as input to the Create Virtual Node Group API in order to create an actual VNG in your Ocean cluster.</li>\n<li> Notes: <ul>\n            <li> Make sure to have the necessary permissions in your Spot policy: <b>eks:ListNodegroups, eks:DescribeNodegroup</b>.\n                 <a href=\"https://docs.spot.io/administration/api/spot-policy-in-aws?id=spot-policy-in-aws\">Click here for the full Spot policy.</a></li>\n            <li> <b>Exactly one of region or oceanId must be supplied</b> as query parameters.</li>\n            <ul>\n</li> <ul>\n",
        "operationId": "oceanEksImportNodeGroupToLaunchSpec",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "eksClusterName",
            "example": "MyEksCluster",
            "description": "Cluster name of the EKS cluster.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "eksNodeGroupName",
            "example": "MyEksClusterNodeGroup",
            "description": "Node group name to import.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "region",
            "example": "us-east-1",
            "description": "Region name of the EKS cluster's node group.\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "oceanId",
            "example": "o-12345abc",
            "description": "Identifier of the Ocean cluster.\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "launchSpec": {
                        "type": "object",
                        "description": "The object specifying the configuration of the VNG.\n",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Set launch specification name.\n",
                            "example": "specialty.nodes.spotk8s.com"
                          },
                          "labels": {
                            "type": "array",
                            "description": "An array of labels to add to the VNG nodes. Only custom user labels are allowed,\nand not Kubernetes built-in labels or Spot internal labels.\n",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string",
                                  "description": "Set label key. \\\nThe following are not allowed:\n* \"kubernetes.io/hostname\"\n* \"failure-domain.beta.kubernetes.io/zone\"\n* \"topology.kubernetes.io/zone\"\n* \"failure-domain.beta.kubernetes.io/region\"\n* \"topology.kubernetes.io/region\"\n* \"beta.kubernetes.io/instance-type\"\n* \"node.kubernetes.io/instance-type\"\n* \"beta.kubernetes.io/os\"\n* \"kubernetes.io/os\"\n* \"beta.kubernetes.io/arch\"\n* \"kubernetes.io/arch\"\n* \"spotinst.io/node-lifecycle\"\n"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Set label value.\n"
                                }
                              }
                            },
                            "example": [
                              {
                                "key": "env",
                                "value": "test"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Import EKS Cluster Node Group to Launch Spec Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/k8s/launchSpec/eksNodeGroup/import"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Ocean Import EKS Cluster Node Group to Launch Spec Response.\n",
                                "properties": {
                                  "oceanId": {
                                    "type": "string",
                                    "example": "o-500a5d5a"
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "TestTeam1"
                                  },
                                  "imageId": {
                                    "type": "string",
                                    "example": "ami-0ce21b51cb55a48b8"
                                  },
                                  "securityGroupIds": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "example": "sg-03ccf232a2bf0f4ea"
                                    }
                                  },
                                  "tags": {
                                    "type": "array",
                                    "description": "A maximum of 10 unique key-value pairs for VM tags in the virtual node group.\n",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "tagKey"
                                      ],
                                      "properties": {
                                        "tagKey": {
                                          "type": "string",
                                          "description": "Tag key for VMs in the cluster.\n",
                                          "example": "env"
                                        },
                                        "tagValue": {
                                          "type": "string",
                                          "description": "Tag value for VMs in the cluster.\n",
                                          "example": "staging"
                                        }
                                      }
                                    }
                                  },
                                  "instanceMetadataOptions": {
                                    "$ref": "#/paths/~1ocean~1aws~1k8s~1launchSpec/post/requestBody/content/application~1json/schema/allOf/0/properties/launchSpec/properties/instanceMetadataOptions"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:k8s:launchSpec"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/onPrem/k8s/cluster": {
      "summary": "Ocean for AWS",
      "post": {
        "summary": "Ocean On-Premise - Create",
        "description": "Create a new Ocean On-Prem entity.\n### Prerequisites\nThe Ocean Controller is used to monitor the cluster resources and report back to Ocean and is required for Ocean On-Prem. To install the Ocean Controller, complete and run the following script on a machine with kubectl command line tool installed and configured:\n```\n  #!/usr/bin/env bash\n  curl -fsSL http://spotinst-public.s3.amazonaws.com/integrations/kubernetes/cluster-controller/scripts/init.sh | \\\n  SPOTINST_TOKEN=<ENTER YOUR TOKEN HERE> \\\n  SPOTINST_ACCOUNT=<ENTER YOUR SPOTINST ACCOUNT ID HERE> \\\n  SPOTINST_CLUSTER_IDENTIFIER=<ENTER YOUR CLUSTER IDENTIFIER HERE> \\\n  bash\n```\n<br /> For more on the Ocean Controller and Ocean's anatomy see the documentation [here](https://docs.spot.io/ocean-aws/kubernetes/concepts/ocean-cloud/introduction/#ocean-anatomy).\n",
        "operationId": "oceanCreateOnPrem",
        "tags": [
          "Ocean On-Premise"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "cluster"
                    ],
                    "properties": {
                      "cluster": {
                        "type": "object",
                        "title": "AWS Cluster",
                        "required": [
                          "name",
                          "controllerClusterIdentifier",
                          "pricePerUnit"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "oceanName",
                            "description": "The name of the cluster.\n"
                          },
                          "description": {
                            "type": "string",
                            "example": "Development",
                            "description": "Optionally provide a description.\n"
                          },
                          "controllerClusterIdentifier": {
                            "type": "string",
                            "description": "The cluster Id where the Ocean controller is installed.",
                            "example": "k8sCluster"
                          },
                          "pricePerUnit": {
                            "type": "object",
                            "title": "Price Per Unit",
                            "description": "Ocean will monitor the costs of each resource unit.",
                            "required": [
                              "cpuHour",
                              "memoryHour"
                            ],
                            "properties": {
                              "cpuHour": {
                                "type": "number",
                                "format": "float",
                                "example": 0.015,
                                "description": "The cost per cpu unit (core) hour for the cluster.\n"
                              },
                              "memoryHour": {
                                "type": "number",
                                "format": "float",
                                "example": 0.002,
                                "description": "The cost per memory unit (GiB) hour for the cluster.\n"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "cluster": {
                        "type": "object"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1onPrem~1k8s~1cluster/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Ocean On-Premise - List",
        "description": "List the configurations for all Ocean cluster in the specified account.\n",
        "operationId": "list-all-ocean-onprem",
        "tags": [
          "Ocean On-Premise"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean On-Premise Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "object",
                      "description": "Response package that includes, status, type and any relevant data.\n",
                      "properties": {
                        "status": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "integer",
                              "example": 200,
                              "description": "HTTP status code assigned to this response\n"
                            },
                            "message": {
                              "type": "string",
                              "example": "OK",
                              "description": "HTTP status message for the respective status code\n"
                            }
                          }
                        },
                        "kind": {
                          "type": "string",
                          "example": "spotinst:ocean:onprem:k8s"
                        },
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "o-18887922"
                            },
                            "name": {
                              "type": "string",
                              "example": "oceanName"
                            },
                            "description": {
                              "type": "string",
                              "example": "development"
                            },
                            "controllerClusterIdentifier": {
                              "type": "string",
                              "example": "k8sCluster"
                            },
                            "pricePerUnit": {
                              "type": "object",
                              "properties": {
                                "cpuHour": {
                                  "type": "number",
                                  "format": "float",
                                  "example": 0.015
                                },
                                "memoryHour": {
                                  "type": "number",
                                  "format": "float",
                                  "example": 0.002
                                }
                              }
                            },
                            "createdAt": {
                              "type": "string",
                              "example": "2018-11-26T09:39:52.933Z"
                            },
                            "updatedAt": {
                              "type": "string",
                              "example": "2018-11-26T09:39:52.933Z"
                            }
                          }
                        },
                        "count": {
                          "type": "integer",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/onPrem/k8s/cluster/{oceanClusterId}": {
      "delete": {
        "summary": "Delete Cluster",
        "description": "Delete an Ocean On-Prem cluster entity in Spot Ocean. This **DOES NOT** affect your on-prem cluster.\n",
        "operationId": "oceanOnPremDelete",
        "tags": [
          "Ocean On-Premise"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get Cluster",
        "description": "Get the configurations for the specified Ocean On-Prem cluster entity.\n",
        "operationId": "oceanOnPremGet",
        "tags": [
          "Ocean On-Premise"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1onPrem~1k8s~1cluster/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Cluster",
        "description": "All Ocean on-prem parameters are updatable. This API supports partial updates, so specific fields can be updated separately.\n",
        "operationId": "oceanOnPremUpdate",
        "tags": [
          "Ocean On-Premise"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/paths/~1ocean~1onPrem~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "group": {
                        "type": "object"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1onPrem~1k8s~1cluster/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/managedInstance": {
      "post": {
        "summary": "Create Managed Instance",
        "description": "Create a new Managed Instance resource.\n",
        "operationId": "AWSManagedInstanceCreate",
        "tags": [
          "Managed Instance AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "managedInstance": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "required": true,
                            "type": "string",
                            "example": "mi-test",
                            "description": "Managed Instance name\n"
                          },
                          "description": {
                            "type": "string",
                            "example": "This is my Managed Instance",
                            "description": "Describe your Managed Instance resource\n"
                          },
                          "region": {
                            "required": true,
                            "type": "string",
                            "example": "us-east-1",
                            "description": "The AWS region your resource will be created in.\n"
                          },
                          "strategy": {
                            "type": "object",
                            "title": "MI Strategy",
                            "properties": {
                              "lifeCycle": {
                                "type": "string",
                                "example": "spot",
                                "required": false,
                                "description": "Set lifecycle, valid values: `spot`, `on_demand` Default: spot\n"
                              },
                              "orientation": {
                                "type": "string",
                                "example": "availabilityOriented",
                                "required": false,
                                "description": "The strategy orientation. valid values: `costOriented`, `availabilityOriented`, `balanced`, `cheapest` Default: availabilityOriented\n"
                              },
                              "drainingTimeout": {
                                "type": "integer",
                                "required": false,
                                "description": "The time in seconds to allow the instance be drained from incoming TCP connections and detached from ELB before terminating it, during a scale down operation\n"
                              },
                              "fallbackToOd": {
                                "type": "boolean",
                                "example": true,
                                "required": false,
                                "description": "In case of no spots available, Managed Instance will launch an On-demand instance instead Default: true\n"
                              },
                              "utilizeReservedInstances": {
                                "type": "boolean",
                                "default": false,
                                "example": true,
                                "description": "In case of any available Reserved Instances, Managed Instance will utilize them before purchasing Spot instances Default: false\n"
                              },
                              "utilizeCommitments": {
                                "type": "boolean",
                                "description": "If there are available Reserved Instances or Savings Plans, Elastigroup will utilize them before using Spot instances\n",
                                "example": false
                              },
                              "optimizationWindows": {
                                "type": "array",
                                "description": "When performAt is 'timeWindow': must specify a list of 'timeWindows' with at least one time window Each string is in the format of - ddd:hh:mm-ddd:hh:mm ddd = day of week = Sun | Mon | Tue | Wed | Thu | Fri | Sat hh = hour 24 = 0 -23 mm = minute = 0 - 59\n",
                                "items": {
                                  "type": "string",
                                  "example": "Mon:03:00-Wed:02:30"
                                }
                              },
                              "revertToSpot": {
                                "type": "object",
                                "title": "When Elastigroup moves from OnDemand back to Spot capacity",
                                "properties": {
                                  "performAt": {
                                    "type": "string",
                                    "example": "timeWindow",
                                    "enum": [
                                      "never",
                                      "always",
                                      "timeWindow"
                                    ],
                                    "description": "Valid values: `always`, `never`, \"timeWindow\" Example: never Default: never\n"
                                  }
                                }
                              }
                            }
                          },
                          "compute": {
                            "type": "object",
                            "title": "MI Compute",
                            "properties": {
                              "subnetIds": {
                                "required": true,
                                "type": "array",
                                "description": "A comma-separated list of subnet identifiers for your instance.\n",
                                "items": {
                                  "type": "string",
                                  "example": "subnet-79da021e"
                                }
                              },
                              "vpcId": {
                                "type": "string",
                                "example": "vpc-111",
                                "required": true,
                                "description": "VPC ID for your instance.\n"
                              },
                              "elasticIp": {
                                "type": "string",
                                "required": false,
                                "example": "ip",
                                "description": "Elastic IP Allocation Id to associate to the instance\n"
                              },
                              "privateIp": {
                                "type": "string",
                                "example": "ip",
                                "required": false,
                                "description": "Private IP Allocation Id to associate to the instance\n"
                              },
                              "product": {
                                "type": "string",
                                "required": true,
                                "example": "Linux/UNIX",
                                "description": "Operation system type. Possible values: Linux/UNIX, SUSE Linux, Windows, Red Hat Enterprise Linux In case of EC2 classic: Linux/UNIX (Amazon VPC), SUSE Linux (Amazon VPC), Windows (Amazon VPC), Red Hat Enterprise Linux (Amazon VPC)\n"
                              },
                              "launchSpecification": {
                                "type": "object",
                                "properties": {
                                  "instanceTypes": {
                                    "type": "object",
                                    "properties": {
                                      "preferredType": {
                                        "type": "string",
                                        "required": true,
                                        "example": "t2.micro",
                                        "description": "Comma separated list of available instance types for instance\n"
                                      },
                                      "types": {
                                        "type": "array",
                                        "description": "Set instance types settings\n",
                                        "items": {
                                          "type": "string",
                                          "example": "t2.micro"
                                        }
                                      }
                                    }
                                  },
                                  "ebsOptimized": {
                                    "type": "boolean",
                                    "example": false,
                                    "description": "Enable EBS optimization for supported instance which is not enabled by default. Note - additional charges will be applied. Default: false\n"
                                  },
                                  "monitoring": {
                                    "type": "boolean",
                                    "example": false,
                                    "description": "Describes whether instance Enhanced Monitoring is enabled. Default: false\n"
                                  },
                                  "tenancy": {
                                    "type": "string",
                                    "example": "default",
                                    "description": "Valid values: \"default\", \"dedicated\" Default: default\n"
                                  },
                                  "iamRole": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "name"
                                      },
                                      "arn": {
                                        "type": "string",
                                        "example": "arn"
                                      }
                                    }
                                  },
                                  "securityGroupIds": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "example": "sg-0dfc2c8760df6fec7"
                                    }
                                  },
                                  "imageId": {
                                    "type": "string",
                                    "example": "ami-01e24be29428c15b2"
                                  },
                                  "keyPair": {
                                    "type": "string",
                                    "example": "labs-oregon"
                                  },
                                  "tags": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "tagKey": {
                                          "type": "string",
                                          "example": "Creator"
                                        },
                                        "tagValue": {
                                          "type": "string",
                                          "example": "test1@spot.io"
                                        }
                                      }
                                    }
                                  },
                                  "resourceTagSpecification": {
                                    "type": "object",
                                    "description": "Optional field. User will specified which resources should be tagged with group tags.",
                                    "properties": {
                                      "volumes": {
                                        "type": "object",
                                        "description": "Optional field. Tag specification for Volume resources.",
                                        "properties": {
                                          "shouldTag": {
                                            "type": "boolean",
                                            "description": "Optional field. Volume resources will be tagged with group tags.",
                                            "default": false,
                                            "example": false
                                          }
                                        }
                                      },
                                      "snapshots": {
                                        "type": "object",
                                        "description": "Optional field. Tag specification for Snapshot resources.",
                                        "properties": {
                                          "shouldTag": {
                                            "type": "boolean",
                                            "description": "Optional field. Snapshot resources will be tagged with group tags.",
                                            "default": true,
                                            "example": true
                                          }
                                        }
                                      },
                                      "enis": {
                                        "type": "object",
                                        "description": "Optional field. Tag specification for ENI resources.",
                                        "properties": {
                                          "shouldTag": {
                                            "type": "boolean",
                                            "description": "Optional field. ENI resources will be tagged with group tags.",
                                            "default": false,
                                            "example": false
                                          }
                                        }
                                      },
                                      "amis": {
                                        "type": "object",
                                        "description": "Optional field. Tag specification for AMI resources.",
                                        "properties": {
                                          "shouldTag": {
                                            "type": "boolean",
                                            "description": "Optional field. AMI resources will be tagged with group tags.",
                                            "default": true,
                                            "example": true
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "userData": {
                                    "type": "string",
                                    "example": "dXNlcmJhc2g2NGVuY29kZWQ="
                                  },
                                  "shutdownScript": {
                                    "type": "string",
                                    "example": "dXNlcmJhc2g2NGVuY29kZWQ="
                                  },
                                  "creditSpecification": {
                                    "type": "object",
                                    "properties": {
                                      "cpuCredits": {
                                        "type": "string",
                                        "example": "unlimited"
                                      }
                                    }
                                  },
                                  "networkInterfaces": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "deviceIndex": {
                                          "type": "integer",
                                          "example": 0
                                        },
                                        "associatePublicIpAddress": {
                                          "type": "boolean",
                                          "example": true
                                        },
                                        "associateIpv6Address": {
                                          "type": "boolean",
                                          "example": true
                                        }
                                      }
                                    }
                                  },
                                  "blockDeviceMappings": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "deviceName": {
                                          "type": "string",
                                          "example": "/dev/xvdcz"
                                        },
                                        "ebs": {
                                          "type": "object",
                                          "properties": {
                                            "iops": {
                                              "type": "integer",
                                              "minimum": 0,
                                              "description": "Must be greater than or equal to 0\n",
                                              "example": 0
                                            },
                                            "throughput": {
                                              "type": "integer",
                                              "minimum": 125,
                                              "maximum": 1000,
                                              "example": 125,
                                              "description": "The amount of data transferred to or from a storage device per second, you can use this param just in a case that volumetype=‘gp3’.\n"
                                            },
                                            "deleteOnTermination": {
                                              "type": "boolean",
                                              "example": true
                                            },
                                            "volumeSize": {
                                              "type": "integer",
                                              "example": 12
                                            },
                                            "volumeType": {
                                              "type": "string",
                                              "example": "gp2"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "integrations": {
                            "type": "object",
                            "title": "MI integrations",
                            "properties": {
                              "loadBalancersConfig": {
                                "type": "object",
                                "properties": {
                                  "loadBalancers": {
                                    "type": "array",
                                    "items": {
                                      "anyOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "example": "name"
                                            },
                                            "arn": {
                                              "type": "string",
                                              "example": "arn"
                                            },
                                            "type": {
                                              "type": "string",
                                              "example": "MULTAI_TARGET_SET",
                                              "description": "The resource type. Valid Values: CLASSIC, TARGET_GROUP, MULTAI_TARGET_SET\n"
                                            },
                                            "balancerId": {
                                              "type": "string",
                                              "example": "lb-1ee2e3q"
                                            },
                                            "targetSetId": {
                                              "type": "string",
                                              "example": "ts-3eq"
                                            },
                                            "azAwareness": {
                                              "type": "boolean",
                                              "example": true
                                            },
                                            "autoWeight": {
                                              "type": "boolean",
                                              "example": true
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "route53": {
                                "type": "object",
                                "properties": {
                                  "domains": {
                                    "type": "array",
                                    "items": {
                                      "anyOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "hostedZoneId": {
                                              "type": "string",
                                              "example": "Z00275642KS5ZZJFIQBCA"
                                            },
                                            "recordSetType": {
                                              "type": "string",
                                              "example": "a"
                                            },
                                            "spotinstAccountId": {
                                              "type": "string",
                                              "example": "act-1234"
                                            },
                                            "recordSets": {
                                              "type": "array",
                                              "items": {
                                                "anyOf": [
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "usePublicIp": {
                                                        "type": "boolean",
                                                        "example": true
                                                      },
                                                      "name": {
                                                        "type": "string",
                                                        "example": "testa.spot.io"
                                                      }
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "scheduling": {
                            "type": "object",
                            "title": "MI Scheduling",
                            "properties": {
                              "tasks": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "title": "Task Definition",
                                  "properties": {
                                    "taskType": {
                                      "type": "string",
                                      "example": "scale",
                                      "enum": [
                                        "backup_ami",
                                        "scale",
                                        "scaleUp",
                                        "roll",
                                        "statefulUpdateCapacity",
                                        "statefulRecycle"
                                      ],
                                      "description": "The task type to run.\n"
                                    },
                                    "startTime": {
                                      "type": "string",
                                      "example": "2018-05-23T10:55:09.000Z",
                                      "description": "DATETIME in ISO-8601 format. Sets a start time for scheduled actions. If `frequency` or `cronExpression` are not used - the task will run only once at the start time and will then be deleted from the group configuration\n"
                                    },
                                    "cronExpression": {
                                      "type": "string",
                                      "example": "0 1 * * *",
                                      "description": "A valid cron expression. For example : \" * * * * * \". The cron is running in UTC time zone and is in Unix cron format Cron Expression Validator Script. Only one of ‘frequency' or ‘cronExpression' should be used at a time.\n"
                                    },
                                    "isEnabled": {
                                      "type": "boolean",
                                      "default": true,
                                      "example": true,
                                      "description": "Describes whether the task is enabled. When true the task should run when false it should not run.\n"
                                    },
                                    "frequency": {
                                      "type": "string",
                                      "enum": [
                                        "hourly",
                                        "daily",
                                        "weekly"
                                      ],
                                      "description": "The recurrence frequency to run this task. Only one of `frequency` or `cronExpression` should be used at a time\n"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "persistence": {
                            "type": "object",
                            "description": "Persistence settings. Should omit at least one of the persist options below.\n",
                            "properties": {
                              "blockDevicesMode": {
                                "type": "string",
                                "example": "reattach",
                                "description": "Determine the way we attach the data volumes to the data devices.\n",
                                "enum": [
                                  "reattach",
                                  "onLaunch"
                                ],
                                "default": "onLaunch"
                              },
                              "persistRootDevice": {
                                "type": "boolean",
                                "example": true,
                                "description": "Should the instance maintain its root device volumes\n"
                              },
                              "persistBlockDevices": {
                                "type": "boolean",
                                "example": true,
                                "description": "Should the instance maintain its Data volumes\n"
                              },
                              "persistPrivateIp": {
                                "type": "boolean",
                                "example": true,
                                "description": "Should the instance maintain its private IP\n"
                              }
                            }
                          },
                          "healthCheck": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "example": "EC2",
                                "description": "The service to use for the health check.\n",
                                "enum": [
                                  "EC2",
                                  "ELB",
                                  "TARGET_GROUP",
                                  "MULTAI_TARGET_SET"
                                ],
                                "default": "EC2"
                              },
                              "autoHealing": {
                                "type": "boolean",
                                "example": true,
                                "description": "Enable the auto healing which auto replaces the instance in case the health check fails\n",
                                "default": true
                              },
                              "gracePeriod": {
                                "type": "integer",
                                "example": 120,
                                "description": "The amount of time, in seconds, after the instance has launched to starts and check its health.\n",
                                "default": 120
                              },
                              "unhealthyDuration": {
                                "type": "integer",
                                "example": 120,
                                "description": "The amount of time, in seconds, an existing instance should remain active after becoming unhealthy.\\\nAfter the set time out the instance will be replaced\n",
                                "default": 120
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1aws~1ec2~1managedInstance/post/requestBody/content/application~1json/schema/allOf/0"
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:ec2:managedInstance"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Managed Instances",
        "description": "List all Managed Instance resources in the account.\n",
        "operationId": "AWSManagedInstanceList",
        "tags": [
          "Managed Instance AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "createdAt": {
                                    "type": "string",
                                    "example": "2020-04-10T21:41:31.000Z"
                                  },
                                  "updatedAt": {
                                    "type": "string",
                                    "example": "2020-05-12T22:37:18.000Z"
                                  },
                                  "id": {
                                    "type": "string",
                                    "example": "smi-34ae3a42"
                                  },
                                  "config": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "mi-test",
                                        "description": "Managed Instance name\n"
                                      },
                                      "region": {
                                        "required": true,
                                        "type": "string",
                                        "example": "us-east-1",
                                        "description": "The AWS region your resource will be created in.\n"
                                      },
                                      "strategy": {
                                        "$ref": "#/paths/~1aws~1ec2~1managedInstance/post/requestBody/content/application~1json/schema/allOf/0/properties/managedInstance/properties/strategy"
                                      },
                                      "persistence": {
                                        "type": "object",
                                        "description": "Persistence settings. Should omit at least one of the persist options below.\n",
                                        "properties": {
                                          "blockDevicesMode": {
                                            "type": "string",
                                            "example": "reattach",
                                            "description": "Determine the way we attach the data volumes to the data devices. Valid values: ‘reattach', ‘onLaunch' Default: onLaunch\n"
                                          },
                                          "persistRootDevice": {
                                            "type": "boolean",
                                            "example": true,
                                            "description": "Should the instance maintain its root device volumes\n"
                                          },
                                          "persistBlockDevices": {
                                            "type": "boolean",
                                            "example": true,
                                            "description": "Should the instance maintain its Data volumes\n"
                                          },
                                          "persistPrivateIp": {
                                            "type": "boolean",
                                            "example": true,
                                            "description": "Should the instance maintain its private IP\n"
                                          }
                                        }
                                      },
                                      "healthCheck": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "example": "EC2",
                                            "description": "The service to use for the health check. Valid values: `EC2`, `ELB`, `TARGET_GROUP`, `MULTAI_TARGET_SET` Default: EC2\n"
                                          },
                                          "autoHealing": {
                                            "type": "boolean",
                                            "example": true,
                                            "description": "Enable the auto healing which auto replaces the instance in case the health check fails Default: true\n"
                                          },
                                          "gracePeriod": {
                                            "type": "integer",
                                            "example": 120,
                                            "description": "The amount of time, in seconds, after the instance has launched to starts and check its health. Default: 120\n"
                                          },
                                          "unhealthyDuration": {
                                            "type": "integer",
                                            "example": 120,
                                            "description": "The amount of time, in seconds, an existing instance should remain active after becoming unhealthy. After the set time out the instance will be replaced Default: 120\n"
                                          }
                                        }
                                      },
                                      "compute": {
                                        "$ref": "#/paths/~1aws~1ec2~1managedInstance/post/requestBody/content/application~1json/schema/allOf/0/properties/managedInstance/properties/compute"
                                      },
                                      "integrations": {
                                        "$ref": "#/paths/~1aws~1ec2~1managedInstance/post/requestBody/content/application~1json/schema/allOf/0/properties/managedInstance/properties/integrations"
                                      },
                                      "scheduling": {
                                        "$ref": "#/paths/~1aws~1ec2~1managedInstance/post/requestBody/content/application~1json/schema/allOf/0/properties/managedInstance/properties/scheduling"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:ec2:managedInstance"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/managedInstance/{MI_ID}": {
      "put": {
        "summary": "Update Managed Instance",
        "description": "<ul> <li>Update one or more attributes in your Managed Instance.\n<li>This API supports partial updates, so only specific fields can be updated separately.\n<li>In order to remove a setting from the instance config, set the object value to null.\n<li>For a Full List of the Elastigroup JSON object reference please see Managed Instance Create. <ul>\n",
        "operationId": "AWSManagedInstanceUpdate",
        "tags": [
          "Managed Instance AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "MI_ID",
            "example": "smi-111",
            "description": "Managed Instance ID you want to get\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/paths/~1aws~1ec2~1managedInstance/post/requestBody/content/application~1json/schema/allOf/0"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1aws~1ec2~1managedInstance/post/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get Managed Instance",
        "description": "Get specific Managed Instance config.\n",
        "operationId": "AWSManagedInstanceGet",
        "tags": [
          "Managed Instance AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1managedInstance~1%7BMI_ID%7D/put/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1aws~1ec2~1managedInstance/post/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Managed Instance",
        "description": "Get specific Managed Instance config.\n",
        "operationId": "AWSManagedInstanceDelete",
        "tags": [
          "Managed Instance AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1managedInstance~1%7BMI_ID%7D/put/parameters/1"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "deallocationConfig": {
                        "type": "object",
                        "properties": {
                          "shouldDeleteImages": {
                            "type": "boolean",
                            "example": true,
                            "description": "Flag to remove persistent image\nDefault: false\n"
                          },
                          "shouldDeleteNetworkInterfaces": {
                            "type": "boolean",
                            "example": true,
                            "description": "Flag to remove network interfaces\nDefault: false\n"
                          },
                          "shouldDeleteVolumes": {
                            "type": "boolean",
                            "example": true,
                            "description": "Flag to remove persistent volumes\nDefault: false\n"
                          },
                          "shouldDeleteSnapshots": {
                            "type": "boolean",
                            "example": true,
                            "description": "Flag to remove snapshots\nDefault: false\n"
                          },
                          "shouldTerminateInstance": {
                            "type": "boolean",
                            "example": true,
                            "description": "Flag to detach a machine without terminating it on AWS side. This will enable rollback to AWS.\nExample: false\n"
                          }
                        }
                      },
                      "amiBackup": {
                        "type": "object",
                        "properties": {
                          "shouldDeleteImages": {
                            "type": "boolean",
                            "example": true,
                            "description": "Mark if images collected during AMI Auto Backup should be deleted during instance deletion\nDefault: false\n"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/managedInstance/{MI_ID}/pause": {
      "put": {
        "summary": "Pause Managed Instance",
        "description": "Pause an existing Managed Instance.\n",
        "operationId": "AWSManagedInstancePause",
        "tags": [
          "Managed Instance AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1managedInstance~1%7BMI_ID%7D/put/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/managedInstance/{MI_ID}/resume": {
      "put": {
        "summary": "Resume Managed Instance",
        "description": "Resume an existing Managed Instance.\n",
        "operationId": "AWSManagedInstanceResume",
        "tags": [
          "Managed Instance AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1managedInstance~1%7BMI_ID%7D/put/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/managedInstance/{MI_ID}/recycle": {
      "put": {
        "summary": "Recycle Managed Instance",
        "description": "Recycle an existing Managed Instance.\n",
        "operationId": "AWSManagedInstanceRecycle",
        "tags": [
          "Managed Instance AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1managedInstance~1%7BMI_ID%7D/put/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/managedInstance/{MI_ID}/costs": {
      "get": {
        "summary": "Get Managed Instance Costs",
        "description": "Get financial information on a specific managed instance.\nTo use this API, managedInstanceId must be defined.\n",
        "operationId": "AWSManagedInstanceCostsPerManagedInstance",
        "tags": [
          "Managed Instance AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1managedInstance~1%7BMI_ID%7D/put/parameters/1"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D~1events/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D~1events/get/parameters/3"
          },
          {
            "in": "query",
            "name": "aggregationPeriod",
            "schema": {
              "type": "string"
            },
            "description": "Data values following either a date format (YYYY-MM-DDTHH:mm:ss.SSSZ ; 2016-01-10T00:00:00.000Z) or Unix seconds Timestamp (1494751821)\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Get Elastigroup Costs",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "running": {
                                    "type": "object",
                                    "properties": {
                                      "value": {
                                        "type": "integer",
                                        "example": 4
                                      },
                                      "unit": {
                                        "type": "string",
                                        "example": "hours"
                                      }
                                    }
                                  },
                                  "savings": {
                                    "type": "object",
                                    "properties": {
                                      "value": {
                                        "type": "integer",
                                        "example": 0
                                      },
                                      "unit": {
                                        "type": "string",
                                        "example": "percentage"
                                      }
                                    }
                                  },
                                  "costs": {
                                    "type": "object",
                                    "properties": {
                                      "actual": {
                                        "type": "integer",
                                        "example": 0.268
                                      },
                                      "potential": {
                                        "type": "integer",
                                        "example": 0.268
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:ec2:managedInstance:costs"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/managedInstance/{MI_ID}/status": {
      "get": {
        "summary": "Get Managed Instance Status",
        "description": "Describes the current status of a specific Managed Instance – entailing information regarding running instance and its status.\n",
        "operationId": "AWSManagedInstanceStatus",
        "tags": [
          "Managed Instance AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1managedInstance~1%7BMI_ID%7D/put/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "smi-50739ad2"
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "i-0db00q51ec9069ebf"
                                  },
                                  "status": {
                                    "type": "string",
                                    "example": "ACTIVE"
                                  },
                                  "instanceId": {
                                    "type": "string",
                                    "example": "i-0vc9530daq19c4aad"
                                  },
                                  "instanceType": {
                                    "type": "string",
                                    "example": "t2.micro"
                                  },
                                  "imageId": {
                                    "type": "string",
                                    "example": "ami-03238ecdbdc7d6d6a"
                                  },
                                  "privateIp": {
                                    "type": "string",
                                    "example": "172.31.10.21"
                                  },
                                  "publicIp": {
                                    "type": "string",
                                    "example": "34.212.65.224"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "example": "2020-05-05T08:53:12.000Z"
                                  },
                                  "launchedAt": {
                                    "type": "string",
                                    "example": "2020-05-05T08:53:12.000Z"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:ec2:managedInstanceStatus"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/managedInstance/{MI_ID}/volume/{volumeId}": {
      "delete": {
        "summary": "Delete Volume in a Managed Instance",
        "description": "Delete a Volume that is part of a managed instance\n",
        "operationId": "deleteVolumeManagedInstance",
        "tags": [
          "Managed Instance AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "MI_ID",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "smi-123456",
            "description": "Managed Instance ID\n"
          },
          {
            "in": "path",
            "name": "volumeId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "vol-0faa4b2957a3d59c8",
            "description": "Volume ID\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "3b750eff-3940-46b3-a309-aa2b415272fd",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/managedInstance/smi-123456/volume/vol-0faa4b2957a3d59c8",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "DELETE",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2021-11-03T11:02:55.608Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/managedInstance/migration": {
      "post": {
        "summary": "Import Instance from AWS",
        "description": "<ul> <li>Import an instance from AWS into Managed Instance, while keeping the instance data and its persistence settings.\n<li>This call is starting the migration and returns migration ID.\n<li>In order to get migration status use the Get Migration Status call <ul>\n",
        "operationId": "AWSManagedInstanceImportInstanceFromAWS",
        "tags": [
          "Managed Instance AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "migration": {
                        "title": "Migration",
                        "description": "Migration Configuration",
                        "type": "object",
                        "properties": {
                          "shouldKeepPrivateIp": {
                            "required": true,
                            "type": "boolean",
                            "example": false,
                            "description": "Set whether the instance should keep its private ip or not\n"
                          },
                          "originalInstanceId": {
                            "required": true,
                            "type": "string",
                            "example": "i-123",
                            "description": "The instance ID on AWS\n"
                          },
                          "region": {
                            "required": true,
                            "type": "string",
                            "example": "us-east-1",
                            "description": "Set instance's region\n"
                          },
                          "shouldTerminateInstance": {
                            "type": "boolean",
                            "example": false,
                            "description": "Set true or false whether to terminate the instance in AWS. Note: If shouldKeepPrivateIp is true, then shouldTerminateInstance must be true. Otherwise an error will be returned.\n"
                          },
                          "managedInstanceName": {
                            "type": "string",
                            "example": "us-east-1",
                            "description": "Set Managed Instance name\n"
                          },
                          "product": {
                            "type": "string",
                            "example": "Linux/UNIX",
                            "description": "Set instance's product\n"
                          },
                          "spotInstanceTypes": {
                            "type": "array",
                            "description": "List of possible instance types for the Managed Instance\n",
                            "items": {
                              "type": "string",
                              "example": "m3.large"
                            }
                          },
                          "availabilityZones": {
                            "title": "Availability Zones",
                            "description": "List of availability zones for the Managed Instance. Should exist only if shouldKeepPrivateIp is false.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Region's Name",
                                  "example": "us-west-2c"
                                },
                                "subnetIds": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "example": "subnet-fdfb00a0"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "migrationId": {
                                    "type": "string",
                                    "example": "smg-123"
                                  },
                                  "managedInstanceId": {
                                    "type": "string",
                                    "example": "smi-123"
                                  },
                                  "data": {
                                    "type": "object",
                                    "properties": {
                                      "originalInstanceId": {
                                        "type": "string",
                                        "example": "i-123"
                                      },
                                      "shouldKeepPrivateIp": {
                                        "type": "boolean",
                                        "example": true
                                      }
                                    }
                                  },
                                  "state": {
                                    "type": "string",
                                    "example": "MIGRATE_START"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "potinst:aws:ec2:managedInstance:migration"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/managedInstance/migration/{MIGRATION_ID}": {
      "get": {
        "summary": "Get Instance Migration Status",
        "description": "<ul> <li>Get a previously initiated instance migration status.\n<li>To initiate an instance migration from AWS use the Import Instance From AWS call.\n<li>On initiation, the migration would be in the following state: `MIGRATE_START`.\n<li>Possible end states for the migration are: `MIGRATE_CANCEL`, `MIGRATE_FINISH`, `MIGRATE_ERROR`. <ul>\n",
        "operationId": "AWSManagedInstanceGetInstanceMigrationStatus",
        "tags": [
          "Managed Instance AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1managedInstance~1%7BMI_ID%7D/put/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "migrationId": {
                                    "type": "string",
                                    "example": "smg-123"
                                  },
                                  "managedInstanceId": {
                                    "type": "string",
                                    "example": "smi-123"
                                  },
                                  "state": {
                                    "type": "string",
                                    "example": "MIGRATE_START"
                                  },
                                  "instanceId": {
                                    "type": "string",
                                    "example": "i-123"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "potinst:aws:ec2:managedInstance:migration"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/audit/events": {
      "get": {
        "summary": "List Audit Log Events",
        "description": "Gets audit events that have response status of 200. This is the default when the responseStatus parameter is not included in the query. When you use responseStatus in the query, you can get all audit events without regard to status.\n\nThe API requires one of the following permissions to be defined in Spot:\n\n* Permission: Organization Viewer (See User Roles) or\n* Action: setup:describeAllAuditEvents (See Access Policies)\n",
        "operationId": "AuditServiceListAll",
        "tags": [
          "Audit Service"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "fromDate",
            "required": true,
            "description": "Get items on or after this date (Unix timestamp)",
            "example": "1598918400000",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          {
            "in": "query",
            "name": "toDate",
            "required": true,
            "description": "Get items on or before this date (Unix timestamp)",
            "example": "1598918400000",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "required": false
          },
          {
            "in": "query",
            "name": "responseStatus",
            "example": "all",
            "description": "Determines whether the audit events should be filtered by their response status code or not. Valid values: \"success\": Gets only events with status 200. \"all\": Audit events will not be filtered by response status codes, and all the events will be returned. Default: success\n",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "All Response Statuses (responseStatus=all)",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "user": {
                                    "type": "string",
                                    "example": "test@spot.io"
                                  },
                                  "namespace": {
                                    "type": "string",
                                    "example": "GENERAL"
                                  },
                                  "actionType": {
                                    "type": "string",
                                    "example": "Sign in with SSO"
                                  },
                                  "resourceType": {
                                    "type": "string",
                                    "example": "User"
                                  },
                                  "resourceId": {
                                    "type": "string",
                                    "example": 21126
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "example": "2020-06-01T12:17:51.000Z"
                                  },
                                  "context": {
                                    "type": "string",
                                    "example": "{\"body\":{\"email\":\"test@spot.io\",\"isMarketplaceCustomer\":false},\"url\":\"/signIn/sso\",\"query\":{}}"
                                  },
                                  "source": {
                                    "type": "string",
                                    "example": "UI"
                                  },
                                  "agent": {
                                    "type": "string",
                                    "example": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/33.9.1667.012 Safari/537.36"
                                  },
                                  "responseStatus": {
                                    "type": "integer",
                                    "example": 200
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:audit"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/healthCheck": {
      "post": {
        "summary": "Create Health Check",
        "description": "Create an HCS for Spot Elastigroup.\n",
        "operationId": "HealthCheckServiceCreate",
        "tags": [
          "Health Check Service"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "ACCOUNT_ID",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "required": false
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "healthCheck"
                    ],
                    "properties": {
                      "healthCheck": {
                        "type": "object",
                        "description": "Group",
                        "properties": {
                          "resourceId": {
                            "type": "string",
                            "example": 21126,
                            "required": true,
                            "description": "Spot Resource ID\n"
                          },
                          "name": {
                            "type": "string",
                            "example": "Service-1-healthCheck",
                            "description": "A logical name for the health check\n"
                          },
                          "proxyAddress": {
                            "type": "string",
                            "description": "The public hostname / IP where you installed the the Spot HCS\n",
                            "example": "51.22.125.47",
                            "required": true
                          },
                          "proxyPort": {
                            "description": "The port of the HCS.\nDefault: 80\n",
                            "type": "integer",
                            "example": 80
                          },
                          "check": {
                            "type": "object",
                            "properties": {
                              "protocol": {
                                "type": "string",
                                "required": true,
                                "example": "http",
                                "description": "The protocol to use to connect with the instance. Valid values: http https\n"
                              },
                              "port": {
                                "description": "The port to use to connect with the instance\n",
                                "required": true,
                                "type": "integer",
                                "example": 80
                              },
                              "endpoint": {
                                "description": "The destination for the request\n",
                                "required": true,
                                "type": "string",
                                "example": "index.html"
                              },
                              "unhealthyThreshold": {
                                "description": "The number of consecutive failed health checks that must occur before declaring an instance unhealthy\n",
                                "required": true,
                                "type": "integer",
                                "example": 2
                              },
                              "healthyThreshold": {
                                "description": "The number of consecutive successful health checks that must occur before declaring an instance healthy\n",
                                "required": true,
                                "type": "integer",
                                "example": 2
                              },
                              "interval": {
                                "description": "The amount of time (in seconds) between each health check. Minimum value is 10\n",
                                "required": true,
                                "type": "integer",
                                "example": 30
                              },
                              "timeout": {
                                "description": "The amount of time (in seconds) to wait when receiving a response from the health check\n",
                                "required": true,
                                "type": "integer",
                                "example": 60
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1healthCheck/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Health Checks",
        "description": "Get a list of all HCS services.\n",
        "operationId": "HealthCheckServiceListAllHcs",
        "tags": [
          "Health Check Service"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "example": 1
                                  },
                                  "resourceId": {
                                    "type": "string",
                                    "example": "sig-12345"
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "Service-1-healthCheck"
                                  },
                                  "proxyAddress": {
                                    "type": "string",
                                    "example": "51.22.125.47"
                                  },
                                  "proxyPort": {
                                    "type": "integer",
                                    "example": 80
                                  },
                                  "check": {
                                    "type": "object",
                                    "properties": {
                                      "protocol": {
                                        "type": "string",
                                        "example": "http"
                                      },
                                      "port": {
                                        "type": "integer",
                                        "example": 80
                                      },
                                      "endpoint": {
                                        "type": "string",
                                        "example": "index.html"
                                      },
                                      "unhealthyThreshold": {
                                        "type": "integer",
                                        "example": 2
                                      },
                                      "healthyThreshold": {
                                        "type": "integer",
                                        "example": 2
                                      },
                                      "interval": {
                                        "type": "integer",
                                        "example": 30
                                      },
                                      "timeout": {
                                        "type": "integer",
                                        "example": 60
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:healthCheck"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/healthCheck/{HEALTHCHECK_ID}": {
      "put": {
        "summary": "Update Health Check",
        "description": "Update existing HCS.\n",
        "operationId": "HealthCheckServiceUpdate",
        "tags": [
          "Health Check Service"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "ACCOUNT_ID",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "required": false
          },
          {
            "in": "query",
            "name": "HEALTHCHECK_ID",
            "example": "hcs-123",
            "description": "The HCS you want to update\n",
            "required": true
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "healthCheck"
                    ],
                    "properties": {
                      "healthCheck": {
                        "type": "object",
                        "description": "Group",
                        "properties": {
                          "check": {
                            "type": "object",
                            "properties": {
                              "unhealthyThreshold": {
                                "description": "The number of consecutive failed health checks that must occur before declaring an instance unhealthy\n",
                                "required": true,
                                "type": "integer",
                                "example": 2
                              },
                              "healthyThreshold": {
                                "description": "The number of consecutive successful health checks that must occur before declaring an instance healthy\n",
                                "required": true,
                                "type": "integer",
                                "example": 2
                              },
                              "interval": {
                                "description": "The amount of time (in seconds) between each health check. Minimum value is 10\n",
                                "required": true,
                                "type": "integer",
                                "example": 30
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get Health Check",
        "description": "List the information of a particular HCS\n",
        "operationId": "HealthCheckServiceListHcs",
        "tags": [
          "Health Check Service"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "ACCOUNT_ID",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "required": false
          },
          {
            "in": "query",
            "name": "HEALTHCHECK_ID",
            "example": "hcs-123",
            "description": "The HCS you want to update\n",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1healthCheck/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Health Check",
        "description": "Delete existing HCS\n",
        "operationId": "HealthCheckServiceDelete",
        "tags": [
          "Health Check Service"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "HEALTHCHECK_ID",
            "example": "hcs-123",
            "description": "The HCS you want to update\n",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/events/notification/accountPolicy": {
      "put": {
        "summary": "Update Account Notification Policy",
        "description": "Update the account notification policy\n",
        "operationId": "NotificationsServiceUpdateAccountNotificationPolicy",
        "tags": [
          "Notifications Service"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "accountPolicy": {
                        "type": "object",
                        "properties": {
                          "emailPolicy": {
                            "type": "object",
                            "properties": {
                              "statements": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "category": {
                                      "type": "string",
                                      "example": "Elastigroup Errors",
                                      "description": "Event notification category\n"
                                    },
                                    "subCategory": {
                                      "type": "string",
                                      "example": "Launch instances failures",
                                      "description": "Event notification sub category (should match to the event category)\n"
                                    },
                                    "isEnabled": {
                                      "type": "boolean",
                                      "example": true,
                                      "description": "Flag to enable/disable the notification statement\n"
                                    },
                                    "applyOnFutureResources": {
                                      "type": "boolean",
                                      "example": true,
                                      "description": "Flag to set whether to auto apply on newly created resources\n"
                                    },
                                    "allowedResources": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "sig-1234",
                                            "description": "Set resource ID\n"
                                          }
                                        }
                                      }
                                    },
                                    "deniedResources": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "sig-9999",
                                            "description": "List of denied resources for the statement settings\n"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "slackPolicy": {
                            "type": "object",
                            "properties": {
                              "statements": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "category": {
                                      "type": "string",
                                      "example": "Elastigroup Errors",
                                      "description": "Event notification category\n"
                                    },
                                    "subCategory": {
                                      "type": "string",
                                      "example": "Launch instances failures",
                                      "description": "Event notification sub category (should match to the event category)\n"
                                    },
                                    "isEnabled": {
                                      "type": "boolean",
                                      "example": true,
                                      "description": "Flag to enable/disable the notification statement\n"
                                    },
                                    "applyOnFutureResources": {
                                      "type": "boolean",
                                      "example": true,
                                      "description": "Flag to set whether to auto apply on newly created resources\n"
                                    },
                                    "allowedResources": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "sig-1234",
                                            "description": "Set resource ID\n"
                                          }
                                        }
                                      }
                                    },
                                    "deniedResources": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "sig-9999",
                                            "description": "List of denied resources for the statement settings\n"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get Account Notification Policy",
        "description": "Get the account notification policy\n",
        "operationId": "NotificationsServiceGetAccountNotificationPolicy",
        "tags": [
          "Notifications Service"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1events~1notification~1accountPolicy/put/requestBody/content/application~1json/schema/allOf/0"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/events/subscription": {
      "post": {
        "summary": "Subscribe",
        "description": "Create a notification for your resources\n",
        "operationId": "notificationsServiceSubscriptionsSubscribe",
        "tags": [
          "Notifications Service"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "ACCOUNT_ID",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "required": false
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "subscription"
                    ],
                    "properties": {
                      "subscription": {
                        "type": "object",
                        "description": "Group",
                        "properties": {
                          "resourceId": {
                            "type": "string",
                            "example": "YOUR_ELASTIGROUP_ID || YOUR_OCEAN_ID || YOUR_MANAGED_INSTANCE_ID",
                            "description": "Spot Resource ID (Elastigroup, Ocean or Managed Instance ID)\nExample: sig-12345\n",
                            "required": true
                          },
                          "protocol": {
                            "type": "string",
                            "example": "aws-sns || email || email-json || web ",
                            "description": "The protocol to send the notification. Valid values: email email-json aws-sns web\nThe following values are deprecated: http https You can use the generic web protocol instead. aws-sns is only supported with AWS provider\n",
                            "required": true
                          },
                          "endpoint": {
                            "type": "string",
                            "example": "YOUR@EMAIL.COM || https://YOUR_ENDPOINT.COM || SNS_TOPIC_ARN",
                            "description": "The endpoint the notification will be sent to. url in case of http/https/web, email address in case of email/email-json and sns-topic-arn in case of aws-sns\n",
                            "required": true
                          },
                          "eventType": {
                            "type": "string",
                            "example": "AWS_EC2_INSTANCE_TERMINATE || AZURE_VM_TERMINATE",
                            "description": "The event to send the notification when triggered. Valid values: AWS_EC2_INSTANCE_TERMINATE, AWS_EC2_INSTANCE_TERMINATED, AWS_EC2_INSTANCE_LAUNCH, AWS_EC2_INSTANCE_READY_SIGNAL_TIMEOUT, SIGNAL_TIMEOUT_SHUTDOWN_SCRIPT, AWS_EC2_CANT_SPIN_OD, AWS_EC2_INSTANCE_UNHEALTHY_IN_ELB, GROUP_ROLL_FAILED, GROUP_ROLL_FINISHED, CANT_SCALE_UP_GROUP_MAX_CAPACITY, GROUP_UPDATED, AWS_EMR_PROVISION_TIMEOUT, GROUP_BEANSTALK_INIT_READY, AZURE_VM_TERMINATED, AZURE_VM_TERMINATE, AWS_EC2_MANAGED_INSTANCE_PAUSING, AWS_EC2_MANAGED_INSTANCE_RESUMING, AWS_EC2_MANAGED_INSTANCE_RECYCLING, AWS_EC2_MANAGED_INSTANCE_DELETING Ocean Events: CLUSTER_ROLL_FINISHED, CLUSTER_ROLL_FAILED, OCEAN_CANT_SCALE_UP_MAX_RESOURCES, OCEAN_LAUNCH_SPEC_CANT_SCALE_UP_MAX_INSTANCES\n",
                            "required": true
                          },
                          "eventFormat": {
                            "type": "object",
                            "description": "The format of the notification content (JSON Format: Key + Value).\n",
                            "enum": [
                              "%instance-id%",
                              "%event%",
                              "%resource-id%",
                              "%resource-name%",
                              "%subnet-id%",
                              "%availability-zone%",
                              "%reason%",
                              "%private-ip%",
                              "%launchspec-id%"
                            ],
                            "example": {
                              "event": "%event%",
                              "resourceId": "%resource-id%",
                              "resourceName": "%resource-name%",
                              "myCustomKey": "My content is set here"
                            },
                            "default": {
                              "event": "%event%",
                              "instanceId": "%instance-id%",
                              "resourceId": "%resource-id%",
                              "resourceName": "%resource-name%"
                            },
                            "properties": {
                              "event": {
                                "type": "string",
                                "description": "Allow to get name of event that happened",
                                "example": "%event%"
                              },
                              "resourceId": {
                                "type": "string",
                                "description": "Allow to get ID of resource where event happened",
                                "example": "%resource-id%"
                              },
                              "resourceName": {
                                "type": "string",
                                "description": "Allow to get the name of resource (related to ID)",
                                "example": "%resource-name%"
                              },
                              "myCustomKey": {
                                "type": "string",
                                "description": "Allow to use custom text in messages",
                                "example": "My content is set here"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1events~1subscription/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Subscriptions",
        "description": "List all subscriptions and their information\n",
        "operationId": "notificationsServiceSubscriptionsList",
        "tags": [
          "Notifications Service"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "ACCOUNT_ID",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "sis-123456"
                                  },
                                  "resourceId": {
                                    "type": "string",
                                    "example": "sig-5cf38a24"
                                  },
                                  "protocol": {
                                    "type": "string",
                                    "example": "http"
                                  },
                                  "endpoint": {
                                    "type": "string",
                                    "example": "http://localhost:5000"
                                  },
                                  "eventType": {
                                    "type": "string",
                                    "example": "AWS_EC2_INSTANCE_TERMINIATED"
                                  },
                                  "updatedAt": {
                                    "type": "string",
                                    "example": "2015-08-04T12:31:26.000Z"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "example": "2015-08-04T12:31:26.000Z"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:subscription"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/events/subscription/{SUBSCRIPTION_ID}": {
      "delete": {
        "summary": "Unsubscribe",
        "description": "Delete an existing page\n",
        "operationId": "notificationsServiceSubscriptionsUnsubscribe",
        "tags": [
          "Notifications Service"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "required": false
          },
          {
            "in": "path",
            "name": "SUBSCRIPTION_ID",
            "example": "hcs-123",
            "description": "The subscription you want to update\n",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get Subscription",
        "description": "Get a specific notification and its information\n",
        "operationId": "notificationsServiceSubscriptionsGet",
        "tags": [
          "Notifications Service"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "required": false
          },
          {
            "in": "path",
            "name": "SUBSCRIPTION_ID",
            "example": "hcs-123",
            "description": "The subscription you want to update\n",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1events~1subscription/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Subscription",
        "description": "Update existing notification\n",
        "operationId": "notificationsServiceSubscriptionsUpdate",
        "tags": [
          "Notifications Service"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "required": false
          },
          {
            "in": "path",
            "name": "SUBSCRIPTION_ID",
            "example": "hcs-123",
            "description": "The subscription you want to update\n",
            "required": true
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "subscription"
                    ],
                    "properties": {
                      "subscription": {
                        "type": "object",
                        "description": "Element that store all the subscription config",
                        "properties": {
                          "endpoint": {
                            "type": "string",
                            "description": "The endpoint the notification will be sent to. url in case of http/https/web, email address in case of email/email-json and sns-topic-arn in case of aws-sns",
                            "example": "SNS_TOPIC_ARN"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Subscription Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/events/subscription/sis-56879d5c?accountId=act-123abc",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "PUT",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                },
                                "affectedRows": {
                                  "type": "integer",
                                  "example": 1
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/insights/instanceCosts/export": {
      "post": {
        "summary": "Get Organization Instances Costs",
        "description": "Get a summary of your instances costs by given time filter.\n\nThe request will result in CSV format on your instances from all given accounts.\n\nNotice that the date range can be up to 180 days.\n\nResponse fields are detailed in the response\n",
        "operationId": "insightsServiceOrganizationInstancesCosts",
        "tags": [
          "Insights Service"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "accountIds": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "act-abc12345"
                        }
                      },
                      "fromDate": {
                        "type": "string",
                        "example": 1569950296
                      },
                      "toDate": {
                        "type": "string",
                        "example": 1570727896
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "response fileds:",
            "content": {
              "application/csv": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "An ID for response"
                            },
                            "accountId": {
                              "description": "account Id"
                            },
                            "accountName": {
                              "description": "account Name"
                            },
                            "resourceId": {
                              "description": "resource Id"
                            },
                            "cloudProvider": {
                              "description": "Cloud provider (AWS / GCP / Azure)"
                            },
                            "instanceId": {
                              "description": "instance Id"
                            },
                            "instanceType": {
                              "description": "instanceType"
                            },
                            "region": {
                              "description": "region"
                            },
                            "useCase": {
                              "description": "K8S, Load Balancing and etc."
                            },
                            "lifeCycle": {
                              "description": "Excess capacity (Spot / preemptible), On-Demand"
                            },
                            "product": {
                              "description": "Instance product"
                            },
                            "launchTime": {
                              "description": "Instance launch time"
                            },
                            "terminationTime": {
                              "description": "Instance termination time"
                            },
                            "runningHours": {
                              "description": "Instance run time (in hours)"
                            },
                            "odHourlyPrice": {
                              "description": "Instance hourly cost if it ran on OD"
                            },
                            "odCost": {
                              "description": "Instance cost if it ran on OD"
                            },
                            "actualCost": {
                              "description": "Instance actual cost"
                            },
                            "savings": {
                              "description": "Dollar amount saved for the instance"
                            },
                            "reservationId": {
                              "description": "Indicates wheater the instance is a RI (Reserved Instance)"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "type": "string",
                "format": "binary",
                "example": "id,accountId,accountName,resourceId,cloudProvider,instanceId,instanceType,region,useCase,lifeCycle,product,launchTime,terminationTime,runningHours,odHourlyPrice,odCost,actualCost,savings,reservationId 2439,act-abc12345,Demo,oesg-cc4740e1,AWS,i-00d67d5efc69e938d,r4.large,us-west-2,K8S,EXCESS,LINUX,2019-10-05T02:59:40.000Z,2019-10-05T03:15:12.000Z,1,0.133,0.133,0.0337,0.0993, 2576,act-abc12345,Demo,oesg-5feb10ab,AWS,i-01086811aefdc4959,c4.large,us-west-2,K8S,EXCESS,LINUX,2019-10-06T10:13:03.000Z,2019-10-06T19:07:05.000Z,9,0.1,0.9,0.279,0.621, 1760,act-abc12345,Demo,oesg-cc4740e1,AWS,i-01797b0ac578198fa,c3.large,us-west-2,K8S,EXCESS,LINUX,2019-08-27T06:41:14.000Z,2019-10-05T02:57:30.000Z,23.9997,0.105,2.52,0.7008,1.8192, 1761,act-abc12345,Demo,oesg-cc4740e1,AWS,i-02e460584769b3c28,r4.large,us-west-2,K8S,EXCESS,LINUX,2019-08-20T22:23:54.000Z,,23.9997,0.133,3.192,0.8088,2.3832,"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/insights/dataIntegration": {
      "post": {
        "summary": "Create Data Integration",
        "description": "Create a new data integration, an object representing a connection to a third-party vendor to export to and import data from.\n",
        "operationId": "DataIntegrationCreate",
        "tags": [
          "Insights Service"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dataIntegration": {
                    "type": "object",
                    "required": [
                      "vendor",
                      "name",
                      "config"
                    ],
                    "properties": {
                      "vendor": {
                        "type": "string",
                        "description": "The vendor for the data integration. This value affects the expected `config`.",
                        "enum": [
                          "s3"
                        ]
                      },
                      "name": {
                        "description": "The name of the data integration.",
                        "type": "string",
                        "example": "my-s3-integration"
                      },
                      "config": {
                        "description": "The config of this data integration. Depends on the value of `vendor`.",
                        "oneOf": [
                          {
                            "type": "object",
                            "title": "S3",
                            "required": [
                              "bucketName"
                            ],
                            "properties": {
                              "bucketName": {
                                "type": "string",
                                "description": "The name of the bucket to use. Your spot IAM Role policy needs to include s3:putObject permissions for this bucket.\n**Can't be null**.\n",
                                "example": "mybucket"
                              },
                              "subdir": {
                                "description": "The subdirectory in which your files will be stored within the bucket. Adds the prefix `subdir/` to new objects' keys.\n**Can't be null or contain '/'**.\n",
                                "type": "string",
                                "example": "dev"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create Data Integration Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/insights/dataIntegration"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1insights~1dataIntegration/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                              }
                            },
                            "kind": {
                              "example": "spotinst:dataIntegration"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Data Integration",
        "description": "List data integrations.\n",
        "operationId": "dataIntegrationList",
        "tags": [
          "Insights Service"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "vendor",
            "type": "string",
            "description": "The vendor of the data integrations to list.",
            "example": "s3",
            "schema": {
              "type": "string",
              "enum": [
                "s3"
              ]
            }
          },
          {
            "in": "query",
            "name": "name",
            "type": "string",
            "description": "The name of the data integrations to list.",
            "example": "my-data-integration",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "status",
            "type": "string",
            "description": "The status of the data integrations to list.",
            "example": "enabled",
            "schema": {
              "type": "string",
              "enum": [
                "enabled",
                "disabled"
              ]
            }
          },
          {
            "in": "query",
            "name": "health",
            "type": "string",
            "description": "The health status of the data integrations to list.",
            "example": "valid",
            "schema": {
              "type": "string",
              "enum": [
                "valid",
                "invalid",
                "forbidden"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Data Integration Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/insights/dataIntegration"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "vendor",
                                  "name",
                                  "config"
                                ],
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The identifier of the data integration.",
                                    "example": "di-123"
                                  },
                                  "vendor": {
                                    "type": "string",
                                    "description": "The vendor for the data integration. This value affects the expected `config`.",
                                    "enum": [
                                      "s3"
                                    ]
                                  },
                                  "name": {
                                    "description": "The name of the data integration.",
                                    "type": "string",
                                    "example": "my-s3-integration"
                                  },
                                  "status": {
                                    "type": "string",
                                    "description": "Determines if this data integration is on or off.",
                                    "enum": [
                                      "enabled",
                                      "disabled"
                                    ]
                                  },
                                  "health": {
                                    "type": "string",
                                    "description": "The health of this data integration.",
                                    "example": "valid"
                                  },
                                  "code": {
                                    "type": "integer",
                                    "description": "The HTTP status code representing the health.",
                                    "example": 200
                                  },
                                  "message": {
                                    "type": "string",
                                    "description": "The message received from the vendor in the last health update.",
                                    "example": "ok"
                                  },
                                  "lastHealthCheck": {
                                    "type": "string",
                                    "description": "The time the health was last updated in UTC.",
                                    "example": "2021-08-1T10:00:00.000Z"
                                  },
                                  "config": {
                                    "description": "The config of this data integration. Depends on the value of `vendor`.",
                                    "oneOf": [
                                      {
                                        "$ref": "#/paths/~1insights~1dataIntegration/post/requestBody/content/application~1json/schema/properties/dataIntegration/properties/config/oneOf/0"
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:dataIntegration"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/insights/dataIntegration/{dataIntegrationId}": {
      "put": {
        "summary": "Update Data Integration",
        "description": "Update an existing data integration.\n",
        "operationId": "updateDataIntegration",
        "tags": [
          "Insights Service"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "dataIntegrationId",
            "example": "di-123abc",
            "description": "Identifier of the data integration.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dataIntegration": {
                    "type": "object",
                    "required": [
                      "vendor"
                    ],
                    "properties": {
                      "vendor": {
                        "type": "string",
                        "description": "The vendor for the data integration. This value affects the expected `config`.\n**This value is immutable and must be the same as the existing data integration.**\n",
                        "enum": [
                          "s3"
                        ]
                      },
                      "name": {
                        "description": "The name of the data integration.",
                        "type": "string",
                        "example": "my-s3-integration"
                      },
                      "status": {
                        "type": "string",
                        "description": "Determines if this data integration is on or off.",
                        "enum": [
                          "enabled",
                          "disabled"
                        ]
                      },
                      "config": {
                        "description": "The config of this data integration. Depends on the value of `vendor`.",
                        "oneOf": [
                          {
                            "type": "object",
                            "title": "S3",
                            "properties": {
                              "bucketName": {
                                "type": "string",
                                "description": "The name of the bucket to use. Your spot IAM Role policy needs to include s3:putObject permissions for this bucket.\n**Can't be null**.\n",
                                "example": "mybucket"
                              },
                              "subdir": {
                                "description": "The subdirectory in which your files will be stored within the bucket. Adds the prefix `subdir/` to new objects' keys.\n**Can't be null or contain '/'**.\n",
                                "type": "string",
                                "example": "dev"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Data Integration Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/insights/dataIntegration/di-123"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1insights~1dataIntegration/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                              }
                            },
                            "kind": {
                              "example": "spotinst:dataIntegration"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get Data Integration",
        "description": "Get an existing data integration.\n",
        "operationId": "dataIntegrationGet",
        "tags": [
          "Insights Service"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1insights~1dataIntegration~1%7BdataIntegrationId%7D/put/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Get Data Integration Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/insights/dataIntegration/di-123"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1insights~1dataIntegration/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                              }
                            },
                            "kind": {
                              "example": "spotinst:dataIntegration"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Data Integration",
        "description": "Delete an existing data integration.\n",
        "operationId": "dataIntegrationDelete",
        "tags": [
          "Insights Service"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1insights~1dataIntegration~1%7BdataIntegrationId%7D/put/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Data Integration Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/insights/dataIntegration/di-123"
                            },
                            "method": {
                              "example": "DELETE"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/account/{accountId}": {
      "put": {
        "summary": "Update Account",
        "description": "Update information in an account such as the account name and slack channel. To use this command, permissions for organization admin are required. Granular permissions will require access policies with the following actions: setup:updateAccount\n",
        "operationId": "OrganizationsAndAccountsUpdateAccount",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "schema": {
              "type": "string"
            },
            "example": "act-123abc",
            "description": "ID of the account you would like to update\n",
            "required": true
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "account"
                    ],
                    "properties": {
                      "account": {
                        "type": "object",
                        "description": "Used for updating items in an account.",
                        "properties": {
                          "slackNotificationChannels": {
                            "type": "array",
                            "description": "List of strings containing the URLs of the slack channels to be added.",
                            "items": {
                              "type": "string",
                              "example": [
                                "https://hooks.slack.com/services/SLACK_ID",
                                "https://hooks.slack.com/services/SLACK_ID"
                              ]
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "The new name of the account. Cannot be null or empty.",
                            "example": "ACCOUNT_NAME"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Account Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/account/act-4fb595c6?accountId=act-4fb595c6",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "PUT",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Account",
        "description": "Delete a Spot Account. The Spot Account ID can be obtained from your Spot console via the following link: https://console.spotinst.com/#/settings/account/general . Note This cannot be undone – take caution. Only Organization Admins can perform this action. In case you want to delete your default Spot account which is the account visible when you first log in please contact Support.\n",
        "operationId": "OrganizationsAndAccountsDeleteAccount",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "example": "act-123456",
            "description": "ID of the account you would like to delete\n",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Account Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/account/act-123456",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "DELETE",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/user": {
      "get": {
        "summary": "Get Users",
        "description": "Get all users in the organization, their details, and mapped accounts. Providing the optional account ID parameter will filter out all users not mapped to that account.\n",
        "operationId": "GetAccountsUsers",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account you would like to get retrieve users from\n",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Get Account Users Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/user?accountId=act-123456789",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group:log",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "mappedAccountIds": {
                                          "type": "string",
                                          "description": "A list of account IDs",
                                          "example": [
                                            "act-0b18f123",
                                            "act-0b18f124",
                                            "act-0b18f125"
                                          ]
                                        },
                                        "userId": {
                                          "type": "string",
                                          "description": "User ID",
                                          "example": "u-19265"
                                        },
                                        "displayName": {
                                          "type": "string",
                                          "description": "The name",
                                          "example": "test"
                                        },
                                        "email": {
                                          "type": "string",
                                          "description": "Email",
                                          "example": "test@spot.io"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "mappedAccountIds": {
                                          "type": "string",
                                          "description": "A list of account IDs",
                                          "example": [
                                            "act-0b18f123",
                                            "act-0b18f124",
                                            "act-0b18f125"
                                          ]
                                        },
                                        "userId": {
                                          "type": "string",
                                          "description": "User ID",
                                          "example": "u-19266"
                                        },
                                        "displayName": {
                                          "type": "string",
                                          "description": "The name",
                                          "example": "test"
                                        },
                                        "email": {
                                          "type": "string",
                                          "description": "Email",
                                          "example": "abc@google.com"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 2,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "summary": "Create User",
        "description": "Create a new user and link it to the creator's organization (the organization ID from the personal token attached to the API call). If the role is a viewer, the user is also linked to the default account for the organization.",
        "operationId": "OrganizationsAndAccountsCreateUser",
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "generateToken",
            "example": true,
            "type": "boolean",
            "description": "If `true`, then the response will include `personalAccessToken` string"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "firstName": {
                        "type": "string",
                        "description": "The first name of the user",
                        "example": "Test"
                      },
                      "lastName": {
                        "type": "string",
                        "description": "The last name of the user",
                        "example": "Test"
                      },
                      "email": {
                        "type": "string",
                        "description": "Email",
                        "example": "test@spot.io"
                      },
                      "password": {
                        "type": "string",
                        "description": "Password",
                        "example": "password1234"
                      },
                      "role": {
                        "type": "string",
                        "description": "User's role",
                        "example": "viewer"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create User Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/user/?generateToken=true",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:setup:user",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "User's old ID (DEPRECATED)",
                                          "example": 9056
                                        },
                                        "firstName": {
                                          "type": "string",
                                          "description": "First Name",
                                          "example": "Test"
                                        },
                                        "lastName": {
                                          "type": "string",
                                          "description": "Last Name",
                                          "example": "Test"
                                        },
                                        "displayName": {
                                          "type": "string",
                                          "description": "First Name + Last Name",
                                          "example": "Test Test"
                                        },
                                        "email": {
                                          "type": "string",
                                          "description": "Email",
                                          "example": "test@gmail.com"
                                        },
                                        "organizationId": {
                                          "type": "integer",
                                          "description": "ID of Organization in Spot Console",
                                          "example": 606079860000
                                        },
                                        "personalAccessToken": {
                                          "type": "integer",
                                          "description": "ID of Organization in Spot Console",
                                          "example": "..."
                                        },
                                        "userId": {
                                          "type": "string",
                                          "description": "User's ID",
                                          "example": "u-1a2b3c4d"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/organization/user": {
      "get": {
        "summary": "Get Users",
        "description": "Get all the users of the organization.\n",
        "operationId": "GetOrganizationUsers",
        "tags": [
          "Organizations"
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "example": {
                                "id": "3ab3fdf7-3af3-46db-9e63-b88cfdac058c",
                                "url": "/setup/organization/user",
                                "method": "GET",
                                "timestamp": "2018-08-20T15:31:12.730Z"
                              }
                            },
                            "response": {
                              "properties": {
                                "kind": {
                                  "example": "spotinst:setup:organization:user"
                                },
                                "count": {
                                  "example": 2
                                },
                                "items": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "userId": {
                                        "type": "string",
                                        "description": "user id"
                                      },
                                      "username": {
                                        "type": "string",
                                        "description": "user name"
                                      },
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "personal",
                                          "programmatic"
                                        ],
                                        "description": "user type"
                                      },
                                      "email": {
                                        "type": "string",
                                        "description": "user's email"
                                      },
                                      "mfa": {
                                        "type": "boolean",
                                        "description": "is validated by mfa"
                                      },
                                      "groupNames": {
                                        "type": "array",
                                        "description": "A list of the groups names that the given user is registered to",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "example": [
                                    {
                                      "userId": "u-a1b2c3d4",
                                      "username": "John Doe",
                                      "type": "personal",
                                      "email": "john.doe@company.com",
                                      "mfa": "false",
                                      "groupNames": [
                                        "Developers",
                                        "DevOps"
                                      ]
                                    },
                                    {
                                      "userId": "u-4d3c2b1a",
                                      "userName": "Jane Doe",
                                      "type": "personal",
                                      "email": "jane.doe@company.com",
                                      "mfa": "true",
                                      "groupNames": [
                                        "DevOps",
                                        "IT"
                                      ]
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/organization/policy": {
      "get": {
        "summary": "Get Policies",
        "description": "Get all the policies of the organization.\n",
        "operationId": "GetOrganizationPolicies",
        "tags": [
          "Organizations"
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "example": {
                                "id": "3ab3fdf7-3af3-46db-9e63-b88cfdac058c",
                                "url": "/setup/organization/policy",
                                "method": "GET",
                                "timestamp": "2018-08-20T15:31:12.730Z"
                              }
                            },
                            "response": {
                              "properties": {
                                "kind": {
                                  "example": "spotinst:setup:organization:policy"
                                },
                                "count": {
                                  "example": 2
                                },
                                "items": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "policy id"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "policy name"
                                      },
                                      "description": {
                                        "type": "string",
                                        "description": "policy description"
                                      },
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "ACCOUNT",
                                          "ORGANIZATION"
                                        ],
                                        "description": "policy type"
                                      },
                                      "policyContent": {
                                        "type": "object",
                                        "properties": {
                                          "statements": {
                                            "type": "array",
                                            "description": "policy statements",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "effect": {
                                                  "type": "string",
                                                  "description": "ALLOW / DENY"
                                                },
                                                "actions": {
                                                  "type": "array",
                                                  "description": "actions that the policy covers (can be with regex expressions)",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "resources": {
                                                  "type": "array",
                                                  "description": "resources that the policy covers (can be with regex expressions)",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "example": [
                                    {
                                      "id": "pol-a1b2c3d4",
                                      "name": "Developers",
                                      "description": "A policy that contains permissions for developers",
                                      "type": "ORGANIZATION",
                                      "policyContent": {
                                        "statements": [
                                          {
                                            "effect": "ALLOW",
                                            "actions": [
                                              "elastigroup:createGroup",
                                              "elastigroup:updateGroup"
                                            ],
                                            "resources": [
                                              "*"
                                            ]
                                          }
                                        ]
                                      },
                                      "createdAt": "2021-12-19T13:44:13.000+0000",
                                      "updatedAt": "2022-01-02T22:04:29.000+0000"
                                    },
                                    {
                                      "id": "pol-87654321",
                                      "name": "DevOps",
                                      "description": "A policy that contains permissions for DevOps",
                                      "type": "ACCOUNT",
                                      "policyContent": {
                                        "statements": [
                                          {
                                            "effect": "ALLOW",
                                            "actions": [
                                              "setup:updatePolicy"
                                            ],
                                            "resources": [
                                              "*"
                                            ]
                                          }
                                        ]
                                      },
                                      "createdAt": "2021-12-19T13:44:13.000+0000",
                                      "updatedAt": "2022-01-02T22:04:29.000+0000"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/user/{userId}": {
      "get": {
        "summary": "Get User Details",
        "description": "Get all the details of a given user.\n",
        "operationId": "GetUserDetails",
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "example": "u-1234abcd",
            "description": "Identifier of a user.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "example": {
                                "id": "3ab3fdf7-3af3-46db-9e63-b88cfdac058c",
                                "url": "/setup/user/u-1234abcd",
                                "method": "GET",
                                "timestamp": "2018-08-20T15:31:12.730Z"
                              }
                            },
                            "response": {
                              "properties": {
                                "kind": {
                                  "example": "spotinst:setup:access:user"
                                },
                                "count": {
                                  "example": 1
                                },
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "userId": {
                                      "type": "string",
                                      "description": "user id"
                                    },
                                    "username": {
                                      "type": "string",
                                      "description": "user name"
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "personal",
                                        "programmatic"
                                      ],
                                      "description": "user type"
                                    },
                                    "email": {
                                      "type": "string",
                                      "description": "user's email"
                                    },
                                    "mfa": {
                                      "type": "boolean",
                                      "description": "is validated by mfa"
                                    },
                                    "groups": {
                                      "type": "array",
                                      "description": "the groups that the given user is registered to",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "user group id"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "user group name"
                                          },
                                          "policyNames": {
                                            "type": "array",
                                            "description": "The names of the policies registered under the given group",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "policies": {
                                      "type": "array",
                                      "description": "The policies registered under the given group",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "policyId": {
                                            "type": "string",
                                            "description": "the ID of the given policy"
                                          },
                                          "policyName": {
                                            "type": "string",
                                            "description": "the name of the given policy"
                                          },
                                          "policyType": {
                                            "type": "string",
                                            "description": "the type of the given policy"
                                          },
                                          "accountIds": {
                                            "type": "array",
                                            "description": "the IDs of the accounts registered under the given policy",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "tokens": {
                                      "type": "array",
                                      "description": "metadata of the tokens registered to the user",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the given token, given by the creating user"
                                          },
                                          "createdAt": {
                                            "type": "string",
                                            "description": "Datetime of token creation"
                                          },
                                          "tokenId": {
                                            "type": "integer",
                                            "description": "Serial identifier of given token"
                                          },
                                          "tokenLastDigits": {
                                            "type": "string",
                                            "description": "Last digits of given token value, to assist with identification"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "example": {
                                    "userId": "u-a1b2c3d4",
                                    "username": "John Doe",
                                    "type": "personal",
                                    "email": "john.doe@company.com",
                                    "mfa": "false",
                                    "groups": [
                                      {
                                        "id": "ugr-12345678",
                                        "name": "DevOps",
                                        "policyNames": [
                                          "DevOps-PROD",
                                          "DevOps-DEV",
                                          "IT"
                                        ]
                                      },
                                      {
                                        "id": "ugr-87654321",
                                        "name": "IT",
                                        "policyNames": [
                                          "IT"
                                        ]
                                      }
                                    ],
                                    "policies": [
                                      {
                                        "policyId": "pol-12345678",
                                        "policyName": "TriggerDeployment",
                                        "policyType": "ACCOUNT",
                                        "accountIds": [
                                          "act-12345678",
                                          "act-87654321"
                                        ]
                                      },
                                      {
                                        "policyId": "pol-87654321",
                                        "policyName": "UpdateScheduling",
                                        "policyType": "ORGANIZATION",
                                        "accountIds": []
                                      }
                                    ],
                                    "tokens": [
                                      {
                                        "name": "my_sweet_token",
                                        "createdAt": "2020-06-01T12:17:51.000+000",
                                        "tokenId": 11111,
                                        "tokenLastDigits": "2323"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete user",
        "description": "Delete a given user(console or programmatic) from organization.\n",
        "operationId": "DeleteUser",
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "example": "u-1234abcd or pu-87654321",
            "description": "Identifier of a user.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "example": {
                                "id": "3ab3fdf7-3af3-46db-9e63-b88cfdac058c",
                                "url": "/setup/user/u-1234abcd",
                                "method": "DELETE",
                                "timestamp": "2018-08-20T15:31:12.730Z"
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/user/{userId}/userGroupMapping": {
      "put": {
        "summary": "User - Update User Group Mapping",
        "description": "Update the mapping of a given user to user groups\n",
        "operationId": "userUpdateUserGroupMapping",
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1setup~1user~1%7BuserId%7D/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "userIds": {
                        "type": "array",
                        "description": "A list of the user groups to register the given user to (should be existing user groups only)"
                      }
                    },
                    "example": {
                      "userGroupIds": [
                        "ugr-12345678",
                        "ugr-87654321"
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "example": {
                                "id": "3ab3fdf7-3af3-46db-9e63-b88cfdac058c",
                                "url": "/setup/user/u-1234abcd/userGroupMapping",
                                "method": "PUT",
                                "timestamp": "2018-08-20T15:31:12.730Z"
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/user/{userId}/policyMapping": {
      "put": {
        "summary": "User - Update Policy Mapping",
        "description": "Update the mapping of a given user directly to policies\n",
        "operationId": "userUpdatePolicyMapping",
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1setup~1user~1%7BuserId%7D/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "policies": {
                        "type": "array",
                        "description": "The policies to register under the given user (should be existing policies only)",
                        "example": null,
                        "items": {
                          "type": "object",
                          "properties": {
                            "policyId": {
                              "type": "string",
                              "description": "A policy ID to register under the given user (should be existing policy only)"
                            },
                            "accountIds": {
                              "type": "array",
                              "description": "A list of account IDs to register with the assigned under the given user (should be existing accounts only)",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "example": {
                      "policies": [
                        {
                          "policyId": "pol-12345678",
                          "accountIds": [
                            "act-12345678"
                          ]
                        },
                        {
                          "policyId": "pol-87654321",
                          "accountIds": [
                            "act-12345678",
                            "act-87654321"
                          ]
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "example": {
                                "id": "3ab3fdf7-3af3-46db-9e63-b88cfdac058c",
                                "url": "/setup/user/u-1234abcd/policyMapping?accountId=act-567c21",
                                "method": "PUT",
                                "timestamp": "2018-08-20T15:31:12.730Z"
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/accountUserMapping": {
      "get": {
        "summary": "Get User",
        "description": "Get user's account mapping\n",
        "operationId": "OrganizationsAndAccountsGetUser",
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "userEmail",
            "example": "test@spot.io",
            "description": "Target user email address\n",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get User Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/accountUserMapping?userEmail=test@spot.io",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group:log",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "accountId": {
                                          "type": "string",
                                          "description": "User's account ID",
                                          "example": "act-1234592"
                                        },
                                        "role": {
                                          "type": "string",
                                          "description": "Role identifies the scope of actions - user is able to perform",
                                          "example": "editor"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "accountId": {
                                          "type": "string",
                                          "description": "User's account ID",
                                          "example": "act-1234593"
                                        },
                                        "role": {
                                          "type": "string",
                                          "description": "Role identifies the scope of actions - user is able to perform",
                                          "example": "viewer"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 2,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "summary": "Assign Users to Accounts",
        "description": "Assign users to accounts in bulk. Only accounts under the creator's own organization are allowed. Creator's organization ID is taken from the personal token attached to the API call.\n",
        "operationId": "OrganizationsAndAccountsAssignUsersToAccounts",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "title": "Assign role based users",
                    "properties": {
                      "mappings": {
                        "type": "array",
                        "description": "Mappings objects include user, accountID and role.",
                        "items": [
                          {
                            "type": "object",
                            "properties": {
                              "userId": {
                                "type": "string",
                                "description": "One of userEmail / userId is required. identify user by its user ID",
                                "example": "u-1234"
                              },
                              "accountId": {
                                "type": "string",
                                "description": "Account for which to provide the specified user with the specified role.",
                                "example": "act-123abc"
                              },
                              "role": {
                                "type": "string",
                                "description": "Valid values \"viewer\", \"editor\". Required on permissionStrategy = ROLE_BASED",
                                "example": "editor"
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "userId": {
                                "type": "string",
                                "description": "One of userEmail / userId is required. identify user by its user ID",
                                "example": "u-1234"
                              },
                              "accountId": {
                                "type": "string",
                                "description": "Account for which to provide the specified user with the specified role.",
                                "example": "act-123abc"
                              },
                              "permissionStrategy": {
                                "type": "string",
                                "description": "Set the user permissions type, by role or by access policy. Valid values \"ROLE_BASED\", \"POLICY_BASED\"",
                                "example": "ROLE_BASED"
                              },
                              "role": {
                                "type": "string",
                                "description": "Valid values \"viewer\", \"editor\". Required on permissionStrategy = ROLE_BASED",
                                "example": "editor"
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  {
                    "type": "object",
                    "title": "Assign policy based users",
                    "properties": {
                      "mappings": {
                        "type": "array",
                        "description": "Mappings objects include user, accountID and role.",
                        "items": [
                          {
                            "type": "object",
                            "properties": {
                              "userId": {
                                "type": "string",
                                "description": "One of userEmail / userId is required. identify user by its user ID",
                                "example": "u-1234"
                              },
                              "accountId": {
                                "type": "string",
                                "description": "Account for which to provide the specified user with the specified role.",
                                "example": "act-123abc"
                              },
                              "permissionStrategy": {
                                "type": "string",
                                "description": "Set the user permissions type, by role or by access policy. Valid values \"ROLE_BASED\", \"POLICY_BASED\"",
                                "example": "POLICY_BASED"
                              },
                              "policyIds": {
                                "type": "array",
                                "description": "Set list of access policies IDs. Required on permissionStrategy = POLICY_BASED",
                                "example": [
                                  "pol-c3e30574",
                                  "pol-c3e30575"
                                ]
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "userEmail": {
                                "type": "string",
                                "description": "One of `userEmail` / `userId` is required. Email of the user, used as a unique identifier.",
                                "example": "test@spot.io"
                              },
                              "accountId": {
                                "type": "string",
                                "description": "Account for which to provide the specified user with the specified role.",
                                "example": "act-123abc"
                              },
                              "role": {
                                "type": "string",
                                "description": "Valid values `viewer`, `editor`. Required when `permissionStrategy = ROLE_BASED`.",
                                "example": "viewer"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Assign Users To Accounts Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/accountUserMapping?accountId=act-4fab9sc6",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/organization/{organizationId}": {
      "delete": {
        "summary": "Delete Organization",
        "description": "Delete a Spot Organization. ID of the organization can be obtained from your Spot console via the following link: https://console.spotinst.com/#/settings/organization/general > Note: This cannot be undone. Take caution.\n",
        "operationId": "OrganizationsAndAccountsDeleteOrganization",
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organizationId",
            "example": 606079812345,
            "description": "ID of the organization you would like to delete\n",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Organization Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/organization/606079812345",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "DELETE",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/account/{accountId}/user": {
      "put": {
        "summary": "Update User Permissions",
        "description": "Change the users' permissions for an account (only accounts under the creator's own organization are allowed). Creator's organization ID is taken from the personal token attached to the API call.\n",
        "operationId": "OrganizationsAndAccountsUpdateAUserPermission",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "title": "Update user permissions for editor role",
                    "properties": {
                      "userId": {
                        "type": "string",
                        "description": "One of userEmail / userId is required. identify user by its user ID",
                        "example": "u-1234"
                      },
                      "permissionStrategy": {
                        "type": "string",
                        "description": "Set the user permissions type, by role or by access policy. Valid values \"ROLE_BASED\", \"POLICY_BASED\"",
                        "example": "POLICY_BASED",
                        "default": "ROLE_BASED"
                      },
                      "role": {
                        "type": "string",
                        "description": "Valid values \"viewer\", \"editor\". Required on permissionStrategy = ROLE_BASED",
                        "example": "editor"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "title": "Update user permission with access policies",
                    "properties": {
                      "userId": {
                        "type": "string",
                        "description": "One of userEmail / userId is required. identify user by its user ID",
                        "example": "u-1234"
                      },
                      "permissionStrategy": {
                        "type": "string",
                        "description": "Set the user permissions type, by role or by access policy. Valid values \"ROLE_BASED\", \"POLICY_BASED\"",
                        "example": "POLICY_BASED",
                        "default": "ROLE_BASED"
                      },
                      "policyIds": {
                        "type": "string",
                        "description": "Policy IDs",
                        "example": [
                          "pol-c3e30574",
                          "pol-c3e30575"
                        ]
                      }
                    }
                  },
                  {
                    "type": "object",
                    "title": "Update user permission for viewer role",
                    "properties": {
                      "userId": {
                        "type": "string",
                        "description": "One of userEmail / userId is required. identify user by its user ID",
                        "example": "u-1234"
                      },
                      "role": {
                        "type": "string",
                        "description": "Valid values \"viewer\", \"editor\". Required on permissionStrategy = ROLE_BASED",
                        "example": "viewer"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update User Permissions Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/account/act-4fb595c6/user/",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "PUT",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Detach User",
        "description": "Detach a user from an account (only accounts under the creator's own organization are allowed). Creator's organization ID is taken from the personal token attached to the API call.\n",
        "operationId": "OrganizationsAndAccountsDetachUser",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "example": "act-123abc",
            "description": "Account ID\n",
            "required": true
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "userEmail"
                    ],
                    "properties": {
                      "userEmail": {
                        "type": "string",
                        "description": "Email of the user that is going to be deleted",
                        "example": "test@gmail.com"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detach User Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/account/act-12345678/user/",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "DELETE",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "summary": "Set Existing User Permissions",
        "description": "Add a user to the account and set its permissions on the account. Creator's organization ID is taken from the personal token attached to the API call.\n",
        "operationId": "OrganizationsAndAccountsSetExistingUserPermissions",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "example": "act-123abc",
            "description": "Account ID\n",
            "required": true
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "title": "Set user permissions for viewer role",
                    "properties": {
                      "userEmail": {
                        "type": "string",
                        "description": "One of userEmail / userId is required. identify user by its user ID",
                        "example": "test@spot.io"
                      },
                      "role": {
                        "type": "string",
                        "description": "Valid values - \"viewer\", \"editor\". Required on permissionStrategy = ROLE_BASED",
                        "example": "viewer"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "title": "Set user permissions for editor role",
                    "properties": {
                      "userEmail": {
                        "type": "string",
                        "description": "One of userEmail / userId is required. identify user by its user ID",
                        "example": "test@spot.io"
                      },
                      "role": {
                        "type": "string",
                        "description": "Valid values - \"viewer\", \"editor\". Required on permissionStrategy = ROLE_BASED",
                        "example": "editor"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Set Existing User Permissions Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/account/act-4fb765c6/user",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "PUT",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/user/programmatic": {
      "post": {
        "summary": "Create Programmatic User",
        "description": "This API creates a new programmatic user (not a human user). Use this API to provide privileges to an application that needs to interface with  Spot. Spot returns a token that the programmatic user can use to perform actions with. requires `accounts` or `policies`.",
        "operationId": "OrganizationsAndAccountsCreateProgrammaticUser",
        "tags": [
          "Organizations"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "Brief description of the user.",
                        "example": "test programmatic"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the programmatic user.",
                        "example": "testProgrammaticApi",
                        "required": true
                      },
                      "accounts": {
                        "type": "array",
                        "description": "All the accounts the programmatic user will have access to. If used - Cannot be empty.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Account ID the programmatic user will have access to.\n",
                              "example": "act-123"
                            },
                            "role": {
                              "type": "string",
                              "description": "Role to be associated with the programmatic user for this account.\n",
                              "enum": [
                                "viewer",
                                "editor"
                              ],
                              "example": "viewer"
                            }
                          }
                        }
                      },
                      "policies": {
                        "type": "array",
                        "description": "All the policies the programmatic user will have access to. If used - Cannot be empty.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "policyId": {
                              "type": "string",
                              "description": "Policy ID the programmatic user will have access to.\n",
                              "example": "pol-123"
                            },
                            "accountIds": {
                              "type": "array",
                              "description": "A list of the accounts that the policy should be enforced for the user.",
                              "example": [
                                "act-123",
                                "act-321"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create Programmatic User Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:setup:programmaticUser",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "token": {
                                        "type": "string",
                                        "description": "Token",
                                        "example": "f872e7b157866a36229d915aa21cf430f661234568703fd"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "Name",
                                        "example": "TestApi1"
                                      },
                                      "id": {
                                        "type": "string",
                                        "description": "ID",
                                        "example": "pu-6a6976ab"
                                      }
                                    }
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get All Programmatic Users",
        "description": "Get all the Programmatic Users in the organization.\n",
        "operationId": "OrganizationsAndAccountsGetAllProgrammaticUsers",
        "tags": [
          "Organizations"
        ],
        "responses": {
          "200": {
            "description": "Get Programmatic User Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:setup:programmaticUser",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "$ref": "#/paths/~1setup~1user~1programmatic~1%7BuserId%7D/put/responses/200/content/application~1json/schema/allOf/0/allOf/1/properties/response/properties/items/items"
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "ID",
                                          "example": "pu_123456"
                                        },
                                        "userName": {
                                          "type": "string",
                                          "description": "User Name",
                                          "example": "pu_name2"
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "Description",
                                          "example": "my programmatic user"
                                        },
                                        "accounts": {
                                          "type": "array",
                                          "description": "All the accounts the programmatic user will have access to. Cannot be empty.",
                                          "items": [
                                            {
                                              "$ref": "#/paths/~1setup~1user~1programmatic~1%7BuserId%7D/put/responses/200/content/application~1json/schema/allOf/0/allOf/1/properties/response/properties/items/items/properties/accounts/items/1"
                                            },
                                            {
                                              "$ref": "#/paths/~1setup~1user~1programmatic~1%7BuserId%7D/put/responses/200/content/application~1json/schema/allOf/0/allOf/1/properties/response/properties/items/items/properties/accounts/items/0"
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 2,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/user/programmatic/{userId}": {
      "put": {
        "summary": "Update Programmatic User",
        "description": "Updates the Programmatic User.\n",
        "operationId": "OrganizationsAndAccountsUpdateAProgrammaticUser",
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "example": "pu_968465",
            "description": "ID of the user\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "Brief description of the user.",
                        "example": "test programmatic"
                      },
                      "accounts": {
                        "type": "array",
                        "description": "All the accounts the programmatic user will have access to. Cannot be empty.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Account ID the programmatic user will have access to.\n",
                              "example": "act-123"
                            },
                            "role": {
                              "type": "string",
                              "description": "Role to be associated with the programmatic user for this account.\n",
                              "enum": [
                                "viewer",
                                "editor"
                              ],
                              "example": "viewer"
                            }
                          }
                        },
                        "required": true
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Programmatic User Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:setup:programmaticUser",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "ID",
                                        "example": "pu_968465"
                                      },
                                      "userName": {
                                        "type": "string",
                                        "description": "User Name",
                                        "example": "pu_name"
                                      },
                                      "description": {
                                        "type": "string",
                                        "description": "Description",
                                        "example": "test programmatic"
                                      },
                                      "accounts": {
                                        "type": "array",
                                        "description": "All the accounts the programmatic user will have access to. Cannot be empty.",
                                        "items": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string",
                                                "description": "Account ID the programmatic user will have access to.",
                                                "example": "act-123"
                                              },
                                              "role": {
                                                "type": "string",
                                                "description": "Role to be associated with the programmatic user for this account. Valid values are \"editor\" and \"viewer\".",
                                                "example": "editor"
                                              }
                                            }
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string",
                                                "description": "Account ID the programmatic user will have access to.",
                                                "example": "act-1234"
                                              },
                                              "role": {
                                                "type": "string",
                                                "description": "Role to be associated with the programmatic user for this account. Valid values are \"editor\" and \"viewer\".",
                                                "example": "viewer"
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get Programmatic User",
        "description": "Gets the Programmatic User.\n",
        "operationId": "OrganizationsAndAccountsGetAProgrammaticUser",
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1setup~1user~1programmatic~1%7BuserId%7D/put/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Get Programmatic User Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:setup:programmaticUser",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "$ref": "#/paths/~1setup~1user~1programmatic~1%7BuserId%7D/put/responses/200/content/application~1json/schema/allOf/0/allOf/1/properties/response/properties/items/items"
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/user/programmatic/{userId}/account": {
      "delete": {
        "summary": "Delete Programmatic User",
        "description": "Deletes the Programmatic User.\n",
        "operationId": "OrganizationsAndAccountsDeleteAProgrammaticUser",
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1setup~1user~1programmatic~1%7BuserId%7D/put/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Programmatic User Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/organization": {
      "post": {
        "summary": "Create Organization",
        "description": "Create a Spot Organization.",
        "operationId": "OrganizationsAndAccountsCreateOrganization",
        "tags": [
          "Organizations"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "organization": {
                        "type": "object",
                        "description": "Organization",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Provide a name for your organization. The organization name must contain at least one character that is a-z or A-Z",
                            "example": "organizationName"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create Organization Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/organization",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:setup:organization",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "organizationId": {
                                          "type": "integer",
                                          "description": "Organization ID",
                                          "example": 12345678
                                        },
                                        "organizationName": {
                                          "type": "string",
                                          "description": "Provide a name for your organization. The organization name must contain at least one character that is a-z or A-Z",
                                          "example": "organizationName"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/account": {
      "post": {
        "summary": "Create Account",
        "description": "Create a Spot account.",
        "operationId": "OrganizationsAndAccountsCreateAccount",
        "tags": [
          "Accounts"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "account": {
                        "type": "object",
                        "description": "Account",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Provide a name for your account. The account name must contain at least one character that is a-z or A-Z",
                            "example": "AccountName"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create Account Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/account",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:setup:account",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "Account ID",
                                          "example": "act-123456"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "Account Name",
                                          "example": "AccountName"
                                        },
                                        "organizationId": {
                                          "type": "string",
                                          "description": "Organization ID",
                                          "example": 606012341234
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Accounts",
        "description": "Get a list of Spot accounts in your organization.  When used without any parameters, the provided token must have Organization Admin permissions and the output will contain all the Organization's accounts. Note In case you want to list all the accounts associated with Organization you can use the below request URL without the cloudAccountId parameter, https://api.spotinst.io/setup/account",
        "operationId": "OrganizationsAndAccountsGetAccounts",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cloudAccountId",
            "schema": {
              "type": "string",
              "example": 634245686616,
              "description": "Will list only the Spot accounts connected to the specified account ID.\n"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Accounts Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/account?cloudAccountId=123456789",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:setup:account",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "accountId": {
                                          "type": "string",
                                          "description": "Account ID",
                                          "example": "act-57765123"
                                        },
                                        "organizationId": {
                                          "type": "integer",
                                          "description": "Organization ID",
                                          "example": 606079861123
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "Name",
                                          "example": "test"
                                        },
                                        "providerExternalId": {
                                          "type": "string",
                                          "description": "Provider external ID",
                                          "example": 123456789
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "accountId": {
                                          "type": "string",
                                          "description": "Account ID",
                                          "example": "act-57765123"
                                        },
                                        "organizationId": {
                                          "type": "integer",
                                          "description": "Organization ID",
                                          "example": 606079861123
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "Name",
                                          "example": "prod"
                                        },
                                        "providerExternalId": {
                                          "type": "string",
                                          "description": "Provider external ID",
                                          "example": 123456789
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 2,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/access/policy": {
      "post": {
        "summary": "Create Access Policy",
        "description": "Create an access policy. access policy enables you to define the user's permissions on a granular level than the role-based permissions.",
        "operationId": "OrganizationsAndAccountsCreateAccessPolicy",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "policy": {
                        "type": "object",
                        "description": "Set access policy settings. Example - Acme, Inc.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the Policy",
                            "example": "my policy"
                          },
                          "description": {
                            "type": "string",
                            "description": "Short description of policy",
                            "example": "description of my policy"
                          },
                          "policyContent": {
                            "type": "object",
                            "description": "Set permissions objects list",
                            "properties": {
                              "statements": {
                                "type": "array",
                                "description": "List of permissions statements",
                                "items": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "effect": {
                                        "type": "string",
                                        "description": "Valid values \"ALLOW\", \"DENY\"",
                                        "example": "ALLOW"
                                      },
                                      "actions": {
                                        "type": "array",
                                        "description": "Set a list of required actions for this permissions statement. full list of actions can be found - https://docs.spot.io/account-user-management/user-management/access-policies-actions/",
                                        "items": {
                                          "type": "string",
                                          "example": [
                                            "ocean:importCluster"
                                          ]
                                        }
                                      },
                                      "resources": {
                                        "type": "array",
                                        "description": "Set a list of resources IDs. In order to include all resources in this statement - use \"*\"",
                                        "items": {
                                          "type": "string",
                                          "example": [
                                            "*"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "effect": {
                                        "type": "string",
                                        "description": "Valid values \"ALLOW\", \"DENY\"",
                                        "example": "ALLOW"
                                      },
                                      "actions": {
                                        "type": "array",
                                        "description": "Set a list of required actions for this permissions statement. full list of actions can be found - https://docs.spot.io/account-user-management/user-management/access-policies-actions/",
                                        "items": {
                                          "type": "string",
                                          "example": [
                                            "emr:scale"
                                          ]
                                        }
                                      },
                                      "resources": {
                                        "type": "array",
                                        "description": "Set a list of resources IDs. In order to include all resources in this statement - use \"*\"",
                                        "items": {
                                          "type": "string",
                                          "example": [
                                            "*"
                                          ]
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create Access Policy Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/access/policy?accountId=act-6sd665cs\"",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:setup:access:policy",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "Set access policy name",
                                          "example": "my policy"
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "Set access policy description",
                                          "example": "description of my policy"
                                        },
                                        "policyContent": {
                                          "type": "array",
                                          "description": "Set permissions objects list",
                                          "properties": {
                                            "statements": {
                                              "type": "array",
                                              "items": [
                                                {
                                                  "$ref": "#/paths/~1setup~1access~1policy/post/requestBody/content/application~1json/schema/allOf/0/properties/policy/properties/policyContent/properties/statements/items/0"
                                                },
                                                {
                                                  "$ref": "#/paths/~1setup~1access~1policy/post/requestBody/content/application~1json/schema/allOf/0/properties/policy/properties/policyContent/properties/statements/items/1"
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        "id": {
                                          "type": "string",
                                          "description": "ID",
                                          "example": "pol-de9716be"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Access Policies",
        "description": "Get access policy settings.",
        "operationId": "OrganizationsAndAccountsGetAccountAccessPolicies",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Get Account Access Policies Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/access/policy?accountId=act-4fd325c3",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:setup:access:policy",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "Set access policy name",
                                          "example": "my policy"
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "Set access policy description",
                                          "example": "description of my policy"
                                        },
                                        "policyContent": {
                                          "type": "object",
                                          "description": "Set permissions objects list",
                                          "properties": {
                                            "statements": {
                                              "type": "array",
                                              "items": [
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "effect": {
                                                      "type": "string",
                                                      "description": "Valid values \"ALLOW\", \"DENY\"",
                                                      "example": "ALLOW"
                                                    },
                                                    "actions": {
                                                      "type": "array",
                                                      "description": "Set a list of required actions for this permissions statement. full list of actions can be found - https://docs.spot.io/account-user-management/user-management/access-policies-actions/",
                                                      "items": {
                                                        "type": "string",
                                                        "example": [
                                                          "ocean:importCluster"
                                                        ]
                                                      }
                                                    },
                                                    "resources": {
                                                      "type": "array",
                                                      "description": "Set a list of resources IDs. In order to include all resources in this statement - use \"*\"",
                                                      "items": {
                                                        "type": "string",
                                                        "example": [
                                                          "*"
                                                        ]
                                                      }
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "effect": {
                                                      "type": "string",
                                                      "description": "Valid values \"ALLOW\", \"DENY\"",
                                                      "example": "ALLOW"
                                                    },
                                                    "actions": {
                                                      "type": "array",
                                                      "description": "Set a list of required actions for this permissions statement. full list of actions can be found - https://docs.spot.io/account-user-management/user-management/access-policies-actions/",
                                                      "items": {
                                                        "type": "string",
                                                        "example": [
                                                          "emr:scale"
                                                        ]
                                                      }
                                                    },
                                                    "resources": {
                                                      "type": "array",
                                                      "description": "Set a list of resources IDs. In order to include all resources in this statement - use \"*\"",
                                                      "items": {
                                                        "type": "string",
                                                        "example": [
                                                          "*"
                                                        ]
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        "id": {
                                          "type": "string",
                                          "description": "ID",
                                          "example": "pol-de9716be"
                                        },
                                        "createdAt": {
                                          "type": "string",
                                          "description": "Created At Date",
                                          "example": "2020-01-21T12:37:14.000+0000"
                                        },
                                        "updatedAt": {
                                          "type": "string",
                                          "description": "Updated At Date",
                                          "example": "2020-01-21T12:37:14.000+0000"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/access/policy/{policyId}": {
      "put": {
        "summary": "Update Access Policy",
        "description": "Updates an access policy settings.",
        "operationId": "OrganizationsAndAccountsUpdateAccessPolicy",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "policyId",
            "example": "pol-2344nn",
            "description": "The access policy ID to delete\n",
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "policy": {
                        "type": "object",
                        "description": "Set access policy settings",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Set access policy name",
                            "example": "A wonderful policy"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Access Policy Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/access/policy/pol-2344nn?accountId=act-4fbdvfc6",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "PUT",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Access Policy",
        "description": "Deletes an access policy settings.",
        "operationId": "OrganizationsAndAccountsDeleteAccessPolicy",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "policyId",
            "example": "pol-2344nn",
            "description": "The access policy ID to delete\n",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Access Policy Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/access/policy/pol-2344nn?accountId=act-123456789",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "DELETE",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/access/userGroup": {
      "get": {
        "summary": "List All User Groups",
        "description": "List all user-groups of your Spot organization\n",
        "operationId": "userGroupListAll",
        "tags": [
          "Organizations"
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "example": {
                                "id": "3ab3fdf7-3af3-46db-9e63-b88cfdac058c",
                                "url": "/setup/access/userGroup?accountId=act-567c21",
                                "method": "GET",
                                "timestamp": "2018-08-20T15:31:12.730Z"
                              }
                            },
                            "response": {
                              "properties": {
                                "kind": {
                                  "example": "spotinst:setup:access:userGroup"
                                },
                                "count": {
                                  "example": 2
                                },
                                "items": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "user group id"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "user group name"
                                      },
                                      "description": {
                                        "type": "string",
                                        "description": "user group description"
                                      },
                                      "createdAt": {
                                        "type": "string",
                                        "description": "user group creation timestamp"
                                      },
                                      "usersCount": {
                                        "type": "integer",
                                        "description": "the amount of users registered under the given group"
                                      },
                                      "policyNames": {
                                        "type": "array",
                                        "description": "The names of the policies registered under the given group",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "example": [
                                    {
                                      "id": "ugr-a1b2c3d4",
                                      "name": "Developers",
                                      "description": "managing permissions to my group of developers",
                                      "createdAt": "2020-11-04T11:29:10.000+0000",
                                      "usersCount": 10,
                                      "policyNames": [
                                        "TriggerDeployment"
                                      ]
                                    },
                                    {
                                      "id": "ugr-4d3c2b1a",
                                      "name": "DevOps",
                                      "description": "managing permissions to my group of DevOps",
                                      "createdAt": "2020-09-01T11:28:00.000+0000",
                                      "usersCount": 5,
                                      "policyNames": [
                                        "TriggerDeployment",
                                        "UpdateScaling",
                                        "UpdateScheduling"
                                      ]
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "summary": "Create a new User Group",
        "description": "Create a new user-group of your Spot organization\n",
        "operationId": "userGroupCreate",
        "tags": [
          "Organizations"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "user group id",
                        "example": "ugr-a1b2c3d4"
                      },
                      "name": {
                        "type": "string",
                        "description": "user group name",
                        "example": "Developers"
                      },
                      "description": {
                        "type": "string",
                        "description": "user group description",
                        "example": "managing permissions to my group of developers"
                      },
                      "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "description": "user group creation timestamp",
                        "example": "2020-11-04T11:29:10.000+0000"
                      },
                      "userIds": {
                        "type": "array",
                        "description": "The users to register under the created group (should be existing users only)",
                        "example": [
                          "u-12345678",
                          "pu-12345678"
                        ],
                        "items": {
                          "type": "string"
                        }
                      },
                      "policies": {
                        "type": "array",
                        "description": "The policies to register under the given group (should be existing policies only)",
                        "example": [
                          {
                            "policyId": "pol-12345678",
                            "accountIds": [
                              "act-12345678"
                            ]
                          },
                          {
                            "policyId": "pol-87654321",
                            "accountIds": [
                              "act-12345678",
                              "act-87654321"
                            ]
                          }
                        ],
                        "items": {
                          "type": "object",
                          "properties": {
                            "policyId": {
                              "type": "string",
                              "description": "A policy to register under the given group (should be existing policy only)"
                            },
                            "accounts": {
                              "type": "array",
                              "description": "A list of accounts to register with the assigned under the given group (should be existing accounts only)",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "example": {
                                "id": "3ab3fdf7-3af3-46db-9e63-b88cfdac058c",
                                "url": "/setup/access/userGroup?accountId=act-567c21",
                                "method": "POST",
                                "timestamp": "2018-08-20T15:31:12.730Z"
                              }
                            },
                            "response": {
                              "properties": {
                                "kind": {
                                  "example": "spotinst:setup:access:userGroup"
                                },
                                "count": {
                                  "example": 1
                                },
                                "items": {
                                  "$ref": "#/paths/~1setup~1access~1userGroup/post/requestBody/content/application~1json/schema/allOf/0"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/access/userGroup/{userGroupId}": {
      "get": {
        "summary": "Get User Group Details",
        "description": "Get the details of a user Group\n",
        "operationId": "userGroupGetDetails",
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userGroupId",
            "example": "ugr-1234abcd",
            "description": "Identifier of a user Group.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "example": {
                                "id": "3ab3fdf7-3af3-46db-9e63-b88cfdac058c",
                                "url": "/setup/access/userGroup/urg-1234abcd?accountId=act-567c21",
                                "method": "GET",
                                "timestamp": "2018-08-20T15:31:12.730Z"
                              }
                            },
                            "response": {
                              "properties": {
                                "kind": {
                                  "example": "spotinst:setup:access:userGroup"
                                },
                                "count": {
                                  "example": 1
                                },
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "user group id"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "user group name"
                                    },
                                    "description": {
                                      "type": "string",
                                      "description": "user group description"
                                    },
                                    "createdAt": {
                                      "type": "string",
                                      "description": "user group creation timestamp"
                                    },
                                    "users": {
                                      "type": "array",
                                      "description": "the users registered under the given group",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "userId": {
                                            "type": "string",
                                            "description": "the ID of the given user"
                                          },
                                          "userName": {
                                            "type": "string",
                                            "description": "the name of the given user"
                                          },
                                          "type": {
                                            "type": "string",
                                            "description": "the type of the given user",
                                            "enum": [
                                              "programmatic",
                                              "personal"
                                            ]
                                          }
                                        }
                                      }
                                    },
                                    "policies": {
                                      "type": "array",
                                      "description": "The policies registered under the given group",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "policyId": {
                                            "type": "string",
                                            "description": "the ID of the given policy"
                                          },
                                          "policyName": {
                                            "type": "string",
                                            "description": "the name of the given policy"
                                          },
                                          "policyType": {
                                            "type": "string",
                                            "description": "the type of the given policy"
                                          },
                                          "accountNames": {
                                            "type": "array",
                                            "description": "the names of the accounts registered under the given policy",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "example": {
                                    "id": "ugr-a1b2c3d4",
                                    "name": "Developers",
                                    "description": "managing permissions to my group of developers",
                                    "createdAt": "2020-11-04T11:29:10.000+0000",
                                    "users": [
                                      {
                                        "userId": "u-12345678",
                                        "userName": "Clark Kent",
                                        "type": "personal"
                                      },
                                      {
                                        "userId": "pu-87654321",
                                        "userName": "Superman",
                                        "type": "programmatic"
                                      }
                                    ],
                                    "policies": [
                                      {
                                        "policyId": "pol-12345678",
                                        "policyName": "TriggerDeployment",
                                        "policyType": "ACCOUNT",
                                        "accountIds": [
                                          "act-12345678",
                                          "act-87654321"
                                        ]
                                      },
                                      {
                                        "policyId": "pol-87654321",
                                        "policyName": "UpdateScheduling",
                                        "policyType": "ORGANIZATION"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update User Group Details",
        "description": "Update the details of a user Group\n",
        "operationId": "userGroupUpdateDetails",
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1setup~1access~1userGroup~1%7BuserGroupId%7D/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "user group name",
                        "minLength": 1,
                        "example": "Developers"
                      },
                      "description": {
                        "type": "string",
                        "description": "user group description",
                        "minLength": 1,
                        "example": "managing permissions to my group of developers"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "example": {
                                "id": "3ab3fdf7-3af3-46db-9e63-b88cfdac058c",
                                "url": "/setup/access/userGroup/urg-1234abcd?accountId=act-567c21",
                                "method": "PUT",
                                "timestamp": "2018-08-20T15:31:12.730Z"
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete User Group",
        "description": "Delete a user Group\n",
        "operationId": "userGroupDelete",
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1setup~1access~1userGroup~1%7BuserGroupId%7D/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "example": {
                                "id": "3ab3fdf7-3af3-46db-9e63-b88cfdac058c",
                                "url": "/setup/access/userGroup/urg-1234abcd?accountId=act-567c21",
                                "method": "DELETE",
                                "timestamp": "2018-08-20T15:31:12.730Z"
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/access/userGroup/{userGroupId}/userMapping": {
      "put": {
        "summary": "User Group - Update User Mapping",
        "description": "Update the mapping of a given user group to users\n",
        "operationId": "userGroupUpdateUserMapping",
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1setup~1access~1userGroup~1%7BuserGroupId%7D/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "userIds": {
                        "type": "array",
                        "description": "The users to register under the given user group (should be existing users only)"
                      }
                    },
                    "example": {
                      "userIds": [
                        "u-12345678",
                        "pu-12345678"
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "example": {
                                "id": "3ab3fdf7-3af3-46db-9e63-b88cfdac058c",
                                "url": "/setup/access/userGroup/urg-1234abcd/userMapping?accountId=act-567c21",
                                "method": "PUT",
                                "timestamp": "2018-08-20T15:31:12.730Z"
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/access/userGroup/{userGroupId}/policyMapping": {
      "put": {
        "summary": "User Group - Update Policy Mapping",
        "description": "Update the mapping of a given user group to policies\n",
        "operationId": "userGroupUpdatePolicyMapping",
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1setup~1access~1userGroup~1%7BuserGroupId%7D/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "policies": {
                        "type": "array",
                        "description": "The policies to register under the given user group (should be existing policies only)",
                        "example": null,
                        "items": {
                          "type": "object",
                          "properties": {
                            "policyId": {
                              "type": "string",
                              "description": "A policy to register under the given group (should be existing policy only)"
                            },
                            "accountIds": {
                              "type": "array",
                              "description": "A list of accounts to register with the assigned under the given group (should be existing accounts only)",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "example": {
                      "policies": [
                        {
                          "policyId": "pol-12345678",
                          "accountIds": [
                            "act-12345678"
                          ]
                        },
                        {
                          "policyId": "pol-87654321",
                          "accountIds": [
                            "act-12345678",
                            "act-87654321"
                          ]
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "example": {
                                "id": "3ab3fdf7-3af3-46db-9e63-b88cfdac058c",
                                "url": "/setup/access/userGroup/urg-1234abcd/policyMapping?accountId=act-567c21",
                                "method": "PUT",
                                "timestamp": "2018-08-20T15:31:12.730Z"
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/user/permission": {
      "get": {
        "summary": "Get Users Permissions",
        "description": "Get the permissions for all the users in the account.\n",
        "operationId": "OrganizationsAndAccountsGetAllUsersPermissions",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Get All Users Permissions Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/user/permission",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:setup:user:permission",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "userId": {
                                          "type": "string",
                                          "description": "User ID",
                                          "example": "u-1235"
                                        },
                                        "permissionStrategy": {
                                          "type": "string",
                                          "description": "Permission Strategy",
                                          "example": "ROLE_BASED"
                                        },
                                        "role": {
                                          "type": "string",
                                          "description": "Role",
                                          "example": "editor"
                                        },
                                        "policyIds": {
                                          "type": "array",
                                          "description": "Array of policy IDs",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "userId": {
                                          "type": "string",
                                          "description": "User ID",
                                          "example": "u-12387"
                                        },
                                        "permissionStrategy": {
                                          "type": "string",
                                          "description": "Permission Strategy",
                                          "example": "POLICY_BASED"
                                        },
                                        "role": {
                                          "type": "string",
                                          "description": "Role",
                                          "example": "viewer"
                                        },
                                        "policyIds": {
                                          "type": "array",
                                          "description": "Array of policy IDs",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "userId": {
                                          "type": "string",
                                          "description": "User ID",
                                          "example": "u-1234"
                                        },
                                        "permissionStrategy": {
                                          "type": "string",
                                          "description": "Permission Strategy",
                                          "example": "POLICY_BASED"
                                        },
                                        "role": {
                                          "type": "string",
                                          "description": "Role",
                                          "example": "viewer"
                                        },
                                        "policyIds": {
                                          "type": "array",
                                          "description": "Array of policy IDs",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 3,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/credentials/aws": {
      "post": {
        "summary": "Set Credentials for AWS",
        "description": "Link a Spot account to an AWS Cloud account. \\\nPlease create external id using spot api (see /setup/credentials/aws/externalId) \\\nand use it when creating the AWS role and then call this route with your AWS role's arn to link it to your spot account\n",
        "operationId": "OrganizationsAndAccountsSetCloudCredentialsForAWS",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "credentials": {
                        "type": "object",
                        "description": "Credentials details",
                        "properties": {
                          "iamRole": {
                            "type": "string",
                            "description": "Provide the IAM Role ARN connected to another AWS account 922761411349 and with the latest Spot Policy - https://docs.spot.io/administration/api/spot-policy-in-aws",
                            "example": "arn:aws:iam::1234567890:role/Spot_Iam_Role",
                            "required": true
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Set Cloud Credentials For AWS Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/credentials/aws?accountId=act-123456",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/credentials/aws/externalId": {
      "post": {
        "summary": "Create AWS account external id",
        "description": "Create aws account external id \\\nYou should use the external id when creating your AWS role for your spot account \\\nand after you create the role you need to call [set-aws-credentials Set Credentials for AWS](https://docs.spot.io/api/#operation/OrganizationsAndAccountsSetCloudCredentialsForAWS) \\\nto link your AWS account with your spot account\n",
        "operationId": "OrganizationsAndAccountsCreateAWSAccountExternalId",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Create AWS Acccount External Id Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/credentials/aws/externalId?accountId=act-123456",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:setup:aws:externalId",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "externalId": {
                                          "type": "string",
                                          "description": "Token",
                                          "example": "SpotinstAwsAccountExternalId"
                                        },
                                        "maxValidUntil": {
                                          "type": "string",
                                          "description": "Max Valid Until",
                                          "example": "2021-03-18T16:11:04.402Z"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/setup/credentials": {
      "post": {
        "summary": "Set Credentials for GCP",
        "description": "Link a Spot account to a GCP Cloud account.",
        "operationId": "OrganizationsAndAccountsSetCloudCredentialsForGCP",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "serviceAccount": {
                        "type": "object",
                        "description": "Set service account for credentials",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Valid values - service_account",
                            "example": "service_account"
                          },
                          "project_id": {
                            "type": "string",
                            "description": "Name of project in GCP",
                            "example": "test-labs"
                          },
                          "private_key_id": {
                            "type": "string",
                            "description": "Private key ID of JSON key created during prerequisites stage",
                            "example": "XXXXXXXXXXXXXXXXX"
                          },
                          "private_key": {
                            "type": "string",
                            "description": "Private key of JSON key created during prerequisites stage",
                            "example": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
                          },
                          "client_email": {
                            "type": "string",
                            "description": "Email associated with service account",
                            "example": "test123@spot.io"
                          },
                          "client_id": {
                            "type": "string",
                            "description": "Client ID of service account",
                            "example": "XXXXXXXXXXXXXXXXXXXXX"
                          },
                          "auth_uri": {
                            "type": "string",
                            "description": "Authentication uri, Default - https://accounts.google.com/o/oauth2/auth",
                            "example": "https://accounts.google.com/o/oauth2/auth"
                          },
                          "token_uri": {
                            "type": "string",
                            "description": "Token uri, Default - https://oauth2.googleapis.com/token",
                            "example": "https://oauth2.googleapis.com/token"
                          },
                          "auth_provider_x509_cert_url": {
                            "type": "string",
                            "description": "Default - https://www.googleapis.com/oauth2/v1/certs",
                            "example": "https://www.googleapis.com/oauth2/v1/certs"
                          },
                          "client_x509_cert_url": {
                            "type": "string",
                            "description": "Should be in following format - \"https://www.googleapis.com/robot/v1/metadata/x509/\"",
                            "example": "https://www.googleapis.com/robot/v1/metadata/x509/test123%40test-labs.iam.gserviceaccount.com"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Set Cloud Credentials For GCP Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/gcp/setup/credentials?accountId=act-123456",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/setup/credentials/validation": {
      "post": {
        "summary": "Validate Credentials for GCP",
        "description": "Validate the credentials for connecting a Spot account to an GCP Cloud account. The validation will test the credentials without actually set it. Please notice to run the set credentials request to perform the set account credentials.",
        "operationId": "OrganizationsAndAccountsValidateCloudCredentialsForGCP",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "serviceAccount": {
                        "type": "object",
                        "description": "Set service account for credentials",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Valid values - service_account",
                            "example": "service_account"
                          },
                          "project_id": {
                            "type": "string",
                            "description": "Name of project in GCP",
                            "example": "test-labs"
                          },
                          "private_key_id": {
                            "type": "string",
                            "description": "Private key ID of JSON key created during prerequisites stage",
                            "example": "XXXXXXXXXXXXXXXXX"
                          },
                          "private_key": {
                            "type": "string",
                            "description": "Private key of JSON key created during prerequisites stage",
                            "example": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
                          },
                          "client_email": {
                            "type": "string",
                            "description": "Email associated with service account",
                            "example": "test123@spot.io"
                          },
                          "client_id": {
                            "type": "string",
                            "description": "Client ID of service account",
                            "example": "XXXXXXXXXXXXXXXXXXXXX"
                          },
                          "auth_uri": {
                            "type": "string",
                            "description": "Authentication uri, Default - https://accounts.google.com/o/oauth2/auth",
                            "example": "https://accounts.google.com/o/oauth2/auth"
                          },
                          "token_uri": {
                            "type": "string",
                            "description": "Token uri, Default - https://oauth2.googleapis.com/token",
                            "example": "https://oauth2.googleapis.com/token"
                          },
                          "auth_provider_x509_cert_url": {
                            "type": "string",
                            "description": "Default - https://www.googleapis.com/oauth2/v1/certs",
                            "example": "https://www.googleapis.com/oauth2/v1/certs"
                          },
                          "client_x509_cert_url": {
                            "type": "string",
                            "description": "Should be in following format - \"https://www.googleapis.com/robot/v1/metadata/x509/\"",
                            "example": "https://www.googleapis.com/robot/v1/metadata/x509/test123%40test-labs.iam.gserviceaccount.com"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Validate Cloud Credentials for GCP Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/gcp/setup/credentials/validate?accountId=act-123456",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/setup/credentials": {
      "post": {
        "summary": "Set Credentials for Azure",
        "description": "Link a Spot account to an Azure Cloud account.",
        "operationId": "OrganizationsAndAccountsSetCloudCredentialsForAzure",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "clientId": {
                        "type": "string",
                        "description": "Set the application ID",
                        "example": 111111111
                      },
                      "clientSecret": {
                        "type": "string",
                        "description": "Set the key secret",
                        "example": "32431r2431434132"
                      },
                      "tenantId": {
                        "type": "string",
                        "description": "Set the directory ID",
                        "example": "1321e1e3123er23"
                      },
                      "subscriptionId": {
                        "type": "string",
                        "description": "Set the subscription ID",
                        "example": "234r3141131"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Set Cloud Credentials For Azure Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/azure/setup/credentials?accountId=act-123456",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/setup/credentials/validation": {
      "post": {
        "summary": "Validate Credentials for Azure",
        "description": "Validate the credentials for connecting a Spot account to an Azure Cloud account. The validation will test the credentials without actually set it. Please notice to run the set credentials request to perform the set Azure account credentials (https://docs.spot.io/connect-your-cloud-provider/azure-account) .",
        "operationId": "OrganizationsAndAccountsValidateCloudCredentialsForAzure",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "clientId": {
                        "type": "string",
                        "description": "Set the application ID",
                        "example": "111111111"
                      },
                      "clientSecret": {
                        "type": "string",
                        "description": "Set the key secret",
                        "example": "32431r2431434132"
                      },
                      "tenantId": {
                        "type": "string",
                        "description": "Set the directory ID",
                        "example": "1321e1e3123er23"
                      },
                      "subscriptionId": {
                        "type": "string",
                        "description": "Set the subscription ID",
                        "example": "234r3141131"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Validate Cloud Credentials for Azure Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/azure/setup/credentials/validation?accountId=act-123456",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/gcp/k8s/cluster": {
      "summary": "Ocean for GKE",
      "post": {
        "summary": "Create Cluster",
        "description": "## Prerequisites:\n  The Ocean Controller is used to monitor the cluster resources and report back to Ocean.|\n  To install the Ocean Controller, complete and run the following script on a machine with the kubectl command line tool installed and configured:\n\n```\n  #!/usr/bin/env bash\n  curl -fsSL http://spotinst-public.s3.amazonaws.com/integrations/kubernetes/cluster-controller/scripts/init.sh | \\\n  SPOTINST_TOKEN=<ENTER YOUR TOKEN HERE> \\\n  SPOTINST_ACCOUNT=<ENTER YOUR SPOTINST ACCOUNT ID HERE> \\\n  SPOTINST_CLUSTER_IDENTIFIER=<ENTER YOUR CLUSTER IDENTIFIER HERE> \\\n  bash\n```\nYou may need Kubernetes admin privileges for this script to work. To grant yourself admin privileges, run the following command:\n```\n  kubectl create clusterrolebinding <clusterName> --clusterrole=cluster-admin --user=<userEmail>\n```\nFor more information, refer to our [controller installation guides](https://docs.spot.io/ocean/tutorials/spot-kubernetes-controller/). You can install with Helm, Kubectl or Terraform.\nFor more about Ocean and the Ocean Controller, see the documentation [here](https://docs.spot.io/ocean/overview-kubernetes).\n",
        "operationId": "OceanGKEClusterCreate",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "cluster"
                    ],
                    "properties": {
                      "cluster": {
                        "type": "object",
                        "description": "The specification of the Ocean cluster.",
                        "required": [
                          "name",
                          "controllerClusterId",
                          "compute"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "test",
                            "description": "Add a name for the Ocean cluster.\n"
                          },
                          "controllerClusterId": {
                            "type": "string",
                            "example": "test-123124",
                            "description": "Enter the Ocean cluster identifier.\n"
                          },
                          "gke": {
                            "type": "object",
                            "required": [
                              "clusterName",
                              "masterLocation"
                            ],
                            "description": "Use existing GKE cluster.\n",
                            "properties": {
                              "clusterName": {
                                "type": "string",
                                "description": "Required for the cluster.gke object.\n",
                                "example": "test-cluster"
                              },
                              "masterLocation": {
                                "type": "string",
                                "description": "Required for the cluster.gke object.\n",
                                "example": "us-central1-a"
                              }
                            }
                          },
                          "autoScaler": {
                            "type": "object",
                            "title": "auto-scaler",
                            "description": "The Ocean Kubernetes Autoscaler object.",
                            "properties": {
                              "isEnabled": {
                                "type": "boolean",
                                "description": "Enable the Ocean Kubernetes Autoscaler.",
                                "default": true,
                                "example": true
                              },
                              "cooldown": {
                                "type": "integer",
                                "description": "Cooldown period between scaling actions.",
                                "default": null,
                                "example": 30
                              },
                              "resourceLimits": {
                                "type": "object",
                                "description": "Optionally set upper and lower bounds on the resource usage of the cluster.",
                                "properties": {
                                  "maxMemoryGib": {
                                    "type": "integer",
                                    "description": "The maximum memory in GiB units that can be allocated to the cluster.",
                                    "example": 1500
                                  },
                                  "maxVcpu": {
                                    "type": "integer",
                                    "description": "The maximum CPU in vCPU units that can be allocated to the cluster.",
                                    "example": 750
                                  }
                                }
                              },
                              "down": {
                                "type": "object",
                                "description": "Autoscaling scale down operations.",
                                "properties": {
                                  "maxScaleDownPercentage": {
                                    "type": "integer",
                                    "minimum": 1,
                                    "maximum": 100,
                                    "description": "The maximum percentage allowed to scale down in a single scaling action.",
                                    "example": 30
                                  }
                                }
                              },
                              "headRoom": {
                                "type": "object",
                                "description": "Spare resource capacity management enabling fast assignment of pods without waiting for new resources to launch.\n",
                                "properties": {
                                  "cpuPerUnit": {
                                    "type": "integer",
                                    "description": "Optionally configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores where 1000 millicores = 1 vCPU.\n",
                                    "example": 0
                                  },
                                  "memoryPerUnit": {
                                    "type": "integer",
                                    "description": "Optionally configure the amount of memory (MiB) to allocate the headroom.",
                                    "example": 0
                                  },
                                  "gpuPerUnit": {
                                    "type": "integer",
                                    "description": "How much GPU to allocate to a headroom unit.",
                                    "example": 0
                                  },
                                  "numOfUnit": {
                                    "type": "integer",
                                    "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n",
                                    "example": 0
                                  }
                                }
                              },
                              "isAutoConfig": {
                                "type": "boolean",
                                "description": "Use automatic headroom. When set to true, the values under cluster.autoScaler.headroom are not effective, as Ocean configures and optimizes headroom automatically.\n",
                                "default": true,
                                "example": false
                              },
                              "autoHeadroomPercentage": {
                                "type": "integer",
                                "description": "Optionally set the auto headroom percentage. Set a number between 0-200 to control the headroom percent of the cluster. Relevant when isAutoConfig=true.\n",
                                "example": null
                              },
                              "enableAutomaticAndManualHeadroom": {
                                "type": "boolean",
                                "description": "When set to true, both automatic and per-VNG manual headroom to be saved concurrently and independently in the cluster. prerequisite: isAutoConfig must be true\n",
                                "example": true
                              }
                            }
                          },
                          "capacity": {
                            "$ref": "#/paths/~1ocean~1gcp~1k8s~1cluster~1import/post/responses/200/content/application~1json/schema/properties/response/properties/items/properties/capacity"
                          },
                          "strategy": {
                            "type": "object",
                            "title": "Ocean Strategy",
                            "properties": {
                              "drainingTimeout": {
                                "type": "integer",
                                "description": "The draining timeout (in seconds) before terminating the instance.\nIf no draining timeout is defined, the default draining timeout will be used.\n",
                                "example": 60
                              },
                              "provisioningModel": {
                                "type": "string",
                                "description": "Define the provisioning model of the launched instances\n",
                                "enum": [
                                  "SPOT",
                                  "PREEMPTIBLE"
                                ]
                              },
                              "preemptiblePercentage": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 100,
                                "default": 100,
                                "description": "The desired percentage of Spot/Preemptible instances out of all running instances.\\\nOnly available when the field is **not** set in any VNG directly (launchSpec.strategy.preemptiblePercentage).\n",
                                "example": 100
                              }
                            }
                          },
                          "scheduling": {
                            "type": "object",
                            "title": "Ocean GKE Scheduling",
                            "description": "Schedule an action such as a planned shutdown or a cluster roll.",
                            "properties": {
                              "shutdownHours": {
                                "type": "object",
                                "description": "Define time(s) for a scheduled shutdown.\n",
                                "required": [
                                  "timeWindows"
                                ],
                                "properties": {
                                  "isEnabled": {
                                    "type": "boolean",
                                    "description": "Flag to enable or disable the shutdown hours mechanism. When false, the mechanism is deactivated and the cluster remains in its current state.\n",
                                    "example": true
                                  },
                                  "timeWindows": {
                                    "type": "array",
                                    "description": "Set time windows for shutdown hours. Specify a list of timeWindows that includes at least one time window. Each string is in the format of - ddd:hh:mm-ddd:hh:mm ddd = day of week = Sun | Mon | Tue | Wed | Thu | Fri | Sat hh = hour 24 = 0 -23 mm = minute = 0 - 59. Time windows should not overlap. Required when cluster.scheduling.isEnabled = True.\n",
                                    "items": {
                                      "type": "string",
                                      "example": [
                                        "Fri:15:30-Wed:14:30",
                                        "Wed:15:30-Thu:18:30"
                                      ]
                                    }
                                  }
                                }
                              },
                              "tasks": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "title": "Task Definition",
                                  "required": [
                                    "isEnabled",
                                    "cronExpression",
                                    "taskType"
                                  ],
                                  "properties": {
                                    "isEnabled": {
                                      "type": "boolean",
                                      "example": true,
                                      "description": "Describes whether the task is enabled. When true, the task runs. When false, it does not run. Required for the cluster.scheduling.tasks object.\n"
                                    },
                                    "cronExpression": {
                                      "type": "string",
                                      "example": "0 1 * * *",
                                      "description": "A valid cron expression. For example : \" * * * * * \". The cron is running in UTC time zone and is in Unix cron format [Cron Expression Validator Script](http://www.unix.com/man-page/linux/5/crontab/). Frequency and cronExpression cannot be used at a time.\n"
                                    },
                                    "taskType": {
                                      "type": "string",
                                      "example": "clusterRoll",
                                      "description": "Valid values: \"clusterRoll\". Required for the cluster.scheduling.tasks object.\n"
                                    },
                                    "batchSizePercentage": {
                                      "type": "integer",
                                      "description": "Value in percent to set the size of a batch in a roll. Valid values are 0-100\n",
                                      "example": 20
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "security": {
                            "type": "object",
                            "title": "Security",
                            "properties": {
                              "containerImage": {
                                "type": "object",
                                "properties": {
                                  "approvedImages": {
                                    "type": "array",
                                    "description": "Set list of permitted repositories for container images.",
                                    "items": {
                                      "type": "string",
                                      "example": [
                                        "gce.io/*",
                                        "docker.*"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "compute": {
                            "type": "object",
                            "title": "Ocean Compute",
                            "required": [
                              "subnetname",
                              "launchSpecification",
                              "networkInterfaces",
                              "availabilityZones"
                            ],
                            "properties": {
                              "networkInterfaces": {
                                "type": "object",
                                "description": "Settings for network interfaces\n",
                                "required": [
                                  "accessConfigs",
                                  "network"
                                ],
                                "properties": {
                                  "network": {
                                    "type": "string",
                                    "example": "default"
                                  },
                                  "projectId": {
                                    "type": "string",
                                    "description": "Use a network resource from a different project. Set the project identifier to use its network resource. This parameter is relevant only if the network resource is in a different project.\n",
                                    "example": "test-project"
                                  },
                                  "accessConfigs": {
                                    "type": "object",
                                    "required": [
                                      "name",
                                      "type"
                                    ],
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "external-nat"
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "Possible values: ONE_TO_ONE_NAT\n",
                                        "example": "ONE_TO_ONE_NAT"
                                      }
                                    }
                                  },
                                  "aliasIpRanges": {
                                    "type": "object",
                                    "required": [
                                      "ipCidrRange",
                                      "subnetworkRangeName"
                                    ],
                                    "properties": {
                                      "ipCidrRange": {
                                        "type": "string",
                                        "description": "Required for the cluster.compute.networkInterfaces.aliasIpRanges object.\n",
                                        "example": "/24"
                                      },
                                      "subnetworkRangeName": {
                                        "type": "string",
                                        "description": "Required for the cluster.compute.networkInterfaces.aliasIpRanges object.\n",
                                        "example": "gke-test-native-vpc-pods-5cb557f7"
                                      }
                                    }
                                  }
                                }
                              },
                              "backendServices": {
                                "type": "object",
                                "description": "Settings for backend services.",
                                "required": [
                                  "backendServiceName"
                                ],
                                "properties": {
                                  "backendServiceName": {
                                    "type": "string",
                                    "description": "Required for the cluster.compute.backendServices object.",
                                    "example": "test-global-tcp"
                                  },
                                  "locationType": {
                                    "type": "string",
                                    "example": "global"
                                  }
                                }
                              },
                              "subnetName": {
                                "type": "string",
                                "description": "Subnet identifier for the Ocean cluster",
                                "example": "default"
                              },
                              "availabilityZones": {
                                "type": "array",
                                "description": "Availability zone(s) used by the Ocean cluster.",
                                "items": {
                                  "type": "string",
                                  "example": "us-west1-a"
                                }
                              },
                              "instanceTypes": {
                                "type": "object",
                                "description": "The type of instances that may or may not be a part of the Ocean cluster.",
                                "properties": {
                                  "whitelist": {
                                    "type": "array",
                                    "description": "Instance types allowed in the Ocean cluster.\n",
                                    "items": {
                                      "type": "string",
                                      "example": [
                                        "n1-standard-2"
                                      ]
                                    }
                                  }
                                }
                              },
                              "launchSpecification": {
                                "type": "object",
                                "required": [
                                  "sourceImage",
                                  "tags",
                                  "metadata",
                                  "serviceAccount"
                                ],
                                "properties": {
                                  "sourceImage": {
                                    "type": "string",
                                    "description": "URL of the image used to launch the instances.",
                                    "example": "https://www.googleapis.com/compute/v1/projects/gke-node-images/global/images/gke-1117-gke12-cos-69-10895-138-0-v190225-pre"
                                  },
                                  "metadata": {
                                    "type": "object",
                                    "description": "Set array of cluster metadata.\n",
                                    "properties": {
                                      "key": {
                                        "type": "string",
                                        "description": "Key of metadata key pair.\n",
                                        "example": "example_key1"
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Value of metadata key pair.\n",
                                        "example": "exmample_value1"
                                      }
                                    }
                                  },
                                  "tags": {
                                    "type": "array",
                                    "description": "Array of tags to instances launched in Ocean cluster.",
                                    "items": {
                                      "type": "string",
                                      "example": [
                                        "gke-test-native-vpc-5cb557f7-node"
                                      ]
                                    }
                                  },
                                  "ipForwarding": {
                                    "type": "boolean",
                                    "example": true
                                  },
                                  "minCpuPlatform": {
                                    "type": "string",
                                    "description": "Set instance CPU platform.\n",
                                    "example": "Intel Sandy Bridge"
                                  },
                                  "serviceAccount": {
                                    "type": "string",
                                    "example": "265168459660-compute@developer.gserviceaccount.com",
                                    "description": "The service account used by applications running on the VM to call GCP APIs.\n"
                                  },
                                  "labels": {
                                    "type": "array",
                                    "description": "Set labels on cluster. Can set up to 60 labels\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string",
                                          "example": "spotinst-gke-original-node-pool"
                                        },
                                        "value": {
                                          "type": "string",
                                          "example": "test-native-vpc__default-pool"
                                        }
                                      }
                                    }
                                  },
                                  "rootVolumeSizeInGb": {
                                    "type": "integer",
                                    "description": "Optionally set root size (GB). Value should be greater than or equal to 100.",
                                    "example": 100
                                  },
                                  "rootVolumeType": {
                                    "type": "string",
                                    "description": "Set the root volume disk type.",
                                    "example": "pd-standard",
                                    "enum": [
                                      "pd-standard",
                                      "pd-ssd"
                                    ]
                                  },
                                  "shieldedInstanceConfig": {
                                    "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec~1%7BoceanLaunchSpecId%7D/put/requestBody/content/application~1json/schema/properties/launchSpec/properties/shieldedInstanceConfig"
                                  }
                                }
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2021-03-17T08:13:08.000Z",
                            "description": "A timestamp of the Ocean creation.\n"
                          },
                          "updatedAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2021-03-17T15:06:13.000Z",
                            "description": "A timestamp of the latest Ocean update.\n"
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "cluster": {
                        "type": "object",
                        "required": [
                          "name"
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/gcp/k8s/cluster"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1gcp~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:gcp:k8s"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Clusters",
        "description": "List the configurations for all Ocean clusters in the specified account.\n",
        "operationId": "OceanGKEClusterList",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean GKE List Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/gcp/k8s/cluster"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1gcp~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:gcp:k8s"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/gcp/k8s/cluster/{oceanClusterId}": {
      "delete": {
        "summary": "Delete Cluster",
        "description": "Delete a specified Ocean cluster.\n",
        "operationId": "OceanGKEClusterDelete",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean GKE Delete Cluster Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/gcp/k8s/cluster/o-abcd1234"
                            },
                            "method": {
                              "example": "DELETE"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get Cluster",
        "description": "Get the configuration for a specified Ocean cluster.\n",
        "operationId": "OceanGKEClusterGet",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean GKE Get Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/gcp/k8s/cluster/o-abcd1234"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1gcp~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:gcp:k8s"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Cluster",
        "description": "All Ocean parameters are updatable, excluding the Name and controllerClusterId. <br /> This API supports partial updates, so specific fields can be updated separately.\n",
        "operationId": "OceanGKEClusterUpdate",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/paths/~1ocean~1gcp~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean GKE Update Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/gcp/k8s/cluster/o-abcd1234"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1gcp~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:gcp:k8s"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/gcp/k8s/cluster/{oceanClusterId}/reImport": {
      "put": {
        "summary": "Reimport Cluster",
        "description": "Reimport the cluster's configuration from GKE.\n",
        "operationId": "reImportGke",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Reimport cluster response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/gcp/k8s/cluster/o-12345abc/reImport"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "cluster": {
                                    "type": "object",
                                    "properties": {
                                      "oceanId": {
                                        "type": "string",
                                        "description": "The identifier of the Ocean cluster.\n",
                                        "example": "o-12345abc"
                                      },
                                      "associatedClusterName": {
                                        "type": "string",
                                        "description": "The name of the corresponding GKE cluster.\n",
                                        "example": "gke-cluster"
                                      },
                                      "isUpdated": {
                                        "type": "boolean",
                                        "description": "If `true`, then the Ocean's configuration was updated.\n",
                                        "example": true
                                      },
                                      "launchSpecs": {
                                        "type": "array",
                                        "description": "Shows the Ocean's virtual node groups and their update status.\n",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "launchSpecId": {
                                              "type": "string",
                                              "example": "ols-12345abc",
                                              "description": "The identifier of the virtual node group.\n"
                                            },
                                            "associatedNodePool": {
                                              "type": "string",
                                              "description": "The virtual node group's associated node pool in GKE.\n",
                                              "example": "default-pool"
                                            },
                                            "isUpdated": {
                                              "type": "boolean",
                                              "description": "If `true`, then the virtual node group's configuration was updated.\n",
                                              "example": true
                                            }
                                          }
                                        },
                                        "example": [
                                          {
                                            "launchSpecId": "ols-12345abc",
                                            "associatedNodePool": "default-pool",
                                            "isUpdated": true
                                          },
                                          {
                                            "launchSpecId": "ols-98765cba",
                                            "associatedNodePool": "pool-1",
                                            "isUpdated": false
                                          }
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:gcp:k8s"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/gcp/k8s/cluster/{oceanClusterId}/log": {
      "summary": "Ocean for GKE",
      "get": {
        "summary": "Get Elastilog",
        "description": "Get group’s Elastilog by \n",
        "operationId": "oceanGkeFetchLog",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1mcs~1ecs~1cluster~1%7BclusterName%7D~1costs/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1mcs~1ecs~1cluster~1%7BclusterName%7D~1costs/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1log/get/parameters/4"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1log/get/parameters/5"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1log/get/parameters/6"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Get Log Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request": {
                      "type": "object",
                      "description": "Original request properties.\n",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "3213f42e-455e-4801-a185-cd3eb65fac5f",
                          "description": "Unique identifier associated with this request.\n"
                        },
                        "url": {
                          "type": "string",
                          "example": "/ocean/gcp/k8s/cluster/o-e0a2bd7c/log?fromDate=2020-10-06&toDate=2020-10-08&severity=ALL&limit=500",
                          "description": "The URL that was used for the request.\n"
                        },
                        "method": {
                          "type": "string",
                          "example": "GET",
                          "description": "The HTTP **METHOD** used for the request.\n"
                        },
                        "timestamp": {
                          "type": "string",
                          "example": "2020-10-05T16:20:38.579Z",
                          "description": "When the request was received by Spot.\n"
                        }
                      }
                    },
                    "response": {
                      "type": "object",
                      "description": "Response package that includes status, type, and any relevant data.\n",
                      "properties": {
                        "status": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "integer",
                              "example": "200",
                              "description": "HTTP status code assigned to this response.\n"
                            },
                            "message": {
                              "type": "string",
                              "example": "OK",
                              "description": "HTTP status message for the respective status code.\n"
                            }
                          }
                        },
                        "kind": {
                          "type": "string",
                          "example": "spotinst:ocean:cluster:log"
                        },
                        "items": {
                          "type": "array",
                          "description": "Array of data objects.\n",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              },
                              "severity": {
                                "type": "string"
                              },
                              "createdAt": {
                                "type": "string"
                              }
                            }
                          },
                          "example": [
                            {
                              "message": "Ocean o-e0a2bd7c successfully created.",
                              "severity": "INFO",
                              "createdAt": "2020-10-07T09:51:12.000Z"
                            }
                          ]
                        },
                        "count": {
                          "type": "integer",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/gcp/k8s/cluster/{oceanClusterId}/rightSizing/suggestion": {
      "post": {
        "summary": "Get Right Sizing Recommendations",
        "description": "Get right-sizing recommendations for an Ocean cluster and filter them according to namespace or label.\n",
        "operationId": "oceanGkeGetRightSizingRecommendationsWithFilter",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D~1rightSizing~1suggestion/post/requestBody/content/application~1json/schema/allOf/0"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean RightSizing Recommendation Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "integer",
                              "example": 200
                            },
                            "message": {
                              "type": "string",
                              "example": "OK"
                            }
                          }
                        },
                        "kind": {
                          "type": "string",
                          "example": "spotinst:ocean:aws:k8s:cluster:rightSizing:resourceSuggestion"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "resourceName": {
                                "type": "string",
                                "example": "dns-controller"
                              },
                              "resourceType": {
                                "type": "string",
                                "example": "deployment"
                              },
                              "namespace": {
                                "type": "string",
                                "example": "kube-system"
                              },
                              "suggestedCPU": {
                                "type": "integer",
                                "example": 1
                              },
                              "suggestedMemory": {
                                "type": "integer",
                                "example": 19
                              },
                              "requestedCPU": {
                                "type": "integer",
                                "example": 50
                              },
                              "requestedMemory": {
                                "type": "integer",
                                "example": 50
                              }
                            }
                          },
                          "example": [
                            {
                              "resourceName": "dns-controller",
                              "resourceType": "deployment",
                              "namespace": "kube-system",
                              "suggestedCPU": 1,
                              "suggestedMemory": 19,
                              "requestedCPU": 50,
                              "requestedMemory": 50
                            },
                            {
                              "resourceName": "kube-dns",
                              "resourceType": "daemonSet",
                              "namespace": "kube-system",
                              "suggestedCPU": 2,
                              "suggestedMemory": 20,
                              "requestedCPU": 10,
                              "requestedMemory": 30
                            }
                          ]
                        },
                        "count": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/gcp/k8s/launchSpec": {
      "summary": "Ocean for GKE",
      "post": {
        "summary": "Create VNG",
        "description": "Create a virtual node group.\n",
        "operationId": "OceanGKELaunchSpecCreate",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "launchSpec"
                    ],
                    "properties": {
                      "launchSpec": {
                        "type": "object",
                        "description": "Ocean Cluster Virtual Node Group (VNG).\n",
                        "required": [
                          "oceanId",
                          "sourceImage"
                        ],
                        "properties": {
                          "oceanId": {
                            "type": "string",
                            "example": "o-1fff54ed",
                            "description": "The Ocean cluster identifier. Required to create the virtual node group.\n"
                          },
                          "name": {
                            "type": "string",
                            "example": "lp_name",
                            "description": "Set the name for the virtual node group.\n"
                          },
                          "sourceImage": {
                            "type": "string",
                            "example": "https://www.googleapis.com/compute/v1/projects/gke-node-images/global/images/container-v1-3-v20160517",
                            "description": "Set the image URL. Can be null.\n"
                          },
                          "serviceAccount": {
                            "type": "string",
                            "example": "265168459660-compute@developer.gserviceaccount.com",
                            "description": "The account used by applications running on the VM to call GCP APIs.\n"
                          },
                          "rootVolumeSize": {
                            "type": "integer",
                            "description": "Set root volume size (in GB).",
                            "example": 8
                          },
                          "rootVolumeType": {
                            "type": "string",
                            "description": "Set the root volume disk type.",
                            "example": "pd-standard",
                            "enum": [
                              "pd-standard",
                              "pd-ssd"
                            ]
                          },
                          "metadata": {
                            "type": "array",
                            "required": [
                              "key",
                              "value"
                            ],
                            "description": "Add metadata to the cluster.\n",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string",
                                  "description": "Set the metadata key. Required for launchSpec.metadata.",
                                  "example": "key1"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Set the metadata name. Required for launchSpec.metadata.",
                                  "example": "value1"
                                }
                              }
                            },
                            "example": [
                              {
                                "key": "key1",
                                "value": "value1"
                              },
                              {
                                "key": "key2",
                                "value": "value2"
                              }
                            ]
                          },
                          "instanceTypes": {
                            "type": "array",
                            "description": "An array of supported machine types for the virtual node group. Can be null.\n",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "n1-standard-1",
                              "n1-standard-2"
                            ]
                          },
                          "availabilityZones": {
                            "type": "array",
                            "description": "An array holding availability zones, this configures the availability zones the Ocean may launch instances in per VNG. Can be null.\n",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "us-central1-a",
                              "us-central1-b"
                            ]
                          },
                          "taints": {
                            "type": "array",
                            "description": "Add taints to the virtual node group.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string",
                                  "description": "Set taint key."
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Set taint value."
                                },
                                "effect": {
                                  "type": "string",
                                  "description": "Set taint effect."
                                }
                              }
                            },
                            "example": [
                              {
                                "key": "taintKey",
                                "value": "taintValue",
                                "effect": "NoSchedule"
                              }
                            ]
                          },
                          "labels": {
                            "type": "array",
                            "description": "An array of labels to add to the virtual node group. Only custom user labels are allowed, and not Kubernetes built-in labels or Spot internal labels.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string",
                                  "description": "Set label key.\\\nThe following are not allowed:\n* \"kubernetes.io/hostname\"\n* \"failure-domain.beta.kubernetes.io/zone\"\n* \"topology.kubernetes.io/zone\"\n* \"failure-domain.beta.kubernetes.io/region\"\n* \"topology.kubernetes.io/region\"\n* \"beta.kubernetes.io/instance-type\"\n* \"node.kubernetes.io/instance-type\"\n* \"beta.kubernetes.io/os\"\n* \"kubernetes.io/os\"\n* \"beta.kubernetes.io/arch\"\n* \"kubernetes.io/arch\"\n* \"spotinst.io/node-lifecycle\"\n* \"spotinst.io/gpu-type\"\n"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Set label value."
                                }
                              }
                            },
                            "example": [
                              {
                                "key": "env",
                                "value": "test"
                              }
                            ]
                          },
                          "autoScale": {
                            "type": "object",
                            "properties": {
                              "headrooms": {
                                "type": "array",
                                "description": "Set custom headroom per virtual node group. Provide a list of launchSpec.autoScale.headroom objects.\n",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "cpuPerUnit": {
                                      "type": "integer",
                                      "description": "Configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.\n",
                                      "example": 1000
                                    },
                                    "memoryPerUnit": {
                                      "type": "integer",
                                      "description": "Configure the amount of memory (MiB) to allocate the headroom.\n",
                                      "example": 2048
                                    },
                                    "gpuPerUnit": {
                                      "type": "integer",
                                      "description": "The amount of GPU to allocate per headroom unit.\n",
                                      "example": 0
                                    },
                                    "numOfUnits": {
                                      "type": "integer",
                                      "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n",
                                      "example": 3
                                    }
                                  }
                                }
                              },
                              "autoHeadroomPercentage": {
                                "type": "integer",
                                "description": "Number between 0-200 to control the headroom % of the specific Virtual Node Group. Effective when cluster.autoScaler.isAutoConfig=true is set on the Ocean cluster\n",
                                "example": 20
                              }
                            }
                          },
                          "resourceLimits": {
                            "type": "object",
                            "properties": {
                              "maxInstanceCount": {
                                "description": "Option to set a maximum number of instances per virtual node group. Can be null. If set, the value must be greater than or equal to 0.\n",
                                "type": "integer",
                                "example": 5
                              },
                              "minInstanceCount": {
                                "description": "Option to set a minimum number of instances per virtual node group.\\\nCan be null. If set, value must be greater than or equal to 0.\n",
                                "type": "integer",
                                "example": 2
                              }
                            }
                          },
                          "restrictScaleDown": {
                            "type": "boolean",
                            "description": "When set to True, VNG nodes will be treated as if all pods running have the [restrict-scale-down label](https://docs.spot.io/ocean/features/labels-and-taints).\nTherefore, Ocean will not scale nodes down unless they are empty.\n",
                            "example": false
                          },
                          "shieldedInstanceConfig": {
                            "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec~1%7BoceanLaunchSpecId%7D/put/requestBody/content/application~1json/schema/properties/launchSpec/properties/shieldedInstanceConfig"
                          },
                          "strategy": {
                            "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec~1%7BoceanLaunchSpecId%7D/put/requestBody/content/application~1json/schema/properties/launchSpec/properties/strategy"
                          },
                          "storage": {
                            "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec~1%7BoceanLaunchSpecId%7D/put/requestBody/content/application~1json/schema/properties/launchSpec/properties/storage"
                          },
                          "scheduling": {
                            "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec~1%7BoceanLaunchSpecId%7D/put/requestBody/content/application~1json/schema/properties/launchSpec/properties/scheduling"
                          },
                          "createdAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2019-06-03T08:13:08.000Z"
                          },
                          "updatedAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2019-06-10T15:06:13.000Z"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Launch Spec Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/gcp/k8s/launchSpec"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec/post/requestBody/content/application~1json/schema/allOf/0/properties/launchSpec"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:gcp:k8s:launchSpec"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List VNGs",
        "operationId": "OceanGKELaunchSpecList",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1launchSpec/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Launch Spec Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/gcp/k8s/launchSpec"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec/post/requestBody/content/application~1json/schema/allOf/0/properties/launchSpec"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:gcp:k8s:launchSpec"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/gcp/k8s/launchSpec/import": {
      "summary": "Ocean for GKE",
      "post": {
        "summary": "Import GKE Node Pool To VNG",
        "description": "Returns an Ocean Virtual Node Group (VNG) configuration based on a given GCP GKE Cluster Node Pool.\\\nThe returned value (\"Imported VNG\") can then be used as input to the Create VNG API in order to create an actual VNG in your Ocean cluster.\n",
        "operationId": "oceanGkeImportNodePoolToLaunchSpec",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1launchSpec/get/parameters/1"
          },
          {
            "in": "query",
            "name": "nodePoolName",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "test",
            "description": "Name of the Node Pool.\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Launch Spec Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/gcp/k8s/launchSpec/import"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Ocean Cluster Virtual Node Group (VNG).\n",
                                "required": [
                                  "oceanId",
                                  "sourceImage"
                                ],
                                "properties": {
                                  "oceanId": {
                                    "type": "string",
                                    "example": "o-1fff54ed",
                                    "description": "The Ocean cluster identifier. Required to create the virtual node group.\n"
                                  },
                                  "sourceImage": {
                                    "type": "string",
                                    "example": "https://www.googleapis.com/compute/v1/projects/gke-node-images/global/images/container-v1-3-v20160517",
                                    "description": "Set the image URL. Can be null.\n"
                                  },
                                  "serviceAccount": {
                                    "type": "string",
                                    "example": "265168459660-compute@developer.gserviceaccount.com",
                                    "description": "The account used by applications running on the VM to call GCP APIs.\n"
                                  },
                                  "rootVolumeType": {
                                    "type": "string",
                                    "description": "Set the root volume disk type.",
                                    "example": "pd-standard",
                                    "enum": [
                                      "pd-standard",
                                      "pd-ssd"
                                    ]
                                  },
                                  "metadata": {
                                    "type": "array",
                                    "required": [
                                      "key",
                                      "value"
                                    ],
                                    "description": "Add metadata to the cluster.\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string",
                                          "description": "Set the metadata key. Required for launchSpec.metadata.",
                                          "example": "key1"
                                        },
                                        "value": {
                                          "type": "string",
                                          "description": "Set the metadata name. Required for launchSpec.metadata.",
                                          "example": "value1"
                                        }
                                      }
                                    },
                                    "example": [
                                      {
                                        "key": "key1",
                                        "value": "value1"
                                      },
                                      {
                                        "key": "key2",
                                        "value": "value2"
                                      }
                                    ]
                                  },
                                  "availabilityZones": {
                                    "type": "array",
                                    "description": "An array holding availability zones, this configures the availability zones the Ocean may launch instances in per VNG. Can be null.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "example": [
                                      "us-central1-a",
                                      "us-central1-b"
                                    ]
                                  },
                                  "taints": {
                                    "type": "array",
                                    "description": "Add taints to the virtual node group.",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string",
                                          "description": "Set taint key."
                                        },
                                        "value": {
                                          "type": "string",
                                          "description": "Set taint value."
                                        },
                                        "effect": {
                                          "type": "string",
                                          "description": "Set taint effect."
                                        }
                                      }
                                    },
                                    "example": [
                                      {
                                        "key": "taintKey",
                                        "value": "taintValue",
                                        "effect": "NoSchedule"
                                      }
                                    ]
                                  },
                                  "labels": {
                                    "type": "array",
                                    "description": "An array of labels to add to the virtual node group. Only custom user labels are allowed, and not Kubernetes built-in labels or Spot internal labels.",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string",
                                          "description": "Set label key.\\\nThe following are not allowed:\n* \"kubernetes.io/hostname\"\n* \"failure-domain.beta.kubernetes.io/zone\"\n* \"topology.kubernetes.io/zone\"\n* \"failure-domain.beta.kubernetes.io/region\"\n* \"topology.kubernetes.io/region\"\n* \"beta.kubernetes.io/instance-type\"\n* \"node.kubernetes.io/instance-type\"\n* \"beta.kubernetes.io/os\"\n* \"kubernetes.io/os\"\n* \"beta.kubernetes.io/arch\"\n* \"kubernetes.io/arch\"\n* \"spotinst.io/node-lifecycle\"\n* \"spotinst.io/gpu-type\"\n"
                                        },
                                        "value": {
                                          "type": "string",
                                          "description": "Set label value."
                                        }
                                      }
                                    },
                                    "example": [
                                      {
                                        "key": "env",
                                        "value": "test"
                                      }
                                    ]
                                  },
                                  "shieldedInstanceConfig": {
                                    "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec~1%7BoceanLaunchSpecId%7D/put/requestBody/content/application~1json/schema/properties/launchSpec/properties/shieldedInstanceConfig"
                                  },
                                  "storage": {
                                    "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec~1%7BoceanLaunchSpecId%7D/put/requestBody/content/application~1json/schema/properties/launchSpec/properties/storage"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:gcp:k8s:launchSpec"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/gcp/k8s/launchSpec/{oceanLaunchSpecId}": {
      "summary": "Ocean for GKE",
      "delete": {
        "summary": "Delete VNG",
        "description": "Delete a specified virtual node group in an Ocean cluster.\n",
        "operationId": "OceanGKELaunchSpecDelete",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec~1%7BoceanLaunchSpecId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1launchSpec~1%7BoceanLaunchSpecId%7D/delete/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Launch Specification Delete Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/gcp/k8s/launchSpec/ols-12345abc"
                            },
                            "method": {
                              "example": "DELETE"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update VNG",
        "description": "All Ocean parameters in a virtual node group are updatable.\n",
        "operationId": "OceanGKELaunchSpecUpdate",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec~1%7BoceanLaunchSpecId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "launchSpec"
                ],
                "properties": {
                  "launchSpec": {
                    "type": "object",
                    "title": "GKE Cluster",
                    "properties": {
                      "oceanId": {
                        "type": "string",
                        "example": "o-1fff54ed",
                        "description": "The Ocean cluster identifier. Required to create the virtual node group.\n"
                      },
                      "name": {
                        "type": "string",
                        "example": "lp_name",
                        "description": "Set name for the virtual node group.\n"
                      },
                      "sourceImage": {
                        "type": "string",
                        "example": "https://www.googleapis.com/compute/v1/projects/gke-node-images/global/images/container-v1-3-v20160517",
                        "description": "Set image URL. Can be null.\n"
                      },
                      "rootVolumeSize": {
                        "type": "integer",
                        "description": "Set root volume size (in GB).",
                        "example": 8
                      },
                      "metadata": {
                        "type": "array",
                        "required": [
                          "key",
                          "value"
                        ],
                        "description": "Add metadata to the cluster.\n",
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "Set the metadata key. Required for launchSpec.metadata.",
                              "example": "key1"
                            },
                            "value": {
                              "type": "string",
                              "description": "Set the metadata name. Required for launchSpec.metadata.",
                              "example": "value1"
                            }
                          }
                        },
                        "example": [
                          {
                            "key": "key1",
                            "value": "value1"
                          },
                          {
                            "key": "key2",
                            "value": "value2"
                          }
                        ]
                      },
                      "instanceTypes": {
                        "type": "array",
                        "description": "An array of supported machine types for the virtual node group. Can be null.\n",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "n1-standard-1",
                          "n1-standard-2"
                        ]
                      },
                      "availabilityZones": {
                        "type": "array",
                        "description": "An array holding availability zones, this configures the availability zones the Ocean may launch instances in per VNG. Can be null.\n",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "us-central1-a",
                          "us-central1-b"
                        ]
                      },
                      "taints": {
                        "type": "array",
                        "description": "Add taints to virtual node group.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "Set taint key."
                            },
                            "value": {
                              "type": "string",
                              "description": "Set taint value."
                            },
                            "effect": {
                              "type": "string",
                              "description": "Set taint effect."
                            }
                          }
                        },
                        "example": [
                          {
                            "key": "taintKey",
                            "value": "taintValue",
                            "effect": "NoSchedule"
                          }
                        ]
                      },
                      "labels": {
                        "type": "array",
                        "description": "An array of labels to add to the virtual node group. Only custom user labels are allowed, and not Kubernetes built-in labels or Spot internal labels.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "Set label key.\\\nThe following are not allowed:\n* \"kubernetes.io/hostname\"\n* \"failure-domain.beta.kubernetes.io/zone\"\n* \"topology.kubernetes.io/zone\"\n* \"failure-domain.beta.kubernetes.io/region\"\n* \"topology.kubernetes.io/region\"\n* \"beta.kubernetes.io/instance-type\"\n* \"node.kubernetes.io/instance-type\"\n* \"beta.kubernetes.io/os\"\n* \"kubernetes.io/os\"\n* \"beta.kubernetes.io/arch\"\n* \"kubernetes.io/arch\"\n* \"spotinst.io/node-lifecycle\"\n* \"spotinst.io/gpu-type\"\n"
                            },
                            "value": {
                              "type": "string",
                              "description": "Set label value."
                            }
                          }
                        },
                        "example": [
                          {
                            "key": "env",
                            "value": "test"
                          }
                        ]
                      },
                      "autoScale": {
                        "type": "object",
                        "properties": {
                          "headroom": {
                            "type": "object",
                            "description": "Set custom headroom per virtual node group. Provide a list of launchSpec.autoScale.headroom objects.\n",
                            "properties": {
                              "cpuPerUnit": {
                                "type": "integer",
                                "description": "Configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.\n",
                                "example": 1000
                              },
                              "memoryPerUnit": {
                                "type": "integer",
                                "description": "Configure the amount of memory (MiB) to allocate the headroom.\n",
                                "example": 2048
                              },
                              "gpuPerUnit": {
                                "type": "integer",
                                "description": "The amount of GPU allocate per headroom unit.\n",
                                "example": 0
                              },
                              "numOfUnits": {
                                "type": "integer",
                                "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n",
                                "example": 3
                              }
                            }
                          },
                          "autoHeadroomPercentage": {
                            "type": "integer",
                            "description": "Number between 0-200 to control the headroom % of the specific Virtual Node Group. Effective when cluster.autoScaler.isAutoConfig=true is set on the Ocean cluster.\n",
                            "example": 20
                          }
                        }
                      },
                      "resourceLimits": {
                        "type": "object",
                        "properties": {
                          "maxInstanceCount": {
                            "description": "Option to set a maximum number of nodes per virtual node group. Can be null. If set, the value must be greater than or equal to 0.\n",
                            "type": "integer",
                            "example": 5
                          },
                          "minInstanceCount": {
                            "description": "Option to set a minimum number of instances per virtual node group.\\\nCan be null. If set, value must be greater than or equal to 0.\n",
                            "type": "integer",
                            "example": 2
                          }
                        }
                      },
                      "restrictScaleDown": {
                        "type": "boolean",
                        "description": "When set to True, VNG nodes will be treated as if all pods running have the [restrict-scale-down label](https://docs.spot.io/ocean/features/labels-and-taints).\nTherefore, Ocean will not scale nodes down unless they are empty.\n",
                        "example": false
                      },
                      "shieldedInstanceConfig": {
                        "type": "object",
                        "title": "shielded-instance-config",
                        "description": "The Ocean shielded instance configuration object.\n",
                        "properties": {
                          "enableSecureBoot": {
                            "type": "boolean",
                            "description": "Enable the secure boot parameter on the GCP instances.\n",
                            "example": true
                          },
                          "enableIntegrityMonitoring": {
                            "type": "boolean",
                            "description": "Enable the integrity monitoring parameter on the GCP instances.\n",
                            "example": true
                          }
                        }
                      },
                      "strategy": {
                        "type": "object",
                        "title": "strategy",
                        "description": "The Ocean virtual node group strategy object.\n",
                        "properties": {
                          "preemptiblePercentage": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 100,
                            "default": 100,
                            "description": "The desired percentage of Spot/Preemptible instances out of all running instances for this VNG.\\\nOnly available when the field is **not** set in the cluster directly (cluster.strategy.preemptiblePercentage).\n",
                            "example": 80
                          }
                        }
                      },
                      "storage": {
                        "type": "object",
                        "title": "storage",
                        "description": "The Ocean virtual node group storage object.\n",
                        "properties": {
                          "localSsdCount": {
                            "type": "integer",
                            "description": "Defines the number of local SSDs to be attached per node for this VNG.\n\nIf instanceTypes are configured in this VNG, **all of them** must support the value of localSsdCount.\nOtherwise, if the Ocean cluster has instanceTypes on a permit list, **at least one** must support the value of localSsdCount.\n\nFor more information about local SSDs, it is recommended to review the GCP documentation:\n* [GCP Local SSD](https://cloud.google.com/compute/docs/disks#localssds)\n* [Local SSDs and machine types](https://cloud.google.com/compute/docs/disks#local_ssd_machine_type_restrictions)\n* [GKE Using local SSDs](https://cloud.google.com/kubernetes-engine/docs/how-to/persistent-volumes/local-ssd#use)\n",
                            "example": 2
                          }
                        }
                      },
                      "scheduling": {
                        "type": "object",
                        "description": "An object used to define scheduled tasks such as a manual headroom update.\n",
                        "title": "Ocean Scheduling",
                        "properties": {
                          "tasks": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Task Definition",
                              "required": [
                                "isEnabled",
                                "cronExpression",
                                "taskType"
                              ],
                              "properties": {
                                "isEnabled": {
                                  "type": "boolean",
                                  "example": true,
                                  "description": "Describes whether the task is enabled. When True, the task runs. When False, it does not run. Required for launchSpec.scheduling.tasks. In case automatic headroom is configured, please make sure to set autoScaler.enableAutomaticAndManualHeadroom on Ocean level to true in order to make sure that the manual headroom would be affective.\n"
                                },
                                "cronExpression": {
                                  "type": "string",
                                  "example": "0 1 * * *",
                                  "description": "A valid cron expression. For example : \" * * * * * \". The cron job runs in UTC time and is in Unix cron format. (See the Cron Expression Validator Script.)\n"
                                },
                                "taskType": {
                                  "type": "string",
                                  "example": "manualHeadroomUpdate",
                                  "enum": [
                                    "manualHeadroomUpdate"
                                  ],
                                  "description": "The activity that you are scheduling. Valid values: \"manualHeadroomUpdate\". Required for launchSpec.scheduling.tasks.\n"
                                },
                                "config": {
                                  "description": "The config of this scheduled task. Depends on the value of `taskType`.",
                                  "oneOf": [
                                    {
                                      "type": "object",
                                      "title": "manualHeadroomUpdate",
                                      "required": [
                                        "headrooms"
                                      ],
                                      "properties": {
                                        "headrooms": {
                                          "description": "Set custom headroom per VNG. Provide a list of launchSpec.autoscale.headroom objects.\n",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "cpuPerUnit": {
                                                "description": "Configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.\n",
                                                "type": "integer"
                                              },
                                              "memoryPerUnit": {
                                                "description": "Configure the amount of memory (MiB) to allocate the headroom.\n",
                                                "type": "integer"
                                              },
                                              "numOfUnits": {
                                                "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n",
                                                "type": "integer"
                                              },
                                              "gpuPerUnit": {
                                                "type": "integer",
                                                "description": "Amont of GPU to allocate for headroom unit.\n"
                                              }
                                            }
                                          },
                                          "example": [
                                            {
                                              "cpuPerUnit": 1024,
                                              "memoryPerUnit": 512,
                                              "gpuPerUnit": 0,
                                              "numOfUnits": 1
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Launch Spec Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/gcp/k8s/launchSpec/ols-12345abc"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec/post/requestBody/content/application~1json/schema/allOf/0/properties/launchSpec"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:gcp:k8s:launchSpec"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get VNG",
        "operationId": "OceanGKELaunchSpecGet",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec~1%7BoceanLaunchSpecId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Launch Spec Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/gcp/k8s/launchSpec/ols-12345abc"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec/post/requestBody/content/application~1json/schema/allOf/0/properties/launchSpec"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:gcp:k8s:launchSpec"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/gcp/k8s/cluster/{oceanClusterId}/roll": {
      "summary": "Ocean for GKE",
      "post": {
        "summary": "Initiate Roll",
        "description": "Roll an entire Ocean cluster or roll subsets of the cluster by specifying launchSpecIds or instanceNames. Performing this request will start the roll immediately, and the roll will take place according to defined batches. <br /> <br /> Note that the first response for a successful request will notify about the start of a roll. In order to check the status of a roll, you can use the GET Cluster Roll API using the roll identifier.\n",
        "operationId": "oceanGkeRollInit",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "roll": {
                    "type": "object",
                    "description": "Settings for roll operation\n",
                    "properties": {
                      "batchSizePercentage": {
                        "type": "integer",
                        "description": "Value in % to set the size of the batches in the roll. Valid values are 0-100\n",
                        "example": 20
                      },
                      "comment": {
                        "description": "Add a breif description or comment about the roll. The comment should be limited to 256 chars.\n",
                        "type": "string",
                        "example": "This is why I deployed my cluster."
                      },
                      "respectPdb": {
                        "type": "boolean",
                        "example": true,
                        "default": false,
                        "description": "During the roll, if the parameter is set to True we honor PDB during the instance replacement.\n"
                      },
                      "batchMinHealthyPercentage": {
                        "type": "integer",
                        "description": "Indicates the threshold of minimum healthy instances in single batch. If the amount of healthy instances in single batch is under the threshold, the cluster roll will fail. If exists, the parameter value will be in range of 1-100. In case of null as value, the default value in the backend will be 50%. Value of param should represent the number in percentage (%) of the batch.\n",
                        "example": 100,
                        "default": 50
                      },
                      "launchSpecIds": {
                        "type": "array",
                        "description": "List of virtual node group identifiers to be rolled. Each identifier is a string. Can be null. Cannot be used together with instanceName.\n",
                        "items": {
                          "type": "string",
                          "example": [
                            "ols-76694a7d",
                            "ols-56694a76"
                          ]
                        }
                      },
                      "instanceNames": {
                        "type": "array",
                        "description": "List of instance names to be rolled. Each name is a string. instanceNames can be null. Cannot be used together with launchSpecIds.\n",
                        "items": {
                          "type": "string",
                          "example": [
                            "i-0003a99ffb566f039",
                            "i-0567a99ffb566f765"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cluster Roll Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rollId": {
                      "type": "string",
                      "example": "roll-1234"
                    },
                    "oceanId": {
                      "type": "string",
                      "example": "o-12e31234"
                    },
                    "status": {
                      "type": "string",
                      "example": "IN_PROGRESS",
                      "enum": [
                        "IN_PROGRESS",
                        "COMPLETED",
                        "FAILED",
                        "STOPPED"
                      ]
                    },
                    "batchNumber": {
                      "type": "integer",
                      "example": 1
                    },
                    "numOfBatches": {
                      "type": "integer",
                      "example": 5
                    },
                    "comment": {
                      "type": "string",
                      "example": "This is why I deployed my cluster."
                    },
                    "respectPdb": {
                      "type": "boolean",
                      "example": true
                    },
                    "progress": {
                      "type": "object",
                      "properties": {
                        "unit": {
                          "type": "string",
                          "example": "percentage"
                        },
                        "value": {
                          "type": "integer",
                          "example": 0
                        },
                        "detailedStatus": {
                          "type": "object",
                          "properties": {
                            "oldInstances": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "instanceName": {
                                    "type": "string"
                                  },
                                  "status": {
                                    "type": "string"
                                  }
                                }
                              },
                              "example": [
                                {
                                  "instanceName": "sin-0a4becc0-sig-1234abcd",
                                  "status": "REPLACED"
                                },
                                {
                                  "instanceName": "sin-1a4becc0-sig-1234abcd",
                                  "status": "TO_BE_REPLACED"
                                },
                                {
                                  "instanceName": "sin-2a4becc0-sig-1234abcd",
                                  "status": "COULD_NOT_BE_REPLACED"
                                },
                                {
                                  "instanceName": "sin-3a4becc0-sig-1234abcd",
                                  "status": "NOT_REPLACED_DUE_TO_PDB"
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "instanceNames": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "sin-0a4becc0-sig-6952238d",
                        "sin-0542ecc0-sig-695223r4"
                      ]
                    },
                    "launchSpecIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "ols-76694a7d",
                        "ols-56694a76"
                      ]
                    },
                    "batchMinHealthyPercentage": {
                      "type": "integer",
                      "example": 100
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2019-03-24T15:46:09.000Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "example": "2019-03-24T15:46:09.000Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Rolls",
        "description": "Get status for all rolls of an Ocean cluster.\n",
        "operationId": "oceanGkeRollList",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Get List Of Rolls Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "integer",
                              "example": 200
                            },
                            "message": {
                              "type": "string",
                              "example": "OK"
                            }
                          }
                        },
                        "kind": {
                          "type": "string",
                          "example": "spotinst:ocean:aws:k8s:cluster:roll"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "scr-5aaf854e"
                              },
                              "status": {
                                "type": "string",
                                "example": "IN_PROGRESS",
                                "enum": [
                                  "IN_PROGRESS",
                                  "COMPLETED",
                                  "FAILED",
                                  "STOPPED"
                                ]
                              },
                              "currentBatch": {
                                "type": "integer",
                                "example": 2
                              },
                              "numOfBatches": {
                                "type": "integer",
                                "example": 2
                              },
                              "comment": {
                                "type": "string",
                                "example": "This is why I deployed my cluster."
                              },
                              "progress": {
                                "type": "object",
                                "properties": {
                                  "unit": {
                                    "type": "string",
                                    "example": "percentage"
                                  },
                                  "value": {
                                    "type": "integer",
                                    "example": 0
                                  },
                                  "detailedStatus": {
                                    "type": "object",
                                    "properties": {
                                      "oldInstances": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "instanceName": {
                                              "type": "string"
                                            },
                                            "status": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "example": [
                                          {
                                            "instanceName": "sin-0a4becc0-sig-1234abcd",
                                            "status": "REPLACED"
                                          },
                                          {
                                            "instanceName": "sin-1a4becc0-sig-1234abcd",
                                            "status": "TO_BE_REPLACED"
                                          },
                                          {
                                            "instanceName": "sin-2a4becc0-sig-1234abcd",
                                            "status": "COULD_NOT_BE_REPLACED"
                                          },
                                          {
                                            "instanceName": "sin-3a4becc0-sig-1234abcd",
                                            "status": "NOT_REPLACED_DUE_TO_PDB"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                }
                              },
                              "batchMinHealthyPercentage": {
                                "type": "integer",
                                "example": 100
                              },
                              "oceanId": {
                                "type": "string",
                                "example": "o-30681b13"
                              },
                              "launchSpecIds": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "example": [
                                    "ols-76694a7d",
                                    "ols-56694a76"
                                  ]
                                }
                              },
                              "respectPdb": {
                                "type": "boolean",
                                "example": true
                              },
                              "createdAt": {
                                "type": "string",
                                "example": "2019-03-24T15:46:09.000Z"
                              },
                              "updatedAt": {
                                "type": "string",
                                "example": "2019-03-24T15:46:09.000Z"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/gcp/k8s/cluster/{oceanClusterId}/roll/{ROLL_ID}": {
      "summary": "Ocean for GKE",
      "put": {
        "summary": "Update Roll",
        "description": "Update a roll of an Ocean cluster.\n\n*Performing the request will stop the next batch in a roll.*\n",
        "operationId": "oceanGkeRollUpdate",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll~1%7BROLL_ID%7D/put/parameters/2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "roll": {
                    "type": "object",
                    "description": "Object that specifies the parameters of a roll (also called a deployment).\n",
                    "properties": {
                      "status": {
                        "type": "string",
                        "enum": [
                          "STOPPED"
                        ],
                        "description": "Set status of a roll. Valid values: \"STOPPED\"\n",
                        "example": "STOPPED"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cluster Roll Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rollId": {
                      "type": "string",
                      "example": "roll-1234"
                    },
                    "status": {
                      "type": "string",
                      "example": "STOPPED",
                      "enum": [
                        "STOPPED"
                      ]
                    },
                    "batchNumber": {
                      "type": "integer",
                      "example": 1
                    },
                    "numOfBatches": {
                      "type": "integer",
                      "example": 5
                    },
                    "progress": {
                      "type": "object",
                      "properties": {
                        "unit": {
                          "type": "string",
                          "example": "percentage"
                        },
                        "value": {
                          "type": "integer",
                          "example": 0
                        },
                        "detailedStatus": {
                          "type": "object",
                          "properties": {
                            "oldInstances": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "instanceName": {
                                    "type": "string"
                                  },
                                  "status": {
                                    "type": "string"
                                  }
                                }
                              },
                              "example": [
                                {
                                  "instanceName": "sin-0a4becc0-sig-1234abcd",
                                  "status": "REPLACED"
                                },
                                {
                                  "instanceName": "sin-1a4becc0-sig-1234abcd",
                                  "status": "TO_BE_REPLACED"
                                },
                                {
                                  "instanceName": "sin-2a4becc0-sig-1234abcd",
                                  "status": "COULD_NOT_BE_REPLACED"
                                },
                                {
                                  "instanceName": "sin-3a4becc0-sig-1234abcd",
                                  "status": "NOT_REPLACED_DUE_TO_PDB"
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "batchMinHealthyPercentage": {
                      "type": "integer",
                      "example": 100
                    },
                    "oceanId": {
                      "type": "string",
                      "example": "o-12e31234"
                    },
                    "respectPdb": {
                      "type": "boolean",
                      "example": true
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2019-03-24T15:46:09.000Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "example": "2019-03-24T15:46:09.000Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get Roll",
        "description": "Get status for roll of an Ocean cluster.\n",
        "operationId": "oceanGkeRollGetSingleRoll",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll~1%7BROLL_ID%7D/put/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1gcp~1k8s~1cluster~1%7BoceanClusterId%7D~1roll/post/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/gcp/k8s/cluster/{oceanClusterId}/nodes": {
      "get": {
        "summary": "Get Cluster Nodes",
        "description": "Get nodes data of an Ocean cluster.\n",
        "operationId": "oceanGkeGetNodes",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D~1nodes/get/parameters/2"
          },
          {
            "in": "query",
            "name": "instanceName",
            "schema": {
              "type": "string"
            },
            "example": "sin-123",
            "description": "Get a specific node by instance name."
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean GKE Nodes Data Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/gcp/k8s/cluster/o-12345abc/nodes"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Ocean node data",
                                "description": "Node data of Ocean cluster.",
                                "properties": {
                                  "instanceName": {
                                    "type": "string",
                                    "example": "sin-123",
                                    "description": "The GCP instance name of this node.\n"
                                  },
                                  "instanceType": {
                                    "type": "string",
                                    "example": "n1-standard-2",
                                    "description": "The GCP instance type of this node.\n"
                                  },
                                  "availabilityZone": {
                                    "type": "string",
                                    "example": "us-central1-b",
                                    "description": "The GCP availability zone of this node.\n"
                                  },
                                  "launchSpecId": {
                                    "type": "string",
                                    "example": "ols-123",
                                    "description": "The node's launch spec id.\n"
                                  },
                                  "launchSpecName": {
                                    "type": "string",
                                    "example": "dev-launchSpec",
                                    "description": "The node's launch spec name.\n"
                                  },
                                  "lifeCycle": {
                                    "type": "string",
                                    "enum": [
                                      "Preemtible",
                                      "OD"
                                    ],
                                    "example": "Preemtible",
                                    "description": "The GCP lifeCycle of this node.\n"
                                  },
                                  "publicIp": {
                                    "type": "string",
                                    "example": "1.2.3.4",
                                    "description": "This node's public ip.\n"
                                  },
                                  "workloadRequestedMilliCpu": {
                                    "type": "number",
                                    "format": "double",
                                    "example": 1320,
                                    "description": "The amount of milli cpus requested by the kubernetes workload.\n"
                                  },
                                  "workloadRequestedMemoryInMiB": {
                                    "type": "number",
                                    "example": 500,
                                    "description": "The amount of memory in MiB requested by the kubernetes workload.\n"
                                  },
                                  "workloadRequestedGpu": {
                                    "type": "number",
                                    "example": 1,
                                    "description": "The amount of gpus requested by the kubernetes workload.\n"
                                  },
                                  "headroomRequestedMilliCpu": {
                                    "type": "number",
                                    "example": 1320,
                                    "description": "The amount of milli cpus saved for headroom.\n"
                                  },
                                  "headroomRequestedMemoryInMiB": {
                                    "type": "number",
                                    "example": 512,
                                    "description": "The amount of memory in MiB saved for headroom.\n"
                                  },
                                  "headroomRequestedGpu": {
                                    "type": "number",
                                    "example": 1,
                                    "description": "The amount of gpus saved for headroom.\n"
                                  },
                                  "allocatableMilliCpu": {
                                    "type": "number",
                                    "example": 2000,
                                    "description": "The amount of allocatable milli cpus as registered in kubernetes.\n"
                                  },
                                  "allocatableMemoryInMiB": {
                                    "type": "number",
                                    "example": 3646.1,
                                    "description": "The amount of allocatable memory in MiB as registered in kubernetes.\n"
                                  },
                                  "allocatableGpu": {
                                    "type": "number",
                                    "example": 1,
                                    "description": "The amount of allocatable gpus as registered in kubernetes.\n"
                                  },
                                  "nodeName": {
                                    "type": "string",
                                    "example": "node-1",
                                    "description": "The kubernetes node name.\n"
                                  },
                                  "registrationStatus": {
                                    "type": "string",
                                    "enum": [
                                      "Registered",
                                      "Registering",
                                      "Failed"
                                    ],
                                    "example": "Registered",
                                    "description": "The registration status of this node.\n"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "example": "2021-10-01T05:51:06.000Z",
                                    "description": "When was this node's instance was created at.\n"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:gcp:k8s:nodes"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/gcp/k8s/cluster/import": {
      "post": {
        "summary": "Upgrade Elastigroup To Ocean",
        "description": "\n**Prerequisites** | Perform the following validations prior to upgrade executions: | * Group identifier cannot be null. * Group identifier exists in Elastigroup. * Group should be a GKE Elastigroup with defined scaling policy. * Group identifier is already managed by Ocean.\n",
        "operationId": "oceanGkeUpgradeElastigroup",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1import/post/parameters/0"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "e1aba6b3-d1be-419f-b19a-9542e09716a5"
                        },
                        "url": {
                          "type": "string",
                          "example": "/ocean/gcp/k8s/cluster/import?groupId=o-210e0c0b?accountId=act-7461862f"
                        },
                        "method": {
                          "type": "string",
                          "example": "GET"
                        },
                        "timestamp": {
                          "type": "string",
                          "example": "2019-03-05T15:43:16.306Z"
                        }
                      }
                    },
                    "response": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "integer",
                              "example": 200
                            },
                            "message": {
                              "type": "string",
                              "example": "OK"
                            }
                          }
                        },
                        "kind": {
                          "type": "string",
                          "example": "spotinst:ocean:gcp:k8s"
                        },
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "o-9aa80ccb"
                            },
                            "name": {
                              "type": "string",
                              "example": "ocean test"
                            },
                            "controllerClusterId": {
                              "type": "string",
                              "example": "Test-5837c8ad1"
                            },
                            "gke": {
                              "type": "object",
                              "properties": {
                                "clusterName": {
                                  "type": "string",
                                  "example": "test-native-vpc"
                                },
                                "masterLocation": {
                                  "type": "string",
                                  "example": "us-central1-a"
                                }
                              }
                            },
                            "capacity": {
                              "type": "object",
                              "title": "Capacity Units",
                              "description": "Capacity specifications for the Ocean cluster.",
                              "properties": {
                                "minimum": {
                                  "type": "integer",
                                  "example": 0,
                                  "description": "The bottom limit of instances that the cluster can scale down to.\n"
                                },
                                "maximum": {
                                  "type": "integer",
                                  "default": 1000,
                                  "example": 3,
                                  "description": "The upper limit of instances that the cluster can scale up to.\n"
                                },
                                "target": {
                                  "type": "integer",
                                  "example": 3,
                                  "description": "Number of instances to launch and maintain in the cluster.\n"
                                }
                              }
                            },
                            "compute": {
                              "type": "object",
                              "properties": {
                                "networkInterfaces": {
                                  "type": "object",
                                  "description": "Settings for network interfaces.\n",
                                  "properties": {
                                    "network": {
                                      "type": "string",
                                      "example": "default"
                                    },
                                    "accessConfigs": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "example": "external-nat"
                                        },
                                        "type": {
                                          "type": "string",
                                          "description": "Possible values: ONE_TO_ONE_NAT\n",
                                          "example": "ONE_TO_ONE_NAT"
                                        }
                                      }
                                    },
                                    "aliasIpRanges": {
                                      "type": "object",
                                      "properties": {
                                        "ipCidrRange": {
                                          "type": "string",
                                          "description": "Required for the cluster.compute.networkInterfaces.aliasIpRanges object.\n",
                                          "example": "/24"
                                        },
                                        "subnetworkRangeName": {
                                          "type": "string",
                                          "description": "Required for the cluster.compute.networkInterfaces.aliasIpRanges object.\n",
                                          "example": "gke-test-native-vpc-pods-5cb557f7"
                                        }
                                      }
                                    }
                                  }
                                },
                                "subnetName": {
                                  "type": "string",
                                  "description": "Subnet identifier for the Ocean cluster.",
                                  "example": "default"
                                },
                                "instanceTypes": {
                                  "type": "object",
                                  "description": "The type of instances that may or may not be a part of the Ocean cluster.",
                                  "properties": {
                                    "whitelist": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "Instance types allowed in the Ocean cluster.\n",
                                      "example": [
                                        "n1-standard-2"
                                      ]
                                    }
                                  }
                                },
                                "launchSpecification": {
                                  "type": "object",
                                  "properties": {
                                    "sourceImage": {
                                      "type": "string",
                                      "description": "URL of the image used to launch the instances.",
                                      "example": "https://www.googleapis.com/compute/v1/projects/gke-node-images/global/images/gke-1117-gke12-cos-69-10895-138-0-v190225-pre"
                                    },
                                    "metadata": {
                                      "type": "object",
                                      "description": "Set array of cluster metadata.\n",
                                      "properties": {
                                        "key": {
                                          "type": "string",
                                          "description": "Key of metadata key-pair.\n",
                                          "example": "example_key1"
                                        },
                                        "value": {
                                          "type": "string",
                                          "description": "Value of metadata key-pair.\n",
                                          "example": "exmample_value1"
                                        }
                                      }
                                    },
                                    "tags": {
                                      "type": "array",
                                      "description": "Array of tags to instances launched in Ocean cluster.",
                                      "items": {
                                        "type": "string",
                                        "example": "gke-test-native-vpc-5cb557f7-node"
                                      }
                                    },
                                    "ipForwarding": {
                                      "type": "boolean",
                                      "example": true
                                    },
                                    "serviceAccount": {
                                      "type": "string",
                                      "example": "265168459660-compute@developer.gserviceaccount.com"
                                    },
                                    "labels": {
                                      "type": "array",
                                      "description": "Set labels on cluster. You can set up to 60 labels.\n",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "key": {
                                            "type": "string",
                                            "example": "spotinst-gke-original-node-pool"
                                          },
                                          "value": {
                                            "type": "string",
                                            "example": "test-native-vpc__default-pool"
                                          }
                                        }
                                      }
                                    },
                                    "rootVolumeSizeInGb": {
                                      "type": "integer",
                                      "description": "Optionally set root size (GB). Value should be greater than or equal to 100.",
                                      "example": 100
                                    }
                                  }
                                },
                                "availabilityZones": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "example": [
                                      "us-central1-a"
                                    ]
                                  }
                                }
                              }
                            },
                            "createdAt": {
                              "type": "string",
                              "example": "2018-11-05T12:55:50.000+0000"
                            },
                            "updatedAt": {
                              "type": "string",
                              "example": "2018-11-05T12:58:15.000+0000"
                            }
                          }
                        },
                        "count": {
                          "type": "integer",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/gcp/k8s/launchSpec/{oceanLaunchSpecId}/launchNodes": {
      "put": {
        "summary": "Launch Nodes In VNG",
        "description": "Launch nodes in virtual node group.\n",
        "operationId": "oceanGkeLaunchSpecLaunchNodes",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec~1%7BoceanLaunchSpecId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "launchRequest": {
                        "type": "object",
                        "title": "Ocean GKE Virtual Node Group Launch Request",
                        "required": [
                          "amount"
                        ],
                        "properties": {
                          "amount": {
                            "description": "The number of nodes to launch.\n",
                            "type": "integer",
                            "example": 5
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Virtual Node Group Launch Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/gcp/k8s/launchSpec/ols-12345abc/launchNodes"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "launchSpecId": {
                              "type": "string",
                              "example": "ols-f73821bc"
                            },
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "newInstances": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "instanceName": {
                                          "type": "string",
                                          "example": "sin-00b61aa5dde4-oesg-97499562",
                                          "description": "Name of the node launched.\n"
                                        },
                                        "availabilityZone": {
                                          "type": "string",
                                          "example": "us-west-2b",
                                          "description": "The availability zone the node is launched in.\n"
                                        },
                                        "instanceType": {
                                          "type": "string",
                                          "example": "c3.xlarge",
                                          "description": "Type of the launched node.\n"
                                        },
                                        "lifeCycle": {
                                          "type": "string",
                                          "example": "Preemptible",
                                          "description": "Preemptible or On Demand.\n"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:gcp:k8s:launchSpec:launchNodes"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/azure/k8s/cluster": {
      "summary": "Ocean for AKS",
      "post": {
        "summary": "Create Cluster",
        "description": "Creates an Ocean entity according to a given specification.\n\nPrerequisite:\n\nKubenet-based AKS clusters only: The permissions needed in the Azure managed service identity (MSI) for Ocean to use when provisioning new nodes should be adjusted. Run the displayed script on a workstation with an Owner permissions token for the Azure environment. [Learn more](https://docs.spot.io/ocean/getting-started/aks?id=additional-steps-for-kubenet-based-clusters).\n\nNotes:\n\n1. The Ocean Controller is used to monitor the cluster resources and report back to Ocean SaaS. A properly functioning controller is mandatory for Ocean to operate. To install the Controller, run the following script on a machine with kubectl command line tool installed and configured:\n\n```\n#!/usr/bin/env bash\ncurl -fsSL http://spotinst-public.s3.amazonaws.com/integrations/kubernetes/cluster-controller/scripts/init.sh | \\\nSPOTINST_TOKEN=<ENTER YOUR TOKEN HERE> \\\nSPOTINST_ACCOUNT=<ENTER YOUR SPOTINST ACCOUNT ID HERE> \\\nSPOTINST_CLUSTER_IDENTIFIER=<ENTER YOUR CLUSTER IDENTIFIER HERE> \\\nbash\n```\n\n2. It is recommended to import all necessary information from the existing AKS cluster using the Ocean [AKS Cluster Import](https://docs.spot.io/api/#operation/oceanAKSClusterImport) API call and use its output to create a fully configured Ocean cluster.\n",
        "operationId": "oceanAKSClusterCreate",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "cluster"
                    ],
                    "properties": {
                      "cluster": {
                        "type": "object",
                        "description": "The Ocean cluster.\n",
                        "required": [
                          "name",
                          "controllerClusterId",
                          "aks",
                          "virtualNodeGroupTemplate"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "readOnly": true,
                            "example": "o-134abcd",
                            "description": "Ocean cluster identifier.\n"
                          },
                          "name": {
                            "type": "string",
                            "example": "test",
                            "description": "Add a name for the Ocean cluster.\n"
                          },
                          "controllerClusterId": {
                            "type": "string",
                            "example": "test-123124",
                            "description": "Enter a unique Ocean cluster identifier. Cannot be updated.\n"
                          },
                          "aks": {
                            "type": "object",
                            "required": [
                              "name",
                              "resourceGroupName"
                            ],
                            "description": "AKS cluster configuration. Cannot be updated.\n",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Required on cluster.aks object.\n",
                                "example": "test-cluster"
                              },
                              "resourceGroupName": {
                                "type": "string",
                                "description": "Required on cluster.aks object.\n",
                                "example": "TestResourceGroup"
                              }
                            }
                          },
                          "autoScaler": {
                            "type": "object",
                            "title": "auto-scaler",
                            "description": "The Ocean Kubernetes Autoscaler object.\n",
                            "properties": {
                              "isEnabled": {
                                "type": "boolean",
                                "description": "Enable the Ocean Kubernetes Autoscaler.\n",
                                "default": true,
                                "example": true
                              },
                              "resourceLimits": {
                                "type": "object",
                                "description": "Optionally set upper and lower bounds on the resource usage of the cluster.\n",
                                "properties": {
                                  "maxVcpu": {
                                    "type": "integer",
                                    "description": "The maximum cpu in vCpu units that can be allocated to the cluster.\n",
                                    "example": 750
                                  },
                                  "maxMemoryGib": {
                                    "type": "integer",
                                    "description": "The maximum memory in GiB units that can be allocated to the cluster.\n",
                                    "example": 1500
                                  }
                                }
                              },
                              "down": {
                                "type": "object",
                                "description": "Autoscaling scale down operations.\n",
                                "properties": {
                                  "maxScaleDownPercentage": {
                                    "type": "number",
                                    "format": "double",
                                    "minimum": 0.1,
                                    "maximum": 100,
                                    "description": "The maximum percentage allowed to scale down in a single scaling action.",
                                    "example": 30
                                  }
                                }
                              },
                              "headroom": {
                                "type": "object",
                                "description": "Spare resource capacity management enabling fast assignment of pods without waiting for new resources to launch.\n",
                                "properties": {
                                  "automatic": {
                                    "type": "object",
                                    "description": "Automatic headroom configuration.\n",
                                    "properties": {
                                      "isEnabled": {
                                        "type": "boolean",
                                        "description": "Enable automatic headroom. When set to True, Ocean configures and optimizes headroom automatically.\n",
                                        "default": true,
                                        "example": true
                                      },
                                      "percentage": {
                                        "type": "integer",
                                        "description": "Optionally set a number between 0-100 to control the percentage of total cluster resources dedicated to headroom.\nRelevant when isEnabled=true.\n",
                                        "example": 5
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "strategy": {
                            "type": "object",
                            "title": "Ocean AKS Strategy",
                            "description": "The Ocean AKS Strategy object.\n",
                            "properties": {
                              "spotPercentage": {
                                "type": "integer",
                                "description": "Percentage of spot VMs to maintain.\n",
                                "example": 50,
                                "default": 100
                              },
                              "fallbackToOd": {
                                "type": "boolean",
                                "description": "If no spot instance markets are available, enable Ocean to launch on-demand instances instead.\n",
                                "example": true,
                                "default": true
                              }
                            }
                          },
                          "health": {
                            "type": "object",
                            "title": "Ocean AKS Health",
                            "description": "The Ocean AKS Health object.\n",
                            "properties": {
                              "gracePeriod": {
                                "type": "integer",
                                "default": 600,
                                "example": 600,
                                "description": "The amount of time to wait, in seconds, from the moment the instance has launched until monitoring of its health checks begins.\n"
                              }
                            }
                          },
                          "virtualNodeGroupTemplate": {
                            "type": "object",
                            "title": "Ocean AKS Virtual Node Group Template",
                            "description": "A default template object for all future Ocean AKS virtual node groups.\n",
                            "required": [
                              "launchSpecification"
                            ],
                            "properties": {
                              "vmSizes": {
                                "type": "object",
                                "description": "The types of virtual machines that may or may not be a part of the Ocean cluster.\n",
                                "properties": {
                                  "whitelist": {
                                    "type": "array",
                                    "description": "VM types allowed in the Ocean cluster.\n",
                                    "items": {
                                      "type": "string",
                                      "example": "standard_ds2_v2"
                                    }
                                  }
                                }
                              },
                              "zones": {
                                "type": "array",
                                "description": "An Array holding default Availability Zones, this configures the availability zones the Ocean may launch instances in.\nThis parameter is optional.\n",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "1",
                                  "2",
                                  "3"
                                ]
                              },
                              "launchSpecification": {
                                "type": "object",
                                "required": [
                                  "resourceGroupName",
                                  "image",
                                  "network",
                                  "login",
                                  "loadBalancersConfig",
                                  "extensions"
                                ],
                                "properties": {
                                  "resourceGroupName": {
                                    "type": "string",
                                    "description": "This Azure resource group to launch VMs into. Cannot be updated.\n",
                                    "example": "azureResourceGroup"
                                  },
                                  "customData": {
                                    "type": "string",
                                    "format": "byte",
                                    "description": "Must contain a valid Base64 encoded string.\n",
                                    "example": "IyEvYmluL2Jhc2gKZWNobyAidGVzdCI="
                                  },
                                  "image": {
                                    "type": "object",
                                    "required": [
                                      "marketplace"
                                    ],
                                    "description": "Image of VM. An image is a template for creating new VMs.\\\nChoose from Azure image catalogue (marketplace).\n",
                                    "properties": {
                                      "marketplace": {
                                        "type": "object",
                                        "required": [
                                          "publisher",
                                          "offer",
                                          "sku",
                                          "version"
                                        ],
                                        "description": "Select an image from Azure's Marketplace image catalogue.\n",
                                        "properties": {
                                          "publisher": {
                                            "type": "string",
                                            "description": "Image publisher.\n",
                                            "example": "OpenLogic"
                                          },
                                          "offer": {
                                            "type": "string",
                                            "description": "Name of image to use.\n",
                                            "example": "CentOS"
                                          },
                                          "sku": {
                                            "type": "string",
                                            "description": "Image's stock keeping unit (SKU), which is the specific version of the image.\n",
                                            "example": 7.3
                                          },
                                          "version": {
                                            "type": "string",
                                            "description": "The image version. If the version is not provided, the default of \"latest\" will be used.\n",
                                            "default": "latest",
                                            "example": "7.3-1611"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "network": {
                                    "title": "Network",
                                    "description": "Define the virtual network and subnet for your Elastigroup.\n",
                                    "type": "object",
                                    "required": [
                                      "resourceGroupName",
                                      "virtualNetworkName",
                                      "networkInterfaces"
                                    ],
                                    "properties": {
                                      "resourceGroupName": {
                                        "title": "Resource Group Name",
                                        "description": "Vnet resource group name.\n",
                                        "type": "string",
                                        "example": "subnetResourceGroup"
                                      },
                                      "virtualNetworkName": {
                                        "title": "Virtual Network Name",
                                        "description": "Virtual network.\n",
                                        "type": "string",
                                        "example": "vname"
                                      },
                                      "networkInterfaces": {
                                        "title": "Network Interfaces",
                                        "description": "A list of virtual network interfaces.\\\nThe publicIpSku must be identical in all the network interfaces.\\\nOne network interface must be set as the primary.\n",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "isPrimary",
                                            "subnetName",
                                            "assignPublicIp",
                                            "securityGroup",
                                            "enableIPForwarding"
                                          ],
                                          "properties": {
                                            "isPrimary": {
                                              "title": "Is Primary Criteria",
                                              "description": "Defines whether the network interface is primary or not.\n",
                                              "type": "boolean",
                                              "example": true
                                            },
                                            "subnetName": {
                                              "title": "Subnet Name",
                                              "description": "The name to be used for the subnet.\n",
                                              "type": "string",
                                              "example": "testSubnet"
                                            },
                                            "assignPublicIp": {
                                              "title": "Assign Public IP",
                                              "description": "Define a public IP Address.\n",
                                              "type": "boolean",
                                              "example": true
                                            },
                                            "publicIpSku": {
                                              "title": "Public IP SKU",
                                              "description": "Required if assignPublicIp=true. Supported values:\n+ Standard\n+ Basic\n",
                                              "type": "string",
                                              "example": "Standard"
                                            },
                                            "securityGroup": {
                                              "title": "Security Group",
                                              "description": "Security Group",
                                              "type": "object",
                                              "required": [
                                                "name",
                                                "resourceGroupName"
                                              ],
                                              "properties": {
                                                "name": {
                                                  "title": "Name",
                                                  "description": "Requires a valid security group name. Required if a security group is specified.\n",
                                                  "type": "string",
                                                  "example": "test"
                                                },
                                                "resourceGroupName": {
                                                  "title": "Resource Group Name",
                                                  "description": "Enter a valid resource group name. Required if a security group is specified.\n",
                                                  "type": "string",
                                                  "example": "test"
                                                }
                                              }
                                            },
                                            "enableIPForwarding": {
                                              "title": "Enable IP Forwarding",
                                              "description": "Allows forwarding of IP addresses.\n",
                                              "type": "boolean",
                                              "example": true
                                            },
                                            "additionalIpConfigurations": {
                                              "title": "Additional IP Configurations",
                                              "description": "Additional configuration of network interface.\\\nThe names entered in the name fields of all the additional IP configurations must be unique.\n",
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "name"
                                                ],
                                                "properties": {
                                                  "name": {
                                                    "title": "Name",
                                                    "description": "Required if additionalIpConfiguration has been specified. The names must be unique for each additional configuration.\n",
                                                    "type": "string",
                                                    "example": "test"
                                                  },
                                                  "privateIpAddressVersion": {
                                                    "title": "Private IP Address Version",
                                                    "description": "Supported values:\n+ IPv4\n+ IPv6\n",
                                                    "default": "IPv4"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "login": {
                                    "type": "object",
                                    "required": [
                                      "sshPublicKey",
                                      "userName"
                                    ],
                                    "description": "Sets the admin access credentials for accessing your VMs.\n",
                                    "properties": {
                                      "sshPublicKey": {
                                        "type": "string",
                                        "writeOnly": true,
                                        "description": "SSH public key for admin access to Linux VMs.\n",
                                        "example": "ssh-rsa"
                                      },
                                      "userName": {
                                        "type": "string",
                                        "description": "User name for admin access to VMs.\n",
                                        "example": "spotuser"
                                      }
                                    }
                                  },
                                  "loadBalancersConfig": {
                                    "type": "object",
                                    "description": "Configure Load Balancers.\n",
                                    "properties": {
                                      "loadBalancers": {
                                        "type": "array",
                                        "description": "Array of load balancer objects.\n",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "resourceGroupName",
                                            "name",
                                            "loadBalancerSku",
                                            "backendPoolNames"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "The type of load balancer.\n",
                                              "enum": [
                                                "loadBalancer"
                                              ],
                                              "example": "loadBalancer"
                                            },
                                            "resourceGroupName": {
                                              "type": "string",
                                              "description": "The resource group name of the load balancer.\n",
                                              "example": "testResourceGroup"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the load balancer.\n",
                                              "example": "testLoadBalancer"
                                            },
                                            "loadBalancerSku": {
                                              "type": "string",
                                              "description": "Possible values are:\n  * Standard\n  * Basic\n",
                                              "example": "Standard"
                                            },
                                            "backendPoolNames": {
                                              "type": "array",
                                              "description": "Names of the backend pools to register the cluster VMs to.\\\nEach backend pool is a separate load balancer.\n",
                                              "items": {
                                                "type": "string",
                                                "example": [
                                                  "testBackendPool1",
                                                  "testBackendPool2"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "tags": {
                                    "type": "array",
                                    "description": "A maximum of 10 unique key-value pairs for VM tags in the cluster.\n",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "tagKey"
                                      ],
                                      "properties": {
                                        "tagKey": {
                                          "type": "string",
                                          "description": "Tag key for VMs in the cluster.\n",
                                          "example": "env"
                                        },
                                        "tagValue": {
                                          "type": "string",
                                          "description": "Tag value for VMs in the cluster.\n",
                                          "example": "staging"
                                        }
                                      }
                                    }
                                  },
                                  "extensions": {
                                    "type": "array",
                                    "description": "List of Azure extension objects.\n",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "type",
                                        "publisher",
                                        "apiVersion",
                                        "minorVersionAutoUpgrade"
                                      ],
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "Required on compute.launchSpecification.extensions object.\n",
                                          "example": "extensionName"
                                        },
                                        "type": {
                                          "type": "string",
                                          "description": "Required on compute.launchSpecification.extensions object.\n",
                                          "example": "customScript"
                                        },
                                        "publisher": {
                                          "type": "string",
                                          "description": "Required on compute.launchSpecification.extensions object.\n",
                                          "example": "Microsoft.Azure.Extensions"
                                        },
                                        "apiVersion": {
                                          "type": "string",
                                          "description": "The API version of the extension. Required if an extension specified.\n",
                                          "example": 2
                                        },
                                        "minorVersionAutoUpgrade": {
                                          "type": "boolean",
                                          "description": "Required on compute.launchSpecification.extensions object.\n",
                                          "example": true
                                        },
                                        "publicSettings": {
                                          "type": "object",
                                          "description": "Object for public settings.\n"
                                        },
                                        "protectedSettings": {
                                          "type": "object",
                                          "description": "Object for protected settings.\n"
                                        }
                                      }
                                    }
                                  },
                                  "osDisk": {
                                    "type": "object",
                                    "required": [
                                      "sizeGB"
                                    ],
                                    "description": "Specify OS disk specification other than default.\n",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "The type of the OS disk.\n",
                                        "enum": [
                                          "Standard_LRS",
                                          "Premium_LRS",
                                          "StandardSSD_LRS"
                                        ],
                                        "example": "Standard_LRS"
                                      },
                                      "sizeGB": {
                                        "type": "integer",
                                        "description": "The size of the OS disk in GB. Required if dataDisks is specified.\n",
                                        "minimum": 1,
                                        "maximum": 1023,
                                        "example": 30
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2021-03-17T08:13:08.000Z",
                            "description": "A timestamp of the Ocean creation.\n"
                          },
                          "updatedAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2021-03-17T15:06:13.000Z",
                            "description": "A timestamp of the latest Ocean update.\n"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean AKS Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/k8s/cluster"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1azure~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:k8s"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Clusters",
        "description": "List the configurations for all Ocean clusters in the specified account.\n",
        "operationId": "oceanAKSClusterList",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean AKS Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/k8s/cluster"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1azure~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:k8s"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/azure/k8s/cluster/{oceanClusterId}": {
      "get": {
        "summary": "Get Cluster",
        "description": "Get the configurations for a specified Ocean cluster.\n",
        "operationId": "oceanAKSClusterGet",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean AKS Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/k8s/cluster/o-12345abc"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1azure~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:k8s"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Cluster",
        "description": "All Ocean parameters are updatable, excluding aks and controllerClusterId.\n<br />\nThis API supports partial updates, so specific fields can be updated separately.\n",
        "operationId": "oceanAKSClusterUpdate",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/paths/~1ocean~1azure~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean AKS Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/k8s/cluster/o-12345abc"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1azure~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:k8s"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Cluster",
        "description": "Delete a specified Ocean cluster.\n",
        "operationId": "oceanAKSClusterDelete",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean AKS Delete Cluster Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/k8s/cluster/o-12345abc"
                            },
                            "method": {
                              "example": "DELETE"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/azure/k8s/cluster/{oceanClusterId}/roll": {
      "summary": "Ocean for AKS",
      "post": {
        "summary": "Initiate Roll",
        "description": "Roll an entire Ocean cluster or roll subsets of the cluster by specifying virtualNodeGroupIds or vmNames. Performing this request will start the roll immediately and run it in defined batches.\nNote that the first response for a successful request will indicate the start of a roll. In order to check the status of a roll, you can use the GET Roll API.\n",
        "operationId": "oceanAzureRollInit",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "title": "Roll the entire cluster",
                    "required": [
                      "roll"
                    ],
                    "properties": {
                      "roll": {
                        "type": "object",
                        "description": "Object that specifies the parameters required to initiate a roll (also called a deployment).\n",
                        "properties": {
                          "batchSizePercentage": {
                            "type": "integer",
                            "description": "The size of a batch in a roll, in percentage. Valid values are 0-100.\n",
                            "example": 25
                          },
                          "comment": {
                            "description": "Add a comment description for the roll. The comment is limited to 256 characters.\n",
                            "type": "string",
                            "example": "This is why I deployed my cluster."
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "title": "Roll specific VMs in the cluster",
                    "required": [
                      "roll"
                    ],
                    "properties": {
                      "roll": {
                        "type": "object",
                        "description": "Object that specifies the parameters required to initiate a roll (also called a deployment).\n",
                        "properties": {
                          "batchSizePercentage": {
                            "type": "integer",
                            "description": "The size of a batch in a roll, in percentage. Valid values are 0-100.\n",
                            "example": 25
                          },
                          "comment": {
                            "description": "Add a comment description for the roll. The comment is limited to 256 characters.\n",
                            "type": "string",
                            "example": "This is why I deployed my cluster."
                          },
                          "vmNames": {
                            "type": "array",
                            "description": "List of vm identifiers to be rolled. Each identifier is a string. vmNames can be null, and cannot be used together with virtualNodeGroupIds.\n",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "vm-8f42d8217593",
                              "vm-5da87fb0bd21",
                              "vm-1e50f9fabf2f",
                              "vm-9597db5ae6fe"
                            ]
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "title": "Roll specific Virtual Node Groups in the cluster",
                    "required": [
                      "roll"
                    ],
                    "properties": {
                      "roll": {
                        "type": "object",
                        "description": "Object that specifies the parameters required to initiate a roll (also called a deployment).\n",
                        "properties": {
                          "batchSizePercentage": {
                            "type": "integer",
                            "description": "The size of a batch in a roll, in percentage. Valid values are 0-100.\n",
                            "example": 25
                          },
                          "comment": {
                            "description": "Add a comment description for the roll. The comment is limited to 256 characters.\n",
                            "type": "string",
                            "example": "This is why I deployed my cluster."
                          },
                          "virtualNodeGroupIds": {
                            "type": "array",
                            "description": "List of virtual node group identifiers to be rolled. Each identifier is a string. virtualNodeGroupIds can be null, and cannot be used together with vmNames.",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "vng-0950f269",
                              "vng-0a8bc62a"
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean AKS Create Cluster Roll Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/k8s/cluster/o-12345abc/roll"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1azure~1k8s~1cluster~1%7BoceanClusterId%7D~1roll/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:k8s:cluster:roll"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Rolls",
        "description": "Get status for all rolls of an Ocean cluster.\n",
        "operationId": "oceanAzureRollList",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean AKS List Cluster Rolls Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/k8s/cluster/o-12345abc/roll"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The identifier of the cluster roll.\n",
                                    "example": "acr-5aaf854e"
                                  },
                                  "oceanId": {
                                    "type": "string",
                                    "description": "The identifier of the ocean cluster being rolled.\n",
                                    "example": "o-12e31234"
                                  },
                                  "status": {
                                    "type": "string",
                                    "description": "The status of the roll.\n",
                                    "enum": [
                                      "IN_PROGRESS",
                                      "COMPLETED",
                                      "FAILED",
                                      "STOPPED"
                                    ],
                                    "example": "IN_PROGRESS"
                                  },
                                  "currentBatch": {
                                    "type": "integer",
                                    "description": "The current batch being handled by the roll.\n",
                                    "example": 2
                                  },
                                  "numOfBatches": {
                                    "type": "integer",
                                    "description": "The total number of batches in the roll.\n",
                                    "example": 4
                                  },
                                  "comment": {
                                    "type": "string",
                                    "description": "A comment description for the roll.\n",
                                    "example": "This is why I deployed my cluster."
                                  },
                                  "progress": {
                                    "type": "object",
                                    "description": "An object reflecting the progression of the roll.\n",
                                    "properties": {
                                      "unit": {
                                        "type": "string",
                                        "description": "The unit of the value field.\n",
                                        "example": "percentage"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "description": "The progress of the roll, in the units defined by the 'unit' field.\n",
                                        "example": 25
                                      },
                                      "detailedStatus": {
                                        "type": "object",
                                        "description": "An object containing detailed information about the progress of the roll.\n",
                                        "properties": {
                                          "oldVms": {
                                            "type": "array",
                                            "description": "An array of objects containing detailed information about each VM handled by the roll.\n",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "vmName": {
                                                  "type": "string",
                                                  "description": "The identifier of the VM.\n"
                                                },
                                                "status": {
                                                  "type": "string",
                                                  "description": "The status of the VM according to the roll.\n",
                                                  "enum": [
                                                    "REPLACED",
                                                    "TO_BE_REPLACED",
                                                    "COULD_NOT_BE_REPLACED"
                                                  ]
                                                }
                                              }
                                            },
                                            "example": [
                                              {
                                                "vmName": "vm-8f42d8217593",
                                                "status": "REPLACED"
                                              },
                                              {
                                                "vmName": "vm-5da87fb0bd21",
                                                "status": "COULD_NOT_BE_REPLACED"
                                              },
                                              {
                                                "vmName": "vm-1e50f9fabf2f",
                                                "status": "TO_BE_REPLACED"
                                              },
                                              {
                                                "vmName": "vm-9597db5ae6fe",
                                                "status": "TO_BE_REPLACED"
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "vmNames": {
                                    "type": "array",
                                    "description": "A list of VM identifiers participating in the roll.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "example": [
                                      "vm-8f42d8217593",
                                      "vm-5da87fb0bd21",
                                      "vm-1e50f9fabf2f",
                                      "vm-9597db5ae6fe"
                                    ]
                                  },
                                  "virtualNodeGroupIds": {
                                    "type": "array",
                                    "description": "A list of virtual node group identifiers participating in the roll.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "example": [
                                      "vng-0950f269",
                                      "vng-0a8bc62a"
                                    ]
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "description": "The creation timestamp of the roll.\n",
                                    "example": "2019-03-24T15:46:09.000Z"
                                  },
                                  "updatedAt": {
                                    "type": "string",
                                    "description": "The latest update timestamp of the roll.\n",
                                    "example": "2019-03-24T15:46:09.000Z"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:k8s:cluster:roll"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/azure/k8s/cluster/{oceanClusterId}/roll/{clusterRollId}": {
      "summary": "Ocean for AKS",
      "put": {
        "summary": "Update Roll",
        "description": "Update a roll of an Ocean cluster.\n\n*Performing the request will stop the next batch in a roll.*\n",
        "operationId": "oceanAzureRollUpdate",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "in": "path",
            "name": "clusterRollId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "acr-12345abc",
            "description": "Ocean cluster roll identifier.\n"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "roll"
                    ],
                    "properties": {
                      "roll": {
                        "type": "object",
                        "description": "Object that specifies the roll parameters to update.\n",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string",
                            "enum": [
                              "STOPPED"
                            ],
                            "description": "Set roll status. The only valid value is \"STOPPED\".\n",
                            "example": "STOPPED"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean AKS Create Cluster Roll Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/k8s/cluster/o-12345abc/roll/acr-12345abc"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "allOf": [
                                  {
                                    "$ref": "#/paths/~1ocean~1azure~1k8s~1cluster~1%7BoceanClusterId%7D~1roll/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "status": {
                                        "example": "STOPPED"
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:k8s:cluster:roll"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get Roll",
        "description": "Get status for a specific roll of an Ocean cluster.\n",
        "operationId": "oceanAzureRollGetSingleRoll",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1azure~1k8s~1cluster~1%7BoceanClusterId%7D~1roll~1%7BclusterRollId%7D/put/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean AKS Get Cluster Roll Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/k8s/cluster/o-12345abc/roll/acr-12345abc"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1azure~1k8s~1cluster~1%7BoceanClusterId%7D~1roll/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:k8s:cluster:roll"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/azure/k8s/cluster/{oceanClusterId}/nodes": {
      "get": {
        "summary": "Get Cluster Nodes",
        "description": "Get nodes data of an Ocean cluster.\n",
        "operationId": "oceanAzureGetNodes",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "in": "query",
            "name": "virtualNodeGroupId",
            "example": "vng-12345abc",
            "description": "Ocean Virtual Node Group identifier.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "vmName",
            "schema": {
              "type": "string"
            },
            "example": "vm-123",
            "description": "Get a specific node by vmName."
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean AKS Nodes Data Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/k8s/cluster/o-12345abc/nodes"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "AKS Ocean node data",
                                "description": "Node data of Ocean cluster.",
                                "properties": {
                                  "vmName": {
                                    "type": "string",
                                    "example": "vm-123",
                                    "description": "The Azure vm name of this node.\n"
                                  },
                                  "vmSize": {
                                    "type": "string",
                                    "example": "standard_a1_v2",
                                    "description": "The Azure vm size of this node.\n"
                                  },
                                  "availabilityZone": {
                                    "type": "string",
                                    "example": "eastus2-1",
                                    "description": "The Azure availability zone of this node.\n"
                                  },
                                  "virtualNodeGroupId": {
                                    "type": "string",
                                    "example": "ols-123",
                                    "description": "The node's virtual node group id.\n"
                                  },
                                  "virtualNodeGroupName": {
                                    "type": "string",
                                    "example": "dev-vng",
                                    "description": "The node's virtual node group name.\n"
                                  },
                                  "lifeCycle": {
                                    "type": "string",
                                    "enum": [
                                      "Spot",
                                      "OD"
                                    ],
                                    "example": "Spot",
                                    "description": "The Azure lifeCycle of this node.\n"
                                  },
                                  "publicIp": {
                                    "type": "string",
                                    "example": "1.2.3.4",
                                    "description": "This node's public ip.\n"
                                  },
                                  "workloadRequestedMilliCpu": {
                                    "type": "number",
                                    "example": 1320,
                                    "description": "The amount of milli cpus requested by the kubernetes workload.\n"
                                  },
                                  "workloadRequestedMemoryInMiB": {
                                    "type": "number",
                                    "example": 500,
                                    "description": "The amount of memory in MiB requested by the kubernetes workload.\n"
                                  },
                                  "workloadRequestedGpu": {
                                    "type": "number",
                                    "example": 1,
                                    "description": "The amount of gpus requested by the kubernetes workload.\n"
                                  },
                                  "headroomRequestedMilliCpu": {
                                    "type": "number",
                                    "example": 1320,
                                    "description": "The amount of milli cpus saved for headroom.\n"
                                  },
                                  "headroomRequestedMemoryInMiB": {
                                    "type": "number",
                                    "example": 512,
                                    "description": "The amount of memory in MiB saved for headroom.\n"
                                  },
                                  "headroomRequestedGpu": {
                                    "type": "number",
                                    "example": 1,
                                    "description": "The amount of gpus saved for headroom.\n"
                                  },
                                  "allocatableMilliCpu": {
                                    "type": "number",
                                    "example": 2000,
                                    "description": "The amount of allocatable milli cpus as registered in kubernetes.\n"
                                  },
                                  "allocatableMemoryInMiB": {
                                    "type": "number",
                                    "example": 3646.1,
                                    "description": "The amount of allocatable memory in MiB as registered in kubernetes.\n"
                                  },
                                  "allocatableGpu": {
                                    "type": "number",
                                    "example": 1,
                                    "description": "The amount of allocatable gpus as registered in kubernetes.\n"
                                  },
                                  "nodeName": {
                                    "type": "string",
                                    "example": "vm-123",
                                    "description": "The kubernetes node name.\n"
                                  },
                                  "registrationStatus": {
                                    "type": "string",
                                    "enum": [
                                      "Registered",
                                      "Registering",
                                      "Failed"
                                    ],
                                    "example": "Registered",
                                    "description": "The registration status of this node.\n"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "example": "2021-10-01T05:51:06.000Z",
                                    "description": "When was this node's instance was created at.\n"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:k8s:nodes"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/azure/k8s/cluster/aks/import/{acdIdentifier}": {
      "post": {
        "summary": "Import Cluster",
        "description": "The Import Cluster API call returns a JSON formatted Ocean cluster specification for a given AKS cluster and import identifier.\nThe returned specification is ready to use in the [Ocean AKS Cluster Create](https://docs.spot.io/api/#operation/oceanAKSClusterCreate) API call.\n\nPrerequisites:\n* To initiate the import from AKS, run the following script on a machine with the kubectl command-line tool installed and configured (Ensure the correct context is set in kube config.)\n\n```\ncurl -fsSL https://spotinst-public.s3.amazonaws.com/integrations/kubernetes/aks/spot-aks-connector/init.sh | \\\nbash -s acd-12345678\n```\n\n* The import identifier has the prefix “acd-“ followed by eight characters. Use the same identifier as input for this API call.\n* Learn more about the [Import from AKS](https://docs.spot.io/ocean/getting-started/aks?id=import-process-overview) process.\n",
        "operationId": "oceanAKSClusterImport",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "acdIdentifier",
            "example": "acd-12345abc",
            "description": "During the import from AKS to Ocean, the user executes a script that gets data from the AKS cluster and sends it to the Spot API. The acdIdentifier is the identifier that is associated with this data, and it is used to create an Ocean cluster.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "cluster"
                    ],
                    "properties": {
                      "cluster": {
                        "type": "object",
                        "description": "The Ocean cluster import request.\n",
                        "required": [
                          "acdIdentifier",
                          "name",
                          "controllerClusterId",
                          "aks"
                        ],
                        "properties": {
                          "acdIdentifier": {
                            "type": "string",
                            "readOnly": true,
                            "example": "acd-134abcd",
                            "description": "ACD Identifier.\n"
                          },
                          "name": {
                            "type": "string",
                            "example": "test",
                            "description": "Add a name for the Ocean cluster.\n"
                          },
                          "controllerClusterId": {
                            "type": "string",
                            "example": "test-123124",
                            "description": "Enter a unique Ocean cluster identifier. Cannot be updated.\n"
                          },
                          "aks": {
                            "type": "object",
                            "required": [
                              "name",
                              "resourceGroupName"
                            ],
                            "description": "AKS cluster configuration. Cannot be updated.\n",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Required on cluster.aks object.\n",
                                "example": "test-cluster"
                              },
                              "resourceGroupName": {
                                "type": "string",
                                "description": "Required on cluster.aks object.\n",
                                "example": "TestResourceGroup"
                              }
                            }
                          },
                          "autoScaler": {
                            "$ref": "#/paths/~1ocean~1azure~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/autoScaler"
                          },
                          "strategy": {
                            "$ref": "#/paths/~1ocean~1azure~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/strategy"
                          },
                          "health": {
                            "$ref": "#/paths/~1ocean~1azure~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/health"
                          },
                          "virtualNodeGroupTemplate": {
                            "type": "object",
                            "title": "Ocean AKS Virtual Node Group Template Import",
                            "description": "A default template object used for importing an AKS virtual node group to Ocean.\n",
                            "properties": {
                              "vmSizes": {
                                "type": "object",
                                "description": "The types of virtual machines that may or may not be a part of the Ocean cluster.\n",
                                "properties": {
                                  "whitelist": {
                                    "type": "array",
                                    "description": "VM types allowed in the Ocean cluster.\n",
                                    "items": {
                                      "type": "string",
                                      "example": "standard_ds2_v2"
                                    }
                                  }
                                }
                              },
                              "zones": {
                                "type": "array",
                                "description": "An Array holding default Availability Zones, this configures the availability zones the Ocean may launch instances in.\nThis parameter is optional.\n",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "1",
                                  "2",
                                  "3"
                                ]
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2021-03-17T08:13:08.000Z",
                            "description": "A timestamp of the Ocean creation.\n"
                          },
                          "updatedAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2021-03-17T15:06:13.000Z",
                            "description": "A timestamp of the latest Ocean update.\n"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean AKS Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/k8s/cluster/aks/import/acd-12345abc"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1azure~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:k8s"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/azure/k8s/cluster/{oceanClusterId}/detachVms": {
      "put": {
        "summary": "Detach VMs",
        "description": "Scale down specific virtual machines in an Ocean cluster.\n",
        "operationId": "oceanAzureDetachVms",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "vmsToDetach"
                ],
                "type": "object",
                "properties": {
                  "vmsToDetach": {
                    "type": "array",
                    "description": "Array of virtual machine names to detach.\n",
                    "items": {
                      "type": "string",
                      "example": "vm-0fbd69f960db"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean AKS Detach Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/k8s/cluster/o-12345abc/detachVms"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "detachedVms": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "vmName": {
                                          "type": "string",
                                          "example": "vm-12345"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:k8s:cluster:detachVms"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/azure/k8s/virtualNodeGroup": {
      "post": {
        "summary": "Create Virtual Node Group",
        "description": "Create a virtual node group.\n",
        "operationId": "oceanAKSVirtualNodeGroupCreate",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/paths/~1ocean~1azure~1k8s~1virtualNodeGroup~1%7BvirtualNodeGroupId%7D/put/requestBody/content/application~1json/schema"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Virtual Node Group Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/k8s/virtualNodeGroup"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1azure~1k8s~1virtualNodeGroup~1%7BvirtualNodeGroupId%7D/put/requestBody/content/application~1json/schema"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:k8s:virtualNodeGroup"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Virtual Node Groups",
        "description": "List the configurations for all virtual node groups in the account or in a specified cluster.\n",
        "operationId": "oceanAKSVirtualNodeGroupList",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1launchSpec/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Virtual Node Group Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/k8s/virtualNodeGroup"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1azure~1k8s~1virtualNodeGroup~1%7BvirtualNodeGroupId%7D/put/requestBody/content/application~1json/schema"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:k8s:virtualNodeGroup"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/azure/k8s/virtualNodeGroup/{virtualNodeGroupId}": {
      "get": {
        "summary": "Get Virtual Node Group",
        "description": "Get the configuration of a specified virtual node group.\n",
        "operationId": "oceanAKSVirtualNodeGroupGet",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "virtualNodeGroupId",
            "example": "vng-12345abc",
            "description": "Ocean Virtual Node Group identifier.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Virtual Node Group Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/k8s/virtualNodeGroup/vng-12345abc"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1azure~1k8s~1virtualNodeGroup~1%7BvirtualNodeGroupId%7D/put/requestBody/content/application~1json/schema"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:k8s:virtualNodeGroup"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Virtual Node Group",
        "description": "All virtual node group parameters are updatable.\n",
        "operationId": "oceanAKSVirtualNodeGroupUpdate",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1azure~1k8s~1virtualNodeGroup~1%7BvirtualNodeGroupId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "virtualNodeGroup": {
                    "type": "object",
                    "title": "Ocean AKS Virtual Node Group",
                    "required": [
                      "name",
                      "oceanId"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "readOnly": true,
                        "example": "vng-12345abc",
                        "description": "Virtual node group identifier.\n"
                      },
                      "name": {
                        "type": "string",
                        "example": "testVng",
                        "description": "Enter a name for the virtual node group.\n"
                      },
                      "oceanId": {
                        "type": "string",
                        "example": "o-13245abc",
                        "description": "The Ocean cluster identifier.\n"
                      },
                      "resourceLimits": {
                        "type": "object",
                        "properties": {
                          "maxInstanceCount": {
                            "description": "Option to set a maximum number of instances per virtual node group.\\\nIf set, the value must be greater than or equal to 0.\n",
                            "type": "integer",
                            "example": 5
                          }
                        }
                      },
                      "labels": {
                        "type": "array",
                        "description": "An array of labels to add to the virtual node group.\\\nOnly custom user labels are allowed, and not Kubernetes built-in labels or Spot internal labels.\n",
                        "items": {
                          "type": "object",
                          "required": [
                            "key"
                          ],
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "Set label key.\\\nThe following are not allowed:\n* \"kubernetes.io/hostname\"\n* \"failure-domain.beta.kubernetes.io/zone\"\n* \"topology.kubernetes.io/zone\"\n* \"failure-domain.beta.kubernetes.io/region\"\n* \"topology.kubernetes.io/region\"\n* \"beta.kubernetes.io/instance-type\"\n* \"node.kubernetes.io/instance-type\"\n* \"beta.kubernetes.io/os\"\n* \"kubernetes.io/os\"\n* \"beta.kubernetes.io/arch\"\n* \"kubernetes.io/arch\"\n* \"spotinst.io/node-lifecycle\"\n* \"spotinst.io/gpu-type\"\n"
                            },
                            "value": {
                              "type": "string",
                              "description": "Set label value.\n"
                            }
                          }
                        },
                        "example": [
                          {
                            "key": "env",
                            "value": "test"
                          }
                        ]
                      },
                      "taints": {
                        "type": "array",
                        "description": "Add taints to a virtual node group.\n",
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "Set taint key.\n"
                            },
                            "value": {
                              "type": "string",
                              "description": "Set taint value.\n"
                            },
                            "effect": {
                              "type": "string",
                              "description": "Set taint effect.\n",
                              "enum": [
                                "NoSchedule",
                                "PreferNoSchedule",
                                "NoExecute",
                                "PreferNoExecute"
                              ]
                            }
                          }
                        },
                        "example": [
                          {
                            "key": "taintKey",
                            "value": "taintValue",
                            "effect": "NoSchedule"
                          }
                        ]
                      },
                      "vmSizes": {
                        "type": "array",
                        "description": "An Array holding VM sizes, this configures the allowed VM sizes the Ocean may launch per VNG.\n",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "standard_ds2_v2",
                          "standard_d2s_v4"
                        ]
                      },
                      "zones": {
                        "type": "array",
                        "description": "An Array holding Availability Zones, this configures the availability zones the Ocean may launch instances in per VNG.\n",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "1",
                          "2",
                          "3"
                        ]
                      },
                      "autoScale": {
                        "type": "object",
                        "properties": {
                          "headrooms": {
                            "type": "array",
                            "description": "A List of headroom objects. Define custom headroom per virtual node group.\\\nA maximum of 30 objects is allowed.\\\nAt least one of cpuPerUnit, memoryPerUnit or gpuPerUnit must be set.\n",
                            "items": {
                              "type": "object",
                              "required": [
                                "numOfUnits"
                              ],
                              "properties": {
                                "cpuPerUnit": {
                                  "type": "integer",
                                  "description": "Configure the number of CPUs to allocate for the headroom.\nCPUs are denoted in millicores, where 1000 millicores = 1 vCPU.\n",
                                  "example": 1000
                                },
                                "memoryPerUnit": {
                                  "type": "integer",
                                  "description": "Configure the amount of memory (MiB) to allocate the headroom.\n",
                                  "example": 2048
                                },
                                "gpuPerUnit": {
                                  "type": "integer",
                                  "description": "How many GPU cores should be allocated per headroom unit.\n",
                                  "example": 0
                                },
                                "numOfUnits": {
                                  "type": "integer",
                                  "description": "The number of headroom units to maintain, where each unit has the defined CPU, memory, and GPU.\n",
                                  "example": 3
                                }
                              }
                            }
                          },
                          "autoHeadroomPercentage": {
                            "type": "integer",
                            "description": "Number between 0-200 to control the headroom % of the specific Virtual Node Group. Effective when cluster.autoScaler.headroom.automatic.isEnabled=true is set on the Ocean cluster.\n",
                            "example": 20
                          }
                        }
                      },
                      "launchSpecification": {
                        "type": "object",
                        "properties": {
                          "osDisk": {
                            "type": "object",
                            "required": [
                              "sizeGB"
                            ],
                            "description": "Specify OS disk specification other than default.\n",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "The type of the OS disk.\n",
                                "enum": [
                                  "Standard_LRS",
                                  "Premium_LRS",
                                  "StandardSSD_LRS"
                                ],
                                "example": "Standard_LRS"
                              },
                              "sizeGB": {
                                "type": "integer",
                                "description": "The size of the OS disk in GB. Required if dataDisks is specified.\n",
                                "minimum": 1,
                                "maximum": 1023,
                                "example": 30
                              },
                              "utilizeEphemeralStorage": {
                                "type": "boolean",
                                "description": "Flag to enable/disable the Ephemeral OS Disk utilization.\n",
                                "example": true
                              }
                            }
                          },
                          "tags": {
                            "type": "array",
                            "description": "A maximum of 10 unique key-value pairs for VM tags in the virtual node group.\n",
                            "items": {
                              "type": "object",
                              "properties": {
                                "tagKey": {
                                  "type": "string",
                                  "description": "Tag key for VMs in the cluster.\n",
                                  "example": "env"
                                },
                                "tagValue": {
                                  "type": "string",
                                  "description": "Tag value for VMs in the cluster.\n",
                                  "example": "staging"
                                }
                              }
                            }
                          }
                        }
                      },
                      "createdAt": {
                        "type": "string",
                        "readOnly": true,
                        "format": "date-time",
                        "example": "2021-03-17T08:13:08.000Z",
                        "description": "A timestamp of the virtual node group creation.\n"
                      },
                      "updatedAt": {
                        "type": "string",
                        "readOnly": true,
                        "format": "date-time",
                        "example": "2021-03-17T15:06:13.000Z",
                        "description": "A timestamp of the latest virtual node group update.\n"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Virtual Node Group Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/k8s/virtualNodeGroup/vng-12345abc"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1azure~1k8s~1virtualNodeGroup~1%7BvirtualNodeGroupId%7D/put/requestBody/content/application~1json/schema"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:k8s:virtualNodeGroup"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Virtual Node Group",
        "description": "Delete a specified virtual node group in an Ocean cluster.\n",
        "operationId": "oceanAKSVirtualNodeGroupDelete",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1azure~1k8s~1virtualNodeGroup~1%7BvirtualNodeGroupId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean AKS Virtual Node Group Delete Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/k8s/virtualNodeGroup/vng-12345abc"
                            },
                            "method": {
                              "example": "DELETE"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/azure/k8s/virtualNodeGroup/{virtualNodeGroupId}/launchVms": {
      "put": {
        "summary": "Launch VMs",
        "description": "Launch VMs in a Virtual Node Group.\n",
        "operationId": "oceanAKSVirtualNodeGroupLaunchVms",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1azure~1k8s~1virtualNodeGroup~1%7BvirtualNodeGroupId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "launchRequest": {
                    "type": "object",
                    "title": "Ocean AKS Virtual Node Group Launch Request",
                    "required": [
                      "amount"
                    ],
                    "properties": {
                      "amount": {
                        "description": "The number of VMs to launch.\n",
                        "type": "integer",
                        "example": 5
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Virtual Node Group Launch Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/k8s/virtualNodeGroup/vng-12345abc/launchVms"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "vms": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "vmName": {
                                          "type": "string",
                                          "example": "vm-001c1268d5bf"
                                        },
                                        "vmSize": {
                                          "type": "string",
                                          "example": "Standard_DS2_v2"
                                        },
                                        "lifeCycle": {
                                          "type": "string",
                                          "example": "spot"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:k8s:virtualNodeGroup:launchVms"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/azure/k8s/cluster/{oceanClusterId}/rightSizing/suggestion": {
      "post": {
        "summary": "Fetch Right Sizing Recommendations",
        "description": "Get right-sizing recommendations for an Ocean cluster and filter them according to namespace or label.\n",
        "operationId": "oceanAzureFilterRightSizingWithFilter",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BoceanClusterId%7D~1rightSizing~1suggestion/post/requestBody/content/application~1json/schema/allOf/0"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean RightSizing Recommendation Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/k8s/cluster/o-abcd1234/rightSizing/suggestion"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "resourceName": {
                                    "type": "string"
                                  },
                                  "resourceType": {
                                    "type": "string"
                                  },
                                  "namespace": {
                                    "type": "string"
                                  },
                                  "suggestedCPU": {
                                    "type": "integer"
                                  },
                                  "suggestedMemory": {
                                    "type": "integer"
                                  },
                                  "requestedCPU": {
                                    "type": "integer"
                                  },
                                  "requestedMemory": {
                                    "type": "integer"
                                  },
                                  "containers": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "requestedCPU": {
                                          "type": "integer"
                                        },
                                        "suggestedCPU": {
                                          "type": "integer"
                                        },
                                        "requestedMemory": {
                                          "type": "integer"
                                        },
                                        "suggestedMemory": {
                                          "type": "integer"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "example": [
                                {
                                  "resourceName": "redis-controller",
                                  "resourceType": "deployment",
                                  "namespace": "kube-system",
                                  "suggestedCPU": 4,
                                  "suggestedMemory": 19,
                                  "requestedCPU": 50,
                                  "requestedMemory": 50,
                                  "containers": [
                                    {
                                      "name": "dnsmasq",
                                      "requestedCPU": 10,
                                      "suggestedCPU": 2,
                                      "requestedMemory": 40,
                                      "suggestedMemory": 15
                                    },
                                    {
                                      "name": "sidecar",
                                      "requestedCPU": 40,
                                      "suggestedCPU": 2,
                                      "requestedMemory": 10,
                                      "suggestedMemory": 4
                                    }
                                  ]
                                },
                                {
                                  "resourceName": "test-redis",
                                  "resourceType": "deployment",
                                  "namespace": "sparkSpace",
                                  "suggestedCPU": 2,
                                  "suggestedMemory": 20,
                                  "requestedCPU": 50,
                                  "requestedMemory": 30,
                                  "containers": [
                                    {
                                      "name": "dns-controller",
                                      "requestedCPU": 20,
                                      "suggestedCPU": 1,
                                      "requestedMemory": 20,
                                      "suggestedMemory": 15
                                    },
                                    {
                                      "name": "kubedns",
                                      "requestedCPU": 30,
                                      "suggestedCPU": 1,
                                      "requestedMemory": 10,
                                      "suggestedMemory": 5
                                    }
                                  ]
                                }
                              ]
                            },
                            "count": {
                              "example": 2
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:k8s:cluster:rightSizing:suggestion"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/launchSpec/{oceanLaunchSpecId}/launchNodes": {
      "put": {
        "summary": "Launch Nodes in VNG",
        "description": "Launch nodes in Virtual Node Group.\n",
        "operationId": "OceanAWSK8sLaunchSpecLaunchNodes",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec~1%7BoceanLaunchSpecId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "launchRequest": {
                    "type": "object",
                    "title": "Ocean AWS Virtual Node Group Launch Request",
                    "description": "Object specifying the details for the launch request.\n",
                    "required": [
                      "amount"
                    ],
                    "properties": {
                      "amount": {
                        "description": "The number of nodes to launch.\n",
                        "type": "integer",
                        "example": 5
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Virtual Node Group Launch Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/k8s/launchSpec/ols-12345abc/launchNodes"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "launchSpecId": {
                              "type": "string",
                              "example": "ols-f73821bc"
                            },
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "newInstances": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "instanceId": {
                                          "type": "string",
                                          "example": "i-08d53d2a1dcede08f",
                                          "description": "Identifier of the launched instance\n"
                                        },
                                        "availabilityZone": {
                                          "type": "string",
                                          "example": "us-west-2b",
                                          "description": "The availability zone where the instance is launched\n"
                                        },
                                        "instanceType": {
                                          "type": "string",
                                          "example": "c3.xlarge",
                                          "description": "Type of the instance to be launched\n"
                                        },
                                        "lifeCycle": {
                                          "type": "string",
                                          "example": "spot"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:k8s:launchSpec:launchNodes"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/launchSpec/{oceanLaunchSpecId}/launchContainerInstances": {
      "put": {
        "summary": "Launch Container Instances In VNG",
        "description": "Launch container instances in virtual node group.\n",
        "operationId": "OceanAWSEcsLaunchSpecLaunchNodes",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec~1%7BoceanLaunchSpecId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "launchRequest": {
                    "type": "object",
                    "title": "Ocean ECS VNG Launch Request",
                    "required": [
                      "amount"
                    ],
                    "properties": {
                      "amount": {
                        "description": "The number of container instances to launch.\n",
                        "type": "integer",
                        "example": 5
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean VNG Launch Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/ecs/launchSpec/ols-12345abc/launchContainerInstances"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "launchSpecId": {
                              "type": "string",
                              "example": "ols-f73821bc"
                            },
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "newInstances": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "instanceId": {
                                          "type": "string",
                                          "example": "i-08d53d2a1dcede08f",
                                          "description": "identifier of the launched instance.\n"
                                        },
                                        "availabilityZone": {
                                          "type": "string",
                                          "example": "us-west-2b",
                                          "description": "The availability zone that the instance launched in.\n"
                                        },
                                        "instanceType": {
                                          "type": "string",
                                          "example": "c3.xlarge",
                                          "description": "Type of the launched instance.\n"
                                        },
                                        "lifeCycle": {
                                          "type": "string",
                                          "example": "spot",
                                          "description": "Spot or on-demand.\n"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:ecs:launchSpec:launchContainerInstances"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/k8s/extendedResourceDefinition": {
      "summary": "Ocean extended resource definition",
      "post": {
        "summary": "Create Extended Resource Definition",
        "description": "Creates an Ocean extended resource definition entity.\n",
        "operationId": "oceanK8sExtendedResourceDefinitionCreate",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "extendedResourceDefinition"
                    ],
                    "properties": {
                      "extendedResourceDefinition": {
                        "type": "object",
                        "description": "The Ocean extended resource definition.\n",
                        "title": "Ocean Extended Resource Definition",
                        "required": [
                          "name",
                          "mapping"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "readOnly": true,
                            "example": "erd-123abc",
                            "description": "Ocean extended resource definition identifier.\n"
                          },
                          "name": {
                            "type": "string",
                            "example": "example.com/name",
                            "description": "The extended resource name as should be requested by your pods and registered to the nodes. Cannot be updated.</br>\nThe name should be a valid [Kubernetes extended resource name](https://kubernetes.io/docs/tasks/configure-pod-container/extended-resource/#assign-an-extended-resource-to-a-pod).\n"
                          },
                          "mapping": {
                            "type": "object",
                            "title": "AWS mapping",
                            "description": "A mapping between AWS instanceType or `*` as default and its value for the given extended resource.\n",
                            "example": {
                              "c3.large": "2Ki",
                              "c3.xlarge": "4Ki",
                              "c3.2xlarge": "8Mi"
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2021-03-17T08:13:08.000Z",
                            "description": "A timestamp of the extended resource definition creation.\n"
                          },
                          "updatedAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2021-03-17T15:06:13.000Z",
                            "description": "A timestamp of the latest extended resource definition update.\n"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Create Extended Resource Definition Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/k8s/extendedResourceDefinition"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1k8s~1extendedResourceDefinition/post/requestBody/content/application~1json/schema/allOf/0/properties/extendedResourceDefinition"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:k8s:extendedResourceDefinition"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Extended Resource Definitions",
        "description": "List the configurations for all Ocean extended resource definitions in the specified account.\n",
        "operationId": "oceanK8sExtendedResourceDefinitionList",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Extended Resource Definition Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/k8s/extendedResourceDefinition"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1k8s~1extendedResourceDefinition/post/requestBody/content/application~1json/schema/allOf/0/properties/extendedResourceDefinition"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:k8s:extendedResourceDefinition"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/k8s/extendedResourceDefinition/{oceanExtendedResourceDefinitionId}": {
      "get": {
        "summary": "Get Extended Resource Definition",
        "description": "Get the configurations for a specified Ocean extended resource definition.\n",
        "operationId": "oceanK8sExtendedResourceDefinitionGet",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "oceanExtendedResourceDefinitionId",
            "example": "erd-12345abc",
            "description": "Identifier of the Ocean extended resource definition.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Extended Resource Definition Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/k8s/extendedResourceDefinition/erd-12345abc"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1k8s~1extendedResourceDefinition/post/requestBody/content/application~1json/schema/allOf/0/properties/extendedResourceDefinition"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:k8s:extendedResourceDefinition"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Extended Resource Definition",
        "description": "Only the mapping parameter is updatable for extended resource definition.\n",
        "operationId": "oceanK8sExtendedResourceDefinitionUpdate",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1k8s~1extendedResourceDefinition~1%7BoceanExtendedResourceDefinitionId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/paths/~1ocean~1k8s~1extendedResourceDefinition/post/requestBody/content/application~1json/schema/allOf/0"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Update Extended Resource Definition Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/k8s/extendedResourceDefinition/erd-12345abc"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1k8s~1extendedResourceDefinition/post/requestBody/content/application~1json/schema/allOf/0/properties/extendedResourceDefinition"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:k8s:extendedResourceDefinition"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Extended Resource Definition",
        "description": "Delete a specified Ocean extended resource definition.\n",
        "operationId": "oceanK8sExtendedResourceDefinitionDelete",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Delete Extended Resource Definition Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/k8s/extendedResourceDefinition/erd-12345abc"
                            },
                            "method": {
                              "example": "DELETE"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/insights/k8s/cluster": {
      "summary": "Ocean Insights",
      "post": {
        "summary": "Create Cluster",
        "description": "Creates an Ocean Insight entity according to a given specification.\n\nPrerequisite:\n\nThe Ocean Controller is used to monitor the cluster resources and report back to Ocean. The Ocean Controller is required for Ocean Insights.<br />\n\nTo install the Ocean Controller, complete and run the following script on a machine with the kubectl command line tool installed and configured:\n\n```\n#!/usr/bin/env bash\ncurl -fsSL http://spotinst-public.s3.amazonaws.com/integrations/kubernetes/cluster-controller/scripts/init.sh | \\\nSPOTINST_TOKEN=<ENTER YOUR TOKEN HERE> \\\nSPOTINST_ACCOUNT=<ENTER YOUR SPOTINST ACCOUNT ID HERE> \\\nSPOTINST_CLUSTER_IDENTIFIER=<ENTER YOUR CLUSTER IDENTIFIER HERE> \\\nbash\n```\n",
        "operationId": "OceanInsightsClusterCreate",
        "tags": [
          "Ocean Insights"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "cluster"
                    ],
                    "properties": {
                      "cluster": {
                        "type": "object",
                        "title": "Ocean Insight",
                        "required": [
                          "name",
                          "controllerClusterId"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "oic-12345abc",
                            "readOnly": true,
                            "description": "Ocean Insight Cluster ID.\n"
                          },
                          "name": {
                            "type": "string",
                            "example": "Ocean::my-ocean-insight-name",
                            "description": "Add a name for the Ocean Insight cluster.\n"
                          },
                          "controllerClusterId": {
                            "type": "string",
                            "example": "oceanInsight.k8s",
                            "description": "The reporting identifier for the Ocean Controller.\n"
                          },
                          "createdAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2019-06-03T08:13:08.000Z",
                            "description": "A timestamp of the Ocean insight creation.\n"
                          },
                          "updatedAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2019-06-10T15:06:13.000Z",
                            "description": "A timestamp of the latest Ocean insight update.\n"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Insight Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/insight/k8s/cluster"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1insights~1k8s~1cluster/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:insight:k8s"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Clusters",
        "description": "Get the configurations for all Ocean Insights clusters in the specified account.\n",
        "operationId": "OceanInsightsClusterList",
        "tags": [
          "Ocean Insights"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Insight Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/insight/k8s/cluster"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "The Ocean Insight cluster.\n",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "o-134abcd",
                                    "description": "Ocean Insight cluster ID.\n"
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "test",
                                    "description": "Ocean Insight cluster name.\n"
                                  },
                                  "controllerClusterId": {
                                    "type": "string",
                                    "example": "test-123124",
                                    "description": "The reporting identifier for the Ocean Controller.\n"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "readOnly": true,
                                    "format": "date-time",
                                    "example": "2021-03-17T08:13:08.000Z",
                                    "description": "A timestamp of the Ocean creation.\n"
                                  },
                                  "updatedAt": {
                                    "type": "string",
                                    "readOnly": true,
                                    "format": "date-time",
                                    "example": "2021-03-17T15:06:13.000Z",
                                    "description": "A timestamp of the latest Ocean update.\n"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:insight:k8s"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/insights/k8s/cluster/{OCEAN_INSIGHT_ID}": {
      "get": {
        "summary": "Get Cluster",
        "description": "Get the configurations for a specified Ocean Insight cluster.\n",
        "operationId": "OceanInsightsClusterGet",
        "tags": [
          "Ocean Insights"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "OCEAN_INSIGHT_ID",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "oic-abcd1234",
            "description": "The ID of the Ocean Insight cluster.\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Insight Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/insight/k8s/cluster/oic-12345abc"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1insights~1k8s~1cluster/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:insight:k8s"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Cluster",
        "description": "Delete a specified Ocean Insight cluster.\n",
        "operationId": "OceanInsightClusterDelete",
        "tags": [
          "Ocean Insights"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1insights~1k8s~1cluster~1%7BOCEAN_INSIGHT_ID%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Insight Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/insight/k8s/cluster/oic-12345abc"
                            },
                            "method": {
                              "example": "DELETE"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/cd/cluster": {
      "summary": "Ocean CD",
      "get": {
        "summary": "List Ocean CD Clusters",
        "description": "List all Ocean CD clusters.\n",
        "operationId": "OceanCDClusterList",
        "tags": [
          "Ocean CD"
        ],
        "responses": {
          "200": {
            "description": "Ocean CD Cluster Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body\n",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "required": [
                                      "cluster"
                                    ],
                                    "properties": {
                                      "lastHeartbeatTime": {
                                        "type": "string",
                                        "example": "2018-11-05T12:55:50.000+0000",
                                        "description": "Time stamp of latest time the controller sent heartbeat.\n"
                                      },
                                      "controllerInfo": {
                                        "type": "object",
                                        "title": "Ocean CD Controller Info",
                                        "description": "Contains controller detailed information.\n",
                                        "properties": {
                                          "nodeName": {
                                            "type": "string"
                                          },
                                          "controllerVersion": {
                                            "type": "string"
                                          },
                                          "podName": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "clusterInfo": {
                                        "type": "object",
                                        "title": "Ocean CD Cluster Info",
                                        "description": "Contains cluster detailed information.\n",
                                        "properties": {
                                          "kubernetesVersion": {
                                            "type": "string"
                                          },
                                          "cloudProvider": {
                                            "type": "string"
                                          },
                                          "kubernetesOrchestrator": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "notification": {
                                        "type": "object",
                                        "$ref": "#/paths/~1ocean~1cd~1cluster~1%7BclusterId%7D/put/requestBody/content/application~1json/schema/allOf/0/properties/notification"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "example": "oceanCluster"
                                      },
                                      "createdAt": {
                                        "type": "string",
                                        "example": "2018-11-05T12:55:50.000+0000"
                                      },
                                      "updatedAt": {
                                        "type": "string",
                                        "example": "2018-11-05T12:58:15.000+0000"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/cd/cluster/{clusterId}": {
      "summary": "Ocean CD",
      "get": {
        "summary": "Get Ocean CD Cluster",
        "description": "Get an existing Ocean CD cluster.\n",
        "operationId": "OceanCDClusterGet",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "clusterId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "cluster-prod",
            "description": "The identifier of the Ocean CD cluster\n"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1cd~1cluster/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Ocean CD Cluster",
        "description": "Update Ocean CD cluster notification settings.\n",
        "operationId": "OceanCDClusterUpdate",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "clusterId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "cluster-prod",
            "description": "The identifier of the Ocean CD cluster\n"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Ocean CD Cluster Notification Request",
                    "description": "Ocean CD cluster notification request entity.\n",
                    "properties": {
                      "notification": {
                        "type": "object",
                        "required": [
                          "notification"
                        ],
                        "properties": {
                          "minutesWithoutHeartbeat": {
                            "type": "number",
                            "example": 4,
                            "description": "Number of minutes without receiving cluster controller heartbeat\n"
                          },
                          "providers": {
                            "type": "array",
                            "description": "List of notification provider names\n",
                            "items": {
                              "type": "string",
                              "example": "provider1"
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Ocean CD Cluster",
        "description": "Delete an existing Ocean CD cluster.\n",
        "operationId": "OceanCDClusterDelete",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "clusterId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "cluster-prod",
            "description": "The identifier of the Ocean CD cluster\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/cd/environment": {
      "summary": "Ocean CD",
      "post": {
        "summary": "Create Ocean CD Environment",
        "description": "Create Ocean CD Environment.\n",
        "operationId": "OceanCDEnvironmentCreate",
        "tags": [
          "Ocean CD"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Ocean CD Environemt Request",
                    "description": "Ocean CD environment request.\n",
                    "properties": {
                      "environment": {
                        "type": "object",
                        "$ref": "#/paths/~1ocean~1cd~1environment/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/0"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1cd~1environment/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Ocean CD Environments",
        "description": "List all Ocean CD environments.\n",
        "operationId": "OceanCDEnvironmentList",
        "tags": [
          "Ocean CD"
        ],
        "responses": {
          "200": {
            "description": "Ocean CD Environment Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body\n",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "title": "Ocean CD Environemt",
                                    "description": "Ocean CD environment.\n",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "Identifier name for Ocean CD Environment. Must be a unique name",
                                        "example": "prod"
                                      },
                                      "clusterId": {
                                        "type": "string",
                                        "description": "Existing Ocean CD cluster identifier to apply this environment to",
                                        "example": "cluster-prod"
                                      },
                                      "namespace": {
                                        "type": "string",
                                        "description": "Restrict the Environment for a specific kubernetes cluster namespace. If not configured will be applied for all cluster namespaces",
                                        "example": "prod-ns"
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "clusterId"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "createdAt": {
                                        "type": "string",
                                        "example": "2018-11-05T12:55:50.000+0000"
                                      },
                                      "updatedAt": {
                                        "type": "string",
                                        "example": "2018-11-05T12:58:15.000+0000"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/cd/environment/{environmentName}": {
      "summary": "Ocean CD",
      "get": {
        "summary": "Get Ocean CD Environment",
        "description": "Get an existing Ocean CD Environment.\n",
        "operationId": "oceanCDEnvironmentGet",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "environmentName",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "prod",
            "description": "The identifier name of the Ocean CD Environment\n"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1cd~1environment/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Ocean CD Environment",
        "description": "Full Update of Ocean CD environment configuration.\n*All non included fields will be nullified*\n",
        "operationId": "OceanCDEnvironmentUpdate",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "environmentName",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "prod",
            "description": "The identifier name of the Ocean CD Environment\n"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "environment": {
                        "type": "object",
                        "$ref": "#/paths/~1ocean~1cd~1environment/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/0"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "patch": {
        "summary": "Patch Ocean CD Environment",
        "description": "Partial update Ocean CD environment configuration.\n",
        "operationId": "OceanCDEnvironmentPatch",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "environmentName",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "prod",
            "description": "The identifier name of the Ocean CD Environment\n"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "environment": {
                        "type": "object",
                        "title": "Ocean CD Cluster Environemt",
                        "properties": {
                          "clusterId": {
                            "type": "string",
                            "description": "Existing Ocean CD cluster identifier to apply this environment to",
                            "example": "cluster-prod"
                          },
                          "namespace": {
                            "type": "string",
                            "description": "Restrict the Environment for a specific kubernetes cluster namespace. If not configured will be applied for all cluster namespaces",
                            "example": "prod-ns"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Ocean CD Environment",
        "description": "Delete an existing Ocean CD environment.\n",
        "operationId": "OceanCDEnvironmentDelete",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "environmentName",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "prod",
            "description": "The identifier name of the Ocean CD Environment\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/cd/microservice": {
      "summary": "Ocean CD",
      "post": {
        "summary": "Create Ocean CD Microservice",
        "description": "Create Ocean CD microservice.\n",
        "operationId": "OceanCDMicroserviceCreate",
        "tags": [
          "Ocean CD"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Ocean CD Microservice Request",
                    "description": "Ocean CD microservice request entity.\n",
                    "properties": {
                      "microservice": {
                        "type": "object",
                        "$ref": "#/paths/~1ocean~1cd~1microservice/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/0"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1cd~1microservice/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Ocean CD Microservices",
        "description": "List all Ocean CD microservices.\n",
        "operationId": "OceanCDMicroserviceList",
        "tags": [
          "Ocean CD"
        ],
        "responses": {
          "200": {
            "description": "Ocean CD Microservice Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body\n",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "title": "Ocean CD Microservice Entity",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "Identifier name for Ocean CD Microservice. Must be a unique name",
                                        "example": "inventory-service"
                                      },
                                      "k8sResources": {
                                        "type": "object",
                                        "title": "Ocean CD K8S Resources",
                                        "description": "Kubernetes resources to bind to the Microservice",
                                        "properties": {
                                          "workload": {
                                            "type": "object",
                                            "title": "Ocean CD K8S Workload",
                                            "description": "Kubernetes workloads to bind to the Microservice",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "example": "deployment",
                                                "description": "Kubernetes workload type",
                                                "enum": [
                                                  "deployment"
                                                ]
                                              },
                                              "labels": {
                                                "type": "array",
                                                "items": {
                                                  "$ref": "#/paths/~1ocean~1cd~1microservice~1%7BmicroserviceName%7D/patch/requestBody/content/application~1json/schema/allOf/0/properties/microservice/properties/k8sResources/properties/workload/properties/labels/items"
                                                },
                                                "description": "Set of Kubernetes labels that exist on the desired workload (metadata.labels)"
                                              },
                                              "versionLabelKey": {
                                                "type": "string",
                                                "description": "Kubernetes label key name for identifying the microservice version. If not configured, the image will be considered as the version.",
                                                "example": "serviceVersion"
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "labels"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "workload"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "k8sResources"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "createdAt": {
                                        "type": "string",
                                        "example": "2018-11-05T12:55:50.000+0000"
                                      },
                                      "updatedAt": {
                                        "type": "string",
                                        "example": "2018-11-05T12:58:15.000+0000"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/cd/microservice/{microserviceName}": {
      "summary": "Ocean CD",
      "get": {
        "summary": "Get Ocean CD Microservice",
        "description": "Get an existing Ocean CD microservice.\n",
        "operationId": "oceanCDMicroserviceGet",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "microserviceName",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "inventory-service",
            "description": "The identifier name of the Ocean CD Microservice\n"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1cd~1microservice/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Ocean CD Microservice",
        "description": "Full Update of Ocean CD microservice configuration.\n*All non included fields will be nullified*\n",
        "operationId": "OceanCDMicroserviceUpdate",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "microserviceName",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "inventory-service",
            "description": "The identifier name of the Ocean CD Microservice\n"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Ocean CD Microservice Request",
                    "description": "Ocean CD microservice request.\n",
                    "properties": {
                      "microservice": {
                        "type": "object",
                        "title": "Ocean CD Microservice Entity",
                        "properties": {
                          "k8sResources": {
                            "type": "object",
                            "$ref": "#/paths/~1ocean~1cd~1microservice/post/requestBody/content/application~1json/schema/allOf/0/properties/microservice/properties/k8sResources"
                          }
                        },
                        "required": [
                          "k8sResources"
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "patch": {
        "summary": "Patch Ocean CD Microservice",
        "description": "Partial update Ocean CD microservice configuration.\n",
        "operationId": "OceanCDMicroservicePatch",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "microserviceName",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "inventory-service",
            "description": "The identifier name of the Ocean CD Microservice\n"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Ocean CD Microservice Request",
                    "description": "Ocean CD microservice request entity.\n",
                    "properties": {
                      "microservice": {
                        "type": "object",
                        "title": "Ocean CD Microservice Entity",
                        "description": "Represents Ocean CD microservice.\n",
                        "properties": {
                          "k8sResources": {
                            "type": "object",
                            "title": "Ocean CD K8S Resources",
                            "description": "Kubernetes resources to bind to the Microservice",
                            "properties": {
                              "workload": {
                                "type": "object",
                                "title": "Ocean CD K8S Workload",
                                "description": "Kubernetes workloads to bind to the Microservice",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "example": "deployment",
                                    "description": "Kubernetes workload type",
                                    "enum": [
                                      "deployment"
                                    ]
                                  },
                                  "labels": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "title": "Ocean CD Label",
                                      "description": "Represents k8s label key&value entry.\n",
                                      "properties": {
                                        "key": {
                                          "type": "string",
                                          "example": "app"
                                        },
                                        "value": {
                                          "type": "string",
                                          "example": "inventory"
                                        }
                                      }
                                    },
                                    "description": "Set of Kubernetes labels that exist on the desired workload (metadata.labels)"
                                  },
                                  "versionLabelKey": {
                                    "type": "string",
                                    "description": "Kubernetes label key name for identifying the microservice version. If not configured, the image will be considered as the version."
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Ocean CD Microservice",
        "description": "Delete an existing Ocean CD microservice.\n",
        "operationId": "OceanCDMicroserviceDelete",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "microserviceName",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "inventory-service",
            "description": "The identifier name of the Ocean CD Microservice\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/cd/notificationProvider": {
      "summary": "Ocean CD",
      "post": {
        "summary": "Create Ocean CD Notification Provider",
        "description": "Create Ocean CD notification provider.\n",
        "operationId": "OceanCDNotificationProviderCreate",
        "tags": [
          "Ocean CD"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Ocean CD Notification Provider Request",
                    "description": "Ocean CD notification provider request.\n",
                    "properties": {
                      "notificationProvider": {
                        "type": "object",
                        "$ref": "#/paths/~1ocean~1cd~1notificationProvider/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/0"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1cd~1notificationProvider/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Ocean CD Notification Providers",
        "description": "List all Ocean CD notification providers.\n",
        "operationId": "OceanCDNotificationProviderList",
        "tags": [
          "Ocean CD"
        ],
        "responses": {
          "200": {
            "description": "Ocean CD Notification Provider Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body\n",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "title": "Ocean CD Notification Provider",
                                    "description": "Represents notification provider. **Only one type can be defined (webhook / slack)**\n",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "Identifier name for Ocean CD Notification Provider. Must be a unique name",
                                        "example": "rollouts-webhook"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "webhook": {
                                        "type": "object",
                                        "title": "Ocean CD Webhook",
                                        "description": "Represents webhook destination definition.\n",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://my-webhook.organization.com/dsg267dg2723d221ed-2d2d2d"
                                          },
                                          "internal": {
                                            "type": "boolean",
                                            "description": "Optional, determines that this webhook is internal (default is false). The notification will be sent via the cluster",
                                            "example": true
                                          }
                                        },
                                        "required": [
                                          "url"
                                        ]
                                      },
                                      "slack": {
                                        "type": "object",
                                        "title": "Ocean CD Slack",
                                        "description": "Represents slack destination definition.\n",
                                        "properties": {
                                          "webhookUrl": {
                                            "type": "string",
                                            "example": "https://hooks.slack.com/services/SDFEWFWERW/WFWEFRHAFRQWE/SDASFEWF35423rEWDF23"
                                          }
                                        },
                                        "required": [
                                          "url"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "name"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "createdAt": {
                                        "type": "string",
                                        "example": "2018-11-05T12:55:50.000+0000"
                                      },
                                      "updatedAt": {
                                        "type": "string",
                                        "example": "2018-11-05T12:58:15.000+0000"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/cd/notificationProvider/{notificationProviderName}": {
      "summary": "Ocean CD",
      "get": {
        "summary": "Get Ocean CD Notification Provider",
        "description": "Get an existing Ocean CD notification provider.\n",
        "operationId": "oceanCDNotificationProviderGet",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "notificationProviderName",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "rollouts-webhook",
            "description": "The identifier name of the Ocean CD Notification Provider\n"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1cd~1notificationProvider/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Ocean CD Notification Provider",
        "description": "Full Update of Ocean CD notification provider configuration. *All non included fields will be nullified*\n",
        "operationId": "OceanCDNotificationProviderUpdate",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "notificationProviderName",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "rollouts-webhook",
            "description": "The identifier name of the Ocean CD Notification Provider\n"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Ocean CD Notification Provider Request",
                    "description": "Ocean CD notification provider request.\n",
                    "properties": {
                      "notificationProvider": {
                        "type": "object",
                        "title": "Ocean CD Notification Provider",
                        "description": "Represents notification provider. **Only one type can be defined (webhook / slack)**\n",
                        "properties": {
                          "description": {
                            "type": "string"
                          },
                          "webhook": {
                            "type": "object",
                            "$ref": "#/paths/~1ocean~1cd~1notificationProvider/post/requestBody/content/application~1json/schema/allOf/0/properties/notificationProvider/properties/webhook"
                          },
                          "slack": {
                            "type": "object",
                            "$ref": "#/paths/~1ocean~1cd~1notificationProvider/post/requestBody/content/application~1json/schema/allOf/0/properties/notificationProvider/properties/slack"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "patch": {
        "summary": "Patch Ocean CD Notification Provider",
        "description": "Partial update Ocean CD notification provider configuration.\n",
        "operationId": "OceanCDNotificationProviderPatch",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "notificationProviderName",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "rollouts-webhook",
            "description": "The identifier name of the Ocean CD Notification Provider\n"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Ocean CD Notification Provider Request",
                    "description": "Ocean CD notification provider request.\n",
                    "properties": {
                      "notificationProvider": {
                        "type": "object",
                        "title": "Ocean CD Notification Provider",
                        "description": "Represents notification provider. **Only one type can be defined (webhook / slack)**\n",
                        "properties": {
                          "description": {
                            "type": "string"
                          },
                          "webhook": {
                            "type": "object",
                            "$ref": "#/paths/~1ocean~1cd~1notificationProvider/post/requestBody/content/application~1json/schema/allOf/0/properties/notificationProvider/properties/webhook"
                          },
                          "slack": {
                            "type": "object",
                            "$ref": "#/paths/~1ocean~1cd~1notificationProvider/post/requestBody/content/application~1json/schema/allOf/0/properties/notificationProvider/properties/slack"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Ocean CD Notification Provider",
        "description": "Delete an existing Ocean CD notification provider.\n",
        "operationId": "OceanCDNotificationProviderDelete",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "notificationProviderName",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "rollouts-webhook",
            "description": "The identifier name of the Ocean CD Notification Provider\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/cd/rolloutSpec": {
      "summary": "Ocean CD",
      "post": {
        "summary": "Create Ocean CD Rollout Spec",
        "description": "Create Ocean CD rollout spec.\n",
        "operationId": "OceanCDRolloutSpecCreate",
        "tags": [
          "Ocean CD"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Ocean CD Rollout Spec Request",
                    "description": "Ocean CD rollout spec request entity.\n",
                    "properties": {
                      "rolloutSpec": {
                        "type": "object",
                        "$ref": "#/paths/~1ocean~1cd~1rolloutSpec/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/0"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1cd~1rolloutSpec/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Ocean CD Rollout Specs",
        "description": "List all Ocean CD rollout specs.\n",
        "operationId": "OceanCDRolloutSpecList",
        "tags": [
          "Ocean CD"
        ],
        "responses": {
          "200": {
            "description": "Ocean CD Rollout Spec Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body\n",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "title": "Ocean CD Rollout Spec",
                                    "description": "Ocean CD rollout spec entity.\n",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "Identifier name for Ocean CD Rollout Spec. Must be a unique name",
                                        "example": "inventory-prod-rolling"
                                      },
                                      "microservice": {
                                        "type": "string",
                                        "description": "Name of existing Ocean CD Microservice",
                                        "example": "inventory-service"
                                      },
                                      "environment": {
                                        "type": "string",
                                        "description": "Name of existing Ocean CD Environment",
                                        "example": "prod"
                                      },
                                      "strategy": {
                                        "type": "object",
                                        "title": "Ocean CD Rollout Spec Strategy",
                                        "description": "Determines the rollout spec strategy.\n",
                                        "properties": {
                                          "rolling": {
                                            "type": "object",
                                            "title": "Ocean CD Rollout Rolling Strategy",
                                            "description": "Determines Rolling Update strategy for rollout\n",
                                            "properties": {
                                              "verification": {
                                                "type": "object",
                                                "title": "Ocean CD Rollout Verification",
                                                "description": "Determines rollout verification configuration.\n",
                                                "properties": {
                                                  "phases": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "title": "Ocean CD Rollout Verification Phase",
                                                      "description": "Represents rollout verification phase entity.\n",
                                                      "properties": {
                                                        "initialDelay": {
                                                          "type": "string",
                                                          "description": "Duration of time to wait before starting verification phase. format: [number][unit -s/m/h]. example: 30s/2m/5m",
                                                          "example": "2m"
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "description": "Name for the verificaton phase",
                                                          "example": "automation-tests"
                                                        },
                                                        "externalVerification": {
                                                          "type": "object",
                                                          "title": "OceanCD Rollout External Verification",
                                                          "description": "Determines External verification configuration. A status API call should be received in the given timeout.\n",
                                                          "properties": {
                                                            "fallback": {
                                                              "type": "string",
                                                              "enum": [
                                                                "fail",
                                                                "continue"
                                                              ],
                                                              "description": "Fallback action in case timeout is reached and external verification status was not received",
                                                              "example": "fail"
                                                            },
                                                            "timeout": {
                                                              "type": "string",
                                                              "description": "Duration of time to wait for external verification status API call. format: [number][unit -s/m/h]. example: 30s/2m/5m",
                                                              "example": "10m"
                                                            }
                                                          },
                                                          "required": [
                                                            "timeout",
                                                            "fallback"
                                                          ]
                                                        }
                                                      },
                                                      "required": [
                                                        "name"
                                                      ]
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "notification": {
                                        "type": "object",
                                        "title": "OceanCD Rollout Notification",
                                        "description": "Determines notification configuration for the rollout events\n",
                                        "properties": {
                                          "providers": {
                                            "description": "List of Notification Provider names",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            },
                                            "example": [
                                              "rollouts-webhook"
                                            ]
                                          }
                                        }
                                      },
                                      "failurePolicy": {
                                        "type": "object",
                                        "title": "OceanCD Rollout Rollback",
                                        "description": "Determines the rollout behavior in case of failure\n",
                                        "properties": {
                                          "rollback": {
                                            "type": "object",
                                            "title": "OceanCD Rollout Rollback",
                                            "description": "Determines automatic rollback in case of failure.\n",
                                            "properties": {
                                              "mode": {
                                                "type": "string",
                                                "enum": [
                                                  "immediate",
                                                  "newRollout"
                                                ],
                                                "example": "immediate"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "microservice",
                                      "environment",
                                      "strategy"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "createdAt": {
                                        "type": "string",
                                        "example": "2018-11-05T12:55:50.000+0000"
                                      },
                                      "updatedAt": {
                                        "type": "string",
                                        "example": "2018-11-05T12:58:15.000+0000"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/cd/rolloutSpec/{rolloutSpecName}": {
      "summary": "Ocean CD",
      "get": {
        "summary": "Get Ocean CD Rollout Spec",
        "description": "Get the configuration of an existing Ocean CD rollout spec.\n",
        "operationId": "oceanCDRolloutSpecGet",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "rolloutSpecName",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "inventory-prod-rolling",
            "description": "The identifier name of the Ocean CD Rollout Spec\n"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1cd~1rolloutSpec/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Ocean CD Rollout Spec",
        "description": "Full Update Ocean CD rollout spec configuration.\n*All non included fields will be nullified*\n",
        "operationId": "OceanCDRolloutSpecUpdate",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "rolloutSpecName",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "inventory-prod-rolling",
            "description": "The identifier name of the Ocean CD Rollout Spec\n"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Ocean CD Rollout Spec Request",
                    "description": "Ocean CD rollout spec request entity.\n",
                    "properties": {
                      "rolloutSpec": {
                        "type": "object",
                        "title": "Ocean CD Rollout Spec",
                        "description": "Ocean CD rollout spec entity.\n",
                        "properties": {
                          "microservice": {
                            "type": "string",
                            "description": "Name of existing Ocean CD Microservice"
                          },
                          "environment": {
                            "type": "string",
                            "description": "Name of existing Ocean CD Environment"
                          },
                          "strategy": {
                            "type": "object",
                            "$ref": "#/paths/~1ocean~1cd~1rolloutSpec/post/requestBody/content/application~1json/schema/allOf/0/properties/rolloutSpec/properties/strategy"
                          },
                          "notification": {
                            "type": "object",
                            "$ref": "#/paths/~1ocean~1cd~1rolloutSpec/post/requestBody/content/application~1json/schema/allOf/0/properties/rolloutSpec/properties/notification"
                          },
                          "failurePolicy": {
                            "type": "object",
                            "$ref": "#/paths/~1ocean~1cd~1rolloutSpec/post/requestBody/content/application~1json/schema/allOf/0/properties/rolloutSpec/properties/failurePolicy"
                          }
                        },
                        "required": [
                          "microservice",
                          "environment",
                          "strategy"
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "patch": {
        "summary": "Patch Ocean CD Rollout Spec",
        "description": "Partial update Ocean CD rollout spec configuration.\n",
        "operationId": "OceanCDRolloutSpecPatch",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "rolloutSpecName",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "inventory-prod-rolling",
            "description": "The identifier name of the Ocean CD Rollout Spec\n"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Ocean CD Rollout Spec Request",
                    "description": "Ocean CD rollout spec request entity.\n",
                    "properties": {
                      "rolloutSpec": {
                        "type": "object",
                        "title": "Ocean CD Rollout Spec",
                        "description": "Ocean CD rollout spec entity.\n",
                        "properties": {
                          "microservice": {
                            "type": "string",
                            "description": "Name of existing Ocean CD Microservice"
                          },
                          "environment": {
                            "type": "string",
                            "description": "Name of existing Ocean CD Environment"
                          },
                          "strategy": {
                            "type": "object",
                            "$ref": "#/paths/~1ocean~1cd~1rolloutSpec/post/requestBody/content/application~1json/schema/allOf/0/properties/rolloutSpec/properties/strategy"
                          },
                          "notification": {
                            "type": "object",
                            "$ref": "#/paths/~1ocean~1cd~1rolloutSpec/post/requestBody/content/application~1json/schema/allOf/0/properties/rolloutSpec/properties/notification"
                          },
                          "failurePolicy": {
                            "type": "object",
                            "$ref": "#/paths/~1ocean~1cd~1rolloutSpec/post/requestBody/content/application~1json/schema/allOf/0/properties/rolloutSpec/properties/failurePolicy"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Ocean CD Rollout Spec",
        "description": "Delete an existing Ocean CD rollout spec.\n",
        "operationId": "OceanCDRolloutSpecDelete",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "rolloutSpecName",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "inventory-prod-rolling",
            "description": "The identifier name of the Ocean CD Rollout Spec\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/cd/rollout": {
      "summary": "Ocean CD",
      "get": {
        "summary": "List Ocean CD Rollouts",
        "description": "List Ocean CD rollouts.\n",
        "operationId": "OceanCDRolloutList",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "fromDate",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "2021-10-14",
            "description": "Date to fetch the rollouts from\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean CD Rollout Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body\n",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "title": "Ocean CD Rollout",
                                    "description": "Represents rollout entity.\n",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "example": "rol-nf71c7ab7d53"
                                      },
                                      "rolloutSpec": {
                                        "type": "string",
                                        "example": "inventory-prod-rolling"
                                      },
                                      "microservice": {
                                        "type": "string",
                                        "example": "inventory-service"
                                      },
                                      "environment": {
                                        "type": "string",
                                        "example": "prod"
                                      },
                                      "strategy": {
                                        "type": "string",
                                        "example": "rolling"
                                      },
                                      "initiator": {
                                        "type": "string",
                                        "example": "detection"
                                      },
                                      "status": {
                                        "type": "string",
                                        "enum": [
                                          "inProgress",
                                          "finished",
                                          "failed",
                                          "canceled"
                                        ],
                                        "example": "finished"
                                      },
                                      "namespace": {
                                        "type": "string",
                                        "example": "prod-ns"
                                      },
                                      "deploymentName": {
                                        "type": "string",
                                        "example": "inventory-app"
                                      },
                                      "clusterId": {
                                        "type": "string",
                                        "example": "cluster-prod"
                                      },
                                      "cloudProvider": {
                                        "type": "string",
                                        "example": "aws"
                                      },
                                      "oldVersion": {
                                        "type": "string",
                                        "example": "v.1.23"
                                      },
                                      "newVersion": {
                                        "type": "string",
                                        "example": "v.1.24"
                                      },
                                      "startTime": {
                                        "type": "string",
                                        "example": "2018-11-05T12:10:50.000+0000"
                                      },
                                      "endTime": {
                                        "type": "string",
                                        "example": "2018-11-05T12:33:22.000+0000"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/cd/rollout/{rolloutId}": {
      "summary": "Ocean CD",
      "put": {
        "summary": "Ocean CD Rollout Actions",
        "description": "Execute action on an existing Ocean CD rollout.\n",
        "operationId": "OceanCDRolloutActions",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "rolloutId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "rol-123456",
            "description": "The identifier of the Ocean CD rollout\n"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Ocean CD Cluster Rollout Update Request",
                    "description": "Ocean CD cluster rollout update request entity.\n",
                    "properties": {
                      "action": {
                        "type": "string",
                        "enum": [
                          "rollback"
                        ]
                      }
                    },
                    "required": [
                      "action"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/cd/rollout/{rolloutId}/externalVerification": {
      "summary": "Ocean CD",
      "put": {
        "summary": "Update Ocean CD Rollout External Verification",
        "description": "Update Ocean CD on-going rollout external verification status.\n",
        "operationId": "OceanCDExternalVerificationUpdate",
        "tags": [
          "Ocean CD"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "rolloutId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "rol-12345",
            "description": "The identifier of the Ocean CD rollout\n"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Ocean CD Rollout External Verification Request",
                    "description": "Ocean CD rollout external verification status update request entity.\n",
                    "properties": {
                      "status": {
                        "type": "string",
                        "enum": [
                          "failed",
                          "passed"
                        ]
                      }
                    },
                    "required": [
                      "status"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/spark/cluster": {
      "summary": "Ocean Spark",
      "get": {
        "summary": "List Clusters",
        "description": "List the Ocean Spark clusters in the specified account.\n",
        "operationId": "OceanSparkClusterList",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          },
          {
            "in": "query",
            "name": "fromDate",
            "required": false,
            "description": "Get items on or after this date (ISO 8601 or Unix timestamp)\n",
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/paths/~1ocean~1spark~1cluster/get/parameters/1/components/schemas/unix"
                },
                {
                  "$ref": "#/paths/~1ocean~1spark~1cluster/get/parameters/1/components/schemas/dateTime"
                }
              ]
            },
            "example": "2020-09-01 or fromDate=1598918400000",
            "components": {
              "schemas": {
                "unix": {
                  "type": "string",
                  "description": "A valid Unix timestamp: 1598918400000"
                },
                "dateTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "A valid date-time string : 2020-09-01"
                }
              }
            }
          },
          {
            "in": "query",
            "name": "toDate",
            "required": false,
            "description": "Get items on or before this date (ISO 8601 or Unix timestamp)",
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/paths/~1ocean~1spark~1cluster/get/parameters/2/components/schemas/unix"
                },
                {
                  "$ref": "#/paths/~1ocean~1spark~1cluster/get/parameters/2/components/schemas/dateTime"
                }
              ]
            },
            "example": "2020-09-01 or toDate=1598918400000",
            "components": {
              "schemas": {
                "unix": {
                  "type": "string",
                  "description": "A valid Unix timestamp: 1598918400000"
                },
                "dateTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "A valid date-time string : 2020-09-01"
                }
              }
            }
          },
          {
            "in": "query",
            "name": "state",
            "required": false,
            "description": "Optionally filter on the current state of the Ocean Spark cluster",
            "schema": {
              "description": "The current state of the Ocean Spark cluster.\n* `PROGRESSING`: The cluster resources are being created.\n* `DELETING`: The cluster resources are being deleted.\n* `AVAILABLE`: The cluster is available.\n* `UNREACHABLE`: The cluster stopped sending heartbeat. This can be caused by the cluster going down or by a networking issue between the cluster and Spot's backend.\n* `DEGRADED`: One of the cluster components is unhealthy. Some features may not be available.\n* `FAILING`: A critical cluster component is unhealthy.\n* `UNKNOWN`: The cluster status API has an unexpected, internal error.\n",
              "example": "AVAILABLE",
              "enum": [
                "AVAILABLE",
                "PROGRESSING",
                "DEGRADED",
                "FAILING",
                "UNKNOWN",
                "UNREACHABLE",
                "DELETING"
              ]
            }
          },
          {
            "in": "query",
            "name": "controllerClusterId",
            "required": false,
            "schema": {
              "type": "string",
              "example": "my-ocean-cluster",
              "description": "The reporting identifier of the Ocean controller in the Ocean cluster\n"
            },
            "description": "Optionally filter on the reporting identifier of the Ocean controller in the Ocean cluster (controllerClusterId)\n"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of Ocean Spark clusters (can be a single cluster)",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body\n",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "id",
                                  "controllerClusterId",
                                  "oceanClusterId",
                                  "state",
                                  "region",
                                  "k8sVersion",
                                  "nodeCount",
                                  "runningAppCount",
                                  "oceanControllerLastHeartbeat",
                                  "operatorLastHeartbeat",
                                  "createdAt",
                                  "updatedAt"
                                ],
                                "allOf": [
                                  {
                                    "$ref": "#/paths/~1aws~1emr~1mrScaler/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/1"
                                  },
                                  {
                                    "type": "object",
                                    "description": "The description of an Ocean Spark cluster\n",
                                    "properties": {
                                      "id": {
                                        "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/1/schema"
                                      },
                                      "controllerClusterId": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster/get/parameters/4/schema"
                                      },
                                      "oceanClusterId": {
                                        "type": "string",
                                        "example": "o-d3a2908e",
                                        "description": "A unique identifier for the Ocean cluster"
                                      },
                                      "state": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster/get/parameters/3/schema"
                                      },
                                      "region": {
                                        "type": "string",
                                        "example": "us-west-2",
                                        "description": "The region where the Ocean Spark cluster lives\n"
                                      },
                                      "k8sVersion": {
                                        "type": "string",
                                        "description": "The Kubernetes API of the Ocean Spark cluster\n",
                                        "example": "v1.21.2-eks-0389ca3"
                                      },
                                      "nodeCount": {
                                        "type": "integer",
                                        "description": "The number of nodes currently provisioned in the Ocean Spark cluster",
                                        "example": 1
                                      },
                                      "runningAppCount": {
                                        "type": "integer",
                                        "description": "The number of Spark applications currently running in the Ocean Spark cluster",
                                        "example": 3
                                      },
                                      "oceanControllerLastHeartbeat": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The last heartbeat received from the Ocean controller running in the Ocean cluster",
                                        "example": "2021-11-20T13:29:53.000Z"
                                      },
                                      "operatorLastHeartbeat": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The last heartbeat received from the Ocean Spark operator running in the Ocean Spark cluster",
                                        "example": "2021-11-20T13:29:30.000Z"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/spark/cluster/{clusterId}": {
      "summary": "Ocean Spark",
      "get": {
        "summary": "Get Cluster",
        "description": "Describe an Ocean Spark cluster.\n",
        "operationId": "OceanSparkClusterGet",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          },
          {
            "in": "path",
            "name": "clusterId",
            "required": true,
            "schema": {
              "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/1/schema"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1spark~1cluster/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Cluster",
        "description": "Delete an Ocean Spark cluster.\n\nRemoving a cluster will disconnect it from Ocean for Spark. This action is permanent and cannot be undone.\n\nThe Ocean for Spark resources will be uninstalled from the cluster, but the Ocean cluster itself (and related Kubernetes resources) will not be deleted.\n",
        "operationId": "OceanSparkClusterDelete",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1spark~1cluster/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/spark/cluster/{clusterId}/appCompletionTrend": {
      "summary": "Ocean Spark",
      "get": {
        "summary": "Cluster application completion trend",
        "description": "Aggregates the number of apps reaching a terminal state (completed, failed, killed, ...)  within time buckets.\n",
        "operationId": "OceanSparkClusterAppCompletionTrend",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1statistics/get/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "description": "Number of applications reaching a terminal state, grouped by the terminal state and a time bucket.\n",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body\n",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "start",
                                  "end",
                                  "completed",
                                  "failed",
                                  "killed",
                                  "timed_out"
                                ],
                                "description": "The number of applications that ended in a given time range, grouped by the terminal state they reached.\n",
                                "properties": {
                                  "start": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Start of the time range\n",
                                    "example": "2021-11-18T17:09:37+00:00"
                                  },
                                  "end": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "End of the time range\n",
                                    "example": "2021-11-18T17:09:37+00:00"
                                  },
                                  "completed": {
                                    "type": "number",
                                    "description": "The number of apps successfully completed between >= start and < end\n",
                                    "example": "2021-11-18T17:09:37+00:00"
                                  },
                                  "failed": {
                                    "type": "number",
                                    "description": "The number of apps that failed between >= start and < end\n"
                                  },
                                  "killed": {
                                    "type": "number",
                                    "description": "The number of apps killed between >= start and <end\n"
                                  },
                                  "timed_out": {
                                    "type": "number",
                                    "description": "The number of apps that timed-out between >= start and < end\n"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/spark/cluster/{clusterId}/appLoadHistory": {
      "summary": "Ocean Spark",
      "get": {
        "summary": "Cluster application load history",
        "description": "Reports the number of applications in pending and running state within time buckets.\n",
        "operationId": "OceanSparkClusterAppLoadHistory",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1statistics/get/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "description": "Number of pending or running apps, within time buckets.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body\n",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "time",
                                  "pending",
                                  "running"
                                ],
                                "description": "Number of apps pending or running at a given point in time\n",
                                "properties": {
                                  "time": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Polling time\n",
                                    "example": "2021-11-18T17:09:37+00:00"
                                  },
                                  "pending": {
                                    "type": "number",
                                    "description": "Number of applications that were pending at the polling time. \n",
                                    "example": 0
                                  },
                                  "running": {
                                    "type": "number",
                                    "description": "Number of applications that were running at the polling time. \n",
                                    "example": 0
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/spark/cluster/{clusterId}/statistics": {
      "summary": "Ocean Spark",
      "get": {
        "summary": "Cluster runtime statistics",
        "description": "Returns a summary of the cluster usage since a given date in the past.\n",
        "operationId": "OceanSparkClusterStatistics",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          },
          {
            "in": "query",
            "name": "since",
            "required": true,
            "example": "2021-11-22",
            "description": "Date at which to start the analysis. If the time range up to now is less or equal to a day, values are reported grouped per hours. Otherwise, values are reported grouped per days.\n",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Runtime statistics for a given cluster.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body\n",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "time",
                                  "pending",
                                  "running"
                                ],
                                "description": "Summary of a cluster's usage statistics.\n",
                                "properties": {
                                  "id": {
                                    "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/1/schema"
                                  },
                                  "metrics": {
                                    "type": "object",
                                    "description": "Computed statistics about the performance and cost of Spark applications",
                                    "required": [
                                      "cost",
                                      "spark"
                                    ],
                                    "properties": {
                                      "cost": {
                                        "type": "object",
                                        "description": "The cloud cost of the Spark application. Updated every hour",
                                        "required": [
                                          "total",
                                          "createdAt",
                                          "updatedAt"
                                        ],
                                        "properties": {
                                          "createdAt": {
                                            "$ref": "#/paths/~1ocean~1spark~1job/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/createdAt"
                                          },
                                          "updatedAt": {
                                            "$ref": "#/paths/~1ocean~1spark~1job/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/updatedAt"
                                          },
                                          "total": {
                                            "type": "integer",
                                            "description": "The total cost of the Spark application in USD cents",
                                            "example": 0
                                          }
                                        }
                                      },
                                      "spark": {
                                        "type": "object",
                                        "description": "Computed statistics about the performance of the Spark application",
                                        "required": [
                                          "inputDataBytes",
                                          "outputDataBytes",
                                          "sparkCoresDurationSeconds",
                                          "efficiencyPercent",
                                          "createdAt",
                                          "updatedAt"
                                        ],
                                        "properties": {
                                          "createdAt": {
                                            "$ref": "#/paths/~1ocean~1spark~1job/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/createdAt"
                                          },
                                          "updatedAt": {
                                            "$ref": "#/paths/~1ocean~1spark~1job/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/updatedAt"
                                          },
                                          "sparkCoresDurationSeconds": {
                                            "format": "time-delta",
                                            "type": "number",
                                            "description": "The total core resources used by the application. This metric is calculated as the sum over each container (driver or executor) of its uptime duration multiplied by the number of cores allocated to it.\n"
                                          },
                                          "inputDataBytes": {
                                            "type": "integer",
                                            "description": "The number of bytes read by Spark, typically from an object store.\n"
                                          },
                                          "outputDataBytes": {
                                            "type": "integer",
                                            "description": "The number of bytes written by Spark, typically to an object store.\n"
                                          },
                                          "durationSeconds": {
                                            "description": "The duration of the Spark application\n",
                                            "format": "time-delta",
                                            "type": "number"
                                          },
                                          "efficiencyPercent": {
                                            "type": "number",
                                            "description": "The fraction of the time that Spark executor cores are running Spark tasks.\n"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/spark/app": {
      "summary": "Ocean Spark",
      "get": {
        "summary": "List Applications",
        "description": "List Spark applications on all Ocean Spark clusters in the specified account. This endpoint is paginated (cursor pagination).\n",
        "operationId": "OceanSparkApplicationList",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123456789",
            "description": "The ID of the account associated with your token. If omitted the oldest account in the organization will be used.\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "clusterId",
            "required": false,
            "description": "Optionally filter on the Ocean Spark cluster ID\n",
            "schema": {
              "type": "string",
              "example": "osc-20fac3f1",
              "description": "A unique identifier for the Ocean Spark cluster\n"
            }
          },
          {
            "in": "query",
            "name": "jobId",
            "required": false,
            "description": "Optionally filter on the job ID\n",
            "schema": {
              "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/jobId/allOf/0"
            }
          },
          {
            "in": "query",
            "name": "submissionSource",
            "required": false,
            "description": "Optionally filter on the submission source of the Spark application\n",
            "schema": {
              "description": "The source that initiated the application submission",
              "example": "public-api",
              "type": "string",
              "enum": [
                "public-api",
                "jupyter-enterprise-gateway"
              ]
            }
          },
          {
            "in": "query",
            "name": "state",
            "required": false,
            "description": "Optionally filter on the state of the Spark application\n",
            "schema": {
              "description": "The current state of the Spark application.\n\nTransient states:\n* `NEW`: The application creation request was received. The spark-submit operation is pending.\n* `SUBMITTED`: The spark-submit operation was successful. The Spark driver pod is now pending: the k8s cluster must find room for it and download its Docker image.\n* `RUNNING`: The Spark driver pod starts running. It will now execute your application code.\n\nTerminal states:\n* `COMPLETED`: The application completed successfully.\n* `FAILED`: The application exited with a non-zero exit code.\n* `SUBMISSION_FAILED`: The Spark application could not be started because the spark-submit operation failed.\n",
              "example": "RUNNING",
              "enum": [
                "NEW",
                "SUBMITTED",
                "RUNNING",
                "COMPLETED",
                "FAILED",
                "SUBMISSION_FAILED",
                "UNKNOWN"
              ]
            }
          },
          {
            "in": "query",
            "name": "userId",
            "required": false,
            "description": "Optionally filter on the user who created the Spark application\n",
            "schema": {
              "type": "integer",
              "description": "The identifier of the user who created the application",
              "example": 59438
            }
          },
          {
            "in": "query",
            "name": "searchTerm",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Optionally search for a substring of the application ID, application display name, job ID or job display name\n"
          },
          {
            "in": "query",
            "name": "minCreatedAt",
            "required": false,
            "example": "2021-11-22",
            "description": "Optionally filter on the creation date",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "maxCreatedAt",
            "required": false,
            "example": "2021-11-22",
            "description": "Optionally filter on the creation date",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "minUpdatedAt",
            "required": false,
            "example": "2021-11-22",
            "description": "Optionally filter on the last update date",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "maxUpdatedAt",
            "required": false,
            "example": "2021-11-22",
            "description": "Optionally filter on the last update date",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "description": "The number of applications returned by page",
            "schema": {
              "type": "integer",
              "default": 20
            }
          },
          {
            "in": "query",
            "name": "after",
            "required": false,
            "schema": {
              "type": "string",
              "description": "the cursor to the next page of items in the collection",
              "example": "MjAyMS0xMS0xOFQwOTo1MjowNS43Mzg4NjArMDA6MDB8NWM3NGY2MDYtZDYxNy00MzcxLWE5ZDktNjc2ZDkxMzRlNWFk"
            },
            "description": "If specified, the page returned in the response contains the items right after this cursor in the ordering\n"
          },
          {
            "in": "query",
            "name": "before",
            "required": false,
            "schema": {
              "type": "string",
              "description": "the cursor to the previous page of items in the collection",
              "example": "MjAyMS0xMS0xOFQwOTo1MjowNS43Mzg4NjArMDA6MDB8NWM3NGY2MDYtZDYxNy00MzcxLWE5ZDktNjc2ZDkxMzRlNWFk"
            },
            "description": "If specified, the page returned in the response contains the items right before this cursor in the ordering\n"
          },
          {
            "in": "query",
            "name": "order",
            "required": false,
            "description": "The direction of the ordering",
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ],
              "default": "DESC"
            }
          },
          {
            "in": "query",
            "name": "orderBy",
            "required": false,
            "description": "The field on which to sort",
            "schema": {
              "type": "string",
              "enum": [
                "CREATED_AT"
              ],
              "default": "CREATED_AT"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of Spark application",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body\n",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "required": [
                                      "page",
                                      "total"
                                    ],
                                    "properties": {
                                      "total": {
                                        "type": "integer",
                                        "description": "The total number of items in the collection",
                                        "example": 3256
                                      },
                                      "page": {
                                        "type": "array",
                                        "description": "The items of the current page",
                                        "example": []
                                      },
                                      "after": {
                                        "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/12/schema"
                                      },
                                      "before": {
                                        "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/13/schema"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "page": {
                                        "type": "array",
                                        "items": {
                                          "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/spark/cluster/{clusterId}/app": {
      "summary": "Ocean Spark",
      "get": {
        "summary": "List Applications in Cluster",
        "description": "List the Spark applications in a specific cluster. This endpoint is paginated (cursor pagination).\n",
        "operationId": "OceanSparkClusterApplicationList",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/3"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/4"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/5"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/6"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/7"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/8"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/9"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/10"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/11"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/12"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/13"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/14"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/15"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1spark~1app/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "summary": "Submit an Application",
        "description": "Submit a Spark application in an Ocean Spark cluster\n",
        "operationId": "OceanSparkClusterApplicationSubmit",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "jobId"
                ],
                "properties": {
                  "appId": {
                    "allOf": [
                      {
                        "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1job~1%7BjobId%7D/get/parameters/2/schema/allOf/0"
                      },
                      {
                        "description": "A unique identifier for the Spark application, set by the user or auto-generated from the job ID",
                        "example": "daily-reporting-2021-08-18"
                      }
                    ]
                  },
                  "jobId": {
                    "description": "The ID of the job to which the Spark application belongs. If a job with this ID does not exist yet, it will be created.\n",
                    "allOf": [
                      {
                        "allOf": [
                          {
                            "type": "string",
                            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                          },
                          {
                            "description": "A unique identifier for an Ocean Spark job.\n",
                            "example": "daily-reporting"
                          }
                        ]
                      }
                    ]
                  },
                  "configOverrides": {
                    "description": "Configurations for the Spark application supplied in the request. Prefer using a config template for configurations that are stable across runs. Configurations in `configOverrides` have precedence over those in the config template.\n",
                    "allOf": [
                      {
                        "type": "object",
                        "description": "A configuration for a Spark application",
                        "additionalProperties": false,
                        "properties": {
                          "arguments": {
                            "items": {
                              "type": "string"
                            },
                            "title": "Arguments",
                            "type": "array"
                          },
                          "deps": {
                            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/Dependencies"
                          },
                          "driver": {
                            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/DriverSpec"
                          },
                          "executor": {
                            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/ExecutorSpec"
                          },
                          "hadoopConf": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "title": "Hadoopconf",
                            "type": "object"
                          },
                          "hadoopConfigMap": {
                            "title": "Hadoopconfigmap",
                            "type": "string"
                          },
                          "image": {
                            "title": "Image",
                            "type": "string"
                          },
                          "imagePullPolicy": {
                            "title": "Imagepullpolicy",
                            "type": "string"
                          },
                          "imagePullSecrets": {
                            "items": {
                              "type": "string"
                            },
                            "title": "Imagepullsecrets",
                            "type": "array"
                          },
                          "initContainerImage": {
                            "title": "Initcontainerimage",
                            "type": "string"
                          },
                          "mainApplicationFile": {
                            "title": "Mainapplicationfile",
                            "type": "string"
                          },
                          "mainClass": {
                            "title": "Mainclass",
                            "type": "string"
                          },
                          "memoryOverheadFactor": {
                            "title": "Memoryoverheadfactor",
                            "type": "string"
                          },
                          "availabilityZone": {
                            "title": "Availabilityzone",
                            "type": "string",
                            "description": "The availability zone to use for the Spark application pods. Leave this empty and Ocean Spark will choose the best availability zone for the Spark application"
                          },
                          "pythonVersion": {
                            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/PythonVersion"
                          },
                          "sparkConf": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "title": "Sparkconf",
                            "type": "object"
                          },
                          "sparkConfigMap": {
                            "title": "Sparkconfigmap",
                            "type": "string"
                          },
                          "sparkVersion": {
                            "title": "Sparkversion",
                            "type": "string"
                          },
                          "timeToLiveSeconds": {
                            "title": "Timetoliveseconds",
                            "type": "integer"
                          },
                          "type": {
                            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/SparkApplicationType"
                          },
                          "volumes": {
                            "items": {
                              "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/Volume"
                            },
                            "title": "Volumes",
                            "type": "array"
                          }
                        },
                        "components": {
                          "schemas": {
                            "AWSElasticBlockStoreVolumeSource": {
                              "properties": {
                                "fsType": {
                                  "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                                  "title": "Fstype",
                                  "type": "string"
                                },
                                "partition": {
                                  "description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).",
                                  "title": "Partition",
                                  "type": "integer"
                                },
                                "readOnly": {
                                  "description": "Specify \"true\" to force and set the ReadOnly property in VolumeMounts to \"true\". If omitted, the default is \"false\". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                                  "title": "Readonly",
                                  "type": "boolean"
                                },
                                "volumeID": {
                                  "description": "Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                                  "title": "Volumeid",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "volumeID"
                              ],
                              "title": "AWSElasticBlockStoreVolumeSource",
                              "type": "object"
                            },
                            "Affinity": {
                              "properties": {
                                "nodeAffinity": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/NodeAffinity"
                                    }
                                  ],
                                  "description": "Describes node affinity scheduling rules for the pod.",
                                  "title": "Nodeaffinity"
                                },
                                "podAffinity": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/PodAffinity"
                                    }
                                  ],
                                  "description": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).",
                                  "title": "Podaffinity"
                                },
                                "podAntiAffinity": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/PodAntiAffinity"
                                    }
                                  ],
                                  "description": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).",
                                  "title": "Podantiaffinity"
                                }
                              },
                              "title": "Affinity",
                              "type": "object"
                            },
                            "AzureDiskVolumeSource": {
                              "properties": {
                                "cachingMode": {
                                  "description": "Host Caching mode: None, Read Only, Read Write.",
                                  "title": "Cachingmode",
                                  "type": "string"
                                },
                                "diskName": {
                                  "description": "The Name of the data disk in the blob storage",
                                  "title": "Diskname",
                                  "type": "string"
                                },
                                "diskURI": {
                                  "description": "The URI the data disk in the blob storage",
                                  "title": "Diskuri",
                                  "type": "string"
                                },
                                "fsType": {
                                  "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                  "title": "Fstype",
                                  "type": "string"
                                },
                                "kind": {
                                  "description": "Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared",
                                  "title": "Kind",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "description": "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                                  "title": "Readonly",
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "diskName",
                                "diskURI"
                              ],
                              "title": "AzureDiskVolumeSource",
                              "type": "object"
                            },
                            "AzureFileVolumeSource": {
                              "properties": {
                                "readOnly": {
                                  "description": "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                                  "title": "Readonly",
                                  "type": "boolean"
                                },
                                "secretName": {
                                  "description": "the name of secret that contains Azure Storage Account Name and Key",
                                  "title": "Secretname",
                                  "type": "string"
                                },
                                "shareName": {
                                  "description": "Share Name",
                                  "title": "Sharename",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "secretName",
                                "shareName"
                              ],
                              "title": "AzureFileVolumeSource",
                              "type": "object"
                            },
                            "CSIVolumeSource": {
                              "properties": {
                                "driver": {
                                  "description": "Driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.",
                                  "title": "Driver",
                                  "type": "string"
                                },
                                "fsType": {
                                  "description": "Filesystem type to mount. Ex. \"ext4\", \"xfs\", \"ntfs\". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.",
                                  "title": "Fstype",
                                  "type": "string"
                                },
                                "nodePublishSecretRef": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/LocalObjectReference"
                                    }
                                  ],
                                  "description": "NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.",
                                  "title": "Nodepublishsecretref"
                                },
                                "readOnly": {
                                  "description": "Specifies a read-only configuration for the volume. Defaults to false (read/write).",
                                  "title": "Readonly",
                                  "type": "boolean"
                                },
                                "volumeAttributes": {
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "description": "VolumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.",
                                  "title": "Volumeattributes",
                                  "type": "object"
                                }
                              },
                              "required": [
                                "driver"
                              ],
                              "title": "CSIVolumeSource",
                              "type": "object"
                            },
                            "Capabilities": {
                              "properties": {
                                "add": {
                                  "description": "Added capabilities",
                                  "items": {
                                    "type": "string"
                                  },
                                  "title": "Add",
                                  "type": "array"
                                },
                                "drop": {
                                  "description": "Removed capabilities",
                                  "items": {
                                    "type": "string"
                                  },
                                  "title": "Drop",
                                  "type": "array"
                                }
                              },
                              "title": "Capabilities",
                              "type": "object"
                            },
                            "CephFSVolumeSource": {
                              "properties": {
                                "monitors": {
                                  "description": "Required: Monitors is a collection of Ceph monitors More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                  "items": {
                                    "type": "string"
                                  },
                                  "title": "Monitors",
                                  "type": "array"
                                },
                                "path": {
                                  "description": "Optional: Used as the mounted root, rather than the full Ceph tree, default is /",
                                  "title": "Path",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "description": "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                  "title": "Readonly",
                                  "type": "boolean"
                                },
                                "secretFile": {
                                  "description": "Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                  "title": "Secretfile",
                                  "type": "string"
                                },
                                "secretRef": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/LocalObjectReference"
                                    }
                                  ],
                                  "description": "Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                  "title": "Secretref"
                                },
                                "user": {
                                  "description": "Optional: User is the rados user name, default is admin More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                  "title": "User",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "monitors"
                              ],
                              "title": "CephFSVolumeSource",
                              "type": "object"
                            },
                            "CinderVolumeSource": {
                              "properties": {
                                "fsType": {
                                  "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                                  "title": "Fstype",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "description": "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                                  "title": "Readonly",
                                  "type": "boolean"
                                },
                                "secretRef": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/LocalObjectReference"
                                    }
                                  ],
                                  "description": "Optional: points to a secret object containing parameters used to connect to OpenStack.",
                                  "title": "Secretref"
                                },
                                "volumeID": {
                                  "description": "volume id used to identify the volume in cinder More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                                  "title": "Volumeid",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "volumeID"
                              ],
                              "title": "CinderVolumeSource",
                              "type": "object"
                            },
                            "ConfigMapProjection": {
                              "properties": {
                                "items": {
                                  "description": "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/KeyToPath"
                                  },
                                  "title": "Items",
                                  "type": "array"
                                },
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "title": "Name",
                                  "type": "string"
                                },
                                "optional": {
                                  "description": "Specify whether the ConfigMap or its keys must be defined",
                                  "title": "Optional",
                                  "type": "boolean"
                                }
                              },
                              "title": "ConfigMapProjection",
                              "type": "object"
                            },
                            "ConfigMapVolumeSource": {
                              "properties": {
                                "defaultMode": {
                                  "description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                  "title": "Defaultmode",
                                  "type": "integer"
                                },
                                "items": {
                                  "description": "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/KeyToPath"
                                  },
                                  "title": "Items",
                                  "type": "array"
                                },
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "title": "Name",
                                  "type": "string"
                                },
                                "optional": {
                                  "description": "Specify whether the ConfigMap or its keys must be defined",
                                  "title": "Optional",
                                  "type": "boolean"
                                }
                              },
                              "title": "ConfigMapVolumeSource",
                              "type": "object"
                            },
                            "Dependencies": {
                              "description": "Dependencies of the Spark application",
                              "properties": {
                                "files": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "title": "Files",
                                  "type": "array"
                                },
                                "jars": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "title": "Jars",
                                  "type": "array"
                                },
                                "pyFiles": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "title": "Pyfiles",
                                  "type": "array"
                                }
                              },
                              "title": "Dependencies",
                              "type": "object"
                            },
                            "DownwardAPIProjection": {
                              "properties": {
                                "items": {
                                  "description": "Items is a list of DownwardAPIVolume file",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/DownwardAPIVolumeFile"
                                  },
                                  "title": "Items",
                                  "type": "array"
                                }
                              },
                              "title": "DownwardAPIProjection",
                              "type": "object"
                            },
                            "DownwardAPIVolumeFile": {
                              "properties": {
                                "fieldRef": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/ObjectFieldSelector"
                                    }
                                  ],
                                  "description": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.",
                                  "title": "Fieldref"
                                },
                                "mode": {
                                  "description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                  "title": "Mode",
                                  "type": "integer"
                                },
                                "path": {
                                  "description": "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
                                  "title": "Path",
                                  "type": "string"
                                },
                                "resourceFieldRef": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/ResourceFieldSelector"
                                    }
                                  ],
                                  "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
                                  "title": "Resourcefieldref"
                                }
                              },
                              "required": [
                                "path"
                              ],
                              "title": "DownwardAPIVolumeFile",
                              "type": "object"
                            },
                            "DownwardAPIVolumeSource": {
                              "properties": {
                                "defaultMode": {
                                  "description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                  "title": "Defaultmode",
                                  "type": "integer"
                                },
                                "items": {
                                  "description": "Items is a list of downward API volume file",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/DownwardAPIVolumeFile"
                                  },
                                  "title": "Items",
                                  "type": "array"
                                }
                              },
                              "title": "DownwardAPIVolumeSource",
                              "type": "object"
                            },
                            "DriverSpec": {
                              "additionalProperties": false,
                              "description": "A configuration for a Spark driver (no required field)",
                              "properties": {
                                "affinity": {
                                  "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/Affinity"
                                },
                                "annotations": {
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "title": "Annotations",
                                  "type": "object"
                                },
                                "configMaps": {
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/NamePath"
                                  },
                                  "title": "Configmaps",
                                  "type": "array"
                                },
                                "coreLimit": {
                                  "title": "Corelimit",
                                  "type": "string"
                                },
                                "coreRequest": {
                                  "title": "Corerequest",
                                  "type": "string"
                                },
                                "cores": {
                                  "title": "Cores",
                                  "type": "integer"
                                },
                                "envSecretKeyRefs": {
                                  "additionalProperties": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/NameKey"
                                  },
                                  "title": "Envsecretkeyrefs",
                                  "type": "object"
                                },
                                "envVars": {
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "title": "Envvars",
                                  "type": "object"
                                },
                                "hostAliases": {
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/HostAlias"
                                  },
                                  "title": "Hostaliases",
                                  "type": "array"
                                },
                                "image": {
                                  "title": "Image",
                                  "type": "string"
                                },
                                "instanceSelector": {
                                  "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/InstanceSelector"
                                },
                                "javaOptions": {
                                  "title": "Javaoptions",
                                  "type": "string"
                                },
                                "sidecars": {
                                  "title": "Sidecars",
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/Container"
                                  }
                                },
                                "initContainers": {
                                  "title": "Initcontainers",
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/Container"
                                  }
                                },
                                "labels": {
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "title": "Labels",
                                  "type": "object"
                                },
                                "memory": {
                                  "title": "Memory",
                                  "type": "string"
                                },
                                "memoryOverhead": {
                                  "title": "Memoryoverhead",
                                  "type": "string"
                                },
                                "podName": {
                                  "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/K8sName"
                                },
                                "podSecurityContext": {
                                  "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/PodSecurityContext"
                                },
                                "secrets": {
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/SecretInfo"
                                  },
                                  "title": "Secrets",
                                  "type": "array"
                                },
                                "securityContext": {
                                  "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/SecurityContext"
                                },
                                "spot": {
                                  "title": "Spot",
                                  "type": "boolean"
                                },
                                "tolerations": {
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/Toleration"
                                  },
                                  "title": "Tolerations",
                                  "type": "array"
                                },
                                "vngIds": {
                                  "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/VngIds"
                                },
                                "volumeMounts": {
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/VolumeMount"
                                  },
                                  "title": "Volumemounts",
                                  "type": "array"
                                }
                              },
                              "title": "DriverSpec",
                              "type": "object"
                            },
                            "EmptyDirVolumeSource": {
                              "properties": {
                                "medium": {
                                  "description": "What type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                                  "title": "Medium",
                                  "type": "string"
                                },
                                "sizeLimit": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/Quantity"
                                    }
                                  ],
                                  "description": "Total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir",
                                  "title": "Sizelimit"
                                }
                              },
                              "title": "EmptyDirVolumeSource",
                              "type": "object"
                            },
                            "ExecutorSpec": {
                              "additionalProperties": false,
                              "description": "A configuration for a Spark executor (no required field)",
                              "properties": {
                                "affinity": {
                                  "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/Affinity"
                                },
                                "annotations": {
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "title": "Annotations",
                                  "type": "object"
                                },
                                "configMaps": {
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/NamePath"
                                  },
                                  "title": "Configmaps",
                                  "type": "array"
                                },
                                "coreLimit": {
                                  "title": "Corelimit",
                                  "type": "string"
                                },
                                "coreRequest": {
                                  "title": "Corerequest",
                                  "type": "string"
                                },
                                "cores": {
                                  "title": "Cores",
                                  "type": "integer"
                                },
                                "envSecretKeyRefs": {
                                  "additionalProperties": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/NameKey"
                                  },
                                  "title": "Envsecretkeyrefs",
                                  "type": "object"
                                },
                                "envVars": {
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "title": "Envvars",
                                  "type": "object"
                                },
                                "hostAliases": {
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/HostAlias"
                                  },
                                  "title": "Hostaliases",
                                  "type": "array"
                                },
                                "image": {
                                  "title": "Image",
                                  "type": "string"
                                },
                                "instanceSelector": {
                                  "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/InstanceSelector"
                                },
                                "sidecars": {
                                  "title": "Sidecars",
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/Container"
                                  }
                                },
                                "initContainers": {
                                  "title": "Initcontainers",
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/Container"
                                  }
                                },
                                "instances": {
                                  "title": "Instances",
                                  "type": "integer"
                                },
                                "javaOptions": {
                                  "title": "Javaoptions",
                                  "type": "string"
                                },
                                "labels": {
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "title": "Labels",
                                  "type": "object"
                                },
                                "memory": {
                                  "title": "Memory",
                                  "type": "string"
                                },
                                "memoryOverhead": {
                                  "title": "Memoryoverhead",
                                  "type": "string"
                                },
                                "podSecurityContext": {
                                  "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/PodSecurityContext"
                                },
                                "secrets": {
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/SecretInfo"
                                  },
                                  "title": "Secrets",
                                  "type": "array"
                                },
                                "securityContext": {
                                  "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/SecurityContext"
                                },
                                "spot": {
                                  "title": "Spot",
                                  "type": "boolean"
                                },
                                "tolerations": {
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/Toleration"
                                  },
                                  "title": "Tolerations",
                                  "type": "array"
                                },
                                "vngIds": {
                                  "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/VngIds"
                                },
                                "volumeMounts": {
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/VolumeMount"
                                  },
                                  "title": "Volumemounts",
                                  "type": "array"
                                }
                              },
                              "title": "ExecutorSpec",
                              "type": "object"
                            },
                            "FCVolumeSource": {
                              "properties": {
                                "fsType": {
                                  "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                  "title": "Fstype",
                                  "type": "string"
                                },
                                "lun": {
                                  "description": "Optional: FC target lun number",
                                  "title": "Lun",
                                  "type": "integer"
                                },
                                "readOnly": {
                                  "description": "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                                  "title": "Readonly",
                                  "type": "boolean"
                                },
                                "targetWWNs": {
                                  "description": "Optional: FC target worldwide names (WWNs)",
                                  "items": {
                                    "type": "string"
                                  },
                                  "title": "Targetwwns",
                                  "type": "array"
                                },
                                "wwids": {
                                  "description": "Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "title": "Wwids",
                                  "type": "array"
                                }
                              },
                              "title": "FCVolumeSource",
                              "type": "object"
                            },
                            "FlexVolumeSource": {
                              "properties": {
                                "driver": {
                                  "description": "Driver is the name of the driver to use for this volume.",
                                  "title": "Driver",
                                  "type": "string"
                                },
                                "fsType": {
                                  "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script.",
                                  "title": "Fstype",
                                  "type": "string"
                                },
                                "options": {
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "description": "Optional: Extra command options if any.",
                                  "title": "Options",
                                  "type": "object"
                                },
                                "readOnly": {
                                  "description": "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                                  "title": "Readonly",
                                  "type": "boolean"
                                },
                                "secretRef": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/LocalObjectReference"
                                    }
                                  ],
                                  "description": "Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.",
                                  "title": "Secretref"
                                }
                              },
                              "required": [
                                "driver"
                              ],
                              "title": "FlexVolumeSource",
                              "type": "object"
                            },
                            "FlockerVolumeSource": {
                              "properties": {
                                "datasetName": {
                                  "description": "Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated",
                                  "title": "Datasetname",
                                  "type": "string"
                                },
                                "datasetUUID": {
                                  "description": "UUID of the dataset. This is unique identifier of a Flocker dataset",
                                  "title": "Datasetuuid",
                                  "type": "string"
                                }
                              },
                              "title": "FlockerVolumeSource",
                              "type": "object"
                            },
                            "GCEPersistentDiskVolumeSource": {
                              "properties": {
                                "fsType": {
                                  "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                                  "title": "Fstype",
                                  "type": "string"
                                },
                                "partition": {
                                  "description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                                  "title": "Partition",
                                  "type": "integer"
                                },
                                "pdName": {
                                  "description": "Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                                  "title": "Pdname",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "description": "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                                  "title": "Readonly",
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "pdName"
                              ],
                              "title": "GCEPersistentDiskVolumeSource",
                              "type": "object"
                            },
                            "GitRepoVolumeSource": {
                              "properties": {
                                "directory": {
                                  "description": "Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.",
                                  "title": "Directory",
                                  "type": "string"
                                },
                                "repository": {
                                  "description": "Repository URL",
                                  "title": "Repository",
                                  "type": "string"
                                },
                                "revision": {
                                  "description": "Commit hash for the specified revision.",
                                  "title": "Revision",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "repository"
                              ],
                              "title": "GitRepoVolumeSource",
                              "type": "object"
                            },
                            "GlusterfsVolumeSource": {
                              "properties": {
                                "endpoints": {
                                  "description": "EndpointsName is the endpoint name that details Glusterfs topology. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
                                  "title": "Endpoints",
                                  "type": "string"
                                },
                                "path": {
                                  "description": "Path is the Glusterfs volume path. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
                                  "title": "Path",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "description": "ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
                                  "title": "Readonly",
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "endpoints",
                                "path"
                              ],
                              "title": "GlusterfsVolumeSource",
                              "type": "object"
                            },
                            "HostAlias": {
                              "properties": {
                                "hostnames": {
                                  "description": "Hostnames for the above IP address.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "title": "Hostnames",
                                  "type": "array"
                                },
                                "ip": {
                                  "description": "IP address of the host file entry.",
                                  "title": "Ip",
                                  "type": "string"
                                }
                              },
                              "title": "HostAlias",
                              "type": "object"
                            },
                            "HostPathVolumeSource": {
                              "properties": {
                                "path": {
                                  "description": "Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
                                  "title": "Path",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "Type for HostPath Volume Defaults to \"\" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
                                  "title": "Type",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "path"
                              ],
                              "title": "HostPathVolumeSource",
                              "type": "object"
                            },
                            "InstanceSelector": {
                              "title": "InstanceSelector",
                              "description": "The name of an instance family (like \"i3\" or \"m5d\"), or of a specific instance type (like \"i3.large\" or \"m5d.xlarge\") to target",
                              "type": "string"
                            },
                            "ISCSIVolumeSource": {
                              "properties": {
                                "chapAuthDiscovery": {
                                  "description": "whether support iSCSI Discovery CHAP authentication",
                                  "title": "Chapauthdiscovery",
                                  "type": "boolean"
                                },
                                "chapAuthSession": {
                                  "description": "whether support iSCSI Session CHAP authentication",
                                  "title": "Chapauthsession",
                                  "type": "boolean"
                                },
                                "fsType": {
                                  "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi",
                                  "title": "Fstype",
                                  "type": "string"
                                },
                                "initiatorName": {
                                  "description": "Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.",
                                  "title": "Initiatorname",
                                  "type": "string"
                                },
                                "iqn": {
                                  "description": "Target iSCSI Qualified Name.",
                                  "title": "Iqn",
                                  "type": "string"
                                },
                                "iscsiInterface": {
                                  "description": "iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).",
                                  "title": "Iscsiinterface",
                                  "type": "string"
                                },
                                "lun": {
                                  "description": "iSCSI Target Lun number.",
                                  "title": "Lun",
                                  "type": "integer"
                                },
                                "portals": {
                                  "description": "iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
                                  "items": {
                                    "type": "string"
                                  },
                                  "title": "Portals",
                                  "type": "array"
                                },
                                "readOnly": {
                                  "description": "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.",
                                  "title": "Readonly",
                                  "type": "boolean"
                                },
                                "secretRef": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/LocalObjectReference"
                                    }
                                  ],
                                  "description": "CHAP Secret for iSCSI target and initiator authentication",
                                  "title": "Secretref"
                                },
                                "targetPortal": {
                                  "description": "iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
                                  "title": "Targetportal",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "iqn",
                                "lun",
                                "targetPortal"
                              ],
                              "title": "ISCSIVolumeSource",
                              "type": "object"
                            },
                            "K8sName": {
                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
                              "title": "K8sName",
                              "type": "string"
                            },
                            "KeyToPath": {
                              "properties": {
                                "key": {
                                  "description": "The key to project.",
                                  "title": "Key",
                                  "type": "string"
                                },
                                "mode": {
                                  "description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                  "title": "Mode",
                                  "type": "integer"
                                },
                                "path": {
                                  "description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
                                  "title": "Path",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "key",
                                "path"
                              ],
                              "title": "KeyToPath",
                              "type": "object"
                            },
                            "LabelSelector": {
                              "properties": {
                                "matchExpressions": {
                                  "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/LabelSelectorRequirement"
                                  },
                                  "title": "Matchexpressions",
                                  "type": "array"
                                },
                                "matchLabels": {
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                  "title": "Matchlabels",
                                  "type": "object"
                                }
                              },
                              "title": "LabelSelector",
                              "type": "object"
                            },
                            "LabelSelectorRequirement": {
                              "properties": {
                                "key": {
                                  "description": "key is the label key that the selector applies to.",
                                  "title": "Key",
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                  "title": "Operator",
                                  "type": "string"
                                },
                                "values": {
                                  "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "title": "Values",
                                  "type": "array"
                                }
                              },
                              "required": [
                                "key",
                                "operator"
                              ],
                              "title": "LabelSelectorRequirement",
                              "type": "object"
                            },
                            "LocalObjectReference": {
                              "properties": {
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "title": "Name",
                                  "type": "string"
                                }
                              },
                              "title": "LocalObjectReference",
                              "type": "object"
                            },
                            "NFSVolumeSource": {
                              "properties": {
                                "path": {
                                  "description": "Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                                  "title": "Path",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "description": "ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                                  "title": "Readonly",
                                  "type": "boolean"
                                },
                                "server": {
                                  "description": "Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                                  "title": "Server",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "path",
                                "server"
                              ],
                              "title": "NFSVolumeSource",
                              "type": "object"
                            },
                            "NameKey": {
                              "description": "The name and key of a SecretKeyRef",
                              "properties": {
                                "key": {
                                  "title": "Key",
                                  "type": "string"
                                },
                                "name": {
                                  "title": "Name",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "name",
                                "key"
                              ],
                              "title": "NameKey",
                              "type": "object"
                            },
                            "NamePath": {
                              "description": "A pair of a name and a path to which the named objects should be mounted to",
                              "properties": {
                                "name": {
                                  "title": "Name",
                                  "type": "string"
                                },
                                "path": {
                                  "title": "Path",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "name",
                                "path"
                              ],
                              "title": "NamePath",
                              "type": "object"
                            },
                            "NodeAffinity": {
                              "properties": {
                                "preferredDuringSchedulingIgnoredDuringExecution": {
                                  "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/PreferredSchedulingTerm"
                                  },
                                  "title": "Preferredduringschedulingignoredduringexecution",
                                  "type": "array"
                                },
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/NodeSelector"
                                    }
                                  ],
                                  "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.",
                                  "title": "Requiredduringschedulingignoredduringexecution"
                                }
                              },
                              "title": "NodeAffinity",
                              "type": "object"
                            },
                            "NodeSelector": {
                              "properties": {
                                "nodeSelectorTerms": {
                                  "description": "Required. A list of node selector terms. The terms are ORed.",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/NodeSelectorTerm"
                                  },
                                  "title": "Nodeselectorterms",
                                  "type": "array"
                                }
                              },
                              "required": [
                                "nodeSelectorTerms"
                              ],
                              "title": "NodeSelector",
                              "type": "object"
                            },
                            "NodeSelectorRequirement": {
                              "properties": {
                                "key": {
                                  "description": "The label key that the selector applies to.",
                                  "title": "Key",
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                  "title": "Operator",
                                  "type": "string"
                                },
                                "values": {
                                  "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "title": "Values",
                                  "type": "array"
                                }
                              },
                              "required": [
                                "key",
                                "operator"
                              ],
                              "title": "NodeSelectorRequirement",
                              "type": "object"
                            },
                            "NodeSelectorTerm": {
                              "properties": {
                                "matchExpressions": {
                                  "description": "A list of node selector requirements by node's labels.",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/NodeSelectorRequirement"
                                  },
                                  "title": "Matchexpressions",
                                  "type": "array"
                                },
                                "matchFields": {
                                  "description": "A list of node selector requirements by node's fields.",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/NodeSelectorRequirement"
                                  },
                                  "title": "Matchfields",
                                  "type": "array"
                                }
                              },
                              "title": "NodeSelectorTerm",
                              "type": "object"
                            },
                            "ObjectFieldSelector": {
                              "properties": {
                                "apiVersion": {
                                  "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                  "title": "Apiversion",
                                  "type": "string"
                                },
                                "fieldPath": {
                                  "description": "Path of the field to select in the specified API version.",
                                  "title": "Fieldpath",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "fieldPath"
                              ],
                              "title": "ObjectFieldSelector",
                              "type": "object"
                            },
                            "PersistentVolumeClaimVolumeSource": {
                              "properties": {
                                "claimName": {
                                  "description": "ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                                  "title": "Claimname",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "description": "Will force the ReadOnly setting in VolumeMounts. Default false.",
                                  "title": "Readonly",
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "claimName"
                              ],
                              "title": "PersistentVolumeClaimVolumeSource",
                              "type": "object"
                            },
                            "PhotonPersistentDiskVolumeSource": {
                              "properties": {
                                "fsType": {
                                  "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                  "title": "Fstype",
                                  "type": "string"
                                },
                                "pdID": {
                                  "description": "ID that identifies Photon Controller persistent disk",
                                  "title": "Pdid",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "pdID"
                              ],
                              "title": "PhotonPersistentDiskVolumeSource",
                              "type": "object"
                            },
                            "PodAffinity": {
                              "properties": {
                                "preferredDuringSchedulingIgnoredDuringExecution": {
                                  "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/WeightedPodAffinityTerm"
                                  },
                                  "title": "Preferredduringschedulingignoredduringexecution",
                                  "type": "array"
                                },
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                  "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/PodAffinityTerm"
                                  },
                                  "title": "Requiredduringschedulingignoredduringexecution",
                                  "type": "array"
                                }
                              },
                              "title": "PodAffinity",
                              "type": "object"
                            },
                            "PodAffinityTerm": {
                              "properties": {
                                "labelSelector": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/LabelSelector"
                                    }
                                  ],
                                  "description": "A label query over a set of resources, in this case pods.",
                                  "title": "Labelselector"
                                },
                                "namespaces": {
                                  "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                  "items": {
                                    "type": "string"
                                  },
                                  "title": "Namespaces",
                                  "type": "array"
                                },
                                "topologyKey": {
                                  "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                  "title": "Topologykey",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "topologyKey"
                              ],
                              "title": "PodAffinityTerm",
                              "type": "object"
                            },
                            "PodAntiAffinity": {
                              "properties": {
                                "preferredDuringSchedulingIgnoredDuringExecution": {
                                  "description": "The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/WeightedPodAffinityTerm"
                                  },
                                  "title": "Preferredduringschedulingignoredduringexecution",
                                  "type": "array"
                                },
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                  "description": "If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/PodAffinityTerm"
                                  },
                                  "title": "Requiredduringschedulingignoredduringexecution",
                                  "type": "array"
                                }
                              },
                              "title": "PodAntiAffinity",
                              "type": "object"
                            },
                            "PodSecurityContext": {
                              "properties": {
                                "fsGroup": {
                                  "description": "A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:\n\n1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----\n\nIf unset, the Kubelet will not modify the ownership and permissions of any volume.",
                                  "title": "Fsgroup",
                                  "type": "integer"
                                },
                                "runAsGroup": {
                                  "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
                                  "title": "Runasgroup",
                                  "type": "integer"
                                },
                                "runAsNonRoot": {
                                  "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                  "title": "Runasnonroot",
                                  "type": "boolean"
                                },
                                "runAsUser": {
                                  "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
                                  "title": "Runasuser",
                                  "type": "integer"
                                },
                                "seLinuxOptions": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/SELinuxOptions"
                                    }
                                  ],
                                  "description": "The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
                                  "title": "Selinuxoptions"
                                },
                                "supplementalGroups": {
                                  "description": "A list of groups applied to the first process run in each container, in addition to the container's primary GID.  If unspecified, no groups will be added to any container.",
                                  "items": {
                                    "type": "integer"
                                  },
                                  "title": "Supplementalgroups",
                                  "type": "array"
                                },
                                "sysctls": {
                                  "description": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch.",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/Sysctl"
                                  },
                                  "title": "Sysctls",
                                  "type": "array"
                                },
                                "windowsOptions": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/WindowsSecurityContextOptions"
                                    }
                                  ],
                                  "description": "Windows security options.",
                                  "title": "Windowsoptions"
                                }
                              },
                              "title": "PodSecurityContext",
                              "type": "object"
                            },
                            "PortworxVolumeSource": {
                              "properties": {
                                "fsType": {
                                  "description": "FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                  "title": "Fstype",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "description": "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                                  "title": "Readonly",
                                  "type": "boolean"
                                },
                                "volumeID": {
                                  "description": "VolumeID uniquely identifies a Portworx volume",
                                  "title": "Volumeid",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "volumeID"
                              ],
                              "title": "PortworxVolumeSource",
                              "type": "object"
                            },
                            "PreferredSchedulingTerm": {
                              "properties": {
                                "preference": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/NodeSelectorTerm"
                                    }
                                  ],
                                  "description": "A node selector term, associated with the corresponding weight.",
                                  "title": "Preference"
                                },
                                "weight": {
                                  "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
                                  "title": "Weight",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "preference",
                                "weight"
                              ],
                              "title": "PreferredSchedulingTerm",
                              "type": "object"
                            },
                            "ProjectedVolumeSource": {
                              "properties": {
                                "defaultMode": {
                                  "description": "Mode bits to use on created files by default. Must be a value between 0 and 0777. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                  "title": "Defaultmode",
                                  "type": "integer"
                                },
                                "sources": {
                                  "description": "list of volume projections",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/VolumeProjection"
                                  },
                                  "title": "Sources",
                                  "type": "array"
                                }
                              },
                              "required": [
                                "sources"
                              ],
                              "title": "ProjectedVolumeSource",
                              "type": "object"
                            },
                            "PythonVersion": {
                              "description": "An enumeration.",
                              "enum": [
                                "2",
                                "3"
                              ],
                              "default": "3",
                              "example": "3",
                              "title": "PythonVersion",
                              "type": "string"
                            },
                            "Quantity": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                }
                              ],
                              "title": "Quantity"
                            },
                            "QuobyteVolumeSource": {
                              "properties": {
                                "group": {
                                  "description": "Group to map volume access to Default is no group",
                                  "title": "Group",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "description": "ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.",
                                  "title": "Readonly",
                                  "type": "boolean"
                                },
                                "registry": {
                                  "description": "Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes",
                                  "title": "Registry",
                                  "type": "string"
                                },
                                "tenant": {
                                  "description": "Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin",
                                  "title": "Tenant",
                                  "type": "string"
                                },
                                "user": {
                                  "description": "User to map volume access to Defaults to serivceaccount user",
                                  "title": "User",
                                  "type": "string"
                                },
                                "volume": {
                                  "description": "Volume is a string that references an already created Quobyte volume by name.",
                                  "title": "Volume",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "registry",
                                "volume"
                              ],
                              "title": "QuobyteVolumeSource",
                              "type": "object"
                            },
                            "RBDVolumeSource": {
                              "properties": {
                                "fsType": {
                                  "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd",
                                  "title": "Fstype",
                                  "type": "string"
                                },
                                "image": {
                                  "description": "The rados image name. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                  "title": "Image",
                                  "type": "string"
                                },
                                "keyring": {
                                  "description": "Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                  "title": "Keyring",
                                  "type": "string"
                                },
                                "monitors": {
                                  "description": "A collection of Ceph monitors. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                  "items": {
                                    "type": "string"
                                  },
                                  "title": "Monitors",
                                  "type": "array"
                                },
                                "pool": {
                                  "description": "The rados pool name. Default is rbd. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                  "title": "Pool",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "description": "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                  "title": "Readonly",
                                  "type": "boolean"
                                },
                                "secretRef": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/LocalObjectReference"
                                    }
                                  ],
                                  "description": "SecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                  "title": "Secretref"
                                },
                                "user": {
                                  "description": "The rados user name. Default is admin. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                  "title": "User",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "image",
                                "monitors"
                              ],
                              "title": "RBDVolumeSource",
                              "type": "object"
                            },
                            "ResourceFieldSelector": {
                              "properties": {
                                "containerName": {
                                  "description": "Container name: required for volumes, optional for env vars",
                                  "title": "Containername",
                                  "type": "string"
                                },
                                "divisor": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/Quantity"
                                    }
                                  ],
                                  "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                  "title": "Divisor"
                                },
                                "resource": {
                                  "description": "Required: resource to select",
                                  "title": "Resource",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "resource"
                              ],
                              "title": "ResourceFieldSelector",
                              "type": "object"
                            },
                            "SELinuxOptions": {
                              "properties": {
                                "level": {
                                  "description": "Level is SELinux level label that applies to the container.",
                                  "title": "Level",
                                  "type": "string"
                                },
                                "role": {
                                  "description": "Role is a SELinux role label that applies to the container.",
                                  "title": "Role",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "Type is a SELinux type label that applies to the container.",
                                  "title": "Type",
                                  "type": "string"
                                },
                                "user": {
                                  "description": "User is a SELinux user label that applies to the container.",
                                  "title": "User",
                                  "type": "string"
                                }
                              },
                              "title": "SELinuxOptions",
                              "type": "object"
                            },
                            "ScaleIOVolumeSource": {
                              "properties": {
                                "fsType": {
                                  "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Default is \"xfs\".",
                                  "title": "Fstype",
                                  "type": "string"
                                },
                                "gateway": {
                                  "description": "The host address of the ScaleIO API Gateway.",
                                  "title": "Gateway",
                                  "type": "string"
                                },
                                "protectionDomain": {
                                  "description": "The name of the ScaleIO Protection Domain for the configured storage.",
                                  "title": "Protectiondomain",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "description": "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                                  "title": "Readonly",
                                  "type": "boolean"
                                },
                                "secretRef": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/LocalObjectReference"
                                    }
                                  ],
                                  "description": "SecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.",
                                  "title": "Secretref"
                                },
                                "sslEnabled": {
                                  "description": "Flag to enable/disable SSL communication with Gateway, default false",
                                  "title": "Sslenabled",
                                  "type": "boolean"
                                },
                                "storageMode": {
                                  "description": "Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.",
                                  "title": "Storagemode",
                                  "type": "string"
                                },
                                "storagePool": {
                                  "description": "The ScaleIO Storage Pool associated with the protection domain.",
                                  "title": "Storagepool",
                                  "type": "string"
                                },
                                "system": {
                                  "description": "The name of the storage system as configured in ScaleIO.",
                                  "title": "System",
                                  "type": "string"
                                },
                                "volumeName": {
                                  "description": "The name of a volume already created in the ScaleIO system that is associated with this volume source.",
                                  "title": "Volumename",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "gateway",
                                "secretRef",
                                "system"
                              ],
                              "title": "ScaleIOVolumeSource",
                              "type": "object"
                            },
                            "SecretInfo": {
                              "description": "The information of a secret",
                              "properties": {
                                "name": {
                                  "title": "Name",
                                  "type": "string"
                                },
                                "path": {
                                  "title": "Path",
                                  "type": "string"
                                },
                                "secretType": {
                                  "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/SecretType"
                                }
                              },
                              "required": [
                                "name",
                                "path",
                                "secretType"
                              ],
                              "title": "SecretInfo",
                              "type": "object"
                            },
                            "SecretProjection": {
                              "properties": {
                                "items": {
                                  "description": "If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/KeyToPath"
                                  },
                                  "title": "Items",
                                  "type": "array"
                                },
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "title": "Name",
                                  "type": "string"
                                },
                                "optional": {
                                  "description": "Specify whether the Secret or its key must be defined",
                                  "title": "Optional",
                                  "type": "boolean"
                                }
                              },
                              "title": "SecretProjection",
                              "type": "object"
                            },
                            "SecretType": {
                              "description": "An enumeration.",
                              "enum": [
                                "GCPServiceAccount",
                                "HadoopDelegationToken",
                                "Generic"
                              ],
                              "title": "SecretType",
                              "type": "string"
                            },
                            "SecretVolumeSource": {
                              "properties": {
                                "defaultMode": {
                                  "description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                  "title": "Defaultmode",
                                  "type": "integer"
                                },
                                "items": {
                                  "description": "If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/KeyToPath"
                                  },
                                  "title": "Items",
                                  "type": "array"
                                },
                                "optional": {
                                  "description": "Specify whether the Secret or its keys must be defined",
                                  "title": "Optional",
                                  "type": "boolean"
                                },
                                "secretName": {
                                  "description": "Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
                                  "title": "Secretname",
                                  "type": "string"
                                }
                              },
                              "title": "SecretVolumeSource",
                              "type": "object"
                            },
                            "SecurityContext": {
                              "properties": {
                                "allowPrivilegeEscalation": {
                                  "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
                                  "title": "Allowprivilegeescalation",
                                  "type": "boolean"
                                },
                                "capabilities": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/Capabilities"
                                    }
                                  ],
                                  "description": "The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.",
                                  "title": "Capabilities"
                                },
                                "privileged": {
                                  "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
                                  "title": "Privileged",
                                  "type": "boolean"
                                },
                                "procMount": {
                                  "description": "procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.",
                                  "title": "Procmount",
                                  "type": "string"
                                },
                                "readOnlyRootFilesystem": {
                                  "description": "Whether this container has a read-only root filesystem. Default is false.",
                                  "title": "Readonlyrootfilesystem",
                                  "type": "boolean"
                                },
                                "runAsGroup": {
                                  "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                  "title": "Runasgroup",
                                  "type": "integer"
                                },
                                "runAsNonRoot": {
                                  "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                  "title": "Runasnonroot",
                                  "type": "boolean"
                                },
                                "runAsUser": {
                                  "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                  "title": "Runasuser",
                                  "type": "integer"
                                },
                                "seLinuxOptions": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/SELinuxOptions"
                                    }
                                  ],
                                  "description": "The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                  "title": "Selinuxoptions"
                                },
                                "windowsOptions": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/WindowsSecurityContextOptions"
                                    }
                                  ],
                                  "description": "Windows security options.",
                                  "title": "Windowsoptions"
                                }
                              },
                              "title": "SecurityContext",
                              "type": "object"
                            },
                            "ServiceAccountTokenProjection": {
                              "properties": {
                                "audience": {
                                  "description": "Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.",
                                  "title": "Audience",
                                  "type": "string"
                                },
                                "expirationSeconds": {
                                  "description": "ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.",
                                  "title": "Expirationseconds",
                                  "type": "integer"
                                },
                                "path": {
                                  "description": "Path is the path relative to the mount point of the file to project the token into.",
                                  "title": "Path",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "path"
                              ],
                              "title": "ServiceAccountTokenProjection",
                              "type": "object"
                            },
                            "SparkApplicationType": {
                              "description": "An enumeration.",
                              "enum": [
                                "Java",
                                "Python",
                                "Scala"
                              ],
                              "title": "SparkApplicationType",
                              "type": "string"
                            },
                            "StorageOSVolumeSource": {
                              "properties": {
                                "fsType": {
                                  "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                  "title": "Fstype",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "description": "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                                  "title": "Readonly",
                                  "type": "boolean"
                                },
                                "secretRef": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/LocalObjectReference"
                                    }
                                  ],
                                  "description": "SecretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.",
                                  "title": "Secretref"
                                },
                                "volumeName": {
                                  "description": "VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.",
                                  "title": "Volumename",
                                  "type": "string"
                                },
                                "volumeNamespace": {
                                  "description": "VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to \"default\" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.",
                                  "title": "Volumenamespace",
                                  "type": "string"
                                }
                              },
                              "title": "StorageOSVolumeSource",
                              "type": "object"
                            },
                            "Sysctl": {
                              "properties": {
                                "name": {
                                  "description": "Name of a property to set",
                                  "title": "Name",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "Value of a property to set",
                                  "title": "Value",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "name",
                                "value"
                              ],
                              "title": "Sysctl",
                              "type": "object"
                            },
                            "Toleration": {
                              "properties": {
                                "effect": {
                                  "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                                  "title": "Effect",
                                  "type": "string"
                                },
                                "key": {
                                  "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                                  "title": "Key",
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
                                  "title": "Operator",
                                  "type": "string"
                                },
                                "tolerationSeconds": {
                                  "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
                                  "title": "Tolerationseconds",
                                  "type": "integer"
                                },
                                "value": {
                                  "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
                                  "title": "Value",
                                  "type": "string"
                                }
                              },
                              "title": "Toleration",
                              "type": "object"
                            },
                            "VngIds": {
                              "items": {
                                "type": "string"
                              },
                              "title": "Vngids",
                              "description": "An optional list of Virtual Node Group identifiers (like [\"ols-d1d766b9\"]) on which the pod can be run. If omitted, the pod can be run on any VNG."
                            },
                            "Volume": {
                              "properties": {
                                "awsElasticBlockStore": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/AWSElasticBlockStoreVolumeSource"
                                    }
                                  ],
                                  "description": "AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                                  "title": "Awselasticblockstore"
                                },
                                "azureDisk": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/AzureDiskVolumeSource"
                                    }
                                  ],
                                  "description": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.",
                                  "title": "Azuredisk"
                                },
                                "azureFile": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/AzureFileVolumeSource"
                                    }
                                  ],
                                  "description": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod.",
                                  "title": "Azurefile"
                                },
                                "cephfs": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/CephFSVolumeSource"
                                    }
                                  ],
                                  "description": "CephFS represents a Ceph FS mount on the host that shares a pod's lifetime",
                                  "title": "Cephfs"
                                },
                                "cinder": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/CinderVolumeSource"
                                    }
                                  ],
                                  "description": "Cinder represents a cinder volume attached and mounted on kubelets host machine More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                                  "title": "Cinder"
                                },
                                "configMap": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/ConfigMapVolumeSource"
                                    }
                                  ],
                                  "description": "ConfigMap represents a configMap that should populate this volume",
                                  "title": "Configmap"
                                },
                                "csi": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/CSIVolumeSource"
                                    }
                                  ],
                                  "description": "CSI (Container Storage Interface) represents storage that is handled by an external CSI driver (Alpha feature).",
                                  "title": "Csi"
                                },
                                "downwardAPI": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/DownwardAPIVolumeSource"
                                    }
                                  ],
                                  "description": "DownwardAPI represents downward API about the pod that should populate this volume",
                                  "title": "Downwardapi"
                                },
                                "emptyDir": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/EmptyDirVolumeSource"
                                    }
                                  ],
                                  "description": "EmptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                                  "title": "Emptydir"
                                },
                                "fc": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/FCVolumeSource"
                                    }
                                  ],
                                  "description": "FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.",
                                  "title": "Fc"
                                },
                                "flexVolume": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/FlexVolumeSource"
                                    }
                                  ],
                                  "description": "FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.",
                                  "title": "Flexvolume"
                                },
                                "flocker": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/FlockerVolumeSource"
                                    }
                                  ],
                                  "description": "Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running",
                                  "title": "Flocker"
                                },
                                "gcePersistentDisk": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/GCEPersistentDiskVolumeSource"
                                    }
                                  ],
                                  "description": "GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                                  "title": "Gcepersistentdisk"
                                },
                                "gitRepo": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/GitRepoVolumeSource"
                                    }
                                  ],
                                  "description": "GitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.",
                                  "title": "Gitrepo"
                                },
                                "glusterfs": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/GlusterfsVolumeSource"
                                    }
                                  ],
                                  "description": "Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md",
                                  "title": "Glusterfs"
                                },
                                "hostPath": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/HostPathVolumeSource"
                                    }
                                  ],
                                  "description": "HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
                                  "title": "Hostpath"
                                },
                                "iscsi": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/ISCSIVolumeSource"
                                    }
                                  ],
                                  "description": "ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://releases.k8s.io/HEAD/examples/volumes/iscsi/README.md",
                                  "title": "Iscsi"
                                },
                                "name": {
                                  "description": "Volume's name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "title": "Name",
                                  "type": "string"
                                },
                                "nfs": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/NFSVolumeSource"
                                    }
                                  ],
                                  "description": "NFS represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                                  "title": "Nfs"
                                },
                                "persistentVolumeClaim": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/PersistentVolumeClaimVolumeSource"
                                    }
                                  ],
                                  "description": "PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                                  "title": "Persistentvolumeclaim"
                                },
                                "photonPersistentDisk": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/PhotonPersistentDiskVolumeSource"
                                    }
                                  ],
                                  "description": "PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine",
                                  "title": "Photonpersistentdisk"
                                },
                                "portworxVolume": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/PortworxVolumeSource"
                                    }
                                  ],
                                  "description": "PortworxVolume represents a portworx volume attached and mounted on kubelets host machine",
                                  "title": "Portworxvolume"
                                },
                                "projected": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/ProjectedVolumeSource"
                                    }
                                  ],
                                  "description": "Items for all in one resources secrets, configmaps, and downward API",
                                  "title": "Projected"
                                },
                                "quobyte": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/QuobyteVolumeSource"
                                    }
                                  ],
                                  "description": "Quobyte represents a Quobyte mount on the host that shares a pod's lifetime",
                                  "title": "Quobyte"
                                },
                                "rbd": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/RBDVolumeSource"
                                    }
                                  ],
                                  "description": "RBD represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md",
                                  "title": "Rbd"
                                },
                                "scaleIO": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/ScaleIOVolumeSource"
                                    }
                                  ],
                                  "description": "ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.",
                                  "title": "Scaleio"
                                },
                                "secret": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/SecretVolumeSource"
                                    }
                                  ],
                                  "description": "Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
                                  "title": "Secret"
                                },
                                "storageos": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/StorageOSVolumeSource"
                                    }
                                  ],
                                  "description": "StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.",
                                  "title": "Storageos"
                                },
                                "vsphereVolume": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/VsphereVirtualDiskVolumeSource"
                                    }
                                  ],
                                  "description": "VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine",
                                  "title": "Vspherevolume"
                                }
                              },
                              "required": [
                                "name"
                              ],
                              "title": "Volume",
                              "type": "object"
                            },
                            "VolumeMount": {
                              "properties": {
                                "mountPath": {
                                  "description": "Path within the container at which the volume should be mounted.  Must not contain ':'.",
                                  "title": "Mountpath",
                                  "type": "string"
                                },
                                "mountPropagation": {
                                  "description": "mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.",
                                  "title": "Mountpropagation",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "This must match the Name of a Volume.",
                                  "title": "Name",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
                                  "title": "Readonly",
                                  "type": "boolean"
                                },
                                "subPath": {
                                  "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                  "title": "Subpath",
                                  "type": "string"
                                },
                                "subPathExpr": {
                                  "description": "Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \"\" (volume's root). SubPathExpr and SubPath are mutually exclusive. This field is beta in 1.15.",
                                  "title": "Subpathexpr",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "mountPath",
                                "name"
                              ],
                              "title": "VolumeMount",
                              "type": "object"
                            },
                            "VolumeProjection": {
                              "properties": {
                                "configMap": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/ConfigMapProjection"
                                    }
                                  ],
                                  "description": "information about the configMap data to project",
                                  "title": "Configmap"
                                },
                                "downwardAPI": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/DownwardAPIProjection"
                                    }
                                  ],
                                  "description": "information about the downwardAPI data to project",
                                  "title": "Downwardapi"
                                },
                                "secret": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/SecretProjection"
                                    }
                                  ],
                                  "description": "information about the secret data to project",
                                  "title": "Secret"
                                },
                                "serviceAccountToken": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/ServiceAccountTokenProjection"
                                    }
                                  ],
                                  "description": "information about the serviceAccountToken data to project",
                                  "title": "Serviceaccounttoken"
                                }
                              },
                              "title": "VolumeProjection",
                              "type": "object"
                            },
                            "VsphereVirtualDiskVolumeSource": {
                              "properties": {
                                "fsType": {
                                  "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                  "title": "Fstype",
                                  "type": "string"
                                },
                                "storagePolicyID": {
                                  "description": "Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.",
                                  "title": "Storagepolicyid",
                                  "type": "string"
                                },
                                "storagePolicyName": {
                                  "description": "Storage Policy Based Management (SPBM) profile name.",
                                  "title": "Storagepolicyname",
                                  "type": "string"
                                },
                                "volumePath": {
                                  "description": "Path that identifies vSphere volume vmdk",
                                  "title": "Volumepath",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "volumePath"
                              ],
                              "title": "VsphereVirtualDiskVolumeSource",
                              "type": "object"
                            },
                            "WeightedPodAffinityTerm": {
                              "properties": {
                                "podAffinityTerm": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/PodAffinityTerm"
                                    }
                                  ],
                                  "description": "Required. A pod affinity term, associated with the corresponding weight.",
                                  "title": "Podaffinityterm"
                                },
                                "weight": {
                                  "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
                                  "title": "Weight",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "podAffinityTerm",
                                "weight"
                              ],
                              "title": "WeightedPodAffinityTerm",
                              "type": "object"
                            },
                            "WindowsSecurityContextOptions": {
                              "properties": {
                                "gmsaCredentialSpec": {
                                  "description": "GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.",
                                  "title": "Gmsacredentialspec",
                                  "type": "string"
                                },
                                "gmsaCredentialSpecName": {
                                  "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.",
                                  "title": "Gmsacredentialspecname",
                                  "type": "string"
                                }
                              },
                              "title": "WindowsSecurityContextOptions",
                              "type": "object"
                            },
                            "Container": {
                              "title": "Container",
                              "required": [
                                "name"
                              ],
                              "type": "object",
                              "properties": {
                                "args": {
                                  "title": "Args",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell"
                                },
                                "command": {
                                  "title": "Command",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell"
                                },
                                "env": {
                                  "title": "Env",
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/EnvVar"
                                  },
                                  "description": "List of environment variables to set in the container. Cannot be updated."
                                },
                                "envFrom": {
                                  "title": "Envfrom",
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/EnvFromSource"
                                  },
                                  "description": "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated."
                                },
                                "image": {
                                  "title": "Image",
                                  "type": "string",
                                  "description": "Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
                                },
                                "imagePullPolicy": {
                                  "title": "Imagepullpolicy",
                                  "type": "string",
                                  "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images"
                                },
                                "lifecycle": {
                                  "title": "Lifecycle",
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/Lifecycle"
                                    }
                                  ],
                                  "description": "Actions that the management system should take in response to container lifecycle events. Cannot be updated."
                                },
                                "livenessProbe": {
                                  "title": "Livenessprobe",
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/Probe"
                                    }
                                  ],
                                  "description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                },
                                "name": {
                                  "title": "Name",
                                  "type": "string",
                                  "description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated."
                                },
                                "ports": {
                                  "title": "Ports",
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/ContainerPort"
                                  },
                                  "description": "List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Cannot be updated."
                                },
                                "readinessProbe": {
                                  "title": "Readinessprobe",
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/Probe"
                                    }
                                  ],
                                  "description": "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                },
                                "resources": {
                                  "title": "Resources",
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/ResourceRequirements"
                                    }
                                  ],
                                  "description": "Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/"
                                },
                                "securityContext": {
                                  "title": "Securitycontext",
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/SecurityContext"
                                    }
                                  ],
                                  "description": "Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/"
                                },
                                "stdin": {
                                  "title": "Stdin",
                                  "type": "boolean",
                                  "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false."
                                },
                                "stdinOnce": {
                                  "title": "Stdinonce",
                                  "type": "boolean",
                                  "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false"
                                },
                                "terminationMessagePath": {
                                  "title": "Terminationmessagepath",
                                  "type": "string",
                                  "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated."
                                },
                                "terminationMessagePolicy": {
                                  "title": "Terminationmessagepolicy",
                                  "type": "string",
                                  "description": "Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated."
                                },
                                "tty": {
                                  "title": "Tty",
                                  "type": "boolean",
                                  "description": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false."
                                },
                                "volumeDevices": {
                                  "title": "Volumedevices",
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/VolumeDevice"
                                  },
                                  "description": "volumeDevices is the list of block devices to be used by the container. This is a beta feature."
                                },
                                "volumeMounts": {
                                  "title": "Volumemounts",
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/VolumeMount"
                                  },
                                  "description": "Pod volumes to mount into the container's filesystem. Cannot be updated."
                                },
                                "workingDir": {
                                  "title": "Workingdir",
                                  "type": "string",
                                  "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated."
                                }
                              }
                            },
                            "EnvVar": {
                              "title": "EnvVar",
                              "required": [
                                "name"
                              ],
                              "type": "object",
                              "properties": {
                                "name": {
                                  "title": "Name",
                                  "type": "string",
                                  "description": "Name of the environment variable. Must be a C_IDENTIFIER."
                                },
                                "value": {
                                  "title": "Value",
                                  "type": "string",
                                  "description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\"."
                                },
                                "valueFrom": {
                                  "title": "Valuefrom",
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/EnvVarSource"
                                    }
                                  ],
                                  "description": "Source for the environment variable's value. Cannot be used if value is not empty."
                                }
                              }
                            },
                            "EnvVarSource": {
                              "title": "EnvVarSource",
                              "type": "object",
                              "properties": {
                                "configMapKeyRef": {
                                  "title": "Configmapkeyref",
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/ConfigMapKeySelector"
                                    }
                                  ],
                                  "description": "Selects a key of a ConfigMap."
                                },
                                "fieldRef": {
                                  "title": "Fieldref",
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/ObjectFieldSelector"
                                    }
                                  ],
                                  "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP."
                                },
                                "resourceFieldRef": {
                                  "title": "Resourcefieldref",
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/ResourceFieldSelector"
                                    }
                                  ],
                                  "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
                                },
                                "secretKeyRef": {
                                  "title": "Secretkeyref",
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/SecretKeySelector"
                                    }
                                  ],
                                  "description": "Selects a key of a secret in the pod's namespace"
                                }
                              }
                            },
                            "Lifecycle": {
                              "title": "Lifecycle",
                              "type": "object",
                              "properties": {
                                "postStart": {
                                  "title": "Poststart",
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/Handler"
                                    }
                                  ],
                                  "description": "PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks"
                                },
                                "preStop": {
                                  "title": "Prestop",
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/Handler"
                                    }
                                  ],
                                  "description": "PreStop is called immediately before a container is terminated due to an API request or management event such as liveness probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks"
                                }
                              }
                            },
                            "Handler": {
                              "title": "Handler",
                              "type": "object",
                              "properties": {
                                "exec": {
                                  "title": "Exec",
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/ExecAction"
                                    }
                                  ],
                                  "description": "One and only one of the following should be specified. Exec specifies the action to take."
                                },
                                "httpGet": {
                                  "title": "Httpget",
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/HTTPGetAction"
                                    }
                                  ],
                                  "description": "HTTPGet specifies the http request to perform."
                                },
                                "tcpSocket": {
                                  "title": "Tcpsocket",
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/TCPSocketAction"
                                    }
                                  ],
                                  "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported"
                                }
                              }
                            },
                            "ExecAction": {
                              "title": "ExecAction",
                              "type": "object",
                              "properties": {
                                "command": {
                                  "title": "Command",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                }
                              }
                            },
                            "HTTPGetAction": {
                              "title": "HTTPGetAction",
                              "required": [
                                "port"
                              ],
                              "type": "object",
                              "properties": {
                                "host": {
                                  "title": "Host",
                                  "type": "string",
                                  "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                },
                                "httpHeaders": {
                                  "title": "Httpheaders",
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/HTTPHeader"
                                  },
                                  "description": "Custom headers to set in the request. HTTP allows repeated headers."
                                },
                                "path": {
                                  "title": "Path",
                                  "type": "string",
                                  "description": "Path to access on the HTTP server."
                                },
                                "port": {
                                  "title": "Port",
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/IntOrString"
                                    }
                                  ],
                                  "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                },
                                "scheme": {
                                  "title": "Scheme",
                                  "type": "string",
                                  "description": "Scheme to use for connecting to the host. Defaults to HTTP."
                                }
                              }
                            },
                            "HTTPHeader": {
                              "title": "HTTPHeader",
                              "required": [
                                "name",
                                "value"
                              ],
                              "type": "object",
                              "properties": {
                                "name": {
                                  "title": "Name",
                                  "type": "string",
                                  "description": "The header field name"
                                },
                                "value": {
                                  "title": "Value",
                                  "type": "string",
                                  "description": "The header field value"
                                }
                              }
                            },
                            "HTTPValidationError": {
                              "title": "HTTPValidationError",
                              "type": "object",
                              "properties": {
                                "detail": {
                                  "title": "Detail",
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/ValidationError"
                                  }
                                }
                              }
                            },
                            "Probe": {
                              "title": "Probe",
                              "type": "object",
                              "properties": {
                                "exec": {
                                  "title": "Exec",
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/ExecAction"
                                    }
                                  ],
                                  "description": "One and only one of the following should be specified. Exec specifies the action to take."
                                },
                                "failureThreshold": {
                                  "title": "Failurethreshold",
                                  "type": "integer",
                                  "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1."
                                },
                                "httpGet": {
                                  "title": "Httpget",
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/HTTPGetAction"
                                    }
                                  ],
                                  "description": "HTTPGet specifies the http request to perform."
                                },
                                "initialDelaySeconds": {
                                  "title": "Initialdelayseconds",
                                  "type": "integer",
                                  "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                },
                                "periodSeconds": {
                                  "title": "Periodseconds",
                                  "type": "integer",
                                  "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1."
                                },
                                "successThreshold": {
                                  "title": "Successthreshold",
                                  "type": "integer",
                                  "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1."
                                },
                                "tcpSocket": {
                                  "title": "Tcpsocket",
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/TCPSocketAction"
                                    }
                                  ],
                                  "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported"
                                },
                                "timeoutSeconds": {
                                  "title": "Timeoutseconds",
                                  "type": "integer",
                                  "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                }
                              }
                            },
                            "ResourceRequirements": {
                              "title": "ResourceRequirements",
                              "type": "object",
                              "properties": {
                                "limits": {
                                  "title": "Limits",
                                  "type": "object",
                                  "additionalProperties": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/Quantity"
                                  },
                                  "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/"
                                },
                                "requests": {
                                  "title": "Requests",
                                  "type": "object",
                                  "additionalProperties": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/Quantity"
                                  },
                                  "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/"
                                }
                              }
                            },
                            "ConfigMapKeySelector": {
                              "title": "ConfigMapKeySelector",
                              "required": [
                                "key"
                              ],
                              "type": "object",
                              "properties": {
                                "key": {
                                  "title": "Key",
                                  "type": "string",
                                  "description": "The key to select."
                                },
                                "name": {
                                  "title": "Name",
                                  "type": "string",
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                                },
                                "optional": {
                                  "title": "Optional",
                                  "type": "boolean",
                                  "description": "Specify whether the ConfigMap or its key must be defined"
                                }
                              }
                            },
                            "SecretKeySelector": {
                              "title": "SecretKeySelector",
                              "required": [
                                "key"
                              ],
                              "type": "object",
                              "properties": {
                                "key": {
                                  "title": "Key",
                                  "type": "string",
                                  "description": "The key of the secret to select from.  Must be a valid secret key."
                                },
                                "name": {
                                  "title": "Name",
                                  "type": "string",
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                                },
                                "optional": {
                                  "title": "Optional",
                                  "type": "boolean",
                                  "description": "Specify whether the Secret or its key must be defined"
                                }
                              }
                            },
                            "EnvFromSource": {
                              "title": "EnvFromSource",
                              "type": "object",
                              "properties": {
                                "configMapRef": {
                                  "title": "Configmapref",
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/ConfigMapEnvSource"
                                    }
                                  ],
                                  "description": "The ConfigMap to select from"
                                },
                                "prefix": {
                                  "title": "Prefix",
                                  "type": "string",
                                  "description": "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER."
                                },
                                "secretRef": {
                                  "title": "Secretref",
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/SecretEnvSource"
                                    }
                                  ],
                                  "description": "The Secret to select from"
                                }
                              }
                            },
                            "ConfigMapEnvSource": {
                              "title": "ConfigMapEnvSource",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "title": "Name",
                                  "type": "string",
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                                },
                                "optional": {
                                  "title": "Optional",
                                  "type": "boolean",
                                  "description": "Specify whether the ConfigMap must be defined"
                                }
                              }
                            },
                            "SecretEnvSource": {
                              "title": "SecretEnvSource",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "title": "Name",
                                  "type": "string",
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                                },
                                "optional": {
                                  "title": "Optional",
                                  "type": "boolean",
                                  "description": "Specify whether the Secret must be defined"
                                }
                              }
                            },
                            "IntOrString": {
                              "title": "IntOrString",
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            },
                            "TCPSocketAction": {
                              "title": "TCPSocketAction",
                              "required": [
                                "port"
                              ],
                              "type": "object",
                              "properties": {
                                "host": {
                                  "title": "Host",
                                  "type": "string",
                                  "description": "Optional: Host name to connect to, defaults to the pod IP."
                                },
                                "port": {
                                  "title": "Port",
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0/components/schemas/IntOrString"
                                    }
                                  ],
                                  "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                }
                              }
                            },
                            "ContainerPort": {
                              "title": "ContainerPort",
                              "required": [
                                "containerPort"
                              ],
                              "type": "object",
                              "properties": {
                                "containerPort": {
                                  "title": "Containerport",
                                  "type": "integer",
                                  "description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536."
                                },
                                "hostIP": {
                                  "title": "Hostip",
                                  "type": "string",
                                  "description": "What host IP to bind the external port to."
                                },
                                "hostPort": {
                                  "title": "Hostport",
                                  "type": "integer",
                                  "description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this."
                                },
                                "name": {
                                  "title": "Name",
                                  "type": "string",
                                  "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services."
                                },
                                "protocol": {
                                  "title": "Protocol",
                                  "type": "string",
                                  "description": "Protocol for port. Must be UDP, TCP, or SCTP. Defaults to \"TCP\"."
                                }
                              }
                            },
                            "VolumeDevice": {
                              "title": "VolumeDevice",
                              "required": [
                                "devicePath",
                                "name"
                              ],
                              "type": "object",
                              "properties": {
                                "devicePath": {
                                  "title": "Devicepath",
                                  "type": "string",
                                  "description": "devicePath is the path inside of the container that the device will be mapped to."
                                },
                                "name": {
                                  "title": "Name",
                                  "type": "string",
                                  "description": "name must match the name of a persistentVolumeClaim in the pod"
                                }
                              }
                            },
                            "ValidationError": {
                              "title": "ValidationError",
                              "required": [
                                "loc",
                                "msg",
                                "type"
                              ],
                              "type": "object",
                              "properties": {
                                "loc": {
                                  "title": "Location",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "msg": {
                                  "title": "Message",
                                  "type": "string"
                                },
                                "type": {
                                  "title": "Error Type",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  },
                  "configTemplateId": {
                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1configTemplate/post/requestBody/content/application~1json/schema/properties/id"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A list of Spark applications (can be a single app)",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body\n",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "internalId",
                                  "id",
                                  "displayName",
                                  "accountId",
                                  "organizationId",
                                  "userId",
                                  "clusterId",
                                  "controllerClusterId",
                                  "appState",
                                  "submissionSource",
                                  "createdAt",
                                  "updatedAt"
                                ],
                                "allOf": [
                                  {
                                    "$ref": "#/paths/~1aws~1emr~1mrScaler/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/1"
                                  },
                                  {
                                    "type": "object",
                                    "description": "The description of a Spark application\n",
                                    "properties": {
                                      "internalId": {
                                        "$ref": "#/paths/~1ocean~1spark~1job/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/internalId"
                                      },
                                      "id": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/appId"
                                      },
                                      "displayName": {
                                        "type": "string",
                                        "description": "A non-unique free-form name for the Spark application used in the Spot console. Defaults to the application ID.",
                                        "example": "Daily Reporting 2021-08-18"
                                      },
                                      "userId": {
                                        "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/5/schema"
                                      },
                                      "clusterId": {
                                        "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/1/schema"
                                      },
                                      "controllerClusterId": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster/get/parameters/4/schema"
                                      },
                                      "appState": {
                                        "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/4/schema"
                                      },
                                      "submissionSource": {
                                        "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/3/schema"
                                      },
                                      "job": {
                                        "type": "object",
                                        "description": "The job to which the application belongs. A job is collection of Spark applications, typically a workload run on a schedule.\n",
                                        "required": [
                                          "id",
                                          "displayName"
                                        ],
                                        "properties": {
                                          "id": {
                                            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/jobId/allOf/0"
                                          },
                                          "displayName": {
                                            "$ref": "#/paths/~1ocean~1spark~1job/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/displayName"
                                          }
                                        }
                                      },
                                      "config": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0"
                                      },
                                      "startedAt": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The time when the Spark application started running (the app state becomes RUNNING). This is not the time when the application launch was requested (this is `createdAt`).\n",
                                        "example": "2021-11-18T17:09:37+00:00"
                                      },
                                      "endedAt": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The time when the Spark application terminated.\n",
                                        "example": "2021-11-18T17:09:37+00:00"
                                      },
                                      "log": {
                                        "type": "object",
                                        "description": "API pointers to endpoints serving logs and events related to the Spark application",
                                        "properties": {
                                          "logsStreamUrl": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "URL of the endpoint serving the live driver logs",
                                            "example": "/ocean/spark/cluster/osc-20fac3f1/app/daily-reporting-2021-08-18/logs/live"
                                          },
                                          "kubeEventsStreamUrl": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "URL of the endpoint serving a stream of Kubernetes events",
                                            "example": "/ocean/spark/cluster/osc-20fac3f1/app/daily-reporting-2021-08-18/kubeEvents/live"
                                          }
                                        }
                                      },
                                      "metrics": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1statistics/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/metrics"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete or kill an Application",
        "description": "For pending Spark applications, the creation request is canceled. For running Spark applications, the application is forcibly interrupted.\n",
        "operationId": "OceanSparkClusterApplicationDelete",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "204": {
            "description": "Application deleted"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/spark/cluster/{clusterId}/app/{applicationId}": {
      "summary": "Ocean Spark",
      "get": {
        "summary": "Get Application",
        "description": "Describe a Spark application in an Ocean Spark cluster.\n",
        "operationId": "OceanSparkClusterApplicationGet",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          },
          {
            "in": "path",
            "name": "applicationId",
            "required": true,
            "schema": {
              "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/appId"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/spark/cluster/{clusterId}/app/{applicationId}/logs/live": {
      "summary": "Ocean Spark",
      "get": {
        "summary": "Stream Driver log",
        "description": "Stream the driver log of a Spark application in real time.\n",
        "operationId": "OceanSparkClusterApplicationLogsLive",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app~1%7BapplicationId%7D/get/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "description": "A live stream of the driver log",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "21/10/20 15:38:19 INFO SparkContext: Running Spark version 3.2.0 21/10/20 15:38:19 INFO ResourceUtils: ============================================================== 21/10/20 15:38:19 INFO ResourceUtils: No custom resources configured for spark.driver. 21/10/20 15:38:19 INFO ResourceUtils: ============================================================== 21/10/20 15:38:19 INFO SparkContext: Submitted application: daily-reporting-2021-08-18\n"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/spark/cluster/{clusterId}/app/{applicationId}/kubeEvents/live": {
      "summary": "Ocean Spark",
      "get": {
        "summary": "Stream Kubernetes events",
        "description": "Stream Kubernetes events about the Spark application in real time.\n",
        "operationId": "OceanSparkClusterApplicationKubeEventsLive",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app~1%7BapplicationId%7D/get/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "description": "A live stream of the Kubernetes events",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "13:06:19: [spark-operator] SparkApplicationAdded: SparkApplication daily-reporting-2021-08-18 was added, enqueuing it for submission 13:06:23: [spark-operator] SparkApplicationSubmitted: SparkApplication daily-reporting-2021-08-18 was submitted successfully 13:06:26: [driver:cluster-autoscaler] TriggeredScaleUp: pod triggered scale-up: [{oceansparkcluster-ondemand-m5.large2021111109541378820000002d 0->1 (max: 100)}]\n"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/spark/configTemplate": {
      "summary": "Ocean Spark",
      "get": {
        "summary": "List Config Templates",
        "description": "List config templates across all clusters.\n",
        "operationId": "OceanSparkConfigTemplateList",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of config templates (can be a single one)",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body\n",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "createdAt",
                                  "updatedAt",
                                  "id",
                                  "displayName",
                                  "clusterId",
                                  "config"
                                ],
                                "allOf": [
                                  {
                                    "$ref": "#/paths/~1aws~1emr~1mrScaler/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/1"
                                  },
                                  {
                                    "type": "object",
                                    "description": "The description of a configuration template\n",
                                    "properties": {
                                      "id": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1configTemplate/post/requestBody/content/application~1json/schema/properties/id"
                                      },
                                      "displayName": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1configTemplate/post/requestBody/content/application~1json/schema/properties/displayName"
                                      },
                                      "clusterId": {
                                        "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/1/schema"
                                      },
                                      "config": {
                                        "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/spark/cluster/{clusterId}/configTemplate": {
      "summary": "Ocean Spark",
      "get": {
        "summary": "List Config Templates in Cluster",
        "description": "List the config templates tied to a specific cluster.\n",
        "operationId": "OceanSparkClusterConfigTemplateList",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1spark~1configTemplate/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "summary": "Create Config Template",
        "description": "Create a new configuration template\n",
        "operationId": "OceanSparkClusterConfigTemplateCreate",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "config"
                ],
                "properties": {
                  "id": {
                    "allOf": [
                      {
                        "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1job~1%7BjobId%7D/get/parameters/2/schema/allOf/0"
                      },
                      {
                        "description": "A unique identifier for a configuration template, set by the user.",
                        "example": "large-app"
                      }
                    ]
                  },
                  "displayName": {
                    "type": "string",
                    "description": "A non-unique free-form name for the config template used in the Spot console. Defaults to the config template ID.\n",
                    "example": "Large application"
                  },
                  "config": {
                    "description": "The piece of configuration contained in the config template.\n",
                    "allOf": [
                      {
                        "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1spark~1configTemplate/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/spark/cluster/{clusterId}/configTemplate/{configTemplateId}": {
      "summary": "Ocean Spark",
      "get": {
        "summary": "Get Config Template",
        "description": "Describe a config template tied to an Ocean Spark cluster.\n",
        "operationId": "OceanSparkClusterConfigTemplateGet",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          },
          {
            "in": "path",
            "name": "configTemplateId",
            "required": true,
            "schema": {
              "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1configTemplate/post/requestBody/content/application~1json/schema/properties/id"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1spark~1configTemplate/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Put Config Template",
        "description": "Update a config template by replacing the existing configuration with the one provided in the request body.\n",
        "operationId": "OceanSparkClusterConfigTemplatePut",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1configTemplate~1%7BconfigTemplateId%7D/get/parameters/2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "displayName": {
                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1configTemplate/post/requestBody/content/application~1json/schema/properties/displayName"
                  },
                  "config": {
                    "description": "The piece of configuration that will replace the existing configuration\n",
                    "allOf": [
                      {
                        "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/configOverrides/allOf/0"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1spark~1configTemplate/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Config Template",
        "description": "Delete a config template.\n",
        "operationId": "OceanSparkClusterConfigTemplateDelete",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1configTemplate~1%7BconfigTemplateId%7D/get/parameters/2"
          }
        ],
        "responses": {
          "204": {
            "description": "Config Template Deleted"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/spark/job": {
      "summary": "Ocean Spark",
      "get": {
        "summary": "List Jobs",
        "description": "List jobs on all Ocean Spark clusters in the specified account.\n",
        "operationId": "OceanSparkJobList",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of Ocean Spark jobs (can be a single job)",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body\n",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "id",
                                  "displayName",
                                  "accountId",
                                  "organizationId",
                                  "clusterId",
                                  "controllerClusterId",
                                  "createdAt",
                                  "updatedAt"
                                ],
                                "description": "The description of an Ocean Spark job\n",
                                "properties": {
                                  "internalId": {
                                    "type": "string",
                                    "example": "fa61bb92-4bb7-49aa-87d3-7823bd263d1e",
                                    "description": "An internal ID describing the entity. As a user of Ocean Spark, you will never need this ID.\n\nPlease use the `id` to interact with the API.\n"
                                  },
                                  "id": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/jobId/allOf/0"
                                  },
                                  "displayName": {
                                    "type": "string",
                                    "description": "A non-unique free-form name for the job used in the Spot console. Defaults to the job ID.\n",
                                    "example": "Daily Reporting"
                                  },
                                  "controllerClusterId": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster/get/parameters/4/schema"
                                  },
                                  "clusterId": {
                                    "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/1/schema"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2018-10-10T10:50:29.000+0000",
                                    "description": "The field on which to sort. For now, we only support filtering on CREATED_AT."
                                  },
                                  "updatedAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2018-10-10T10:50:29.000+0000",
                                    "description": "The time when the entity was last updated"
                                  },
                                  "lastApp": {
                                    "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                                  },
                                  "history": {
                                    "description": "The most recent Spark applications in this job.",
                                    "type": "array",
                                    "items": {
                                      "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                                    }
                                  },
                                  "trends": {
                                    "type": "object",
                                    "properties": {
                                      "inputDataBytes": {
                                        "$ref": "#/paths/~1ocean~1spark~1job/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/trends/properties/costCents"
                                      },
                                      "outputDataBytes": {
                                        "$ref": "#/paths/~1ocean~1spark~1job/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/trends/properties/costCents"
                                      },
                                      "costCents": {
                                        "type": "object",
                                        "required": [
                                          "last",
                                          "deltaLast10"
                                        ],
                                        "description": "A description of the recent trend of this metric\n",
                                        "properties": {
                                          "last": {
                                            "type": "integer",
                                            "example": 49,
                                            "description": "The most recent value of this metric"
                                          },
                                          "deltaLast10": {
                                            "type": "number",
                                            "example": 0.2,
                                            "description": "The relative variation of the most recent value of this metric compared to the median of the previous 10 values"
                                          }
                                        }
                                      },
                                      "sparkCoresDurationSeconds": {
                                        "$ref": "#/paths/~1ocean~1spark~1job/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/trends/properties/durationSeconds"
                                      },
                                      "durationSeconds": {
                                        "type": "object",
                                        "required": [
                                          "last",
                                          "deltaLast10"
                                        ],
                                        "description": "A description of the recent trend of this metric\n",
                                        "properties": {
                                          "last": {
                                            "type": "integer",
                                            "example": 3600,
                                            "description": "The most recent value of this metric"
                                          },
                                          "deltaLast10": {
                                            "type": "number",
                                            "example": 0.2,
                                            "description": "The relative variation of the most recent value of this metric compared to the median of the previous 10 values"
                                          }
                                        }
                                      },
                                      "efficiencyPercent": {
                                        "type": "object",
                                        "required": [
                                          "last",
                                          "deltaLast10"
                                        ],
                                        "description": "A description of the recent trend of this metric\n",
                                        "properties": {
                                          "last": {
                                            "type": "number",
                                            "example": 0.8,
                                            "description": "The most recent value of this metric"
                                          },
                                          "deltaLast10": {
                                            "type": "number",
                                            "example": 0.2,
                                            "description": "The relative variation of the most recent value of this metric compared to the median of the previous 10 values"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/spark/cluster/{clusterId}/job": {
      "summary": "Ocean Spark",
      "get": {
        "summary": "List Jobs in Cluster",
        "description": "List the Ocean Spark jobs in a specific cluster.\n",
        "operationId": "OceanSparkClusterJobList",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1spark~1job/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/spark/cluster/{clusterId}/job/{jobId}": {
      "summary": "Ocean Spark",
      "get": {
        "summary": "Get Job",
        "description": "Describe an Ocean Spark job in an Ocean Spark cluster.\n",
        "operationId": "OceanSparkClusterJobGet",
        "tags": [
          "Ocean Spark"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1spark~1app/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D/get/parameters/1"
          },
          {
            "in": "path",
            "name": "jobId",
            "required": true,
            "schema": {
              "$ref": "#/paths/~1ocean~1spark~1cluster~1%7BclusterId%7D~1app/post/requestBody/content/application~1json/schema/properties/jobId/allOf/0"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1spark~1job/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    }
  }
}
