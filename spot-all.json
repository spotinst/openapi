{
  "openapi": "3.0.0",
  "info": {
    "description": "Spotinst API",
    "version": "1.0.0",
    "title": "Spot API",
    "contact": {
      "email": "support@spot.io"
    }
  },
  "servers": [
    {
      "url": "https://api.spotinst.io/"
    }
  ],
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "externalDocs": {
    "url": "https://help.spot.io/"
  },
  "tags": [
    {
      "name": "Elastigroup AWS",
      "description": "Elastigroup for Amazon Web Services",
      "externalDocs": {
        "url": "https://help.spot.io/elastigroup-for-aws/"
      }
    },
    {
      "name": "Elastigroup Azure",
      "description": "Elastigroup for Microsoft Azure",
      "externalDocs": {
        "url": "https://help.spot.io/elastigroup-for-azure/"
      }
    },
    {
      "name": "Elastigroup Azure Deployment",
      "description": "Deployments for Elastigroup on Microsoft Azure",
      "externalDocs": {
        "url": "https://help.spot.io/elastigroup-for-azure/"
      }
    },
    {
      "name": "Elastigroup GCP",
      "description": "Elastigroup for Google Cloud",
      "externalDocs": {
        "url": "https://help.spot.io/elastigroup-for-google-cloud/"
      }
    },
    {
      "name": "Ocean AWS",
      "description": "Ocean - Serverless containers for Amazon Web Services (AWS)",
      "externalDocs": {
        "url": "https://help.spot.io/spotinst-api/ocean/ocean-cloud-api/ocean-for-aws/"
      }
    },
    {
      "name": "Ocean ECS",
      "description": "Ocean - Serverless containers for Amazon Elastic Container Service (ECS)",
      "externalDocs": {
        "url": "https://help.spot.io/spotinst-api/ocean/ocean-cloud-api/ocean-for-ecs/"
      }
    },
    {
      "name": "Ocean GKE",
      "description": "Ocean - Serverless containers for for Google Kubernetes Engine",
      "externalDocs": {
        "url": "https://help.spot.io/spotinst-api/ocean/ocean-cloud-api/ocean-for-gke/"
      }
    }
  ],
  "paths": {
    "/aws/ec2/group": {
      "summary": "Elastigroups for AWS",
      "post": {
        "summary": "Elastigroup AWS - Create",
        "description": "Create a new AWS Elastigroup",
        "operationId": "elastigroupAwsCreate",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "group"
                    ],
                    "properties": {
                      "group": {
                        "type": "object",
                        "title": "AWS Elastigroup",
                        "required": [
                          "name",
                          "region"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "sig-123456789",
                            "readOnly": true,
                            "description": "Azure Elastigroup ID\n"
                          },
                          "name": {
                            "type": "string",
                            "example": "First Elastigroup",
                            "description": "The name of the Elastigroup\n"
                          },
                          "description": {
                            "type": "string",
                            "example": "This is the first Spotinst Elastigroup of many",
                            "description": "The detailed purpose for this Elastigroup \n"
                          },
                          "region": {
                            "type": "string",
                            "example": "us-east-1",
                            "description": "The AWS Region the Elastigroup will manage instances \n"
                          },
                          "capacity": {
                            "type": "object",
                            "title": "Capacity Units",
                            "required": [
                              "target"
                            ],
                            "properties": {
                              "minimum": {
                                "type": "integer",
                                "example": 1,
                                "description": "The minimum number of units Elastigroup will scale down to        \n"
                              },
                              "maximum": {
                                "type": "integer",
                                "example": 10,
                                "description": "The maximum number of units Elastigroup will scale up to\n"
                              },
                              "target": {
                                "type": "integer",
                                "example": 5,
                                "description": "Number of units Elastigroup will start with\n"
                              },
                              "unit": {
                                "type": "string",
                                "example": "instance",
                                "default": "instance",
                                "enum": [
                                  "weight",
                                  "instance"
                                ],
                                "description": "Defines how Elastigroup scales. Either by number of instances or by instance weights. If `weight` is used then `weightedCapacity` is required to be set for all instance types used for this Elastigroup.\n"
                              }
                            }
                          },
                          "strategy": {
                            "type": "object",
                            "title": "Elastigroup Strategy",
                            "properties": {
                              "risk": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 100,
                                "example": 100,
                                "default": 0,
                                "description": "The percentage of Elastigroup that will run with spot market capacity\n"
                              },
                              "utilizeReservedInstances": {
                                "type": "boolean",
                                "default": false,
                                "example": true,
                                "description": "Whether the Elastigroup will use Reserved Instance capacity before launching instances in the spot market\n"
                              },
                              "fallbackToOd": {
                                "type": "boolean",
                                "default": false,
                                "example": true,
                                "description": "When set to `true` Elastigroup will launch On Demand instances if no spot market is available\n"
                              },
                              "onDemandCount": {
                                "type": "integer",
                                "minimum": 0,
                                "example": 0,
                                "description": "Minimum number of instances that will always be on-demand\n"
                              },
                              "availabilityVsCost": {
                                "type": "string",
                                "enum": [
                                  "availabilityOriented equalAzDistribution costOriented cheapest balanced"
                                ],
                                "default": "balanced",
                                "description": "How Elastigroup determines which instances to add and replace\n"
                              },
                              "drainingTimeout": {
                                "type": "integer",
                                "example": 180,
                                "description": "The time in seconds to allow the instance be drained from incoming TCP connections and detached from ELB before terminating it, during a scale down operation         \n"
                              },
                              "spinUpTime": {
                                "type": "integer",
                                "deprecated": true
                              },
                              "lifetimePeriod": {
                                "type": "integer",
                                "deprecated": true
                              },
                              "signals": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "enum": [
                                        "INSTANCE_READY",
                                        "INSTANCE_READY_TO_SHUTDOWN"
                                      ],
                                      "example": "INSTANCE_READY",
                                      "description": "Custom reporting of respective instance signal\n"
                                    },
                                    "timeout": {
                                      "type": "integer",
                                      "minimum": 60,
                                      "example": 600,
                                      "description": "Maximum time in seconds that Elastigroup should wait to receive the signal.\n"
                                    }
                                  }
                                }
                              },
                              "scalingStrategy": {
                                "type": "object",
                                "properties": {
                                  "terminateAtEndOfBillingHour": {
                                    "type": "boolean",
                                    "deprecated": true
                                  },
                                  "terminationPolicy": {
                                    "type": "string",
                                    "enum": [
                                      "default newestInstance"
                                    ],
                                    "example": "default",
                                    "default": "default",
                                    "description": "Which instances are chosen for termination first\n"
                                  }
                                }
                              },
                              "persistence": {
                                "type": "object",
                                "properties": {
                                  "shouldPersistBlockDevices": {
                                    "type": "boolean",
                                    "example": false,
                                    "default": null,
                                    "description": "If `true` Elastigroup will track and persist attached block storage\n"
                                  },
                                  "shouldPersistRootDevice": {
                                    "type": "boolean",
                                    "example": false,
                                    "default": null,
                                    "description": "If `true` Elastigroup will take snapshots and persist the root device\n"
                                  },
                                  "shouldPersistPrivateIp": {
                                    "type": "boolean",
                                    "example": false,
                                    "default": null,
                                    "description": "If `true` Elastigroup will maintin the private IP of the instance"
                                  },
                                  "blockDevicesMode": {
                                    "type": "string",
                                    "enum": [
                                      "onLaunch",
                                      "reattach"
                                    ],
                                    "example": "onLaunch",
                                    "default": "onLaunch",
                                    "description": "Determine the way we attach the data volumes to the data devices, Possible values: ‘reattach’ and ‘onLaunch’\n"
                                  }
                                }
                              },
                              "revertToSpot": {
                                "type": "object",
                                "title": "When Elastigroup moves from OnDemand back to Spot capacity",
                                "properties": {
                                  "performAt": {
                                    "type": "string",
                                    "example": "always",
                                    "enum": [
                                      "never",
                                      "always",
                                      "timeWindow"
                                    ]
                                  },
                                  "timeWindows": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "example": [
                                      "Mon:03:00-Wed:02:30"
                                    ],
                                    "description": "If `preformAt` is set to `timeWindow` then `timeWindows` must be set  as a list where each string is in the format of - ddd:hh:mm-ddd:hh:mm  ddd = day of week = Sun | Mon | Tue | Wed | Thu | Fri | Sat  hh = hour 24 = 0 -23 mm = minute = 0 - 59\n"
                                  }
                                }
                              }
                            }
                          },
                          "scheduling": {
                            "type": "object",
                            "title": "Elastigroup Scheduling",
                            "properties": {
                              "tasks": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "title": "Task Definition",
                                  "properties": {
                                    "isEnabled": {
                                      "type": "boolean",
                                      "default": true,
                                      "example": true,
                                      "description": "Describes whether the task is enabled. When true the task should run when false it should not run. \n"
                                    },
                                    "frequency": {
                                      "type": "string",
                                      "enum": [
                                        "hourly",
                                        "daily",
                                        "weekly"
                                      ],
                                      "description": "The recurrence frequency to run this task. Only one of `frequency` or `cronExpression` should be used at a time\n"
                                    },
                                    "startTime": {
                                      "type": "string",
                                      "example": "2018-05-23T10:55:09.000Z",
                                      "description": "DATETIME in ISO-8601 format. Sets a start time for scheduled actions. If `frequency` or `cronExpression` are not used - the task will run only once at the start time and will then be deleted from the group configuration\n"
                                    },
                                    "cronExpression": {
                                      "type": "string",
                                      "example": "0 1 * * *",
                                      "description": "A valid cron expression.  For example : \" * * * * * \".  The cron is running in UTC time zone and is in Unix cron format Cron Expression Validator Script.  Only one of ‘frequency’ or ‘cronExpression’ should be used at a time.\n"
                                    },
                                    "taskType": {
                                      "type": "string",
                                      "example": "scale",
                                      "enum": [
                                        "backup_ami",
                                        "scale",
                                        "scaleUp",
                                        "roll",
                                        "statefulUpdateCapacity",
                                        "statefulRecycle"
                                      ],
                                      "description": "The task type to run.\n"
                                    },
                                    "scaleTargetCapacity": {
                                      "type": "integer",
                                      "minimum": 0,
                                      "default": null,
                                      "description": "The target capacity of the group. Should be used when choosing `taskType` of `scale`.\n"
                                    },
                                    "scaleMinCapacity": {
                                      "type": "integer",
                                      "minimum": 0,
                                      "default": null,
                                      "description": "The min capacity of the group. Should be used when choosing `taskType` of `scale`.\n"
                                    },
                                    "scaleMaxCapacity": {
                                      "type": "integer",
                                      "minimum": 0,
                                      "default": null,
                                      "description": "The max capacity of the group. Required when `taskType` is `scale`.\n"
                                    },
                                    "batchSizePercentage": {
                                      "type": "integer",
                                      "minimum": 1,
                                      "default": null,
                                      "description": "The percentage size of each batch in the scheduled deployment roll. Required when the `taskType` is `roll`.\n"
                                    },
                                    "gracePeriod": {
                                      "type": "integer",
                                      "minimum": 1,
                                      "default": null
                                    },
                                    "adjustment": {
                                      "type": "integer",
                                      "minimum": 1,
                                      "default": null
                                    },
                                    "adjustmentPercentage": {
                                      "type": "integer",
                                      "minimum": 1,
                                      "default": null
                                    },
                                    "targetCapacity": {
                                      "type": "integer",
                                      "minimum": 0,
                                      "default": null,
                                      "description": "Set a new target capacity for the Elastigroup. Required when `taskType` is `statefulUpdateCapacity`.\n"
                                    },
                                    "minCapacity": {
                                      "type": "integer",
                                      "minimum": 0,
                                      "default": null,
                                      "description": "Set a new minimum capacity for the Elastigroup. Required when `taskType` is `statefulUpdateCapacity`.\n"
                                    },
                                    "maxCapacity": {
                                      "type": "integer",
                                      "minimum": 0,
                                      "default": null,
                                      "description": "Set a new maximum capacity for the Elastigroup. Required when `taskType` is `statefulUpdateCapacity`.\n"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "multai": {
                            "type": "object",
                            "title": "Elastigroup Multai",
                            "deprecated": true,
                            "properties": {
                              "token": {
                                "type": "string"
                              },
                              "balancers": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "projectId balancerId targetSetId"
                                  ],
                                  "properties": {
                                    "projectId": {
                                      "type": "string"
                                    },
                                    "balancerId": {
                                      "type": "string"
                                    },
                                    "targetSetId": {
                                      "type": "string"
                                    },
                                    "azAwareness": {
                                      "type": "boolean"
                                    },
                                    "autoWeight": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "thirdPartiesIntegration": {
                            "type": "object",
                            "title": "Elastigroup Third Party Integrations",
                            "properties": {
                              "rancher": {
                                "type": "object",
                                "title": "rancher",
                                "required": [
                                  "version accessKey secretKey masterHost"
                                ],
                                "properties": {
                                  "version": {
                                    "type": "string",
                                    "example": 2,
                                    "default": 1,
                                    "enum": [
                                      1,
                                      2
                                    ],
                                    "description": "The Rancher major version\n"
                                  },
                                  "accessKey": {
                                    "type": "string",
                                    "example": "DA91999F83BE4F88AB1C",
                                    "description": "Rancher API AccessKey\n"
                                  },
                                  "secretKey": {
                                    "type": "string",
                                    "example": "zw4KFyBSc7WSAKNyEvyDy5GHXo2QBa1dLXduKAoL",
                                    "description": "Rancher API SecretKey\n"
                                  },
                                  "masterHost": {
                                    "type": "string",
                                    "example": "my-rancher-host.com",
                                    "description": "The public FQDN or IP address of the Rancher Master\n"
                                  }
                                }
                              },
                              "mesosphere": {
                                "type": "object",
                                "title": "Mesosphere",
                                "required": [
                                  "apiServer"
                                ],
                                "properties": {
                                  "apiServer": {
                                    "type": "string",
                                    "example": "1.2.3.4"
                                  }
                                }
                              },
                              "elasticBeanstalk": {
                                "type": "object",
                                "title": "AWS ElasticBeanstalk",
                                "properties": {
                                  "environmentId": {
                                    "type": "string",
                                    "example": 123,
                                    "description": "Elastic Beanstalk Environment ID.\n"
                                  },
                                  "deploymentPreferences": {
                                    "type": "object",
                                    "title": "Deployment Preferences",
                                    "description": "All deployment preferences when deploying a Elastic Beanstalk version.\n",
                                    "properties": {
                                      "automaticRoll": {
                                        "type": "boolean",
                                        "example": true,
                                        "description": "Describes whether new instances will automatically replace old instances upon new Elastic Beanstalk version upload.\n"
                                      },
                                      "batchSizePercentage": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 100,
                                        "example": 20,
                                        "description": "Indicates in percentage the amount of instances should be replaced in each batch. If set to null it will be a system default.\n"
                                      },
                                      "gracePeriod": {
                                        "type": "integer",
                                        "example": 180,
                                        "description": "The amount of time, in seconds, after the instance has launched to starts and check its health. If set to null it will be a system default.\n"
                                      },
                                      "strategy": {
                                        "type": "object",
                                        "title": "Beanstalk Deployment Strategy",
                                        "required": [
                                          "action"
                                        ],
                                        "properties": {
                                          "action": {
                                            "type": "string",
                                            "enum": [
                                              "REPLACE_SERVER",
                                              "RESTART_SERVER"
                                            ],
                                            "example": "REPLACE_SERVER",
                                            "description": "How the application should be replaced during a roll. Either by replacing or restarting the server.\n"
                                          },
                                          "shouldDrainInstances": {
                                            "type": "boolean",
                                            "example": true,
                                            "default": true,
                                            "description": "Whether the instances should be drained during a roll\n"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "managedActions": {
                                    "type": "object",
                                    "title": "Beanstalk Managed Actions",
                                    "description": "Settings for enable auto platform updates for beanstalk platforms in our Elastigroups. Please verify that using managed actions requires the following permission in your Spotinst policy: `elasticbeanstalk:ListPlatformVersions`\n",
                                    "properties": {
                                      "platformUpdate": {
                                        "type": "object",
                                        "title": "Managed Actions Platform Update",
                                        "properties": {
                                          "performAt": {
                                            "type": "string",
                                            "example": "timeWindow",
                                            "enum": [
                                              "timeWindow",
                                              "never"
                                            ]
                                          },
                                          "timeWindow": {
                                            "type": "string",
                                            "example": "Mon:23:50-Tue:00:20",
                                            "description": "Required if `preformAt` is set to `timeWindow`. Must be in the format of EEE:hh:mm-EEE:hh:mm (EEE = day in week, e.g Sun/Mon, etc.  Also, the timeWindow value should be between 30-180 minutes\n"
                                          },
                                          "updateLevel": {
                                            "type": "string",
                                            "enum": [
                                              "patch",
                                              "minorAndPatch"
                                            ],
                                            "example": "patch",
                                            "description": "Enable managed platform updates to apply patch version updates only, or for both minor and patch version updates. Patch version updates provide bug fixes and performance improvements,  and can include minor configuration changes to the on-instance software,  scripts, and configuration options. Minor version updates provide support  for new Elastic Beanstalk features.\n"
                                          },
                                          "instanceRefreshEnabled": {
                                            "type": "boolean",
                                            "example": true,
                                            "description": "Determines whether to refresh (roll) instances even though no platform update was found for them.\n"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "compute": {
                            "type": "object",
                            "title": "Elastigroup Compute",
                            "properties": {
                              "elasticIps": {
                                "type": "array",
                                "description": "List of ElasticIPs Allocation Ids to associate to the group instances\n",
                                "items": {
                                  "type": "string",
                                  "example": "eipalloc-9d4e16f8"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "group": {
                        "type": "object",
                        "required": [
                          "name"
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      },
      "get": {
        "summary": "Elastigroup AWS - List",
        "description": "List all AWS Elastigroups for a Spotinst Account\n",
        "operationId": "elastigroupAwsListAll",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123456789",
            "description": "Spotinst Account ID\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1aws~1ec2~1group/post/requestBody/content/application~1json/schema/allOf/0"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}": {
      "delete": {
        "summary": "Elastigroup AWS - Delete",
        "description": "Delete an Elastigroup AWS\n",
        "operationId": "elastigroupAwsDelete",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Elastigroup Delete",
                    "properties": {
                      "statefulDeallocation": {
                        "type": "object",
                        "title": "Stateful deallocation options",
                        "properties": {
                          "shouldDeleteImages": {
                            "type": "boolean",
                            "default": false,
                            "example": false,
                            "description": "For stateful groups, removes persistent images\n"
                          },
                          "shouldDeleteNetworkInterfaces": {
                            "type": "boolean",
                            "default": true,
                            "example": true,
                            "description": "For stateful groups, removes network interfaces\n"
                          },
                          "shouldDeleteVolumes": {
                            "type": "boolean",
                            "default": false,
                            "example": false,
                            "description": "For stateful groups, removes persistent volumes\n"
                          },
                          "shouldDeleteSnapshots": {
                            "type": "boolean",
                            "default": false,
                            "example": false,
                            "description": "For stateful groups, removes snapshots\n"
                          }
                        }
                      },
                      "beanstalk": {
                        "type": "object",
                        "title": "Beanstalk Dellocation Options",
                        "properties": {
                          "rollbackToAsg": {
                            "type": "boolean",
                            "example": true,
                            "default": true,
                            "description": "For groups with Beanstalk integration, roll back the attached ASG to the state prior to integration.\n"
                          }
                        }
                      },
                      "amiBackup": {
                        "type": "object",
                        "title": "AMI Dellocation Options",
                        "properties": {
                          "shouldDeleteImages": {
                            "type": "boolean",
                            "example": false,
                            "default": false,
                            "description": "If true, images collected during AMI Auto Backup should be deleted during group deletion\n"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Spotinst Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request": {
                      "type": "object",
                      "description": "Original request properties\n",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "e593ff58-067d-4340-92f9-8b1c0bad70d7",
                          "description": "Unique ID associated with this request\n"
                        },
                        "url": {
                          "type": "string",
                          "description": "The URL that was used for the request\n"
                        },
                        "method": {
                          "type": "string",
                          "description": "The HTTP **METHOD** used for the request\n"
                        },
                        "timestamp": {
                          "type": "string",
                          "example": "2018-06-20T11:35:01.745Z",
                          "description": "When the requets was received by Spotinst\n"
                        }
                      }
                    },
                    "response": {
                      "type": "object",
                      "description": "Response package that includes, status, type and any relevant data.\n",
                      "properties": {
                        "status": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "integer",
                              "example": 200,
                              "description": "HTTP status code assigned to this response\n"
                            },
                            "message": {
                              "type": "string",
                              "example": "OK",
                              "description": "HTTP status message for the respective status code\n"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Elastigroup AWS - Describe",
        "description": "List all properties for single AWS Elastigroup\n",
        "operationId": "elastigroupAwsDescribe",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group/get/parameters/0"
          },
          {
            "in": "path",
            "name": "groupId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Azure Elastigroup ID\n"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1aws~1ec2~1group/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Elastigroup AWS - Update",
        "description": "Update an AWS Elastigroup\n",
        "operationId": "elastigroupAwsUpdate",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group/get/parameters/0"
          },
          {
            "in": "query",
            "name": "autoApplyTags",
            "example": "true",
            "description": "Optionally update Elastigroup instance tags on the fly, without rolling the Elastigroup.\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/paths/~1aws~1ec2~1group/post/requestBody/content/application~1json/schema/allOf/0"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "group": {
                        "type": "object"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1aws~1ec2~1group/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/compute/azure/group": {
      "get": {
        "summary": "Elastigroup Azure - List",
        "description": "List all Azure Elastigroups for a Spotinst Account\n",
        "operationId": "elastigroupAzureListAll",
        "tags": [
          "Elastigroup Azure"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1compute~1azure~1task/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "summary": "Elastigroup Azure - Create",
        "description": "Create a new Azure Elastigroup",
        "operationId": "elastigroupAzureCreate",
        "tags": [
          "Elastigroup Azure"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/paths/~1compute~1azure~1task/post/requestBody/content/application~1json/schema/allOf/0"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "group": {
                        "type": "object",
                        "required": [
                          "name",
                          "region",
                          "resourceGroupName",
                          "capacity",
                          "strategy",
                          "compute"
                        ],
                        "properties": {
                          "compute": {
                            "type": "object",
                            "required": [
                              "vmSizes",
                              "product"
                            ],
                            "properties": {
                              "vmSizes": {
                                "type": "object",
                                "required": [
                                  "odSizes",
                                  "lowPrioritySizes"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1compute~1azure~1task/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/compute/azure/group/{groupId}": {
      "delete": {
        "summary": "Elastigroup Azure - Delete",
        "description": "Delete an Elastigroup Azure\n",
        "operationId": "elastigroupAzureDelete",
        "tags": [
          "Elastigroup Azure"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Elastigroup Azure - Describe",
        "description": "List all properties for single Azure Elastigroup\n",
        "operationId": "elastigroupAzureDescribe",
        "tags": [
          "Elastigroup Azure"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1compute~1azure~1task/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Elastigroup Azure - Update",
        "description": "Update an Azure Elastigroup\n",
        "operationId": "elastigroupAzureUpdate",
        "tags": [
          "Elastigroup Azure"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/paths/~1compute~1azure~1task/post/requestBody/content/application~1json/schema/allOf/0"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "group": {
                        "type": "object"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1compute~1azure~1task/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/compute/azure/group/{groupId}/status": {
      "get": {
        "summary": "Elastigroup Azure - Get Status",
        "description": "Get the status for all instances that are memebers of the Elastigroup",
        "operationId": "elastigroupAzureGetStatus",
        "tags": [
          "Elastigroup Azure"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "components": {
        "responses": {
          "groupStatus": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/delete/responses/200/content/application~1json/schema"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n"
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                },
                                "kind": {
                                  "type": "string",
                                  "description": "The data type of each item in the response\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/schemas/groupStatus"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "schemas": {
          "groupStatus": {
            "type": "object",
            "properties": {
              "instanceId": {
                "type": "string",
                "example": "ec5410ea-fec7-4a03-a989-3b27b7ee2ed5"
              },
              "region": {
                "type": "string",
                "example": "eastus"
              },
              "vmSize": {
                "type": "string",
                "example": "standard_a1_v2"
              },
              "lifeCycle": {
                "type": "string",
                "example": "low-priority",
                "enum": [
                  "low-priority",
                  "regular"
                ]
              },
              "privateIp": {
                "type": "string",
                "example": "10.0.0.8"
              },
              "publicIp": {
                "type": "string",
                "example": "168.62.168.93"
              },
              "state": {
                "type": "string",
                "example": "running",
                "enum": [
                  "running",
                  "reimaging",
                  "creating",
                  "starting"
                ]
              },
              "createdAt": {
                "type": "string",
                "example": "2018-06-20T11:16:32.000Z"
              }
            }
          }
        },
        "parameters": {
          "groupId": {
            "in": "path",
            "name": "groupId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Elastigroup Azure ID\n"
          }
        }
      }
    },
    "/compute/azure/group/{groupId}/detachInstances": {
      "put": {
        "summary": "Elastigroup Azure - Detach Instances",
        "description": "Detach one or more instances from an Azure Elastigroup\n",
        "operationId": "elastigroupAzureDetachInstances",
        "tags": [
          "Elastigroup Azure"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "instancesToDetach": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "shouldDecrementTargetCapacity": {
                    "type": "boolean",
                    "example": true
                  },
                  "drainingTimeout": {
                    "type": "integer",
                    "example": 300
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1detachInstances/components/responses/groupStatus"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "components": {
        "responses": {
          "groupStatus": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1detachInstances/components/schemas/detachResponse"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "schemas": {
          "detachResponse": {
            "type": "object",
            "properties": {
              "detachedOd": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "detachedLowPriority": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/compute/azure/group/{groupId}/roll": {
      "get": {
        "summary": "Elastigroup Azure - Deployment List",
        "description": "Historical list of all deployments for an Azure Elastigroup\n",
        "operationId": "elastigroupAzureDeploymentList",
        "tags": [
          "Elastigroup Azure Deployment"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "sbgd-9876"
                                  },
                                  "status": {
                                    "type": "string",
                                    "example": "ROLL_STARTING",
                                    "enum": "ROLL_STARTING PENDING RUNNING DETACHED ERROR RESTARTED",
                                    "currentBatch": {
                                      "type": "integer",
                                      "readOnly": true,
                                      "example": 1,
                                      "description": "Batch number that is currenlty being deployed\n"
                                    },
                                    "numOfBatches": {
                                      "type": "integer",
                                      "readOnly": true,
                                      "example": 2,
                                      "description": "Total number of batches the deployment will process\n"
                                    },
                                    "progress": {
                                      "type": "object",
                                      "readOnly": true,
                                      "properties": {
                                        "unit": {
                                          "type": "string",
                                          "example": "percentage"
                                        },
                                        "value": {
                                          "type": "integer",
                                          "example": 10
                                        }
                                      }
                                    },
                                    "groupId": {
                                      "type": "string",
                                      "example": "sig-12345",
                                      "readOnly": true,
                                      "description": "The Azure Elastigroup the deployment is executing on\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Elastigroup Azure - Start Deployment",
        "description": "Start a new Azure Elastigroup deployment\n",
        "operationId": "elastigroupAzureDeploymentStart",
        "tags": [
          "Elastigroup Azure Deployment"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1roll/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/compute/azure/group/{groupId}/roll/{deploymentId}": {
      "get": {
        "summary": "Elastigroup Azure - Describe Deployment",
        "description": "Describe a single deployment for an Azure Elastigroup\n",
        "operationId": "elastigroupAzureDeploymentDescribe",
        "tags": [
          "Elastigroup Azure Deployment"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/get/parameters/1"
          },
          {
            "in": "path",
            "name": "deploymentId",
            "schema": {
              "type": "string"
            },
            "example": "sbgd-9876",
            "required": true,
            "description": "Azure Elastigroup ID\n"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1roll/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Elastigroup Azure - Stop Deployment",
        "description": "Stop a deployment\n",
        "operationId": "elastigroupAzureDeploymentStop",
        "tags": [
          "Elastigroup Azure Deployment"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1roll~1%7BdeploymentId%7D/get/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/compute/azure/task": {
      "get": {
        "summary": "Azure Tasks - List",
        "description": "List all Azure Tasks for a Spotinst Account\n",
        "operationId": "tasksAzureListAll",
        "tags": [
          "Azure Tasks"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1compute~1azure~1task/post/requestBody/content/application~1json/schema/allOf/0"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "summary": "Azure Tasks - Create",
        "description": "Create a new Azure Task",
        "operationId": "tasksAzureCreate",
        "tags": [
          "Azure Tasks"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Elastigroup Wrapper",
                    "required": [
                      "group"
                    ],
                    "properties": {
                      "group": {
                        "type": "object",
                        "title": "Azure Elastigroup",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "sig-123456789",
                            "readOnly": true,
                            "description": "Azure Elastigroup ID\n"
                          },
                          "name": {
                            "type": "string",
                            "example": "spotinst-group",
                            "description": "Azure Elastigroup Name\n"
                          },
                          "region": {
                            "type": "string",
                            "example": "eastus",
                            "description": "Valid Azure region the Elastigroup is managed in\n"
                          },
                          "resourceGroupName": {
                            "type": "string",
                            "example": "spotinst-azure",
                            "description": "The Azure resource group to associate the elastigroup with\n"
                          },
                          "capacity": {
                            "type": "object",
                            "properties": {
                              "target": {
                                "type": "integer",
                                "example": 8,
                                "description": "Current scale the elastigroup will conform to"
                              },
                              "minimum": {
                                "type": "integer",
                                "example": 2,
                                "description": "The elastigroup will not set a target below this value\n"
                              },
                              "maximum": {
                                "type": "integer",
                                "example": 10,
                                "description": "The elastigroup will not set a target greater than this value\n"
                              }
                            }
                          },
                          "scaling": {
                            "type": "object",
                            "title": "Azure Scaling",
                            "properties": {
                              "up": {
                                "type": "array",
                                "items": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "policyName": {
                                          "type": "string",
                                          "example": "cpuScale"
                                        },
                                        "metricName": {
                                          "type": "string",
                                          "example": "Percentage CPU"
                                        },
                                        "statistic": {
                                          "type": "string",
                                          "example": "average",
                                          "enum": [
                                            "average",
                                            "sampleCount",
                                            "sum",
                                            "minimum",
                                            "maximum"
                                          ]
                                        },
                                        "threshold": {
                                          "type": "float",
                                          "example": 0.75
                                        },
                                        "period": {
                                          "type": "integer",
                                          "example": 60
                                        },
                                        "evaluationPeriods": {
                                          "type": "integer",
                                          "example": 3
                                        },
                                        "cooldown": {
                                          "type": "integer",
                                          "example": 300
                                        },
                                        "namespace": {
                                          "type": "string",
                                          "example": "Microsoft.Network/applicationGateways"
                                        },
                                        "operator": {
                                          "type": "string",
                                          "example": "gte",
                                          "enum": [
                                            "gt",
                                            "gte",
                                            "lt",
                                            "lte"
                                          ]
                                        },
                                        "dimenstions": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "type": "string",
                                                "example": "resourceName"
                                              },
                                              "value": {
                                                "type": "string",
                                                "example": "TestAppGateway"
                                              }
                                            }
                                          }
                                        },
                                        "action": {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "example": "adjustment"
                                            },
                                            "adjustment": {
                                              "type": "string",
                                              "example": "2"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "policyName": {
                                          "example": "cpuScaleUp"
                                        },
                                        "threshold": {
                                          "example": 0.75
                                        },
                                        "operator": {
                                          "example": "gte"
                                        },
                                        "action": {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "example": "adjustment",
                                              "enum": [
                                                "adjustment",
                                                "setMinTarget",
                                                "updateCapacity",
                                                "percentageAdjustment"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "down": {
                                "type": "array",
                                "items": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1compute~1azure~1task/post/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/scaling/properties/up/items/allOf/0"
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "policyName": {
                                          "example": "cpuScaleDown"
                                        },
                                        "threshold": {
                                          "example": 0.25
                                        },
                                        "operator": {
                                          "example": "lte"
                                        },
                                        "action": {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "example": "adjustment",
                                              "enum": [
                                                "adjustment",
                                                "setMaxTarget",
                                                "updateCapacity",
                                                "percentageAdjustment"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "strategy": {
                            "type": "object",
                            "title": "Scaling Strategy",
                            "properties": {
                              "lowPriorityPercentage": {
                                "type": "integer"
                              },
                              "odCount": {
                                "type": "integer"
                              },
                              "drainingTimeout": {
                                "type": "integer"
                              }
                            }
                          },
                          "compute": {
                            "type": "object",
                            "properties": {
                              "vmSizes": {
                                "type": "object",
                                "properties": {
                                  "odSizes": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "example": "standard_a1_v1"
                                    }
                                  },
                                  "lowPrioritySizes": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "example": "standard_a2_v2"
                                    }
                                  }
                                }
                              },
                              "product": {
                                "type": "sting",
                                "example": "Linux",
                                "enum": [
                                  "Linux",
                                  "Windows"
                                ]
                              },
                              "health": {
                                "type": "object",
                                "properties": {
                                  "autoHealing": {
                                    "type": "boolean",
                                    "example": true
                                  },
                                  "healthCheckType": {
                                    "type": "string",
                                    "example": "INSTANCE_STATE",
                                    "enum": [
                                      "INSTANCE_STATE"
                                    ]
                                  },
                                  "gracePeriod": {
                                    "type": "integer",
                                    "example": 120
                                  }
                                }
                              },
                              "launchSpecification": {
                                "type": "object",
                                "properties": {
                                  "image": {
                                    "type": "object",
                                    "properties": {
                                      "marketplace": {
                                        "type": "object",
                                        "description": "Azure Marketplace VM Image. Cannot be used with `custom`",
                                        "properties": {
                                          "publisher": {
                                            "type": "string",
                                            "example": "OpenLogic"
                                          },
                                          "offer": {
                                            "type": "string",
                                            "example": "CentOS"
                                          },
                                          "sku": {
                                            "type": "string",
                                            "example": "7.3"
                                          },
                                          "version": {
                                            "type": "string",
                                            "example": "7.3-1611"
                                          }
                                        }
                                      },
                                      "shutdownScript": {
                                        "type": "string",
                                        "example": "IyEvdXNyL2Jpbi9lbnYgYmFzaAoiR29vZGJ5ZSBvbGQgaW5zdGFuY2Ui"
                                      },
                                      "custom": {
                                        "type": "object",
                                        "description": "Custom VM image.  Cannot be used with `marketplace`\n",
                                        "properties": {
                                          "resourceGroupName": {
                                            "type": "string",
                                            "example": "spotinst-azure"
                                          },
                                          "imageName": {
                                            "type": "string",
                                            "example": "custom-image-name"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "loadBalancersConfig": {
                                    "type": "object",
                                    "properties": {
                                      "loadBalancers": {
                                        "type": "array",
                                        "items": {
                                          "anyOf": [
                                            {
                                              "type": "object",
                                              "title": "MULTAI_TARGET_SET",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "example": "MULTAI_TARGET_SET",
                                                  "enum": [
                                                    "MULTAI_TARGET_SET"
                                                  ]
                                                },
                                                "balancerId": {
                                                  "type": "string",
                                                  "example": "lb-1ee2e3q"
                                                },
                                                "targetSetId": {
                                                  "type": "string",
                                                  "example": "ts-3eq"
                                                },
                                                "autoWeight": {
                                                  "type": "boolean",
                                                  "example": true
                                                }
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "title": "APPLICATION_GATEWAY",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "example": "APPLICATION_GATEWAY",
                                                  "enum": [
                                                    "APPLICATION_GATEWAY"
                                                  ]
                                                },
                                                "resourceGroupName": {
                                                  "type": "string",
                                                  "example": "azureResourceGroup"
                                                },
                                                "applicationGatewayName": {
                                                  "type": "string",
                                                  "example": "appGateway"
                                                },
                                                "backendPoolName": {
                                                  "type": "string",
                                                  "example": "backendpool490822"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "userData": {
                                    "type": "string"
                                  },
                                  "managedServiceIdentities": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": "string",
                                        "example": "mySI2"
                                      },
                                      "resourceGroupName": {
                                        "resourceGroupName": "string",
                                        "example": "myResourceGroup"
                                      }
                                    }
                                  },
                                  "tags": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "tagKey": {
                                          "type": "string",
                                          "example": "env"
                                        },
                                        "tagValue": {
                                          "type": "string",
                                          "example": "staging"
                                        }
                                      }
                                    }
                                  },
                                  "network": {
                                    "type": "object",
                                    "properties": {
                                      "virtualNetworkName": {
                                        "type": "string",
                                        "example": "vname"
                                      },
                                      "subnetName": {
                                        "type": "string",
                                        "example": "my-subnet-name"
                                      },
                                      "resourceGroupName": {
                                        "type": "string",
                                        "example": "subnetResourceGroup"
                                      },
                                      "assignPublicIp": true,
                                      "additionalIpConfigurations": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "example": "config1"
                                            },
                                            "privateIpAddressVersion": {
                                              "type": "string",
                                              "example": "IPv4"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "extensions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "autoUpgradeMinorVersion": {
                                          "type": "boolean",
                                          "example": true
                                        },
                                        "name": {
                                          "type": "string",
                                          "example": "k8s-agentpool1-38611891-vmss-computeAksLinuxBilling"
                                        },
                                        "protectedSettings": {
                                          "type": "string",
                                          "example": null
                                        },
                                        "publisher": {
                                          "type": "string",
                                          "example": "Microsoft.AKS"
                                        },
                                        "type": {
                                          "type": "string",
                                          "example": "Compute.AKS-Engine.Linux.Billing"
                                        },
                                        "typeHandlerVersion": {
                                          "type": "string",
                                          "example": "1.0"
                                        }
                                      }
                                    }
                                  },
                                  "customData": {
                                    "type": "string"
                                  },
                                  "login": {
                                    "type": "object",
                                    "properties": {
                                      "userName": {
                                        "type": "string",
                                        "example": "spotinst"
                                      },
                                      "sshPublicKey": {
                                        "type": "string"
                                      },
                                      "password": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "thirdPartiesIntegration": {
                            "type": "object",
                            "properties": {
                              "kubernetes": {
                                "type": "object",
                                "properties": {
                                  "clusterIdentifier": {
                                    "type": "string",
                                    "example": "aks-engine-cluser",
                                    "description": "Must mastch the clusterIdentifier that was sent when\n the [Spotinst Controller](https://api.spotinst.com/container-management/kubernetes/kubernetes-tutorials/installing-kubernetes-controller/)\n was installed.\n"
                                  }
                                }
                              },
                              "hpcGridEngine": {
                                "type": "object",
                                "required": [
                                  "clusterId"
                                ],
                                "properties": {
                                  "clusterId": {
                                    "type": "string",
                                    "example": "spotinst-uge-cluster",
                                    "description": "Must match the clusterId used by the [controller](https://api.spotinst.com/elastigroup-for-azure/hpc/introduction/)\n"
                                  },
                                  "queues": {
                                    "type": "array",
                                    "description": "If defined the autoscaler will only match this Elastigroup to jobs associated with the queues listed here. If empty or null, then all queues will be monitored.\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "example": "burst.q",
                                          "description": "The name of the queue to monitor\n"
                                        }
                                      }
                                    }
                                  },
                                  "distribution": {
                                    "type": "string",
                                    "enum": [
                                      "sge",
                                      "uge"
                                    ],
                                    "description": "The specific distribution of grid engine. Defaults to `sge`\n",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tortuga": {
                                    "type": "object",
                                    "description": "Optional configuration for `uge` distribution managed with Tortuga\n",
                                    "properties": {
                                      "softwareProfile": {
                                        "type": "string",
                                        "example": "execd",
                                        "description": "An existing Tortuga software profile\n"
                                      },
                                      "hardwareProfile": {
                                        "type": "string",
                                        "example": "execd-elastigroup",
                                        "description": "An existing Torguga hardware profile that is configured for remote nodes and dynamic hostnames\n"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "group": {
                        "type": "object",
                        "required": [
                          "name"
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1compute~1azure~1task/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/compute/azure/task/{taskId}": {
      "delete": {
        "summary": "Elastigroup Azure - Delete",
        "description": "Delete an Elastigroup Azure\n",
        "operationId": "elastigroupAzureDelete",
        "tags": [
          "Azure Tasks"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Elastigroup Azure - Describe",
        "description": "List all properties for single Elastigroup Azure\n",
        "operationId": "elastigroupAzureDescribe",
        "tags": [
          "Elastigroup Azure"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1compute~1azure~1task/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Elastigroup Azure - Update",
        "description": "Update an Elastigroup Azure\n",
        "operationId": "elastigroupAzureUpdate",
        "tags": [
          "Azure Tasks"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/paths/~1compute~1azure~1task/post/requestBody/content/application~1json/schema/allOf/0"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "group": {
                        "type": "object",
                        "required": [
                          "name"
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1compute~1azure~1task/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "description": "Spotinst Bearer Authentication",
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
